!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABC	lib/CUDD/cuddWindow.c	377;"	d	file:
ABCD	lib/CUDD/cuddWindow.c	626;"	d	file:
ABDC	lib/CUDD/cuddWindow.c	643;"	d	file:
ABS	include/CUDD/util.h	174;"	d
ACB	lib/CUDD/cuddWindow.c	408;"	d	file:
ACBD	lib/CUDD/cuddWindow.c	783;"	d	file:
ACDB	lib/CUDD/cuddWindow.c	776;"	d	file:
ADAPTFSCSPS_WPA	include/MemoryModel/PointerAnalysis.h	/^        ADAPTFSCSPS_WPA,	\/\/\/< Adaptive Flow-, context-, path- sensitive WPA$/;"	e	enum:PointerAnalysis::PTATY
ADAPTFSCS_WPA	include/MemoryModel/PointerAnalysis.h	/^        ADAPTFSCS_WPA,		\/\/\/< Adaptive Flow-, context-, sensitive WPA$/;"	e	enum:PointerAnalysis::PTATY
ADBC	lib/CUDD/cuddWindow.c	650;"	d	file:
ADCB	lib/CUDD/cuddWindow.c	657;"	d	file:
ADD_DIRECT	lib/CUDD/st.c	84;"	d	file:
ALIASFINDER_H_	include/DisPatch/AliasFinder.h	2;"	d
ALLOC	include/CUDD/util.h	166;"	d
ALLOC	include/CUDD/util.h	168;"	d
ALLOC	include/CUDD/util.h	59;"	d
ALLOC	include/CUDD/util.h	63;"	d
ALLOC	include/CUDD/util.h	76;"	d
ALPHA	lib/CUDD/cuddAnneal.c	74;"	d	file:
AND	lib/Util/Conditions.cpp	/^DdNode* BddCondManager::AND(DdNode* lhs, DdNode* rhs) {$/;"	f	class:BddCondManager
ANDERSENMEMSSA_H_	include/MSSA/SVFGBuilder.h	31;"	d
ANDERSENPASS_H_	include/WPA/Andersen.h	31;"	d
ANDERSENSTAT_H_	include/Util/PTAStat.h	31;"	d
ANNOTATOR_H_	include/Util/Annotator.h	9;"	d
APIN	include/Util/VFGNode.h	/^		FunRet, APIN, APOUT, FPIN, FPOUT, NPtr$/;"	e	enum:VFGNode::VFGNodeK
APNodes	include/Util/ICFGNode.h	/^    ActualParmVFGNodeVec APNodes;$/;"	m	class:CallBlockNode
APOUT	include/Util/VFGNode.h	/^		FunRet, APIN, APOUT, FPIN, FPOUT, NPtr$/;"	e	enum:VFGNode::VFGNodeK
AParm	include/Util/VFGNode.h	/^        MPhi, MIntraPhi, MInterPhi, FRet, ARet, AParm, FParm,$/;"	e	enum:VFGNode::VFGNodeK
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	419;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	429;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	433;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	437;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	440;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	443;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	448;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	451;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	454;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	459;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	462;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	465;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	468;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	404;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	407;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	410;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	414;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	416;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	418;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	422;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	425;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	428;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	433;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	436;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	439;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	444;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	447;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	450;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	453;"	d	file:
ARet	include/Util/VFGNode.h	/^        MPhi, MIntraPhi, MInterPhi, FRet, ARet, AParm, FParm,$/;"	e	enum:VFGNode::VFGNodeK
ATVFNodeEnd	include/MSSA/SVFGStat.h	/^    void ATVFNodeEnd() {$/;"	f	class:SVFGStat
ATVFNodeStart	include/MSSA/SVFGStat.h	/^    void ATVFNodeStart() {$/;"	f	class:SVFGStat
ActualINSVFGNode	include/MSSA/SVFGNode.h	/^    ActualINSVFGNode(NodeID id, const MemSSA::CALLMU* m, CallSite c):$/;"	f	class:ActualINSVFGNode
ActualINSVFGNode	include/MSSA/SVFGNode.h	/^class ActualINSVFGNode : public MRSVFGNode {$/;"	c
ActualINSVFGNodeSet	include/MSSA/SVFG.h	/^    typedef NodeBS ActualINSVFGNodeSet;$/;"	t	class:SVFG
ActualOUTSVFGNode	include/MSSA/SVFGNode.h	/^    ActualOUTSVFGNode(NodeID id, const MemSSA::CALLCHI* c, CallSite cal):$/;"	f	class:ActualOUTSVFGNode
ActualOUTSVFGNode	include/MSSA/SVFGNode.h	/^class ActualOUTSVFGNode : public MRSVFGNode {$/;"	c
ActualOUTSVFGNodeSet	include/MSSA/SVFG.h	/^    typedef NodeBS ActualOUTSVFGNodeSet;$/;"	t	class:SVFG
ActualParmSVFGNode	include/MSSA/SVFG.h	/^typedef ActualParmVFGNode ActualParmSVFGNode;$/;"	t
ActualParmVFGNode	include/Util/VFGNode.h	/^	ActualParmVFGNode(NodeID id, const PAGNode* n, CallSite c) :$/;"	f	class:ActualParmVFGNode
ActualParmVFGNode	include/Util/VFGNode.h	/^class ActualParmVFGNode : public ArgumentVFGNode {$/;"	c
ActualParmVFGNodeVec	include/Util/ICFGNode.h	/^    typedef std::vector<const ActualParmVFGNode *> ActualParmVFGNodeVec;$/;"	t	class:CallBlockNode
ActualRetSVFGNode	include/MSSA/SVFG.h	/^typedef ActualRetVFGNode ActualRetSVFGNode;$/;"	t
ActualRetVFGNode	include/Util/VFGNode.h	/^	ActualRetVFGNode(NodeID id, const PAGNode* n, CallSite c) :$/;"	f	class:ActualRetVFGNode
ActualRetVFGNode	include/Util/VFGNode.h	/^class ActualRetVFGNode: public ArgumentVFGNode {$/;"	c
AddCallSiteCHI	include/MSSA/MemSSA.h	/^    inline void AddCallSiteCHI(CallSite cs,  const MRSet& mrSet) {$/;"	f	class:MemSSA
AddCallSiteCHI	include/MSSA/MemSSA.h	/^    inline void AddCallSiteCHI(CallSite cs, const MemRegion* mr) {$/;"	f	class:MemSSA
AddCallSiteMU	include/MSSA/MemSSA.h	/^    inline void AddCallSiteMU(CallSite cs,  const MRSet& mrSet) {$/;"	f	class:MemSSA
AddCallSiteMU	include/MSSA/MemSSA.h	/^    inline void AddCallSiteMU(CallSite cs, const MemRegion* mr) {$/;"	f	class:MemSSA
AddLoadMU	include/MSSA/MemSSA.h	/^    inline void AddLoadMU(const BasicBlock* bb, const LoadPE* load, const MRSet& mrSet) {$/;"	f	class:MemSSA
AddLoadMU	include/MSSA/MemSSA.h	/^    inline void AddLoadMU(const BasicBlock* bb, const LoadPE* load, const MemRegion* mr) {$/;"	f	class:MemSSA
AddMSSAPHI	include/MSSA/MemSSA.h	/^    inline void AddMSSAPHI(const BasicBlock* bb, const MRSet& mrSet) {$/;"	f	class:MemSSA
AddMSSAPHI	include/MSSA/MemSSA.h	/^    inline void AddMSSAPHI(const BasicBlock* bb, const MemRegion* mr) {$/;"	f	class:MemSSA
AddStoreCHI	include/MSSA/MemSSA.h	/^    inline void AddStoreCHI(const BasicBlock* bb, const StorePE* store, const MRSet& mrSet) {$/;"	f	class:MemSSA
AddStoreCHI	include/MSSA/MemSSA.h	/^    inline void AddStoreCHI(const BasicBlock* bb, const StorePE* store, const MemRegion* mr) {$/;"	f	class:MemSSA
Addr	include/MemoryModel/ConsGEdge.h	/^        Addr, Copy, Store, Load, NormalGep, VariantGep$/;"	e	enum:ConstraintEdge::ConstraintEdgeK
Addr	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
Addr	include/Util/VFGNode.h	/^        Addr, Copy, Gep, Store, Load, Cmp, BinaryOp, TPhi, TIntraPhi, TInterPhi,$/;"	e	enum:VFGNode::VFGNodeK
AddrCGEdge	include/MemoryModel/ConsGEdge.h	/^class AddrCGEdge: public ConstraintEdge {$/;"	c
AddrCGEdge	lib/MemoryModel/ConsG.cpp	/^AddrCGEdge::AddrCGEdge(ConstraintNode* s, ConstraintNode* d, EdgeID id)$/;"	f	class:AddrCGEdge
AddrCGEdgeSet	include/MemoryModel/ConsG.h	/^    ConstraintEdge::ConstraintEdgeSetTy AddrCGEdgeSet;$/;"	m	class:ConstraintGraph
AddrPE	include/MemoryModel/PAGEdge.h	/^    AddrPE(PAGNode* s, PAGNode* d) : PAGEdge(s,d,PAGEdge::Addr) {$/;"	f	class:AddrPE
AddrPE	include/MemoryModel/PAGEdge.h	/^class AddrPE: public PAGEdge {$/;"	c
AddrSVFGNode	include/MSSA/SVFG.h	/^typedef AddrVFGNode AddrSVFGNode;$/;"	t
AddrSpace	include/Util/GEPTypeBridgeIterator.h	/^    unsigned AddrSpace;$/;"	m	class:llvm::generic_bridge_gep_type_iterator
AddrVFGNode	include/Util/VFGNode.h	/^    AddrVFGNode(NodeID id, const AddrPE* edge): StmtVFGNode(id, edge,Addr) {$/;"	f	class:AddrVFGNode
AddrVFGNode	include/Util/VFGNode.h	/^class AddrVFGNode: public StmtVFGNode {$/;"	c
AliasAnalysis	include/MemoryModel/PointerAnalysis.h	/^    typedef llvm::AliasAnalysis AliasAnalysis;$/;"	t	class:PointerAnalysis
AliasCheckRule	include/WPA/WPAPass.h	/^    enum AliasCheckRule {$/;"	g	class:WPAPass
AliasFinder	include/DisPatch/AliasFinder.h	/^    AliasFinder(){ assert(0); };$/;"	f	class:AliasFinder
AliasFinder	include/DisPatch/AliasFinder.h	/^    AliasFinder(SVFModule inmodule, PointerAnalysis* inpta, map <string, set<const Value *>> invarmapset){$/;"	f	class:AliasFinder
AliasFinder	include/DisPatch/AliasFinder.h	/^class AliasFinder: public UtilDef {$/;"	c
AliasResult	include/Util/BasicTypes.h	/^typedef llvm::AliasResult AliasResult;$/;"	t
AliasSet	include/Util/BasicTypes.h	/^typedef PointsTo AliasSet;$/;"	t
AliasSet	include/Util/SVFModule.h	/^    AliasSetType AliasSet;        \/\/\/< The Aliases in the module$/;"	m	class:LLVMModuleSet
AliasSetType	include/Util/SVFModule.h	/^    typedef LLVMModuleSet::AliasSetType AliasSetType;$/;"	t	class:SVFModule
AliasSetType	include/Util/SVFModule.h	/^    typedef std::vector<GlobalAlias*> AliasSetType;$/;"	t	class:LLVMModuleSet
AllocaInst	include/Util/BasicTypes.h	/^typedef llvm::AllocaInst AllocaInst;$/;"	t
AnalysisID	include/Util/BasicTypes.h	/^typedef llvm::AnalysisID AnalysisID;$/;"	t
AnalysisUsage	include/Util/BasicTypes.h	/^typedef llvm::AnalysisUsage AnalysisUsage;$/;"	t
AnalysisUtil_H_	include/Util/SVFUtil.h	31;"	d
Andersen	include/WPA/Andersen.h	/^    Andersen(PTATY type = Andersen_WPA)$/;"	f	class:Andersen
Andersen	include/WPA/Andersen.h	/^class Andersen:  public WPAConstraintSolver, public BVDataPTAImpl {$/;"	c
AndersenHCD	include/WPA/Andersen.h	/^    AndersenHCD(PTATY type = AndersenHCD_WPA) :$/;"	f	class:AndersenHCD
AndersenHCD	include/WPA/Andersen.h	/^class AndersenHCD : virtual public Andersen{$/;"	c
AndersenHCD_WPA	include/MemoryModel/PointerAnalysis.h	/^        AndersenHCD_WPA,    \/\/\/< Hybird cycle detection andersen-style WPA$/;"	e	enum:PointerAnalysis::PTATY
AndersenHLCD	include/WPA/Andersen.h	/^    AndersenHLCD(PTATY type = AndersenHLCD_WPA) :$/;"	f	class:AndersenHLCD
AndersenHLCD	include/WPA/Andersen.h	/^class AndersenHLCD : public AndersenHCD, public AndersenLCD{$/;"	c
AndersenHLCD_WPA	include/MemoryModel/PointerAnalysis.h	/^        AndersenHLCD_WPA,   \/\/\/< Hybird lazy cycle detection andersen-style WPA$/;"	e	enum:PointerAnalysis::PTATY
AndersenLCD	include/WPA/Andersen.h	/^    AndersenLCD(PTATY type = AndersenLCD_WPA) :$/;"	f	class:AndersenLCD
AndersenLCD	include/WPA/Andersen.h	/^class AndersenLCD : virtual public Andersen {$/;"	c
AndersenLCD_WPA	include/MemoryModel/PointerAnalysis.h	/^        AndersenLCD_WPA,	\/\/\/< Lazy cycle detection andersen-style WPA$/;"	e	enum:PointerAnalysis::PTATY
AndersenSCD	include/WPA/AndersenSFR.h	/^    AndersenSCD(PTATY type = AndersenSCD_WPA) :$/;"	f	class:AndersenSCD
AndersenSCD	include/WPA/AndersenSFR.h	/^class AndersenSCD : public Andersen {$/;"	c
AndersenSCD_WPA	include/MemoryModel/PointerAnalysis.h	/^        AndersenSCD_WPA,    \/\/\/< Selective cycle detection andersen-style WPA$/;"	e	enum:PointerAnalysis::PTATY
AndersenSFR	include/WPA/AndersenSFR.h	/^    AndersenSFR(PTATY type = AndersenSFR_WPA) :$/;"	f	class:AndersenSFR
AndersenSFR	include/WPA/AndersenSFR.h	/^class AndersenSFR : public AndersenSCD {$/;"	c
AndersenSFR_WPA	include/MemoryModel/PointerAnalysis.h	/^        AndersenSFR_WPA,    \/\/\/< Stride-based field representation$/;"	e	enum:PointerAnalysis::PTATY
AndersenStat	include/WPA/WPAStat.h	/^class AndersenStat : public PTAStat {$/;"	c
AndersenStat	lib/WPA/AndersenStat.cpp	/^AndersenStat::AndersenStat(Andersen* p): PTAStat(p),pta(p) {$/;"	f	class:AndersenStat
AndersenWaveDiff	include/WPA/Andersen.h	/^    AndersenWaveDiff(PTATY type = AndersenWaveDiff_WPA): Andersen(type) {}$/;"	f	class:AndersenWaveDiff
AndersenWaveDiff	include/WPA/Andersen.h	/^class AndersenWaveDiff : public Andersen {$/;"	c
AndersenWaveDiffWithType	include/WPA/Andersen.h	/^    AndersenWaveDiffWithType(PTATY type = AndersenWaveDiffWithType_WPA): AndersenWaveDiff(type) {$/;"	f	class:AndersenWaveDiffWithType
AndersenWaveDiffWithType	include/WPA/Andersen.h	/^class AndersenWaveDiffWithType : public AndersenWaveDiff {$/;"	c
AndersenWaveDiffWithType_WPA	include/MemoryModel/PointerAnalysis.h	/^        AndersenWaveDiffWithType_WPA,	\/\/\/< Diff wave propagation with type info andersen-style WPA$/;"	e	enum:PointerAnalysis::PTATY
AndersenWaveDiff_WPA	include/MemoryModel/PointerAnalysis.h	/^        AndersenWaveDiff_WPA,	\/\/\/< Diff wave propagation andersen-style WPA$/;"	e	enum:PointerAnalysis::PTATY
Andersen_WPA	include/MemoryModel/PointerAnalysis.h	/^        Andersen_WPA,		\/\/\/< Andersen PTA$/;"	e	enum:PointerAnalysis::PTATY
Annotator	include/Util/Annotator.h	/^    Annotator() {$/;"	f	class:Annotator
Annotator	include/Util/Annotator.h	/^class Annotator {$/;"	c
ApproxInfo	lib/CUDD/cuddApprox.c	/^typedef struct ApproxInfo {$/;"	s	file:
ApproxInfo	lib/CUDD/cuddApprox.c	/^} ApproxInfo;$/;"	t	typeref:struct:ApproxInfo	file:
ArgInDeadFunction	include/Util/SVFUtil.h	/^inline bool ArgInDeadFunction (const Value * val) {$/;"	f	namespace:SVFUtil
ArgInNoCallerFunction	include/Util/SVFUtil.h	/^inline bool ArgInNoCallerFunction (const Value * val) {$/;"	f	namespace:SVFUtil
ArgInProgEntryFunction	include/Util/SVFUtil.h	/^inline bool ArgInProgEntryFunction (const Value * val) {$/;"	f	namespace:SVFUtil
Argument	include/Util/BasicTypes.h	/^typedef llvm::Argument Argument;$/;"	t
ArgumentVFGNode	include/Util/VFGNode.h	/^    ArgumentVFGNode(NodeID id, const PAGNode* p, VFGNodeK k): VFGNode(id,k), param(p) {$/;"	f	class:ArgumentVFGNode
ArgumentVFGNode	include/Util/VFGNode.h	/^class ArgumentVFGNode : public VFGNode {$/;"	c
ArrayType	include/Util/BasicTypes.h	/^typedef llvm::ArrayType ArrayType;$/;"	t
AssessPathLength	lib/CUDD/cuddSubsetSP.c	/^AssessPathLength($/;"	f	file:
AssortedInfo	lib/CUDD/cuddSubsetSP.c	/^struct AssortedInfo {$/;"	s	file:
AtomicCmpXchgInst	include/Util/BasicTypes.h	/^typedef llvm::AtomicCmpXchgInst AtomicCmpXchgInst;$/;"	t
AtomicRMWInst	include/Util/BasicTypes.h	/^typedef llvm::AtomicRMWInst AtomicRMWInst;$/;"	t
AveragePointsToSetSize	include/Util/PTAStat.h	/^    static const char* AveragePointsToSetSize;		\/\/\/< Average points-to size of all variables$/;"	m	class:PTAStat
AveragePointsToSetSize	include/WPA/Andersen.h	/^    static Size_t AveragePointsToSetSize;$/;"	m	class:Andersen
AveragePointsToSetSize	lib/Util/PTAStat.cpp	/^const char* PTAStat:: AveragePointsToSetSize = "AvgPtsSetSize";		\/\/\/< Average Points-to set size$/;"	m	class:PTAStat	file:
AveragePointsToSetSize	lib/WPA/Andersen.cpp	/^Size_t Andersen::AveragePointsToSetSize = 0;$/;"	m	class:Andersen	file:
AverageTopLevPointsToSetSize	include/Util/PTAStat.h	/^    static const char* AverageTopLevPointsToSetSize; \/\/\/< Average points-to size of top-level variables$/;"	m	class:PTAStat
AverageTopLevPointsToSetSize	lib/Util/PTAStat.cpp	/^const char* PTAStat:: AverageTopLevPointsToSetSize = "AvgTopLvlPtsSize";		\/\/\/< Average Points-to set size of top level pointers$/;"	m	class:PTAStat	file:
AxisInfo	include/DisPatch/InitPIDObj.h	/^            AxisInfo(){return;};$/;"	f	class:InitPIDObj::AxisInfo
AxisInfo	include/DisPatch/InitPIDObj.h	/^            AxisInfo(string axis_in, string pidsstr){$/;"	f	class:InitPIDObj::AxisInfo
AxisInfo	include/DisPatch/InitPIDObj.h	/^    class AxisInfo: public UtilDef{$/;"	c	class:InitPIDObj
BAC	lib/CUDD/cuddWindow.c	380;"	d	file:
BACD	lib/CUDD/cuddWindow.c	629;"	d	file:
BADC	lib/CUDD/cuddWindow.c	636;"	d	file:
BASICTYPES_H_	include/Util/BasicTypes.h	31;"	d
BAapplyBias	lib/CUDD/cuddApprox.c	/^BAapplyBias($/;"	f	file:
BAmarkNodes	lib/CUDD/cuddApprox.c	/^BAmarkNodes($/;"	f	file:
BB2PAGEdgesMap	include/MemoryModel/PAG.h	/^    typedef llvm::DenseMap<const BasicBlock*,PAGEdgeList> BB2PAGEdgesMap;$/;"	t	class:PAG
BBCondMap	include/Util/PathCondAllocator.h	/^    typedef std::map<const BasicBlock*, CondPosMap > BBCondMap;	\/\/ map bb to a Condition$/;"	t	class:PathCondAllocator
BBList	include/MSSA/MemSSA.h	/^    typedef std::vector<const BasicBlock*> BBList;$/;"	t	class:MemSSA
BBSet	include/Util/ICFG.h	/^    typedef std::set<const Instruction*> BBSet;$/;"	t	class:ICFG
BBSet	include/Util/ThreadCallGraph.h	/^    typedef std::set<const BasicBlock*> BBSet;$/;"	t	class:ThreadCallGraph
BBToCondMap	include/Util/PathCondAllocator.h	/^    typedef std::map<const BasicBlock*, Condition*> BBToCondMap;	\/\/\/< map a basic block to its condition during control-flow guard computation$/;"	t	class:PathCondAllocator
BBToInstMap	include/Util/ThreadCallGraph.h	/^    typedef std::map<const BasicBlock*, const Instruction*> BBToInstMap;$/;"	t	class:ThreadCallGraph
BBToMRSetMap	include/MSSA/MemSSA.h	/^    typedef llvm::DenseMap<const BasicBlock*, MRSet> BBToMRSetMap;$/;"	t	class:MemSSA
BBToPhiSetMap	include/MSSA/MemSSA.h	/^    typedef llvm::DenseMap<const BasicBlock*, PHISet> BBToPhiSetMap;$/;"	t	class:MemSSA
BBVector	include/Util/ThreadCallGraph.h	/^    typedef std::vector<const BasicBlock*> BBVector;$/;"	t	class:ThreadCallGraph
BCA	lib/CUDD/cuddWindow.c	387;"	d	file:
BCAD	lib/CUDD/cuddWindow.c	748;"	d	file:
BCDA	lib/CUDD/cuddWindow.c	741;"	d	file:
BDAC	lib/CUDD/cuddWindow.c	685;"	d	file:
BDCA	lib/CUDD/cuddWindow.c	692;"	d	file:
BETA	lib/CUDD/cuddAnneal.c	73;"	d	file:
BINIRWRAPPER_H_	include/DisPatch/BinIRWrapper.h	2;"	d
BITVECTORCOND_H_	include/Util/Conditions.h	31;"	d
BOTH_G	lib/CUDD/cuddDecomp.c	79;"	d	file:
BOTH_H	lib/CUDD/cuddDecomp.c	80;"	d	file:
BPL	lib/CUDD/cuddEssent.c	83;"	d	file:
BPL	lib/CUDD/cuddEssent.c	86;"	d	file:
BPL	lib/CUDD/cuddInteract.c	86;"	d	file:
BPL	lib/CUDD/cuddInteract.c	89;"	d	file:
BPL	lib/CUDD/cuddLinear.c	75;"	d	file:
BPL	lib/CUDD/cuddLinear.c	78;"	d	file:
BREAKCONSTANTGEPS_H	include/Util/BreakConstantExpr.h	16;"	d
BSD	lib/CUDD/cpu_time.c	8;"	d	file:
BUFSIZE	lib/CUDD/saveimage.c	23;"	d	file:
BUILD_ARCHIVE	lib/CUDD/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BUILD_ARCHIVE	lib/DisPatch/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BUILD_ARCHIVE	lib/MSSA/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BUILD_ARCHIVE	lib/MemoryModel/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BUILD_ARCHIVE	lib/Util/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BUILD_ARCHIVE	lib/WPA/Makefile	/^BUILD_ARCHIVE := 1$/;"	m
BVDataPTAImpl	include/MemoryModel/PointerAnalysis.h	/^class BVDataPTAImpl : public PointerAnalysis {$/;"	c
BVDataPTAImpl	lib/MemoryModel/PointerAnalysis.cpp	/^BVDataPTAImpl::BVDataPTAImpl(PointerAnalysis::PTATY type) :$/;"	f	class:BVDataPTAImpl
BasicBlock	include/Util/BasicTypes.h	/^typedef llvm::BasicBlock BasicBlock;$/;"	t
BasicBlockSet	include/Util/PathCondAllocator.h	/^    typedef std::set<const BasicBlock*> BasicBlockSet;$/;"	t	class:PathCondAllocator
BddCondManager	include/Util/Conditions.h	/^    BddCondManager() {$/;"	f	class:BddCondManager
BddCondManager	include/Util/Conditions.h	/^class BddCondManager {$/;"	c
BddOne	include/Util/Conditions.h	/^    inline DdNode* BddOne() const	{$/;"	f	class:BddCondManager
BddSupport	lib/Util/Conditions.cpp	/^void BddCondManager::BddSupport(DdNode * f, NodeBS &support) const {$/;"	f	class:BddCondManager
BddSupportStep	lib/Util/Conditions.cpp	/^void BddCondManager::BddSupportStep(DdNode * f, NodeBS &support) const {$/;"	f	class:BddCondManager
BddVarNum	include/Util/Conditions.h	/^    inline unsigned BddVarNum() {$/;"	f	class:BddCondManager
BddZero	include/Util/Conditions.h	/^    inline DdNode* BddZero() const	{$/;"	f	class:BddCondManager
BinIRWrapper	include/DisPatch/BinIRWrapper.h	/^class BinIRWrapper: public UtilDef{$/;"	c
BinOpExtension	include/DisPatch/BinIRWrapper.h	/^    enum BinOpExtension {   $/;"	g	class:BinIRWrapper
BinaryNodeMap	include/MemoryModel/PAG.h	/^    typedef std::map<const PAGNode*,PAGNodeList> BinaryNodeMap;$/;"	t	class:PAG
BinaryOPPE	include/MemoryModel/PAGEdge.h	/^    BinaryOPPE(PAGNode* s, PAGNode* d) : PAGEdge(s,d,PAGEdge::BinaryOp) {$/;"	f	class:BinaryOPPE
BinaryOPPE	include/MemoryModel/PAGEdge.h	/^class BinaryOPPE: public PAGEdge {$/;"	c
BinaryOPVFGNode	include/Util/VFGNode.h	/^    BinaryOPVFGNode(NodeID id,const PAGNode* r): VFGNode(id,BinaryOp), res(r) {$/;"	f	class:BinaryOPVFGNode
BinaryOPVFGNode	include/Util/VFGNode.h	/^class BinaryOPVFGNode: public VFGNode {$/;"	c
BinaryOp	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
BinaryOp	include/Util/VFGNode.h	/^        Addr, Copy, Gep, Store, Load, Cmp, BinaryOp, TPhi, TIntraPhi, TInterPhi,$/;"	e	enum:VFGNode::VFGNodeK
BinaryOperator	include/Util/BasicTypes.h	/^typedef llvm::BinaryOperator BinaryOperator;$/;"	t
BitCastInst	include/Util/BasicTypes.h	/^typedef llvm::BitCastInst BitCastInst;$/;"	t
BitVector	lib/CUDD/cuddEssent.c	/^typedef long BitVector;$/;"	t	file:
BlackHole	include/MemoryModel/MemModel.h	/^    BlackHole,$/;"	e	enum:SYMTYPE
BlkPtr	include/MemoryModel/MemModel.h	/^    BlkPtr,$/;"	e	enum:SYMTYPE
BranchInst	include/Util/BasicTypes.h	/^typedef llvm::BranchInst BranchInst;$/;"	t
BreakConstantGEPs	include/Util/BreakConstantExpr.h	/^    BreakConstantGEPs() : ModulePass(ID) {}$/;"	f	class:BreakConstantGEPs
BreakConstantGEPs	include/Util/BreakConstantExpr.h	/^class BreakConstantGEPs : public ModulePass {$/;"	c
BuildConjuncts	lib/CUDD/cuddDecomp.c	/^BuildConjuncts($/;"	f	file:
BuildSubsetBdd	lib/CUDD/cuddSubsetHB.c	/^BuildSubsetBdd($/;"	f	file:
BuildSubsetBdd	lib/CUDD/cuddSubsetSP.c	/^BuildSubsetBdd($/;"	f	file:
CAB	lib/CUDD/cuddWindow.c	401;"	d	file:
CABD	lib/CUDD/cuddWindow.c	762;"	d	file:
CADB	lib/CUDD/cuddWindow.c	769;"	d	file:
CALLCHI	include/MSSA/MemSSA.h	/^    typedef CallCHI<Condition> CALLCHI;$/;"	t	class:MemSSA
CALLCHI	include/MSSA/SVFG.h	/^    typedef MemSSA::CALLCHI CALLCHI;$/;"	t	class:SVFG
CALLMU	include/MSSA/MemSSA.h	/^    typedef CallMU<Condition> CALLMU;$/;"	t	class:MemSSA
CALLMU	include/MSSA/SVFG.h	/^    typedef MemSSA::CALLMU CALLMU;$/;"	t	class:SVFG
CARE	lib/CUDD/cuddApprox.c	98;"	d	file:
CARE_ERROR	lib/CUDD/cuddApprox.c	100;"	d	file:
CBA	lib/CUDD/cuddWindow.c	394;"	d	file:
CBAD	lib/CUDD/cuddWindow.c	755;"	d	file:
CBDA	lib/CUDD/cuddWindow.c	734;"	d	file:
CDAB	lib/CUDD/cuddWindow.c	720;"	d	file:
CDBA	lib/CUDD/cuddWindow.c	727;"	d	file:
CEDGEK	include/Util/PTACallGraph.h	/^    enum CEDGEK {$/;"	g	class:PTACallGraphEdge
CFLAGS	lib/CUDD/Makefile	/^CFLAGS=-O3 -w -DHAVE_IEEE_754 -DSIZEOF_VOID_P=8 -DSIZEOF_LONG=8$/;"	m
CFLSOLVER_H_	include/Util/CFLSolver.h	31;"	d
CFLSolver	include/Util/CFLSolver.h	/^    CFLSolver(): _graph(NULL)$/;"	f	class:CFLSolver
CFLSolver	include/Util/CFLSolver.h	/^class CFLSolver {$/;"	c
CFWorkList	include/Util/PathCondAllocator.h	/^    typedef FIFOWorkList<const BasicBlock*> CFWorkList;	\/\/\/< worklist for control-flow guard computation$/;"	t	class:PathCondAllocator
CGEK	include/Util/PTACallGraph.h	/^    enum CGEK {$/;"	g	class:PTACallGraph
CGSCC	include/WPA/Andersen.h	/^    typedef SCCDetection<ConstraintGraph*> CGSCC;$/;"	t	class:Andersen
CGSCC	include/WPA/CSC.h	/^typedef SCCDetection<ConstraintGraph *> CGSCC;$/;"	t
CHA_H_	include/MemoryModel/CHA.h	31;"	d
CHEDGETYPE	include/MemoryModel/CHA.h	/^    } CHEDGETYPE;$/;"	t	class:CHEdge	typeref:enum:CHEdge::__anon2
CHEdge	include/MemoryModel/CHA.h	/^    CHEdge(CHNode *s, CHNode *d, CHEDGETYPE et, GEdgeFlag k = 0):$/;"	f	class:CHEdge
CHEdge	include/MemoryModel/CHA.h	/^class CHEdge: public GenericCHEdgeTy {$/;"	c
CHEdgeSetTy	include/MemoryModel/CHA.h	/^    typedef GenericNode<CHNode,CHEdge>::GEdgeSetTy CHEdgeSetTy;$/;"	t	class:CHEdge
CHGraph	include/MemoryModel/CHA.h	/^    CHGraph(const SVFModule svfModule): svfMod(svfModule), classNum(0), vfID(0), buildingCHGTime(0) {$/;"	f	class:CHGraph
CHGraph	include/MemoryModel/CHA.h	/^class CHGraph: public GenericCHGraphTy {$/;"	c
CHI	include/MSSA/MemSSA.h	/^    typedef MSSACHI<Condition> CHI;$/;"	t	class:MemSSA
CHI	include/MSSA/SVFG.h	/^    typedef MemSSA::CHI CHI;$/;"	t	class:SVFG
CHISet	include/MSSA/MemSSA.h	/^    typedef std::set<CHI*> CHISet;$/;"	t	class:MemSSA
CHISet	include/MSSA/SVFG.h	/^    typedef MemSSA::CHISet CHISet;$/;"	t	class:SVFG
CHITYPE	include/MSSA/MSSAMuChi.h	/^    typedef typename MSSADEF::DEFTYPE CHITYPE;$/;"	t	class:MSSACHI
CHNode	include/MemoryModel/CHA.h	/^    CHNode (const std::string name, NodeID i = 0, GNodeK k = 0):$/;"	f	class:CHNode
CHNode	include/MemoryModel/CHA.h	/^class CHNode: public GenericCHNodeTy {$/;"	c
CHNodeSetTy	include/MemoryModel/CHA.h	/^    typedef std::set<const CHNode*> CHNodeSetTy;$/;"	t	class:CHGraph
CLASSATTR	include/MemoryModel/CHA.h	/^    } CLASSATTR;$/;"	t	class:CHNode	typeref:enum:CHNode::__anon3
CLOCK_IN_MS	include/Util/BasicTypes.h	132;"	d
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/dispatch\/dispatch\/SVF\/build$/;"	m
CMAKE_BINARY_DIR	build/lib/CUDD/Makefile	/^CMAKE_BINARY_DIR = \/home\/dispatch\/dispatch\/SVF\/build$/;"	m
CMAKE_BINARY_DIR	build/lib/Makefile	/^CMAKE_BINARY_DIR = \/home\/dispatch\/dispatch\/SVF\/build$/;"	m
CMAKE_BINARY_DIR	build/tools/DisPatch/Makefile	/^CMAKE_BINARY_DIR = \/home\/dispatch\/dispatch\/SVF\/build$/;"	m
CMAKE_BINARY_DIR	build/tools/Makefile	/^CMAKE_BINARY_DIR = \/home\/dispatch\/dispatch\/SVF\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/lib/CUDD/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/lib/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/tools/DisPatch/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/tools/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/dispatch\/dispatch\/SVF$/;"	m
CMAKE_SOURCE_DIR	build/lib/CUDD/Makefile	/^CMAKE_SOURCE_DIR = \/home\/dispatch\/dispatch\/SVF$/;"	m
CMAKE_SOURCE_DIR	build/lib/Makefile	/^CMAKE_SOURCE_DIR = \/home\/dispatch\/dispatch\/SVF$/;"	m
CMAKE_SOURCE_DIR	build/tools/DisPatch/Makefile	/^CMAKE_SOURCE_DIR = \/home\/dispatch\/dispatch\/SVF$/;"	m
CMAKE_SOURCE_DIR	build/tools/Makefile	/^CMAKE_SOURCE_DIR = \/home\/dispatch\/dispatch\/SVF$/;"	m
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	142;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	264;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	285;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	198;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	270;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	230;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	258;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	272;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	257;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	145;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	203;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	259;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	273;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	207;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	255;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	274;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
CONDVAR_H_	include/MemoryModel/ConditionalPT.h	31;"	d
CONSGEDGE_H_	include/MemoryModel/ConsGEdge.h	31;"	d
CONSGNODE_H_	include/MemoryModel/ConsGNode.h	31;"	d
CONSG_H_	include/MemoryModel/ConsG.h	31;"	d
CONSTRUCTOR	include/MemoryModel/CHA.h	/^        CONSTRUCTOR = 0x1, \/\/ connect node based on constructor$/;"	e	enum:CHGraph::__anon4
CONST_ARRAY_OBJ	include/MemoryModel/MemModel.h	/^        CONST_ARRAY_OBJ = 0x100,  \/\/ constant array$/;"	e	enum:ObjTypeInfo::__anon5
CONST_OBJ	include/MemoryModel/MemModel.h	/^        CONST_OBJ = 0x200,  \/\/ constant object str e.g.$/;"	e	enum:ObjTypeInfo::__anon5
CONST_STRUCT_OBJ	include/MemoryModel/MemModel.h	/^        CONST_STRUCT_OBJ = 0x80,  \/\/ constant struct$/;"	e	enum:ObjTypeInfo::__anon5
CPPUtil_H_	include/Util/CPPUtil.h	31;"	d
CPP_EFT_A0R_A1	include/Util/ExtAPI.h	/^        CPP_EFT_A0R_A1,   \/\/stores arg1 into *arg0$/;"	e	enum:ExtAPI::extf_t
CPP_EFT_A0R_A1R	include/Util/ExtAPI.h	/^        CPP_EFT_A0R_A1R,  \/\/copies *arg1 into *arg0$/;"	e	enum:ExtAPI::extf_t
CPP_EFT_A1R	include/Util/ExtAPI.h	/^        CPP_EFT_A1R,      \/\/load arg1$/;"	e	enum:ExtAPI::extf_t
CPP_EFT_DYNAMIC_CAST	include/Util/ExtAPI.h	/^        CPP_EFT_DYNAMIC_CAST, \/\/ dynamic_cast$/;"	e	enum:ExtAPI::extf_t
CPtSet	include/MemoryModel/PointerAnalysis.h	/^    typedef CondStdSet<CVar>  CPtSet;$/;"	t	class:CondPTAImpl
CSC	include/WPA/CSC.h	/^    CSC(ConstraintGraph* g, CGSCC* c)$/;"	f	class:CSC
CSC	include/WPA/CSC.h	/^class CSC {$/;"	c
CSCallString_WPA	include/MemoryModel/PointerAnalysis.h	/^        CSCallString_WPA,	\/\/\/< Call string based context sensitive WPA$/;"	e	enum:PointerAnalysis::PTATY
CSSummary_WPA	include/MemoryModel/PointerAnalysis.h	/^        CSSummary_WPA,		\/\/\/< Summary based context sensitive WPA$/;"	e	enum:PointerAnalysis::PTATY
CSToArgsListMap	include/MemoryModel/PAG.h	/^    typedef std::map<CallSite,PAGNodeList> CSToArgsListMap;$/;"	t	class:PAG
CSToCallNodeMap	include/Util/ICFG.h	/^    CSToCallNodeMapTy CSToCallNodeMap; \/\/\/< map a callsite to its CallBlockNode$/;"	m	class:ICFG
CSToCallNodeMapTy	include/Util/ICFG.h	/^    typedef std::map<CallSite, CallBlockNode *> CSToCallNodeMapTy;$/;"	t	class:ICFG
CSToRetMap	include/MemoryModel/PAG.h	/^    typedef std::map<CallSite,const PAGNode*> CSToRetMap;$/;"	t	class:PAG
CSToRetNodeMap	include/Util/ICFG.h	/^    CSToRetNodeMapTy CSToRetNodeMap; \/\/\/< map a callsite to its RetBlockNode$/;"	m	class:ICFG
CSToRetNodeMapTy	include/Util/ICFG.h	/^    typedef std::map<CallSite, RetBlockNode *> CSToRetNodeMapTy;$/;"	t	class:ICFG
CTRLIDENTIFIER_H_	include/DisPatch/CtrlIdentifier.h	2;"	d
CUDD_CACHE_SLOTS	include/CUDD/cudd.h	94;"	d
CUDD_CONST_INDEX	include/CUDD/cudd.h	113;"	d
CUDD_FALSE	include/CUDD/cudd.h	88;"	d
CUDD_GEN_CUBES	include/CUDD/cuddInt.h	194;"	d
CUDD_GEN_EMPTY	include/CUDD/cuddInt.h	198;"	d
CUDD_GEN_NODES	include/CUDD/cuddInt.h	196;"	d
CUDD_GEN_NONEMPTY	include/CUDD/cuddInt.h	199;"	d
CUDD_GEN_PRIMES	include/CUDD/cuddInt.h	195;"	d
CUDD_GEN_ZDD_PATHS	include/CUDD/cuddInt.h	197;"	d
CUDD_GROUP_CHECK	include/CUDD/cudd.h	/^    CUDD_GROUP_CHECK,$/;"	e	enum:__anon18
CUDD_GROUP_CHECK2	include/CUDD/cudd.h	/^    CUDD_GROUP_CHECK2,$/;"	e	enum:__anon18
CUDD_GROUP_CHECK3	include/CUDD/cudd.h	/^    CUDD_GROUP_CHECK3,$/;"	e	enum:__anon18
CUDD_GROUP_CHECK4	include/CUDD/cudd.h	/^    CUDD_GROUP_CHECK4,$/;"	e	enum:__anon18
CUDD_GROUP_CHECK5	include/CUDD/cudd.h	/^    CUDD_GROUP_CHECK5,$/;"	e	enum:__anon18
CUDD_GROUP_CHECK6	include/CUDD/cudd.h	/^    CUDD_GROUP_CHECK6,$/;"	e	enum:__anon18
CUDD_GROUP_CHECK7	include/CUDD/cudd.h	/^    CUDD_GROUP_CHECK7,$/;"	e	enum:__anon18
CUDD_GROUP_CHECK8	include/CUDD/cudd.h	/^    CUDD_GROUP_CHECK8,$/;"	e	enum:__anon18
CUDD_GROUP_CHECK9	include/CUDD/cudd.h	/^    CUDD_GROUP_CHECK9$/;"	e	enum:__anon18
CUDD_INTERNAL_ERROR	include/CUDD/cudd.h	/^    CUDD_INTERNAL_ERROR$/;"	e	enum:__anon20
CUDD_INVALID_ARG	include/CUDD/cudd.h	/^    CUDD_INVALID_ARG,$/;"	e	enum:__anon20
CUDD_INVERSE_TRANSFORM_MOVE	lib/CUDD/cuddLinear.c	73;"	d	file:
CUDD_INVERSE_TRANSFORM_MOVE	lib/CUDD/cuddZddLin.c	71;"	d	file:
CUDD_LAZY_HARD_GROUP	include/CUDD/cudd.h	/^    CUDD_LAZY_HARD_GROUP,$/;"	e	enum:__anon21
CUDD_LAZY_NONE	include/CUDD/cudd.h	/^    CUDD_LAZY_NONE,$/;"	e	enum:__anon21
CUDD_LAZY_SOFT_GROUP	include/CUDD/cudd.h	/^    CUDD_LAZY_SOFT_GROUP,$/;"	e	enum:__anon21
CUDD_LAZY_UNGROUP	include/CUDD/cudd.h	/^    CUDD_LAZY_UNGROUP$/;"	e	enum:__anon21
CUDD_LINEAR_TRANSFORM_MOVE	lib/CUDD/cuddLinear.c	72;"	d	file:
CUDD_LINEAR_TRANSFORM_MOVE	lib/CUDD/cuddZddLin.c	70;"	d	file:
CUDD_MAXINDEX	include/CUDD/cudd.h	106;"	d
CUDD_MAXINDEX	include/CUDD/cudd.h	108;"	d
CUDD_MAX_MEM_EXCEEDED	include/CUDD/cudd.h	/^    CUDD_MAX_MEM_EXCEEDED,$/;"	e	enum:__anon20
CUDD_MEMORY_OUT	include/CUDD/cudd.h	/^    CUDD_MEMORY_OUT,$/;"	e	enum:__anon20
CUDD_NO_CHECK	include/CUDD/cudd.h	/^    CUDD_NO_CHECK,$/;"	e	enum:__anon18
CUDD_NO_ERROR	include/CUDD/cudd.h	/^    CUDD_NO_ERROR,$/;"	e	enum:__anon20
CUDD_OUT_OF_MEM	include/CUDD/cudd.h	91;"	d
CUDD_POST_GC_HOOK	include/CUDD/cudd.h	/^    CUDD_POST_GC_HOOK,$/;"	e	enum:__anon19
CUDD_POST_REORDERING_HOOK	include/CUDD/cudd.h	/^    CUDD_POST_REORDERING_HOOK$/;"	e	enum:__anon19
CUDD_PRE_GC_HOOK	include/CUDD/cudd.h	/^    CUDD_PRE_GC_HOOK,$/;"	e	enum:__anon19
CUDD_PRE_REORDERING_HOOK	include/CUDD/cudd.h	/^    CUDD_PRE_REORDERING_HOOK,$/;"	e	enum:__anon19
CUDD_REORDER_ANNEALING	include/CUDD/cudd.h	/^    CUDD_REORDER_ANNEALING,$/;"	e	enum:__anon17
CUDD_REORDER_EXACT	include/CUDD/cudd.h	/^    CUDD_REORDER_EXACT$/;"	e	enum:__anon17
CUDD_REORDER_GENETIC	include/CUDD/cudd.h	/^    CUDD_REORDER_GENETIC,$/;"	e	enum:__anon17
CUDD_REORDER_GROUP_SIFT	include/CUDD/cudd.h	/^    CUDD_REORDER_GROUP_SIFT,$/;"	e	enum:__anon17
CUDD_REORDER_GROUP_SIFT_CONV	include/CUDD/cudd.h	/^    CUDD_REORDER_GROUP_SIFT_CONV,$/;"	e	enum:__anon17
CUDD_REORDER_LAZY_SIFT	include/CUDD/cudd.h	/^    CUDD_REORDER_LAZY_SIFT,$/;"	e	enum:__anon17
CUDD_REORDER_LINEAR	include/CUDD/cudd.h	/^    CUDD_REORDER_LINEAR,$/;"	e	enum:__anon17
CUDD_REORDER_LINEAR_CONVERGE	include/CUDD/cudd.h	/^    CUDD_REORDER_LINEAR_CONVERGE,$/;"	e	enum:__anon17
CUDD_REORDER_NONE	include/CUDD/cudd.h	/^    CUDD_REORDER_NONE,$/;"	e	enum:__anon17
CUDD_REORDER_RANDOM	include/CUDD/cudd.h	/^    CUDD_REORDER_RANDOM,$/;"	e	enum:__anon17
CUDD_REORDER_RANDOM_PIVOT	include/CUDD/cudd.h	/^    CUDD_REORDER_RANDOM_PIVOT,$/;"	e	enum:__anon17
CUDD_REORDER_SAME	include/CUDD/cudd.h	/^    CUDD_REORDER_SAME,$/;"	e	enum:__anon17
CUDD_REORDER_SIFT	include/CUDD/cudd.h	/^    CUDD_REORDER_SIFT,$/;"	e	enum:__anon17
CUDD_REORDER_SIFT_CONVERGE	include/CUDD/cudd.h	/^    CUDD_REORDER_SIFT_CONVERGE,$/;"	e	enum:__anon17
CUDD_REORDER_SYMM_SIFT	include/CUDD/cudd.h	/^    CUDD_REORDER_SYMM_SIFT,$/;"	e	enum:__anon17
CUDD_REORDER_SYMM_SIFT_CONV	include/CUDD/cudd.h	/^    CUDD_REORDER_SYMM_SIFT_CONV,$/;"	e	enum:__anon17
CUDD_REORDER_WINDOW2	include/CUDD/cudd.h	/^    CUDD_REORDER_WINDOW2,$/;"	e	enum:__anon17
CUDD_REORDER_WINDOW2_CONV	include/CUDD/cudd.h	/^    CUDD_REORDER_WINDOW2_CONV,$/;"	e	enum:__anon17
CUDD_REORDER_WINDOW3	include/CUDD/cudd.h	/^    CUDD_REORDER_WINDOW3,$/;"	e	enum:__anon17
CUDD_REORDER_WINDOW3_CONV	include/CUDD/cudd.h	/^    CUDD_REORDER_WINDOW3_CONV,$/;"	e	enum:__anon17
CUDD_REORDER_WINDOW4	include/CUDD/cudd.h	/^    CUDD_REORDER_WINDOW4,$/;"	e	enum:__anon17
CUDD_REORDER_WINDOW4_CONV	include/CUDD/cudd.h	/^    CUDD_REORDER_WINDOW4_CONV,$/;"	e	enum:__anon17
CUDD_RESIDUE_DEFAULT	include/CUDD/cudd.h	97;"	d
CUDD_RESIDUE_MSB	include/CUDD/cudd.h	98;"	d
CUDD_RESIDUE_TC	include/CUDD/cudd.h	99;"	d
CUDD_SWAP_MOVE	lib/CUDD/cuddLinear.c	71;"	d	file:
CUDD_SWAP_MOVE	lib/CUDD/cuddZddLin.c	69;"	d	file:
CUDD_TIMEOUT_EXPIRED	include/CUDD/cudd.h	/^    CUDD_TIMEOUT_EXPIRED,$/;"	e	enum:__anon20
CUDD_TOO_MANY_NODES	include/CUDD/cudd.h	/^    CUDD_TOO_MANY_NODES,$/;"	e	enum:__anon20
CUDD_TRUE	include/CUDD/cudd.h	87;"	d
CUDD_UNIQUE_SLOTS	include/CUDD/cudd.h	93;"	d
CUDD_VALUE_TYPE	include/CUDD/cudd.h	90;"	d
CUDD_VAR_NEXT_STATE	include/CUDD/cudd.h	/^    CUDD_VAR_NEXT_STATE$/;"	e	enum:__anon22
CUDD_VAR_PRESENT_STATE	include/CUDD/cudd.h	/^    CUDD_VAR_PRESENT_STATE,$/;"	e	enum:__anon22
CUDD_VAR_PRIMARY_INPUT	include/CUDD/cudd.h	/^    CUDD_VAR_PRIMARY_INPUT,$/;"	e	enum:__anon22
CUDD_VERSION	include/CUDD/cudd.h	75;"	d
CVar	include/MemoryModel/PointerAnalysis.h	/^    typedef CondVar<Cond> CVar;$/;"	t	class:CondPTAImpl
CXX_STD	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	534;"	d	file:
CXX_STD	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	536;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	550;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	552;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	555;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	557;"	d	file:
C_DIALECT	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	559;"	d	file:
CacheMap	include/MemoryModel/PointsToDS.h	/^    CahcePtsMap CacheMap;	\/\/\/< points-to processed at load\/store edge$/;"	m	class:DiffPTData
CahcePtsMap	include/MemoryModel/PointsToDS.h	/^    typedef typename PTData<CacheKey,Data>::PtsMap CahcePtsMap;$/;"	t	class:DiffPTData
Call	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
CallBlockNode	include/Util/ICFGNode.h	/^    CallBlockNode(NodeID id, CallSite c) : InterBlockNode(id, FunCallBlock), cs(c) {$/;"	f	class:CallBlockNode
CallBlockNode	include/Util/ICFGNode.h	/^class CallBlockNode : public InterBlockNode {$/;"	c
CallCF	include/Util/ICFGEdge.h	/^		CallCF,$/;"	e	enum:ICFGEdge::ICFGEdgeK
CallCFGEdge	include/Util/ICFGEdge.h	/^    CallCFGEdge(ICFGNode* s, ICFGNode* d, CallSiteID id):$/;"	f	class:CallCFGEdge
CallCFGEdge	include/Util/ICFGEdge.h	/^class CallCFGEdge : public ICFGEdge {$/;"	c
CallCHI	include/MSSA/MSSAMuChi.h	/^    CallCHI(const CallSite cs, const MemRegion* m, Cond c = PathCondAllocator::trueCond()) :$/;"	f	class:CallCHI
CallCHI	include/MSSA/MSSAMuChi.h	/^class CallCHI : public MSSACHI<Cond> {$/;"	c
CallDirSVFGEdge	include/Util/VFGEdge.h	/^    CallDirSVFGEdge(VFGNode* s, VFGNode* d, CallSiteID id):$/;"	f	class:CallDirSVFGEdge
CallDirSVFGEdge	include/Util/VFGEdge.h	/^class CallDirSVFGEdge : public DirectSVFGEdge {$/;"	c
CallDirVF	include/Util/VFGEdge.h	/^		CallDirVF,$/;"	e	enum:VFGEdge::VFGEdgeK
CallEdgeMap	include/MSSA/SVFGBuilder.h	/^    typedef PointerAnalysis::CallEdgeMap CallEdgeMap;$/;"	t	class:SVFGBuilder
CallEdgeMap	include/MemoryModel/PointerAnalysis.h	/^    typedef std::map<CallSite, FunctionSet> CallEdgeMap;$/;"	t	class:PointerAnalysis
CallEdgeMap	include/Util/PTACallGraph.h	/^    typedef std::map<CallSite, FunctionSet> CallEdgeMap;$/;"	t	class:PTACallGraph
CallGraphEdgeSet	include/Util/PTACallGraph.h	/^    typedef GenericNode<PTACallGraphNode,PTACallGraphEdge>::GEdgeSetTy CallGraphEdgeSet;$/;"	t	class:PTACallGraphEdge
CallGraphEdgeSet	include/Util/PTACallGraph.h	/^    typedef PTACallGraphEdge::CallGraphEdgeSet CallGraphEdgeSet;$/;"	t	class:PTACallGraph
CallGraphEdgeSet	include/Util/PTACallGraph.h	/^    typedef PTACallGraphEdge::CallGraphEdgeSet CallGraphEdgeSet;$/;"	t	class:PTACallGraphNode
CallGraphNodeIter	include/Util/PTACallGraph.h	/^    typedef CallGraphEdgeSet::iterator CallGraphNodeIter;$/;"	t	class:PTACallGraph
CallGraphSCC	include/MemoryModel/PointerAnalysis.h	/^    typedef SCCDetection<PTACallGraph*> CallGraphSCC;$/;"	t	class:PointerAnalysis
CallIndSVFGEdge	include/MSSA/SVFGEdge.h	/^    CallIndSVFGEdge(VFGNode* s, VFGNode* d, CallSiteID id):$/;"	f	class:CallIndSVFGEdge
CallIndSVFGEdge	include/MSSA/SVFGEdge.h	/^class CallIndSVFGEdge : public IndirectSVFGEdge {$/;"	c
CallIndVF	include/Util/VFGEdge.h	/^		CallIndVF,$/;"	e	enum:VFGEdge::VFGEdgeK
CallInst	include/Util/BasicTypes.h	/^typedef llvm::CallInst CallInst;$/;"	t
CallInstSet	include/Util/PTACallGraph.h	/^    typedef std::set<const Instruction*> CallInstSet;$/;"	t	class:PTACallGraphEdge
CallInstToCallGraphEdgesMap	include/Util/PTACallGraph.h	/^    typedef llvm::DenseMap<const Instruction*, CallGraphEdgeSet> CallInstToCallGraphEdgesMap;$/;"	t	class:PTACallGraph
CallInstToForkEdgesMap	include/Util/ThreadCallGraph.h	/^    typedef std::map<const Instruction*, ForkEdgeSet> CallInstToForkEdgesMap;$/;"	t	class:ThreadCallGraph
CallInstToJoinEdgesMap	include/Util/ThreadCallGraph.h	/^    typedef std::map<const Instruction*, JoinEdgeSet> CallInstToJoinEdgesMap;$/;"	t	class:ThreadCallGraph
CallInstToParForEdgesMap	include/Util/ThreadCallGraph.h	/^    typedef std::map<const Instruction*, ParForEdgeSet> CallInstToParForEdgesMap;$/;"	t	class:ThreadCallGraph
CallMSSACHI	include/MSSA/MSSAMuChi.h	/^        CallMSSACHI,$/;"	e	enum:MSSADEF::DEFTYPE
CallMSSAMU	include/MSSA/MSSAMuChi.h	/^        LoadMSSAMU, CallMSSAMU, RetMSSAMU$/;"	e	enum:MSSAMU::MUTYPE
CallMU	include/MSSA/MSSAMuChi.h	/^    CallMU(const CallSite cs, const MemRegion* m, Cond c = PathCondAllocator::trueCond()) :$/;"	f	class:CallMU
CallMU	include/MSSA/MSSAMuChi.h	/^class CallMU : public MSSAMU<Cond> {$/;"	c
CallPE	include/MemoryModel/PAGEdge.h	/^    CallPE(PAGNode* s, PAGNode* d, const Instruction* i) :$/;"	f	class:CallPE
CallPE	include/MemoryModel/PAGEdge.h	/^class CallPE: public PAGEdge {$/;"	c
CallPESet	include/Util/ICFGNode.h	/^    typedef std::set<const CallPE *> CallPESet;$/;"	t	class:ICFGNode
CallPESet	include/Util/VFG.h	/^    typedef FormalParmVFGNode::CallPESet CallPESet;$/;"	t	class:VFG
CallPESet	include/Util/VFGNode.h	/^    typedef std::set<const CallPE*> CallPESet;$/;"	t	class:VFGNode
CallRetEdge	include/Util/PTACallGraph.h	/^        CallRetEdge,TDForkEdge,TDJoinEdge,HareParForEdge$/;"	e	enum:PTACallGraphEdge::CEDGEK
CallSite	include/Util/BasicTypes.h	/^typedef llvm::CallSite CallSite;$/;"	t
CallSite2DummyValPN	include/WPA/Andersen.h	/^    typedef std::map<CallSite, NodeID> CallSite2DummyValPN;$/;"	t	class:Andersen
CallSiteID	include/Util/BasicTypes.h	/^typedef unsigned CallSiteID;$/;"	t
CallSitePair	include/Util/PTACallGraph.h	/^    typedef std::pair<CallSite, const Function*> CallSitePair;$/;"	t	class:PTACallGraph
CallSiteSet	include/MSSA/SVFGBuilder.h	/^    typedef PointerAnalysis::CallSiteSet CallSiteSet;$/;"	t	class:SVFGBuilder
CallSiteSet	include/MemoryModel/MemModel.h	/^    typedef std::set<CallSite> CallSiteSet;$/;"	t	class:SymbolTableInfo
CallSiteSet	include/MemoryModel/PAG.h	/^    typedef std::set<CallSite> CallSiteSet;$/;"	t	class:PAG
CallSiteSet	include/MemoryModel/PointerAnalysis.h	/^    typedef std::set<CallSite> CallSiteSet;$/;"	t	class:PointerAnalysis
CallSiteSet	include/Util/ThreadCallGraph.h	/^    typedef InstSet CallSiteSet;$/;"	t	class:ThreadCallGraph
CallSiteToActualINsMapTy	include/MSSA/SVFG.h	/^    typedef std::map<CallSite, ActualINSVFGNodeSet>  CallSiteToActualINsMapTy;$/;"	t	class:SVFG
CallSiteToActualOUTsMapTy	include/MSSA/SVFG.h	/^    typedef std::map<CallSite, ActualOUTSVFGNodeSet>  CallSiteToActualOUTsMapTy;$/;"	t	class:SVFG
CallSiteToCHISetMap	include/MSSA/MemSSA.h	/^    typedef std::map<CallSite, CHISet> CallSiteToCHISetMap;$/;"	t	class:MemSSA
CallSiteToCHNodesMap	include/MemoryModel/CHA.h	/^    typedef std::map<CallSite, CHNodeSetTy> CallSiteToCHNodesMap;$/;"	t	class:CHGraph
CallSiteToFunPtrMap	include/MemoryModel/PAG.h	/^    typedef std::map<CallSite,NodeID> CallSiteToFunPtrMap;$/;"	t	class:PAG
CallSiteToFunPtrMap	include/MemoryModel/PointerAnalysis.h	/^    typedef PAG::CallSiteToFunPtrMap CallSiteToFunPtrMap;$/;"	t	class:PointerAnalysis
CallSiteToIDMapTy	include/MemoryModel/MemModel.h	/^    typedef llvm::DenseMap<const Instruction*,CallSiteID> CallSiteToIDMapTy;$/;"	t	class:SymbolTableInfo
CallSiteToIdMap	include/Util/PTACallGraph.h	/^    typedef std::map<CallSitePair, CallSiteID> CallSiteToIdMap;$/;"	t	class:PTACallGraph
CallSiteToMRsMap	include/MSSA/MemRegion.h	/^    typedef std::map<CallSite, MRSet> CallSiteToMRsMap;$/;"	t	class:MRGenerator
CallSiteToMUSetMap	include/MSSA/MemSSA.h	/^    typedef std::map<CallSite, MUSet> CallSiteToMUSetMap;$/;"	t	class:MemSSA
CallSiteToNodeBSMap	include/MSSA/MemRegion.h	/^    typedef std::map<CallSite, NodeBS> CallSiteToNodeBSMap;$/;"	t	class:MRGenerator
CallSiteToPointsToMap	include/MSSA/MemRegion.h	/^    typedef std::map<CallSite, PointsTo> CallSiteToPointsToMap;$/;"	t	class:MRGenerator
CallSiteToVFunSetMap	include/MemoryModel/CHA.h	/^    typedef std::map<CallSite, VFunSet> CallSiteToVFunSetMap;$/;"	t	class:CHGraph
CallSiteToVTableSetMap	include/MemoryModel/CHA.h	/^    typedef std::map<CallSite, VTableSet> CallSiteToVTableSetMap;$/;"	t	class:CHGraph
CallStrCxt	include/Util/BasicTypes.h	/^typedef SmallVector16 CallStrCxt;$/;"	t
CallToInstMap	include/Util/ThreadCallGraph.h	/^    typedef std::map<const Instruction*, InstSet> CallToInstMap;$/;"	t	class:ThreadCallGraph
CastInst	include/Util/BasicTypes.h	/^typedef llvm::CastInst CastInst;$/;"	t
CheckInTables	lib/CUDD/cuddDecomp.c	/^CheckInTables($/;"	f	file:
CheckTablesCacheAndReturn	lib/CUDD/cuddDecomp.c	/^CheckTablesCacheAndReturn($/;"	f	file:
ChildIteratorType	include/MemoryModel/GenericGraph.h	/^    typedef mapped_iterator<typename GenericNode<NodeTy,EdgeTy>::iterator, DerefEdge> ChildIteratorType;$/;"	t	struct:llvm::GraphTraits
ChildIteratorType	lib/MemoryModel/PAG.cpp	/^    typedef NodeType::iterator ChildIteratorType;$/;"	t	struct:llvm::DOTGraphTraits	file:
ChildIteratorType	lib/Util/PTACallGraph.cpp	/^    typedef NodeType::iterator ChildIteratorType;$/;"	t	struct:llvm::DOTGraphTraits	file:
Cmp	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
Cmp	include/Util/VFGNode.h	/^        Addr, Copy, Gep, Store, Load, Cmp, BinaryOp, TPhi, TIntraPhi, TInterPhi,$/;"	e	enum:VFGNode::VFGNodeK
CmpInst	include/Util/BasicTypes.h	/^typedef llvm::CmpInst CmpInst;$/;"	t
CmpNodeMap	include/MemoryModel/PAG.h	/^    typedef std::map<const PAGNode*,PAGNodeList> CmpNodeMap;$/;"	t	class:PAG
CmpPE	include/MemoryModel/PAGEdge.h	/^    CmpPE(PAGNode* s, PAGNode* d) : PAGEdge(s,d,PAGEdge::Cmp) {$/;"	f	class:CmpPE
CmpPE	include/MemoryModel/PAGEdge.h	/^class CmpPE: public PAGEdge {$/;"	c
CmpVFGNode	include/Util/VFGNode.h	/^    CmpVFGNode(NodeID id,const PAGNode* r): VFGNode(id,Cmp), res(r) {$/;"	f	class:CmpVFGNode
CmpVFGNode	include/Util/VFGNode.h	/^class CmpVFGNode: public VFGNode {$/;"	c
CollapseTime	include/WPA/WPAStat.h	/^    static const char* CollapseTime;$/;"	m	class:AndersenStat
CollapseTime	lib/WPA/AndersenStat.cpp	/^const char* AndersenStat::CollapseTime = "CollapseTime";$/;"	m	class:AndersenStat	file:
CollectPtsChain	lib/MSSA/MemRegion.cpp	/^NodeBS& MRGenerator::CollectPtsChain(NodeID id) {$/;"	f	class:MRGenerator
ComputeInterCallVFGGuard	lib/Util/PathCondAllocator.cpp	/^PathCondAllocator::Condition* PathCondAllocator::ComputeInterCallVFGGuard(const BasicBlock* srcBB, const BasicBlock* dstBB, const BasicBlock* callBB) {$/;"	f	class:PathCondAllocator
ComputeInterRetVFGGuard	lib/Util/PathCondAllocator.cpp	/^PathCondAllocator::Condition* PathCondAllocator::ComputeInterRetVFGGuard(const BasicBlock*  srcBB, const BasicBlock*  dstBB, const BasicBlock* retBB) {$/;"	f	class:PathCondAllocator
ComputeIntraVFGGuard	lib/Util/PathCondAllocator.cpp	/^PathCondAllocator::Condition* PathCondAllocator::ComputeIntraVFGGuard(const BasicBlock* srcBB, const BasicBlock* dstBB) {$/;"	f	class:PathCondAllocator
CondPTAImpl	include/MemoryModel/PointerAnalysis.h	/^    CondPTAImpl(PointerAnalysis::PTATY type) : PointerAnalysis(type), normalized(false) {$/;"	f	class:CondPTAImpl
CondPTAImpl	include/MemoryModel/PointerAnalysis.h	/^class CondPTAImpl : public PointerAnalysis {$/;"	c
CondPointsToSet	include/MemoryModel/ConditionalPT.h	/^    CondPointsToSet() {$/;"	f	class:CondPointsToSet
CondPointsToSet	include/MemoryModel/ConditionalPT.h	/^    CondPointsToSet(const Cond& cond, const PointsTo& pts) {$/;"	f	class:CondPointsToSet
CondPointsToSet	include/MemoryModel/ConditionalPT.h	/^    CondPointsToSet(const CondPointsToSet<Cond>& cptsSet)$/;"	f	class:CondPointsToSet
CondPointsToSet	include/MemoryModel/ConditionalPT.h	/^class CondPointsToSet {$/;"	c
CondPosMap	include/Util/PathCondAllocator.h	/^    typedef std::map<u32_t,Condition*> CondPosMap;		\/\/\/< map a branch to its Condition$/;"	t	class:PathCondAllocator
CondPts	include/MemoryModel/ConditionalPT.h	/^    typedef typename std::map<Cond, PointsTo> CondPts;$/;"	t	class:CondPointsToSet
CondPtsConstIter	include/MemoryModel/ConditionalPT.h	/^    typedef typename CondPts::const_iterator CondPtsConstIter;$/;"	t	class:CondPointsToSet
CondPtsIter	include/MemoryModel/ConditionalPT.h	/^    typedef typename CondPts::iterator CondPtsIter;$/;"	t	class:CondPointsToSet
CondPtsSetIterator	include/MemoryModel/ConditionalPT.h	/^        CondPtsSetIterator(CondPointsToSet<Cond> &n, bool ae = false)$/;"	f	class:CondPointsToSet::CondPtsSetIterator
CondPtsSetIterator	include/MemoryModel/ConditionalPT.h	/^    class CondPtsSetIterator {$/;"	c	class:CondPointsToSet
CondStdSet	include/MemoryModel/ConditionalPT.h	/^    CondStdSet() {}$/;"	f	class:CondStdSet
CondStdSet	include/MemoryModel/ConditionalPT.h	/^    CondStdSet(const CondStdSet<Element>& cptsSet) : elements(cptsSet.getElementSet())$/;"	f	class:CondStdSet
CondStdSet	include/MemoryModel/ConditionalPT.h	/^class CondStdSet {$/;"	c
CondToTermInstMap	include/Util/PathCondAllocator.h	/^    typedef std::map<const Condition*, const Instruction* > CondToTermInstMap;	\/\/ map a condition to its branch instruction$/;"	t	class:PathCondAllocator
CondVar	include/MemoryModel/ConditionalPT.h	/^    CondVar() : m_cond(), m_id(0) {}$/;"	f	class:CondVar
CondVar	include/MemoryModel/ConditionalPT.h	/^    CondVar(const Cond& cond, NodeID id) : m_cond(cond),m_id(id) {$/;"	f	class:CondVar
CondVar	include/MemoryModel/ConditionalPT.h	/^    CondVar(const CondVar& conVar) : m_cond(conVar.m_cond), m_id(conVar.m_id)$/;"	f	class:CondVar
CondVar	include/MemoryModel/ConditionalPT.h	/^class CondVar {$/;"	c
Condition	include/MSSA/MemRegion.h	/^    typedef DdNode* Condition;$/;"	t	class:MemRegion
Condition	include/MSSA/MemSSA.h	/^    typedef MemRegion::Condition Condition;$/;"	t	class:MemSSA
Condition	include/Util/PathCondAllocator.h	/^    typedef DdNode Condition;$/;"	t	class:PathCondAllocator
Conjuncts	lib/CUDD/cuddDecomp.c	/^typedef struct Conjuncts {$/;"	s	file:
Conjuncts	lib/CUDD/cuddDecomp.c	/^} Conjuncts;$/;"	t	typeref:struct:Conjuncts	file:
ConjunctsFree	lib/CUDD/cuddDecomp.c	/^ConjunctsFree($/;"	f	file:
Conservative	include/WPA/WPAPass.h	/^        Conservative,	\/\/\/< return MayAlias if any pta says alias$/;"	e	enum:WPAPass::AliasCheckRule
Constant	include/Util/BasicTypes.h	/^typedef llvm::Constant Constant;$/;"	t
ConstantAggregate	include/Util/BasicTypes.h	/^typedef llvm::ConstantAggregate ConstantAggregate;$/;"	t
ConstantArray	include/Util/BasicTypes.h	/^typedef llvm::ConstantArray ConstantArray;$/;"	t
ConstantData	include/Util/BasicTypes.h	/^typedef llvm::ConstantData ConstantData;$/;"	t
ConstantDataArray	include/Util/BasicTypes.h	/^typedef llvm::ConstantDataArray ConstantDataArray;$/;"	t
ConstantExpr	include/Util/BasicTypes.h	/^typedef llvm::ConstantExpr ConstantExpr;$/;"	t
ConstantInt	include/Util/BasicTypes.h	/^typedef llvm::ConstantInt ConstantInt;$/;"	t
ConstantObj	include/MemoryModel/MemModel.h	/^    ConstantObj,$/;"	e	enum:SYMTYPE
ConstantPointerNull	include/Util/BasicTypes.h	/^typedef llvm::ConstantPointerNull ConstantPointerNull;$/;"	t
ConstantStruct	include/Util/BasicTypes.h	/^typedef llvm::ConstantStruct ConstantStruct;$/;"	t
ConstraintEdge	include/MemoryModel/ConsGEdge.h	/^    ConstraintEdge(ConstraintNode* s, ConstraintNode* d, ConstraintEdgeK k, EdgeID id = 0) : GenericConsEdgeTy(s,d,k),edgeId(id) {$/;"	f	class:ConstraintEdge
ConstraintEdge	include/MemoryModel/ConsGEdge.h	/^class ConstraintEdge : public GenericConsEdgeTy {$/;"	c
ConstraintEdgeK	include/MemoryModel/ConsGEdge.h	/^    enum ConstraintEdgeK {$/;"	g	class:ConstraintEdge
ConstraintEdgeSetTy	include/MemoryModel/ConsGEdge.h	/^    typedef GenericNode<ConstraintNode,ConstraintEdge>::GEdgeSetTy ConstraintEdgeSetTy;$/;"	t	class:ConstraintEdge
ConstraintGraph	include/MemoryModel/ConsG.h	/^    ConstraintGraph(PAG* p): pag(p), edgeIndex(0) {$/;"	f	class:ConstraintGraph
ConstraintGraph	include/MemoryModel/ConsG.h	/^class ConstraintGraph :  public GenericGraph<ConstraintNode,ConstraintEdge> {$/;"	c
ConstraintNode	include/MemoryModel/ConsGNode.h	/^    ConstraintNode(NodeID i) : GenericConsNodeTy(i, 0), _isPWCNode(false), newExpand(false) {$/;"	f	class:ConstraintNode
ConstraintNode	include/MemoryModel/ConsGNode.h	/^class ConstraintNode : public GenericConsNodeTy {$/;"	c
ConstraintNodeIDToNodeMapTy	include/MemoryModel/ConsG.h	/^    typedef llvm::DenseMap<NodeID, ConstraintNode *> ConstraintNodeIDToNodeMapTy;$/;"	t	class:ConstraintGraph
ConstraintNodeIter	include/MemoryModel/ConsG.h	/^    typedef ConstraintEdge::ConstraintEdgeSetTy::iterator ConstraintNodeIter;$/;"	t	class:ConstraintGraph
ContextCond	include/Util/DPItem.h	/^    ContextCond():concreteCxt(true) {$/;"	f	class:ContextCond
ContextCond	include/Util/DPItem.h	/^    ContextCond(const ContextCond& cond): context(cond.getContexts()), concreteCxt(cond.isConcreteCxt()) {$/;"	f	class:ContextCond
ContextCond	include/Util/DPItem.h	/^class ContextCond {$/;"	c
Copy	include/MemoryModel/ConsGEdge.h	/^        Addr, Copy, Store, Load, NormalGep, VariantGep$/;"	e	enum:ConstraintEdge::ConstraintEdgeK
Copy	include/MemoryModel/ConsGNode.h	/^        Copy, Direct$/;"	e	enum:ConstraintNode::SCCEdgeFlag
Copy	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
Copy	include/Util/VFGNode.h	/^        Addr, Copy, Gep, Store, Load, Cmp, BinaryOp, TPhi, TIntraPhi, TInterPhi,$/;"	e	enum:VFGNode::VFGNodeK
CopyCGEdge	include/MemoryModel/ConsGEdge.h	/^    CopyCGEdge(ConstraintNode* s, ConstraintNode* d, EdgeID id) : ConstraintEdge(s,d,Copy,id) {$/;"	f	class:CopyCGEdge
CopyCGEdge	include/MemoryModel/ConsGEdge.h	/^class CopyCGEdge: public ConstraintEdge {$/;"	c
CopyPE	include/MemoryModel/PAGEdge.h	/^    CopyPE(PAGNode* s, PAGNode* d) : PAGEdge(s,d,PAGEdge::Copy) {$/;"	f	class:CopyPE
CopyPE	include/MemoryModel/PAGEdge.h	/^class CopyPE: public PAGEdge {$/;"	c
CopySVFGNode	include/MSSA/SVFG.h	/^typedef CopyVFGNode CopySVFGNode;$/;"	t
CopyVFGNode	include/Util/VFGNode.h	/^    CopyVFGNode(NodeID id,const CopyPE* copy): StmtVFGNode(id,copy,Copy) {$/;"	f	class:CopyVFGNode
CopyVFGNode	include/Util/VFGNode.h	/^class CopyVFGNode: public StmtVFGNode {$/;"	c
CorrelCleanUp	lib/CUDD/cuddBddCorr.c	/^CorrelCleanUp($/;"	f	file:
CorrelCompare	lib/CUDD/cuddBddCorr.c	/^CorrelCompare($/;"	f	file:
CorrelHash	lib/CUDD/cuddBddCorr.c	/^CorrelHash($/;"	f	file:
CountMinterms	lib/CUDD/cuddDecomp.c	/^CountMinterms($/;"	f	file:
CreateBotDist	lib/CUDD/cuddDecomp.c	/^CreateBotDist($/;"	f	file:
CreateBotDist	lib/CUDD/cuddSubsetSP.c	/^CreateBotDist($/;"	f	file:
CreatePathTable	lib/CUDD/cuddSubsetSP.c	/^CreatePathTable($/;"	f	file:
CreateTopDist	lib/CUDD/cuddSubsetSP.c	/^CreateTopDist($/;"	f	file:
CtrlIdentifier	include/DisPatch/CtrlIdentifier.h	/^    CtrlIdentifier(){ assert(0); };$/;"	f	class:CtrlIdentifier
CtrlIdentifier	include/DisPatch/CtrlIdentifier.h	/^    CtrlIdentifier(SVFModule &inmodule, InitPIDObj *inpid, InterProcAnal *inipa, unsigned inmaxdist, unsigned inmaxcallercxt){$/;"	f	class:CtrlIdentifier
CtrlIdentifier	include/DisPatch/CtrlIdentifier.h	/^class CtrlIdentifier: public BinIRWrapper {$/;"	c
CtrlInfo	include/DisPatch/InitPIDObj.h	/^    class CtrlInfo{$/;"	c	class:InitPIDObj
CtrlVar2Idx	lib/DisPatch/InitPIDObj.cpp	/^int InitPIDObj::CtrlVar2Idx(const Function *func, string word){$/;"	f	class:InitPIDObj
CtxSet	include/Util/ThreadCallGraph.h	/^    typedef std::set<CallSiteSet*> CtxSet;$/;"	t	class:ThreadCallGraph
Cudd_AddHook	lib/CUDD/cuddAPI.c	/^Cudd_AddHook($/;"	f
Cudd_AggregationType	include/CUDD/cudd.h	/^} Cudd_AggregationType;$/;"	t	typeref:enum:__anon18
Cudd_ApaAdd	lib/CUDD/cuddApa.c	/^Cudd_ApaAdd($/;"	f
Cudd_ApaCompare	lib/CUDD/cuddApa.c	/^Cudd_ApaCompare($/;"	f
Cudd_ApaCompareRatios	lib/CUDD/cuddApa.c	/^Cudd_ApaCompareRatios($/;"	f
Cudd_ApaCopy	lib/CUDD/cuddApa.c	/^Cudd_ApaCopy($/;"	f
Cudd_ApaCountMinterm	lib/CUDD/cuddApa.c	/^Cudd_ApaCountMinterm($/;"	f
Cudd_ApaIntDivision	lib/CUDD/cuddApa.c	/^Cudd_ApaIntDivision($/;"	f
Cudd_ApaNumberOfDigits	lib/CUDD/cuddApa.c	/^Cudd_ApaNumberOfDigits($/;"	f
Cudd_ApaPowerOfTwo	lib/CUDD/cuddApa.c	/^Cudd_ApaPowerOfTwo($/;"	f
Cudd_ApaPrintDecimal	lib/CUDD/cuddApa.c	/^Cudd_ApaPrintDecimal($/;"	f
Cudd_ApaPrintDensity	lib/CUDD/cuddApa.c	/^Cudd_ApaPrintDensity($/;"	f
Cudd_ApaPrintExponential	lib/CUDD/cuddApa.c	/^Cudd_ApaPrintExponential($/;"	f
Cudd_ApaPrintHex	lib/CUDD/cuddApa.c	/^Cudd_ApaPrintHex($/;"	f
Cudd_ApaPrintMinterm	lib/CUDD/cuddApa.c	/^Cudd_ApaPrintMinterm($/;"	f
Cudd_ApaPrintMintermExp	lib/CUDD/cuddApa.c	/^Cudd_ApaPrintMintermExp($/;"	f
Cudd_ApaSetToLiteral	lib/CUDD/cuddApa.c	/^Cudd_ApaSetToLiteral($/;"	f
Cudd_ApaShiftRight	lib/CUDD/cuddApa.c	/^Cudd_ApaShiftRight($/;"	f
Cudd_ApaShortDivision	lib/CUDD/cuddApa.c	/^Cudd_ApaShortDivision($/;"	f
Cudd_ApaSubtract	lib/CUDD/cuddApa.c	/^Cudd_ApaSubtract($/;"	f
Cudd_AutodynDisable	lib/CUDD/cuddAPI.c	/^Cudd_AutodynDisable($/;"	f
Cudd_AutodynDisableZdd	lib/CUDD/cuddAPI.c	/^Cudd_AutodynDisableZdd($/;"	f
Cudd_AutodynEnable	lib/CUDD/cuddAPI.c	/^Cudd_AutodynEnable($/;"	f
Cudd_AutodynEnableZdd	lib/CUDD/cuddAPI.c	/^Cudd_AutodynEnableZdd($/;"	f
Cudd_AverageDistance	lib/CUDD/cuddUtil.c	/^Cudd_AverageDistance($/;"	f
Cudd_BddToAdd	lib/CUDD/cuddBridge.c	/^Cudd_BddToAdd($/;"	f
Cudd_BddToCubeArray	lib/CUDD/cuddUtil.c	/^Cudd_BddToCubeArray($/;"	f
Cudd_BiasedOverApprox	lib/CUDD/cuddApprox.c	/^Cudd_BiasedOverApprox($/;"	f
Cudd_BiasedUnderApprox	lib/CUDD/cuddApprox.c	/^Cudd_BiasedUnderApprox($/;"	f
Cudd_CProjection	lib/CUDD/cuddPriority.c	/^Cudd_CProjection($/;"	f
Cudd_CheckCube	lib/CUDD/cuddCof.c	/^Cudd_CheckCube($/;"	f
Cudd_CheckKeys	lib/CUDD/cuddCheck.c	/^Cudd_CheckKeys($/;"	f
Cudd_CheckZeroRef	lib/CUDD/cuddRef.c	/^Cudd_CheckZeroRef($/;"	f
Cudd_ClassifySupport	lib/CUDD/cuddUtil.c	/^Cudd_ClassifySupport($/;"	f
Cudd_ClearErrorCode	lib/CUDD/cuddAPI.c	/^Cudd_ClearErrorCode($/;"	f
Cudd_CofMinterm	lib/CUDD/cuddSign.c	/^Cudd_CofMinterm($/;"	f
Cudd_Cofactor	lib/CUDD/cuddCof.c	/^Cudd_Cofactor($/;"	f
Cudd_Complement	include/CUDD/cudd.h	398;"	d
Cudd_CountLeaves	lib/CUDD/cuddUtil.c	/^Cudd_CountLeaves($/;"	f
Cudd_CountMinterm	lib/CUDD/cuddUtil.c	/^Cudd_CountMinterm($/;"	f
Cudd_CountPath	lib/CUDD/cuddUtil.c	/^Cudd_CountPath($/;"	f
Cudd_CountPathsToNonZero	lib/CUDD/cuddUtil.c	/^Cudd_CountPathsToNonZero($/;"	f
Cudd_CubeArrayToBdd	lib/CUDD/cuddUtil.c	/^Cudd_CubeArrayToBdd($/;"	f
Cudd_DagSize	lib/CUDD/cuddUtil.c	/^Cudd_DagSize($/;"	f
Cudd_DeadAreCounted	lib/CUDD/cuddAPI.c	/^Cudd_DeadAreCounted($/;"	f
Cudd_DebugCheck	lib/CUDD/cuddCheck.c	/^Cudd_DebugCheck($/;"	f
Cudd_Decreasing	lib/CUDD/cuddSat.c	/^Cudd_Decreasing($/;"	f
Cudd_DelayedDerefBdd	lib/CUDD/cuddRef.c	/^Cudd_DelayedDerefBdd($/;"	f
Cudd_Density	lib/CUDD/cuddUtil.c	/^Cudd_Density($/;"	f
Cudd_Deref	lib/CUDD/cuddRef.c	/^Cudd_Deref($/;"	f
Cudd_DisableGarbageCollection	lib/CUDD/cuddAPI.c	/^Cudd_DisableGarbageCollection($/;"	f
Cudd_DisableOrderingMonitoring	lib/CUDD/cuddAPI.c	/^Cudd_DisableOrderingMonitoring($/;"	f
Cudd_DisableReorderingReporting	lib/CUDD/cuddAPI.c	/^Cudd_DisableReorderingReporting($/;"	f
Cudd_Disequality	lib/CUDD/cuddPriority.c	/^Cudd_Disequality($/;"	f
Cudd_DumpBlif	lib/CUDD/cuddExport.c	/^Cudd_DumpBlif($/;"	f
Cudd_DumpBlifBody	lib/CUDD/cuddExport.c	/^Cudd_DumpBlifBody($/;"	f
Cudd_DumpDDcal	lib/CUDD/cuddExport.c	/^Cudd_DumpDDcal($/;"	f
Cudd_DumpDaVinci	lib/CUDD/cuddExport.c	/^Cudd_DumpDaVinci($/;"	f
Cudd_DumpDot	lib/CUDD/cuddExport.c	/^Cudd_DumpDot($/;"	f
Cudd_DumpFactoredForm	lib/CUDD/cuddExport.c	/^Cudd_DumpFactoredForm($/;"	f
Cudd_Dxygtdxz	lib/CUDD/cuddPriority.c	/^Cudd_Dxygtdxz($/;"	f
Cudd_Dxygtdyz	lib/CUDD/cuddPriority.c	/^Cudd_Dxygtdyz($/;"	f
Cudd_E	include/CUDD/cudd.h	442;"	d
Cudd_EnableGarbageCollection	lib/CUDD/cuddAPI.c	/^Cudd_EnableGarbageCollection($/;"	f
Cudd_EnableOrderingMonitoring	lib/CUDD/cuddAPI.c	/^Cudd_EnableOrderingMonitoring($/;"	f
Cudd_EnableReorderingReporting	lib/CUDD/cuddAPI.c	/^Cudd_EnableReorderingReporting($/;"	f
Cudd_EpdCountMinterm	lib/CUDD/cuddUtil.c	/^Cudd_EpdCountMinterm($/;"	f
Cudd_EqualSupNorm	lib/CUDD/cuddSat.c	/^Cudd_EqualSupNorm($/;"	f
Cudd_EquivDC	lib/CUDD/cuddSat.c	/^Cudd_EquivDC($/;"	f
Cudd_ErrorType	include/CUDD/cudd.h	/^} Cudd_ErrorType;$/;"	t	typeref:enum:__anon20
Cudd_EstimateCofactor	lib/CUDD/cuddUtil.c	/^Cudd_EstimateCofactor($/;"	f
Cudd_EstimateCofactorSimple	lib/CUDD/cuddUtil.c	/^Cudd_EstimateCofactorSimple($/;"	f
Cudd_Eval	lib/CUDD/cuddSat.c	/^Cudd_Eval($/;"	f
Cudd_ExpectedUsedSlots	lib/CUDD/cuddAPI.c	/^Cudd_ExpectedUsedSlots($/;"	f
Cudd_FindEssential	lib/CUDD/cuddEssent.c	/^Cudd_FindEssential($/;"	f
Cudd_FindTwoLiteralClauses	lib/CUDD/cuddEssent.c	/^Cudd_FindTwoLiteralClauses($/;"	f
Cudd_FirstCube	lib/CUDD/cuddUtil.c	/^Cudd_FirstCube($/;"	f
Cudd_FirstNode	lib/CUDD/cuddUtil.c	/^Cudd_FirstNode($/;"	f
Cudd_FirstPrime	lib/CUDD/cuddUtil.c	/^Cudd_FirstPrime($/;"	f
Cudd_ForeachCube	include/CUDD/cudd.h	506;"	d
Cudd_ForeachNode	include/CUDD/cudd.h	572;"	d
Cudd_ForeachPrime	include/CUDD/cudd.h	538;"	d
Cudd_FreeTree	lib/CUDD/cuddAPI.c	/^Cudd_FreeTree($/;"	f
Cudd_FreeZddTree	lib/CUDD/cuddAPI.c	/^Cudd_FreeZddTree($/;"	f
Cudd_GarbageCollectionEnabled	lib/CUDD/cuddAPI.c	/^Cudd_GarbageCollectionEnabled($/;"	f
Cudd_GenFree	lib/CUDD/cuddUtil.c	/^Cudd_GenFree($/;"	f
Cudd_HookType	include/CUDD/cudd.h	/^} Cudd_HookType;$/;"	t	typeref:enum:__anon19
Cudd_IncreaseTimeLimit	lib/CUDD/cuddAPI.c	/^Cudd_IncreaseTimeLimit($/;"	f
Cudd_Increasing	lib/CUDD/cuddSat.c	/^Cudd_Increasing($/;"	f
Cudd_IndicesToCube	lib/CUDD/cuddUtil.c	/^Cudd_IndicesToCube($/;"	f
Cudd_Inequality	lib/CUDD/cuddPriority.c	/^Cudd_Inequality($/;"	f
Cudd_Init	lib/CUDD/cuddInit.c	/^Cudd_Init($/;"	f
Cudd_IsComplement	include/CUDD/cudd.h	412;"	d
Cudd_IsConstant	include/CUDD/cudd.h	339;"	d
Cudd_IsGenEmpty	lib/CUDD/cuddUtil.c	/^Cudd_IsGenEmpty($/;"	f
Cudd_IsInHook	lib/CUDD/cuddAPI.c	/^Cudd_IsInHook($/;"	f
Cudd_IsNonConstant	lib/CUDD/cuddAPI.c	/^Cudd_IsNonConstant($/;"	f
Cudd_IterDerefBdd	lib/CUDD/cuddRef.c	/^Cudd_IterDerefBdd($/;"	f
Cudd_LargestCube	lib/CUDD/cuddSat.c	/^Cudd_LargestCube($/;"	f
Cudd_LazyGroupType	include/CUDD/cudd.h	/^} Cudd_LazyGroupType;$/;"	t	typeref:enum:__anon21
Cudd_MakeBddFromZddCover	lib/CUDD/cuddZddIsop.c	/^Cudd_MakeBddFromZddCover($/;"	f
Cudd_MakeTreeNode	lib/CUDD/cuddGroup.c	/^Cudd_MakeTreeNode($/;"	f
Cudd_MakeZddTreeNode	lib/CUDD/cuddZddGroup.c	/^Cudd_MakeZddTreeNode($/;"	f
Cudd_MinHammingDist	lib/CUDD/cuddPriority.c	/^Cudd_MinHammingDist($/;"	f
Cudd_NewApaNumber	lib/CUDD/cuddApa.c	/^Cudd_NewApaNumber($/;"	f
Cudd_NextCube	lib/CUDD/cuddUtil.c	/^Cudd_NextCube($/;"	f
Cudd_NextNode	lib/CUDD/cuddUtil.c	/^Cudd_NextNode($/;"	f
Cudd_NextPrime	lib/CUDD/cuddUtil.c	/^Cudd_NextPrime($/;"	f
Cudd_NodeReadIndex	lib/CUDD/cuddAPI.c	/^Cudd_NodeReadIndex($/;"	f
Cudd_Not	include/CUDD/cudd.h	354;"	d
Cudd_NotCond	include/CUDD/cudd.h	370;"	d
Cudd_OrderingMonitoring	lib/CUDD/cuddAPI.c	/^Cudd_OrderingMonitoring($/;"	f
Cudd_OutOfMem	lib/CUDD/cuddUtil.c	/^Cudd_OutOfMem($/;"	f
Cudd_OverApprox	lib/CUDD/cuddApprox.c	/^Cudd_OverApprox($/;"	f
Cudd_Prime	lib/CUDD/cuddTable.c	/^Cudd_Prime($/;"	f
Cudd_PrintDebug	lib/CUDD/cuddUtil.c	/^Cudd_PrintDebug($/;"	f
Cudd_PrintGroupedOrder	lib/CUDD/cuddAPI.c	/^Cudd_PrintGroupedOrder($/;"	f
Cudd_PrintInfo	lib/CUDD/cuddAPI.c	/^Cudd_PrintInfo($/;"	f
Cudd_PrintLinear	lib/CUDD/cuddLinear.c	/^Cudd_PrintLinear($/;"	f
Cudd_PrintMinterm	lib/CUDD/cuddUtil.c	/^Cudd_PrintMinterm($/;"	f
Cudd_PrintTwoLiteralClauses	lib/CUDD/cuddEssent.c	/^Cudd_PrintTwoLiteralClauses($/;"	f
Cudd_PrintVersion	lib/CUDD/cuddUtil.c	/^Cudd_PrintVersion($/;"	f
Cudd_PrioritySelect	lib/CUDD/cuddPriority.c	/^Cudd_PrioritySelect($/;"	f
Cudd_Quit	lib/CUDD/cuddInit.c	/^Cudd_Quit($/;"	f
Cudd_Random	lib/CUDD/cuddUtil.c	/^Cudd_Random(void)$/;"	f
Cudd_ReadArcviolation	lib/CUDD/cuddAPI.c	/^Cudd_ReadArcviolation($/;"	f
Cudd_ReadBackground	lib/CUDD/cuddAPI.c	/^Cudd_ReadBackground($/;"	f
Cudd_ReadCacheHits	lib/CUDD/cuddAPI.c	/^Cudd_ReadCacheHits($/;"	f
Cudd_ReadCacheLookUps	lib/CUDD/cuddAPI.c	/^Cudd_ReadCacheLookUps($/;"	f
Cudd_ReadCacheSlots	lib/CUDD/cuddAPI.c	/^Cudd_ReadCacheSlots($/;"	f
Cudd_ReadCacheUsedSlots	lib/CUDD/cuddAPI.c	/^Cudd_ReadCacheUsedSlots($/;"	f
Cudd_ReadDead	lib/CUDD/cuddAPI.c	/^Cudd_ReadDead($/;"	f
Cudd_ReadElapsedTime	lib/CUDD/cuddAPI.c	/^Cudd_ReadElapsedTime($/;"	f
Cudd_ReadEpsilon	lib/CUDD/cuddAPI.c	/^Cudd_ReadEpsilon($/;"	f
Cudd_ReadErrorCode	lib/CUDD/cuddAPI.c	/^Cudd_ReadErrorCode($/;"	f
Cudd_ReadGarbageCollectionTime	lib/CUDD/cuddAPI.c	/^Cudd_ReadGarbageCollectionTime($/;"	f
Cudd_ReadGarbageCollections	lib/CUDD/cuddAPI.c	/^Cudd_ReadGarbageCollections($/;"	f
Cudd_ReadGroupcheck	lib/CUDD/cuddAPI.c	/^Cudd_ReadGroupcheck($/;"	f
Cudd_ReadIndex	include/CUDD/cudd.h	474;"	d
Cudd_ReadInvPerm	lib/CUDD/cuddAPI.c	/^Cudd_ReadInvPerm($/;"	f
Cudd_ReadInvPermZdd	lib/CUDD/cuddAPI.c	/^Cudd_ReadInvPermZdd($/;"	f
Cudd_ReadIthClause	lib/CUDD/cuddEssent.c	/^Cudd_ReadIthClause($/;"	f
Cudd_ReadKeys	lib/CUDD/cuddAPI.c	/^Cudd_ReadKeys($/;"	f
Cudd_ReadLinear	lib/CUDD/cuddLinear.c	/^Cudd_ReadLinear($/;"	f
Cudd_ReadLogicZero	lib/CUDD/cuddAPI.c	/^Cudd_ReadLogicZero($/;"	f
Cudd_ReadLooseUpTo	lib/CUDD/cuddAPI.c	/^Cudd_ReadLooseUpTo($/;"	f
Cudd_ReadMaxCache	lib/CUDD/cuddAPI.c	/^Cudd_ReadMaxCache($/;"	f
Cudd_ReadMaxCacheHard	lib/CUDD/cuddAPI.c	/^Cudd_ReadMaxCacheHard($/;"	f
Cudd_ReadMaxGrowth	lib/CUDD/cuddAPI.c	/^Cudd_ReadMaxGrowth($/;"	f
Cudd_ReadMaxGrowthAlternate	lib/CUDD/cuddAPI.c	/^Cudd_ReadMaxGrowthAlternate($/;"	f
Cudd_ReadMaxLive	lib/CUDD/cuddAPI.c	/^Cudd_ReadMaxLive($/;"	f
Cudd_ReadMaxMemory	lib/CUDD/cuddAPI.c	/^Cudd_ReadMaxMemory($/;"	f
Cudd_ReadMaxReorderings	lib/CUDD/cuddAPI.c	/^Cudd_ReadMaxReorderings($/;"	f
Cudd_ReadMemoryInUse	lib/CUDD/cuddAPI.c	/^Cudd_ReadMemoryInUse($/;"	f
Cudd_ReadMinDead	lib/CUDD/cuddAPI.c	/^Cudd_ReadMinDead($/;"	f
Cudd_ReadMinHit	lib/CUDD/cuddAPI.c	/^Cudd_ReadMinHit($/;"	f
Cudd_ReadMinusInfinity	lib/CUDD/cuddAPI.c	/^Cudd_ReadMinusInfinity($/;"	f
Cudd_ReadNextReordering	lib/CUDD/cuddAPI.c	/^Cudd_ReadNextReordering($/;"	f
Cudd_ReadNodeCount	lib/CUDD/cuddAPI.c	/^Cudd_ReadNodeCount($/;"	f
Cudd_ReadNodesDropped	lib/CUDD/cuddAPI.c	/^Cudd_ReadNodesDropped($/;"	f
Cudd_ReadNodesFreed	lib/CUDD/cuddAPI.c	/^Cudd_ReadNodesFreed($/;"	f
Cudd_ReadNumberXovers	lib/CUDD/cuddAPI.c	/^Cudd_ReadNumberXovers($/;"	f
Cudd_ReadOne	lib/CUDD/cuddAPI.c	/^Cudd_ReadOne($/;"	f
Cudd_ReadOrderRandomization	lib/CUDD/cuddAPI.c	/^Cudd_ReadOrderRandomization($/;"	f
Cudd_ReadPeakLiveNodeCount	lib/CUDD/cuddAPI.c	/^Cudd_ReadPeakLiveNodeCount($/;"	f
Cudd_ReadPeakNodeCount	lib/CUDD/cuddAPI.c	/^Cudd_ReadPeakNodeCount($/;"	f
Cudd_ReadPerm	lib/CUDD/cuddAPI.c	/^Cudd_ReadPerm($/;"	f
Cudd_ReadPermZdd	lib/CUDD/cuddAPI.c	/^Cudd_ReadPermZdd($/;"	f
Cudd_ReadPlusInfinity	lib/CUDD/cuddAPI.c	/^Cudd_ReadPlusInfinity($/;"	f
Cudd_ReadPopulationSize	lib/CUDD/cuddAPI.c	/^Cudd_ReadPopulationSize($/;"	f
Cudd_ReadRecomb	lib/CUDD/cuddAPI.c	/^Cudd_ReadRecomb($/;"	f
Cudd_ReadRecursiveCalls	lib/CUDD/cuddAPI.c	/^Cudd_ReadRecursiveCalls($/;"	f
Cudd_ReadReorderingCycle	lib/CUDD/cuddAPI.c	/^Cudd_ReadReorderingCycle($/;"	f
Cudd_ReadReorderingTime	lib/CUDD/cuddAPI.c	/^Cudd_ReadReorderingTime($/;"	f
Cudd_ReadReorderings	lib/CUDD/cuddAPI.c	/^Cudd_ReadReorderings($/;"	f
Cudd_ReadSiftMaxSwap	lib/CUDD/cuddAPI.c	/^Cudd_ReadSiftMaxSwap($/;"	f
Cudd_ReadSiftMaxVar	lib/CUDD/cuddAPI.c	/^Cudd_ReadSiftMaxVar($/;"	f
Cudd_ReadSize	lib/CUDD/cuddAPI.c	/^Cudd_ReadSize($/;"	f
Cudd_ReadSlots	lib/CUDD/cuddAPI.c	/^Cudd_ReadSlots($/;"	f
Cudd_ReadStartTime	lib/CUDD/cuddAPI.c	/^Cudd_ReadStartTime($/;"	f
Cudd_ReadStderr	lib/CUDD/cuddAPI.c	/^Cudd_ReadStderr($/;"	f
Cudd_ReadStdout	lib/CUDD/cuddAPI.c	/^Cudd_ReadStdout($/;"	f
Cudd_ReadSwapSteps	lib/CUDD/cuddAPI.c	/^Cudd_ReadSwapSteps($/;"	f
Cudd_ReadSymmviolation	lib/CUDD/cuddAPI.c	/^Cudd_ReadSymmviolation($/;"	f
Cudd_ReadTimeLimit	lib/CUDD/cuddAPI.c	/^Cudd_ReadTimeLimit($/;"	f
Cudd_ReadTree	lib/CUDD/cuddAPI.c	/^Cudd_ReadTree($/;"	f
Cudd_ReadUniqueLinks	lib/CUDD/cuddAPI.c	/^Cudd_ReadUniqueLinks($/;"	f
Cudd_ReadUniqueLookUps	lib/CUDD/cuddAPI.c	/^Cudd_ReadUniqueLookUps($/;"	f
Cudd_ReadUsedSlots	lib/CUDD/cuddAPI.c	/^Cudd_ReadUsedSlots($/;"	f
Cudd_ReadVars	lib/CUDD/cuddAPI.c	/^Cudd_ReadVars($/;"	f
Cudd_ReadZddOne	lib/CUDD/cuddAPI.c	/^Cudd_ReadZddOne($/;"	f
Cudd_ReadZddSize	lib/CUDD/cuddAPI.c	/^Cudd_ReadZddSize($/;"	f
Cudd_ReadZddTree	lib/CUDD/cuddAPI.c	/^Cudd_ReadZddTree($/;"	f
Cudd_ReadZero	lib/CUDD/cuddAPI.c	/^Cudd_ReadZero($/;"	f
Cudd_RecursiveDeref	lib/CUDD/cuddRef.c	/^Cudd_RecursiveDeref($/;"	f
Cudd_RecursiveDerefZdd	lib/CUDD/cuddRef.c	/^Cudd_RecursiveDerefZdd($/;"	f
Cudd_ReduceHeap	lib/CUDD/cuddReorder.c	/^Cudd_ReduceHeap($/;"	f
Cudd_Ref	lib/CUDD/cuddRef.c	/^Cudd_Ref($/;"	f
Cudd_Regular	include/CUDD/cudd.h	384;"	d
Cudd_RemapOverApprox	lib/CUDD/cuddApprox.c	/^Cudd_RemapOverApprox($/;"	f
Cudd_RemapUnderApprox	lib/CUDD/cuddApprox.c	/^Cudd_RemapUnderApprox($/;"	f
Cudd_RemoveHook	lib/CUDD/cuddAPI.c	/^Cudd_RemoveHook($/;"	f
Cudd_ReorderingReporting	lib/CUDD/cuddAPI.c	/^Cudd_ReorderingReporting($/;"	f
Cudd_ReorderingStatus	lib/CUDD/cuddAPI.c	/^Cudd_ReorderingStatus($/;"	f
Cudd_ReorderingStatusZdd	lib/CUDD/cuddAPI.c	/^Cudd_ReorderingStatusZdd($/;"	f
Cudd_ReorderingType	include/CUDD/cudd.h	/^} Cudd_ReorderingType;$/;"	t	typeref:enum:__anon17
Cudd_Reserve	lib/CUDD/cuddTable.c	/^Cudd_Reserve($/;"	f
Cudd_ResetStartTime	lib/CUDD/cuddAPI.c	/^Cudd_ResetStartTime($/;"	f
Cudd_SetArcviolation	lib/CUDD/cuddAPI.c	/^Cudd_SetArcviolation($/;"	f
Cudd_SetBackground	lib/CUDD/cuddAPI.c	/^Cudd_SetBackground($/;"	f
Cudd_SetEpsilon	lib/CUDD/cuddAPI.c	/^Cudd_SetEpsilon($/;"	f
Cudd_SetGroupcheck	lib/CUDD/cuddAPI.c	/^Cudd_SetGroupcheck($/;"	f
Cudd_SetLooseUpTo	lib/CUDD/cuddAPI.c	/^Cudd_SetLooseUpTo($/;"	f
Cudd_SetMaxCacheHard	lib/CUDD/cuddAPI.c	/^Cudd_SetMaxCacheHard($/;"	f
Cudd_SetMaxGrowth	lib/CUDD/cuddAPI.c	/^Cudd_SetMaxGrowth($/;"	f
Cudd_SetMaxGrowthAlternate	lib/CUDD/cuddAPI.c	/^Cudd_SetMaxGrowthAlternate($/;"	f
Cudd_SetMaxLive	lib/CUDD/cuddAPI.c	/^Cudd_SetMaxLive($/;"	f
Cudd_SetMaxMemory	lib/CUDD/cuddAPI.c	/^Cudd_SetMaxMemory($/;"	f
Cudd_SetMaxReorderings	lib/CUDD/cuddAPI.c	/^Cudd_SetMaxReorderings($/;"	f
Cudd_SetMinHit	lib/CUDD/cuddAPI.c	/^Cudd_SetMinHit($/;"	f
Cudd_SetNextReordering	lib/CUDD/cuddAPI.c	/^Cudd_SetNextReordering($/;"	f
Cudd_SetNumberXovers	lib/CUDD/cuddAPI.c	/^Cudd_SetNumberXovers($/;"	f
Cudd_SetOrderRandomization	lib/CUDD/cuddAPI.c	/^Cudd_SetOrderRandomization($/;"	f
Cudd_SetPopulationSize	lib/CUDD/cuddAPI.c	/^Cudd_SetPopulationSize($/;"	f
Cudd_SetRecomb	lib/CUDD/cuddAPI.c	/^Cudd_SetRecomb($/;"	f
Cudd_SetReorderingCycle	lib/CUDD/cuddAPI.c	/^Cudd_SetReorderingCycle($/;"	f
Cudd_SetSiftMaxSwap	lib/CUDD/cuddAPI.c	/^Cudd_SetSiftMaxSwap($/;"	f
Cudd_SetSiftMaxVar	lib/CUDD/cuddAPI.c	/^Cudd_SetSiftMaxVar($/;"	f
Cudd_SetStartTime	lib/CUDD/cuddAPI.c	/^Cudd_SetStartTime($/;"	f
Cudd_SetStderr	lib/CUDD/cuddAPI.c	/^Cudd_SetStderr($/;"	f
Cudd_SetStdout	lib/CUDD/cuddAPI.c	/^Cudd_SetStdout($/;"	f
Cudd_SetSymmviolation	lib/CUDD/cuddAPI.c	/^Cudd_SetSymmviolation($/;"	f
Cudd_SetTimeLimit	lib/CUDD/cuddAPI.c	/^Cudd_SetTimeLimit($/;"	f
Cudd_SetTree	lib/CUDD/cuddAPI.c	/^Cudd_SetTree($/;"	f
Cudd_SetVarMap	lib/CUDD/cuddCompose.c	/^Cudd_SetVarMap ($/;"	f
Cudd_SetZddTree	lib/CUDD/cuddAPI.c	/^Cudd_SetZddTree($/;"	f
Cudd_SharingSize	lib/CUDD/cuddUtil.c	/^Cudd_SharingSize($/;"	f
Cudd_ShortestLength	lib/CUDD/cuddSat.c	/^Cudd_ShortestLength($/;"	f
Cudd_ShortestPath	lib/CUDD/cuddSat.c	/^Cudd_ShortestPath($/;"	f
Cudd_ShuffleHeap	lib/CUDD/cuddReorder.c	/^Cudd_ShuffleHeap($/;"	f
Cudd_SolveEqn	lib/CUDD/cuddSolve.c	/^Cudd_SolveEqn($/;"	f
Cudd_SplitSet	lib/CUDD/cuddSplit.c	/^Cudd_SplitSet($/;"	f
Cudd_Srandom	lib/CUDD/cuddUtil.c	/^Cudd_Srandom($/;"	f
Cudd_StdPostReordHook	lib/CUDD/cuddAPI.c	/^Cudd_StdPostReordHook($/;"	f
Cudd_StdPreReordHook	lib/CUDD/cuddAPI.c	/^Cudd_StdPreReordHook($/;"	f
Cudd_SubsetCompress	lib/CUDD/cuddGenCof.c	/^Cudd_SubsetCompress($/;"	f
Cudd_SubsetHeavyBranch	lib/CUDD/cuddSubsetHB.c	/^Cudd_SubsetHeavyBranch($/;"	f
Cudd_SubsetShortPaths	lib/CUDD/cuddSubsetSP.c	/^Cudd_SubsetShortPaths($/;"	f
Cudd_SubsetWithMaskVars	lib/CUDD/cuddUtil.c	/^Cudd_SubsetWithMaskVars($/;"	f
Cudd_SupersetCompress	lib/CUDD/cuddGenCof.c	/^Cudd_SupersetCompress($/;"	f
Cudd_SupersetHeavyBranch	lib/CUDD/cuddSubsetHB.c	/^Cudd_SupersetHeavyBranch($/;"	f
Cudd_SupersetShortPaths	lib/CUDD/cuddSubsetSP.c	/^Cudd_SupersetShortPaths($/;"	f
Cudd_Support	lib/CUDD/cuddUtil.c	/^Cudd_Support($/;"	f
Cudd_SupportIndex	lib/CUDD/cuddUtil.c	/^Cudd_SupportIndex($/;"	f
Cudd_SupportIndices	lib/CUDD/cuddUtil.c	/^Cudd_SupportIndices($/;"	f
Cudd_SupportSize	lib/CUDD/cuddUtil.c	/^Cudd_SupportSize($/;"	f
Cudd_SymmProfile	lib/CUDD/cuddSymmetry.c	/^Cudd_SymmProfile($/;"	f
Cudd_T	include/CUDD/cudd.h	427;"	d
Cudd_TimeLimited	lib/CUDD/cuddAPI.c	/^Cudd_TimeLimited($/;"	f
Cudd_TurnOffCountDead	lib/CUDD/cuddAPI.c	/^Cudd_TurnOffCountDead($/;"	f
Cudd_TurnOnCountDead	lib/CUDD/cuddAPI.c	/^Cudd_TurnOnCountDead($/;"	f
Cudd_UnderApprox	lib/CUDD/cuddApprox.c	/^Cudd_UnderApprox($/;"	f
Cudd_UnsetTimeLimit	lib/CUDD/cuddAPI.c	/^Cudd_UnsetTimeLimit($/;"	f
Cudd_UpdateTimeLimit	lib/CUDD/cuddAPI.c	/^Cudd_UpdateTimeLimit($/;"	f
Cudd_V	include/CUDD/cudd.h	457;"	d
Cudd_VariableType	include/CUDD/cudd.h	/^} Cudd_VariableType;$/;"	t	typeref:enum:__anon22
Cudd_VectorSupport	lib/CUDD/cuddUtil.c	/^Cudd_VectorSupport($/;"	f
Cudd_VectorSupportIndex	lib/CUDD/cuddUtil.c	/^Cudd_VectorSupportIndex($/;"	f
Cudd_VectorSupportIndices	lib/CUDD/cuddUtil.c	/^Cudd_VectorSupportIndices($/;"	f
Cudd_VectorSupportSize	lib/CUDD/cuddUtil.c	/^Cudd_VectorSupportSize($/;"	f
Cudd_VerifySol	lib/CUDD/cuddSolve.c	/^Cudd_VerifySol($/;"	f
Cudd_Xeqy	lib/CUDD/cuddPriority.c	/^Cudd_Xeqy($/;"	f
Cudd_Xgty	lib/CUDD/cuddPriority.c	/^Cudd_Xgty($/;"	f
Cudd_addAgreement	lib/CUDD/cuddAddApply.c	/^Cudd_addAgreement($/;"	f
Cudd_addApply	lib/CUDD/cuddAddApply.c	/^Cudd_addApply($/;"	f
Cudd_addBddInterval	lib/CUDD/cuddBridge.c	/^Cudd_addBddInterval($/;"	f
Cudd_addBddIthBit	lib/CUDD/cuddBridge.c	/^Cudd_addBddIthBit($/;"	f
Cudd_addBddPattern	lib/CUDD/cuddBridge.c	/^Cudd_addBddPattern($/;"	f
Cudd_addBddStrictThreshold	lib/CUDD/cuddBridge.c	/^Cudd_addBddStrictThreshold($/;"	f
Cudd_addBddThreshold	lib/CUDD/cuddBridge.c	/^Cudd_addBddThreshold($/;"	f
Cudd_addCmpl	lib/CUDD/cuddAddIte.c	/^Cudd_addCmpl($/;"	f
Cudd_addCompose	lib/CUDD/cuddCompose.c	/^Cudd_addCompose($/;"	f
Cudd_addComputeCube	lib/CUDD/cuddUtil.c	/^Cudd_addComputeCube($/;"	f
Cudd_addConst	lib/CUDD/cuddAPI.c	/^Cudd_addConst($/;"	f
Cudd_addConstrain	lib/CUDD/cuddGenCof.c	/^Cudd_addConstrain($/;"	f
Cudd_addDiff	lib/CUDD/cuddAddApply.c	/^Cudd_addDiff($/;"	f
Cudd_addDivide	lib/CUDD/cuddAddApply.c	/^Cudd_addDivide($/;"	f
Cudd_addEvalConst	lib/CUDD/cuddAddIte.c	/^Cudd_addEvalConst($/;"	f
Cudd_addExistAbstract	lib/CUDD/cuddAddAbs.c	/^Cudd_addExistAbstract($/;"	f
Cudd_addFindMax	lib/CUDD/cuddAddFind.c	/^Cudd_addFindMax($/;"	f
Cudd_addFindMin	lib/CUDD/cuddAddFind.c	/^Cudd_addFindMin($/;"	f
Cudd_addGeneralVectorCompose	lib/CUDD/cuddCompose.c	/^Cudd_addGeneralVectorCompose($/;"	f
Cudd_addHamming	lib/CUDD/cuddPriority.c	/^Cudd_addHamming($/;"	f
Cudd_addHarwell	lib/CUDD/cuddHarwell.c	/^Cudd_addHarwell($/;"	f
Cudd_addIte	lib/CUDD/cuddAddIte.c	/^Cudd_addIte($/;"	f
Cudd_addIteConstant	lib/CUDD/cuddAddIte.c	/^Cudd_addIteConstant($/;"	f
Cudd_addIthBit	lib/CUDD/cuddAddFind.c	/^Cudd_addIthBit($/;"	f
Cudd_addIthVar	lib/CUDD/cuddAPI.c	/^Cudd_addIthVar($/;"	f
Cudd_addLeq	lib/CUDD/cuddAddIte.c	/^Cudd_addLeq($/;"	f
Cudd_addLog	lib/CUDD/cuddAddApply.c	/^Cudd_addLog($/;"	f
Cudd_addMatrixMultiply	lib/CUDD/cuddMatMult.c	/^Cudd_addMatrixMultiply($/;"	f
Cudd_addMaximum	lib/CUDD/cuddAddApply.c	/^Cudd_addMaximum($/;"	f
Cudd_addMinimum	lib/CUDD/cuddAddApply.c	/^Cudd_addMinimum($/;"	f
Cudd_addMinus	lib/CUDD/cuddAddApply.c	/^Cudd_addMinus($/;"	f
Cudd_addMonadicApply	lib/CUDD/cuddAddApply.c	/^Cudd_addMonadicApply($/;"	f
Cudd_addNand	lib/CUDD/cuddAddApply.c	/^Cudd_addNand($/;"	f
Cudd_addNegate	lib/CUDD/cuddAddNeg.c	/^Cudd_addNegate($/;"	f
Cudd_addNewVar	lib/CUDD/cuddAPI.c	/^Cudd_addNewVar($/;"	f
Cudd_addNewVarAtLevel	lib/CUDD/cuddAPI.c	/^Cudd_addNewVarAtLevel($/;"	f
Cudd_addNonSimCompose	lib/CUDD/cuddCompose.c	/^Cudd_addNonSimCompose($/;"	f
Cudd_addNor	lib/CUDD/cuddAddApply.c	/^Cudd_addNor($/;"	f
Cudd_addOneZeroMaximum	lib/CUDD/cuddAddApply.c	/^Cudd_addOneZeroMaximum($/;"	f
Cudd_addOr	lib/CUDD/cuddAddApply.c	/^Cudd_addOr($/;"	f
Cudd_addOrAbstract	lib/CUDD/cuddAddAbs.c	/^Cudd_addOrAbstract($/;"	f
Cudd_addOuterSum	lib/CUDD/cuddMatMult.c	/^Cudd_addOuterSum($/;"	f
Cudd_addPermute	lib/CUDD/cuddCompose.c	/^Cudd_addPermute($/;"	f
Cudd_addPlus	lib/CUDD/cuddAddApply.c	/^Cudd_addPlus($/;"	f
Cudd_addRead	lib/CUDD/cuddRead.c	/^Cudd_addRead($/;"	f
Cudd_addResidue	lib/CUDD/cuddAddWalsh.c	/^Cudd_addResidue($/;"	f
Cudd_addRestrict	lib/CUDD/cuddGenCof.c	/^Cudd_addRestrict($/;"	f
Cudd_addRoundOff	lib/CUDD/cuddAddNeg.c	/^Cudd_addRoundOff($/;"	f
Cudd_addScalarInverse	lib/CUDD/cuddAddInv.c	/^Cudd_addScalarInverse($/;"	f
Cudd_addSetNZ	lib/CUDD/cuddAddApply.c	/^Cudd_addSetNZ($/;"	f
Cudd_addSwapVariables	lib/CUDD/cuddCompose.c	/^Cudd_addSwapVariables($/;"	f
Cudd_addThreshold	lib/CUDD/cuddAddApply.c	/^Cudd_addThreshold($/;"	f
Cudd_addTimes	lib/CUDD/cuddAddApply.c	/^Cudd_addTimes($/;"	f
Cudd_addTimesPlus	lib/CUDD/cuddMatMult.c	/^Cudd_addTimesPlus($/;"	f
Cudd_addTriangle	lib/CUDD/cuddMatMult.c	/^Cudd_addTriangle($/;"	f
Cudd_addUnivAbstract	lib/CUDD/cuddAddAbs.c	/^Cudd_addUnivAbstract($/;"	f
Cudd_addVectorCompose	lib/CUDD/cuddCompose.c	/^Cudd_addVectorCompose($/;"	f
Cudd_addWalsh	lib/CUDD/cuddAddWalsh.c	/^Cudd_addWalsh($/;"	f
Cudd_addXeqy	lib/CUDD/cuddPriority.c	/^Cudd_addXeqy($/;"	f
Cudd_addXnor	lib/CUDD/cuddAddApply.c	/^Cudd_addXnor($/;"	f
Cudd_addXor	lib/CUDD/cuddAddApply.c	/^Cudd_addXor($/;"	f
Cudd_bddAdjPermuteX	lib/CUDD/cuddCompose.c	/^Cudd_bddAdjPermuteX($/;"	f
Cudd_bddAnd	lib/CUDD/cuddBddIte.c	/^Cudd_bddAnd($/;"	f
Cudd_bddAndAbstract	lib/CUDD/cuddAndAbs.c	/^Cudd_bddAndAbstract($/;"	f
Cudd_bddAndAbstractLimit	lib/CUDD/cuddAndAbs.c	/^Cudd_bddAndAbstractLimit($/;"	f
Cudd_bddAndLimit	lib/CUDD/cuddBddIte.c	/^Cudd_bddAndLimit($/;"	f
Cudd_bddApproxConjDecomp	lib/CUDD/cuddDecomp.c	/^Cudd_bddApproxConjDecomp($/;"	f
Cudd_bddApproxDisjDecomp	lib/CUDD/cuddDecomp.c	/^Cudd_bddApproxDisjDecomp($/;"	f
Cudd_bddBindVar	lib/CUDD/cuddAPI.c	/^Cudd_bddBindVar($/;"	f
Cudd_bddBooleanDiff	lib/CUDD/cuddBddAbs.c	/^Cudd_bddBooleanDiff($/;"	f
Cudd_bddCharToVect	lib/CUDD/cuddGenCof.c	/^Cudd_bddCharToVect($/;"	f
Cudd_bddClippingAnd	lib/CUDD/cuddClip.c	/^Cudd_bddClippingAnd($/;"	f
Cudd_bddClippingAndAbstract	lib/CUDD/cuddClip.c	/^Cudd_bddClippingAndAbstract($/;"	f
Cudd_bddClosestCube	lib/CUDD/cuddPriority.c	/^Cudd_bddClosestCube($/;"	f
Cudd_bddCompose	lib/CUDD/cuddCompose.c	/^Cudd_bddCompose($/;"	f
Cudd_bddComputeCube	lib/CUDD/cuddUtil.c	/^Cudd_bddComputeCube($/;"	f
Cudd_bddConstrain	lib/CUDD/cuddGenCof.c	/^Cudd_bddConstrain($/;"	f
Cudd_bddConstrainDecomp	lib/CUDD/cuddGenCof.c	/^Cudd_bddConstrainDecomp($/;"	f
Cudd_bddCorrelation	lib/CUDD/cuddBddCorr.c	/^Cudd_bddCorrelation($/;"	f
Cudd_bddCorrelationWeights	lib/CUDD/cuddBddCorr.c	/^Cudd_bddCorrelationWeights($/;"	f
Cudd_bddExistAbstract	lib/CUDD/cuddBddAbs.c	/^Cudd_bddExistAbstract($/;"	f
Cudd_bddExistAbstractLimit	lib/CUDD/cuddBddAbs.c	/^Cudd_bddExistAbstractLimit($/;"	f
Cudd_bddGenConjDecomp	lib/CUDD/cuddDecomp.c	/^Cudd_bddGenConjDecomp($/;"	f
Cudd_bddGenDisjDecomp	lib/CUDD/cuddDecomp.c	/^Cudd_bddGenDisjDecomp($/;"	f
Cudd_bddIntersect	lib/CUDD/cuddBddIte.c	/^Cudd_bddIntersect($/;"	f
Cudd_bddInterval	lib/CUDD/cuddPriority.c	/^Cudd_bddInterval($/;"	f
Cudd_bddIsNsVar	lib/CUDD/cuddAPI.c	/^Cudd_bddIsNsVar($/;"	f
Cudd_bddIsPiVar	lib/CUDD/cuddAPI.c	/^Cudd_bddIsPiVar($/;"	f
Cudd_bddIsPsVar	lib/CUDD/cuddAPI.c	/^Cudd_bddIsPsVar($/;"	f
Cudd_bddIsVarEssential	lib/CUDD/cuddEssent.c	/^Cudd_bddIsVarEssential($/;"	f
Cudd_bddIsVarHardGroup	lib/CUDD/cuddAPI.c	/^Cudd_bddIsVarHardGroup($/;"	f
Cudd_bddIsVarToBeGrouped	lib/CUDD/cuddAPI.c	/^Cudd_bddIsVarToBeGrouped($/;"	f
Cudd_bddIsVarToBeUngrouped	lib/CUDD/cuddAPI.c	/^Cudd_bddIsVarToBeUngrouped($/;"	f
Cudd_bddIsop	lib/CUDD/cuddZddIsop.c	/^Cudd_bddIsop($/;"	f
Cudd_bddIte	lib/CUDD/cuddBddIte.c	/^Cudd_bddIte($/;"	f
Cudd_bddIteConstant	lib/CUDD/cuddBddIte.c	/^Cudd_bddIteConstant($/;"	f
Cudd_bddIteLimit	lib/CUDD/cuddBddIte.c	/^Cudd_bddIteLimit($/;"	f
Cudd_bddIterConjDecomp	lib/CUDD/cuddDecomp.c	/^Cudd_bddIterConjDecomp($/;"	f
Cudd_bddIterDisjDecomp	lib/CUDD/cuddDecomp.c	/^Cudd_bddIterDisjDecomp($/;"	f
Cudd_bddIthVar	lib/CUDD/cuddAPI.c	/^Cudd_bddIthVar($/;"	f
Cudd_bddLICompaction	lib/CUDD/cuddGenCof.c	/^Cudd_bddLICompaction($/;"	f
Cudd_bddLargestPrimeUnate	lib/CUDD/cuddSat.c	/^Cudd_bddLargestPrimeUnate($/;"	f
Cudd_bddLeq	lib/CUDD/cuddBddIte.c	/^Cudd_bddLeq($/;"	f
Cudd_bddLeqUnless	lib/CUDD/cuddSat.c	/^Cudd_bddLeqUnless($/;"	f
Cudd_bddLiteralSetIntersection	lib/CUDD/cuddLiteral.c	/^Cudd_bddLiteralSetIntersection($/;"	f
Cudd_bddMakePrime	lib/CUDD/cuddSat.c	/^Cudd_bddMakePrime($/;"	f
Cudd_bddMaximallyExpand	lib/CUDD/cuddSat.c	/^Cudd_bddMaximallyExpand($/;"	f
Cudd_bddMinimize	lib/CUDD/cuddGenCof.c	/^Cudd_bddMinimize($/;"	f
Cudd_bddNPAnd	lib/CUDD/cuddGenCof.c	/^Cudd_bddNPAnd($/;"	f
Cudd_bddNand	lib/CUDD/cuddBddIte.c	/^Cudd_bddNand($/;"	f
Cudd_bddNewVar	lib/CUDD/cuddAPI.c	/^Cudd_bddNewVar($/;"	f
Cudd_bddNewVarAtLevel	lib/CUDD/cuddAPI.c	/^Cudd_bddNewVarAtLevel($/;"	f
Cudd_bddNor	lib/CUDD/cuddBddIte.c	/^Cudd_bddNor($/;"	f
Cudd_bddOr	lib/CUDD/cuddBddIte.c	/^Cudd_bddOr($/;"	f
Cudd_bddOrLimit	lib/CUDD/cuddBddIte.c	/^Cudd_bddOrLimit($/;"	f
Cudd_bddPermute	lib/CUDD/cuddCompose.c	/^Cudd_bddPermute($/;"	f
Cudd_bddPickArbitraryMinterms	lib/CUDD/cuddUtil.c	/^Cudd_bddPickArbitraryMinterms($/;"	f
Cudd_bddPickOneCube	lib/CUDD/cuddUtil.c	/^Cudd_bddPickOneCube($/;"	f
Cudd_bddPickOneMinterm	lib/CUDD/cuddUtil.c	/^Cudd_bddPickOneMinterm($/;"	f
Cudd_bddPrintCover	lib/CUDD/cuddUtil.c	/^Cudd_bddPrintCover($/;"	f
Cudd_bddRead	lib/CUDD/cuddRead.c	/^Cudd_bddRead($/;"	f
Cudd_bddReadPairIndex	lib/CUDD/cuddAPI.c	/^Cudd_bddReadPairIndex($/;"	f
Cudd_bddRealignDisable	lib/CUDD/cuddAPI.c	/^Cudd_bddRealignDisable($/;"	f
Cudd_bddRealignEnable	lib/CUDD/cuddAPI.c	/^Cudd_bddRealignEnable($/;"	f
Cudd_bddRealignmentEnabled	lib/CUDD/cuddAPI.c	/^Cudd_bddRealignmentEnabled($/;"	f
Cudd_bddResetVarToBeGrouped	lib/CUDD/cuddAPI.c	/^Cudd_bddResetVarToBeGrouped($/;"	f
Cudd_bddRestrict	lib/CUDD/cuddGenCof.c	/^Cudd_bddRestrict($/;"	f
Cudd_bddSetNsVar	lib/CUDD/cuddAPI.c	/^Cudd_bddSetNsVar($/;"	f
Cudd_bddSetPairIndex	lib/CUDD/cuddAPI.c	/^Cudd_bddSetPairIndex($/;"	f
Cudd_bddSetPiVar	lib/CUDD/cuddAPI.c	/^Cudd_bddSetPiVar($/;"	f
Cudd_bddSetPsVar	lib/CUDD/cuddAPI.c	/^Cudd_bddSetPsVar($/;"	f
Cudd_bddSetVarHardGroup	lib/CUDD/cuddAPI.c	/^Cudd_bddSetVarHardGroup($/;"	f
Cudd_bddSetVarToBeGrouped	lib/CUDD/cuddAPI.c	/^Cudd_bddSetVarToBeGrouped($/;"	f
Cudd_bddSetVarToBeUngrouped	lib/CUDD/cuddAPI.c	/^Cudd_bddSetVarToBeUngrouped($/;"	f
Cudd_bddSqueeze	lib/CUDD/cuddGenCof.c	/^Cudd_bddSqueeze($/;"	f
Cudd_bddSwapVariables	lib/CUDD/cuddCompose.c	/^Cudd_bddSwapVariables($/;"	f
Cudd_bddTransfer	lib/CUDD/cuddBridge.c	/^Cudd_bddTransfer($/;"	f
Cudd_bddUnbindVar	lib/CUDD/cuddAPI.c	/^Cudd_bddUnbindVar($/;"	f
Cudd_bddUnivAbstract	lib/CUDD/cuddBddAbs.c	/^Cudd_bddUnivAbstract($/;"	f
Cudd_bddVarConjDecomp	lib/CUDD/cuddDecomp.c	/^Cudd_bddVarConjDecomp($/;"	f
Cudd_bddVarDisjDecomp	lib/CUDD/cuddDecomp.c	/^Cudd_bddVarDisjDecomp($/;"	f
Cudd_bddVarIsBound	lib/CUDD/cuddAPI.c	/^Cudd_bddVarIsBound($/;"	f
Cudd_bddVarIsDependent	lib/CUDD/cuddBddAbs.c	/^Cudd_bddVarIsDependent($/;"	f
Cudd_bddVarMap	lib/CUDD/cuddCompose.c	/^Cudd_bddVarMap($/;"	f
Cudd_bddVectorCompose	lib/CUDD/cuddCompose.c	/^Cudd_bddVectorCompose($/;"	f
Cudd_bddXnor	lib/CUDD/cuddBddIte.c	/^Cudd_bddXnor($/;"	f
Cudd_bddXnorLimit	lib/CUDD/cuddBddIte.c	/^Cudd_bddXnorLimit($/;"	f
Cudd_bddXor	lib/CUDD/cuddBddIte.c	/^Cudd_bddXor($/;"	f
Cudd_bddXorExistAbstract	lib/CUDD/cuddBddAbs.c	/^Cudd_bddXorExistAbstract($/;"	f
Cudd_tlcInfoFree	lib/CUDD/cuddEssent.c	/^Cudd_tlcInfoFree($/;"	f
Cudd_zddChange	lib/CUDD/cuddZddSetop.c	/^Cudd_zddChange($/;"	f
Cudd_zddComplement	lib/CUDD/cuddZddFuncs.c	/^Cudd_zddComplement($/;"	f
Cudd_zddCount	lib/CUDD/cuddZddCount.c	/^Cudd_zddCount($/;"	f
Cudd_zddCountDouble	lib/CUDD/cuddZddCount.c	/^Cudd_zddCountDouble($/;"	f
Cudd_zddCountMinterm	lib/CUDD/cuddZddMisc.c	/^Cudd_zddCountMinterm($/;"	f
Cudd_zddCoverPathToString	lib/CUDD/cuddZddUtil.c	/^Cudd_zddCoverPathToString($/;"	f
Cudd_zddDagSize	lib/CUDD/cuddZddMisc.c	/^Cudd_zddDagSize($/;"	f
Cudd_zddDiff	lib/CUDD/cuddZddSetop.c	/^Cudd_zddDiff($/;"	f
Cudd_zddDiffConst	lib/CUDD/cuddZddSetop.c	/^Cudd_zddDiffConst($/;"	f
Cudd_zddDivide	lib/CUDD/cuddZddFuncs.c	/^Cudd_zddDivide($/;"	f
Cudd_zddDivideF	lib/CUDD/cuddZddFuncs.c	/^Cudd_zddDivideF($/;"	f
Cudd_zddDumpDot	lib/CUDD/cuddZddUtil.c	/^Cudd_zddDumpDot($/;"	f
Cudd_zddFirstPath	lib/CUDD/cuddZddUtil.c	/^Cudd_zddFirstPath($/;"	f
Cudd_zddForeachPath	include/CUDD/cudd.h	606;"	d
Cudd_zddIntersect	lib/CUDD/cuddZddSetop.c	/^Cudd_zddIntersect($/;"	f
Cudd_zddIsop	lib/CUDD/cuddZddIsop.c	/^Cudd_zddIsop($/;"	f
Cudd_zddIte	lib/CUDD/cuddZddSetop.c	/^Cudd_zddIte($/;"	f
Cudd_zddIthVar	lib/CUDD/cuddAPI.c	/^Cudd_zddIthVar($/;"	f
Cudd_zddNextPath	lib/CUDD/cuddZddUtil.c	/^Cudd_zddNextPath($/;"	f
Cudd_zddPortFromBdd	lib/CUDD/cuddZddPort.c	/^Cudd_zddPortFromBdd($/;"	f
Cudd_zddPortToBdd	lib/CUDD/cuddZddPort.c	/^Cudd_zddPortToBdd($/;"	f
Cudd_zddPrintCover	lib/CUDD/cuddZddUtil.c	/^Cudd_zddPrintCover($/;"	f
Cudd_zddPrintDebug	lib/CUDD/cuddZddUtil.c	/^Cudd_zddPrintDebug($/;"	f
Cudd_zddPrintMinterm	lib/CUDD/cuddZddUtil.c	/^Cudd_zddPrintMinterm($/;"	f
Cudd_zddPrintSubtable	lib/CUDD/cuddZddMisc.c	/^Cudd_zddPrintSubtable($/;"	f
Cudd_zddProduct	lib/CUDD/cuddZddFuncs.c	/^Cudd_zddProduct($/;"	f
Cudd_zddReadNodeCount	lib/CUDD/cuddAPI.c	/^Cudd_zddReadNodeCount($/;"	f
Cudd_zddRealignDisable	lib/CUDD/cuddAPI.c	/^Cudd_zddRealignDisable($/;"	f
Cudd_zddRealignEnable	lib/CUDD/cuddAPI.c	/^Cudd_zddRealignEnable($/;"	f
Cudd_zddRealignmentEnabled	lib/CUDD/cuddAPI.c	/^Cudd_zddRealignmentEnabled($/;"	f
Cudd_zddReduceHeap	lib/CUDD/cuddZddReord.c	/^Cudd_zddReduceHeap($/;"	f
Cudd_zddShuffleHeap	lib/CUDD/cuddZddReord.c	/^Cudd_zddShuffleHeap($/;"	f
Cudd_zddSubset0	lib/CUDD/cuddZddSetop.c	/^Cudd_zddSubset0($/;"	f
Cudd_zddSubset1	lib/CUDD/cuddZddSetop.c	/^Cudd_zddSubset1($/;"	f
Cudd_zddSupport	lib/CUDD/cuddZddUtil.c	/^Cudd_zddSupport($/;"	f
Cudd_zddSymmProfile	lib/CUDD/cuddZddSymm.c	/^Cudd_zddSymmProfile($/;"	f
Cudd_zddUnateProduct	lib/CUDD/cuddZddFuncs.c	/^Cudd_zddUnateProduct($/;"	f
Cudd_zddUnion	lib/CUDD/cuddZddSetop.c	/^Cudd_zddUnion($/;"	f
Cudd_zddVarsFromBddVars	lib/CUDD/cuddAPI.c	/^Cudd_zddVarsFromBddVars($/;"	f
Cudd_zddWeakDiv	lib/CUDD/cuddZddFuncs.c	/^Cudd_zddWeakDiv($/;"	f
Cudd_zddWeakDivF	lib/CUDD/cuddZddFuncs.c	/^Cudd_zddWeakDivF($/;"	f
CurTy	include/Util/GEPTypeBridgeIterator.h	/^    PointerIntPair<Type *,1> CurTy;$/;"	m	class:llvm::generic_bridge_gep_type_iterator
CxtDPItem	include/Util/DPItem.h	/^    CxtDPItem(NodeID c, const ContextCond& cxt) : DPItem(c),context(cxt) {$/;"	f	class:CxtDPItem
CxtDPItem	include/Util/DPItem.h	/^    CxtDPItem(const CxtDPItem& dps) :$/;"	f	class:CxtDPItem
CxtDPItem	include/Util/DPItem.h	/^    CxtDPItem(const CxtVar& var) : DPItem(var.get_id()),context(var.get_cond()) {$/;"	f	class:CxtDPItem
CxtDPItem	include/Util/DPItem.h	/^class CxtDPItem : public DPItem {$/;"	c
CxtProc	include/Util/CxtStmt.h	/^    CxtProc(const CallStrCxt& c, const Function* f) :$/;"	f	class:CxtProc
CxtProc	include/Util/CxtStmt.h	/^    CxtProc(const CxtProc& ctm) :$/;"	f	class:CxtProc
CxtProc	include/Util/CxtStmt.h	/^class CxtProc {$/;"	c
CxtPtSet	include/Util/DPItem.h	/^typedef CondStdSet<CxtVar> CxtPtSet;$/;"	t
CxtStmt	include/Util/CxtStmt.h	/^    CxtStmt(const CallStrCxt& c, const Instruction* f) :cxt(c), inst(f) {$/;"	f	class:CxtStmt
CxtStmt	include/Util/CxtStmt.h	/^    CxtStmt(const CxtStmt& ctm) : cxt(ctm.getContext()),inst(ctm.getStmt()) {$/;"	f	class:CxtStmt
CxtStmt	include/Util/CxtStmt.h	/^class CxtStmt  {$/;"	c
CxtStmtDPItem	include/Util/DPItem.h	/^    CxtStmtDPItem(const CxtStmtDPItem<LocCond>& dps) :$/;"	f	class:CxtStmtDPItem
CxtStmtDPItem	include/Util/DPItem.h	/^    CxtStmtDPItem(const CxtVar& var, const LocCond* locCond) : StmtDPItem<LocCond>(var.get_id(),locCond), context(var.get_cond()) {$/;"	f	class:CxtStmtDPItem
CxtStmtDPItem	include/Util/DPItem.h	/^class CxtStmtDPItem : public StmtDPItem<LocCond> {$/;"	c
CxtThread	include/Util/CxtStmt.h	/^    CxtThread(const CallStrCxt& c, const CallInst* fork) : cxt(c), forksite(fork), inloop(false), incycle(false)  {$/;"	f	class:CxtThread
CxtThread	include/Util/CxtStmt.h	/^    CxtThread(const CxtThread& ct) :$/;"	f	class:CxtThread
CxtThread	include/Util/CxtStmt.h	/^class CxtThread {$/;"	c
CxtThreadProc	include/Util/CxtStmt.h	/^    CxtThreadProc(NodeID t, const CallStrCxt& c, const Function* f) :CxtProc(c,f),tid(t) {$/;"	f	class:CxtThreadProc
CxtThreadProc	include/Util/CxtStmt.h	/^    CxtThreadProc(const CxtThreadProc& ctm) : CxtProc(ctm.getContext(),ctm.getProc()), tid(ctm.getTid()) {$/;"	f	class:CxtThreadProc
CxtThreadProc	include/Util/CxtStmt.h	/^class CxtThreadProc : public CxtProc {$/;"	c
CxtThreadStmt	include/Util/CxtStmt.h	/^    CxtThreadStmt(NodeID t, const CallStrCxt& c, const Instruction* f) :CxtStmt(c,f), tid(t) {$/;"	f	class:CxtThreadStmt
CxtThreadStmt	include/Util/CxtStmt.h	/^    CxtThreadStmt(const CxtThreadStmt& ctm) :CxtStmt(ctm), tid(ctm.getTid()) {$/;"	f	class:CxtThreadStmt
CxtThreadStmt	include/Util/CxtStmt.h	/^class CxtThreadStmt : public CxtStmt {$/;"	c
CxtVar	include/Util/DPItem.h	/^typedef CondVar<ContextCond> CxtVar;$/;"	t
Cxt_DDA	include/MemoryModel/PointerAnalysis.h	/^        Cxt_DDA,		\/\/\/< context sensitive DDA$/;"	e	enum:PointerAnalysis::PTATY
DABC	lib/CUDD/cuddWindow.c	671;"	d	file:
DACB	lib/CUDD/cuddWindow.c	664;"	d	file:
DATAFLOWUTIL_H_	include/Util/DataFlowUtil.h	31;"	d
DAndersen	include/Util/BasicTypes.h	122;"	d
DBAC	lib/CUDD/cuddWindow.c	678;"	d	file:
DBCA	lib/CUDD/cuddWindow.c	699;"	d	file:
DBL_MAX_EXP	lib/CUDD/cuddApprox.c	81;"	d	file:
DBL_MAX_EXP	lib/CUDD/cuddSubsetHB.c	74;"	d	file:
DBOUT	include/Util/BasicTypes.h	104;"	d
DCAB	lib/CUDD/cuddWindow.c	713;"	d	file:
DCBA	lib/CUDD/cuddWindow.c	706;"	d	file:
DCHA	include/Util/BasicTypes.h	125;"	d
DCOMModel	include/Util/BasicTypes.h	114;"	d
DCache	include/Util/BasicTypes.h	118;"	d
DDDA	include/Util/BasicTypes.h	115;"	d
DDDMP_ABSOLUTE_ID	include/CUDD/dddmpInt.h	52;"	d
DDDMP_ADD	include/CUDD/dddmp.h	/^  DDDMP_ADD,$/;"	e	enum:__anon8
DDDMP_ALLOC	include/CUDD/dddmpInt.h	139;"	d
DDDMP_ALLOC	include/CUDD/dddmpInt.h	141;"	d
DDDMP_BDD	include/CUDD/dddmp.h	/^  DDDMP_BDD,$/;"	e	enum:__anon8
DDDMP_CNF	include/CUDD/dddmp.h	/^  DDDMP_CNF,$/;"	e	enum:__anon8
DDDMP_CNF_MODE_BEST	include/CUDD/dddmp.h	/^  DDDMP_CNF_MODE_BEST$/;"	e	enum:__anon6
DDDMP_CNF_MODE_CONJ_QUANT	include/CUDD/dddmp.h	/^  DDDMP_CNF_MODE_CONJ_QUANT$/;"	e	enum:__anon7
DDDMP_CNF_MODE_MAXTERM	include/CUDD/dddmp.h	/^  DDDMP_CNF_MODE_MAXTERM,$/;"	e	enum:__anon6
DDDMP_CNF_MODE_NODE	include/CUDD/dddmp.h	/^  DDDMP_CNF_MODE_NODE,$/;"	e	enum:__anon6
DDDMP_CNF_MODE_NO_CONJ	include/CUDD/dddmp.h	/^  DDDMP_CNF_MODE_NO_CONJ,$/;"	e	enum:__anon7
DDDMP_CNF_MODE_NO_QUANT	include/CUDD/dddmp.h	/^  DDDMP_CNF_MODE_NO_QUANT,$/;"	e	enum:__anon7
DDDMP_DEBUG_CNF	lib/CUDD/dddmpLoadCnf.c	36;"	d	file:
DDDMP_DEBUG_CNF	lib/CUDD/dddmpNodeCnf.c	45;"	d	file:
DDDMP_DEBUG_CNF	lib/CUDD/dddmpStoreCnf.c	43;"	d	file:
DDDMP_FAILURE	include/CUDD/dddmp.h	61;"	d
DDDMP_FREE	include/CUDD/dddmpInt.h	158;"	d
DDDMP_FREE	include/CUDD/dddmpInt.h	160;"	d
DDDMP_MAXSTRLEN	include/CUDD/dddmpInt.h	56;"	d
DDDMP_MAX_CNF_ROW_LENGTH	lib/CUDD/dddmpLoadCnf.c	35;"	d	file:
DDDMP_MODE_BINARY	include/CUDD/dddmp.h	69;"	d
DDDMP_MODE_DEFAULT	include/CUDD/dddmp.h	70;"	d
DDDMP_MODE_TEXT	include/CUDD/dddmp.h	68;"	d
DDDMP_NONE	include/CUDD/dddmp.h	/^  DDDMP_NONE$/;"	e	enum:__anon8
DDDMP_RELATIVE_1	include/CUDD/dddmpInt.h	54;"	d
DDDMP_RELATIVE_ID	include/CUDD/dddmpInt.h	53;"	d
DDDMP_ROOT_MATCHLIST	include/CUDD/dddmp.h	/^  DDDMP_ROOT_MATCHLIST$/;"	e	enum:__anon11
DDDMP_ROOT_MATCHNAMES	include/CUDD/dddmp.h	/^  DDDMP_ROOT_MATCHNAMES,$/;"	e	enum:__anon11
DDDMP_SUCCESS	include/CUDD/dddmp.h	62;"	d
DDDMP_TERMINAL	include/CUDD/dddmpInt.h	51;"	d
DDDMP_VARAUXIDS	include/CUDD/dddmp.h	/^  DDDMP_VARAUXIDS,$/;"	e	enum:__anon9
DDDMP_VARDEFAULT	include/CUDD/dddmp.h	/^  DDDMP_VARDEFAULT$/;"	e	enum:__anon9
DDDMP_VARIDS	include/CUDD/dddmp.h	/^  DDDMP_VARIDS,$/;"	e	enum:__anon9
DDDMP_VARNAMES	include/CUDD/dddmp.h	/^  DDDMP_VARNAMES,$/;"	e	enum:__anon9
DDDMP_VARPERMIDS	include/CUDD/dddmp.h	/^  DDDMP_VARPERMIDS,$/;"	e	enum:__anon9
DDDMP_VAR_COMPOSEIDS	include/CUDD/dddmp.h	/^  DDDMP_VAR_COMPOSEIDS$/;"	e	enum:__anon10
DDDMP_VAR_MATCHAUXIDS	include/CUDD/dddmp.h	/^  DDDMP_VAR_MATCHAUXIDS,$/;"	e	enum:__anon10
DDDMP_VAR_MATCHIDS	include/CUDD/dddmp.h	/^  DDDMP_VAR_MATCHIDS,$/;"	e	enum:__anon10
DDDMP_VAR_MATCHNAMES	include/CUDD/dddmp.h	/^  DDDMP_VAR_MATCHNAMES,$/;"	e	enum:__anon10
DDDMP_VAR_MATCHPERMIDS	include/CUDD/dddmp.h	/^  DDDMP_VAR_MATCHPERMIDS,$/;"	e	enum:__anon10
DDDMP_VERSION	include/CUDD/dddmp.h	55;"	d
DD_ADD_BDD_DO_INTERVAL_TAG	include/CUDD/cuddInt.h	177;"	d
DD_ADD_COMPOSE_RECUR_TAG	include/CUDD/cuddInt.h	181;"	d
DD_ADD_EVAL_CONST_TAG	include/CUDD/cuddInt.h	186;"	d
DD_ADD_ITE_CONSTANT_TAG	include/CUDD/cuddInt.h	185;"	d
DD_ADD_ITE_TAG	include/CUDD/cuddInt.h	173;"	d
DD_ADD_NON_SIM_COMPOSE_TAG	include/CUDD/cuddInt.h	182;"	d
DD_ADD_OUT_SUM_TAG	include/CUDD/cuddInt.h	188;"	d
DD_ADD_TRIANGLE_TAG	include/CUDD/cuddInt.h	190;"	d
DD_AOP	include/CUDD/cudd.h	/^typedef DdNode * (*DD_AOP)(DdManager *, DdNode **, DdNode **);$/;"	t
DD_APA_BASE	include/CUDD/cudd.h	122;"	d
DD_APA_BASE	include/CUDD/cudd.h	126;"	d
DD_APA_BITS	include/CUDD/cudd.h	121;"	d
DD_APA_BITS	include/CUDD/cudd.h	125;"	d
DD_APA_HEXPRINT	include/CUDD/cudd.h	123;"	d
DD_APA_HEXPRINT	include/CUDD/cudd.h	127;"	d
DD_APA_MASK	include/CUDD/cudd.h	129;"	d
DD_BDD_AND_ABSTRACT_TAG	include/CUDD/cuddInt.h	174;"	d
DD_BDD_CLIPPING_AND_ABSTRACT_DOWN_TAG	include/CUDD/cuddInt.h	179;"	d
DD_BDD_CLIPPING_AND_ABSTRACT_UP_TAG	include/CUDD/cuddInt.h	178;"	d
DD_BDD_COMPOSE_RECUR_TAG	include/CUDD/cuddInt.h	180;"	d
DD_BDD_ITE_CONSTANT_TAG	include/CUDD/cuddInt.h	187;"	d
DD_BDD_ITE_TAG	include/CUDD/cuddInt.h	176;"	d
DD_BDD_LEQ_UNLESS_TAG	include/CUDD/cuddInt.h	189;"	d
DD_BDD_MAX_EXP_TAG	include/CUDD/cuddInt.h	191;"	d
DD_BDD_XOR_EXIST_ABSTRACT_TAG	include/CUDD/cuddInt.h	175;"	d
DD_BIGGY	lib/CUDD/cuddSat.c	82;"	d	file:
DD_BLACK	lib/CUDD/cuddTable.c	96;"	d	file:
DD_CHKFP	lib/CUDD/cuddGroup.c	/^    typedef int (*DD_CHKFP)(DdManager *, int, int);$/;"	t	file:
DD_COLOR	lib/CUDD/cuddTable.c	134;"	d	file:
DD_CRI_HI_MARK	include/CUDD/cuddInt.h	119;"	d
DD_CRI_LO_MARK	include/CUDD/cuddInt.h	120;"	d
DD_CTFP	include/CUDD/cudd.h	/^typedef DdNode * (*DD_CTFP)(DdManager *, DdNode *, DdNode *);$/;"	t
DD_CTFP1	include/CUDD/cudd.h	/^typedef DdNode * (*DD_CTFP1)(DdManager *, DdNode *);$/;"	t
DD_DEBUG	lib/CUDD/cuddPriority.c	84;"	d	file:
DD_DEFAULT_RECOMB	include/CUDD/cuddInt.h	150;"	d
DD_DEFAULT_RESIZE	include/CUDD/cuddInt.h	103;"	d
DD_DYN_RATIO	include/CUDD/cuddInt.h	153;"	d
DD_EPSILON	include/CUDD/cuddInt.h	110;"	d
DD_EQUIV_DC_TAG	include/CUDD/cuddInt.h	183;"	d
DD_FIRST_REORDER	include/CUDD/cuddInt.h	152;"	d
DD_GC_FRAC_HI	include/CUDD/cuddInt.h	135;"	d
DD_GC_FRAC_LO	include/CUDD/cuddInt.h	134;"	d
DD_GC_FRAC_MIN	include/CUDD/cuddInt.h	136;"	d
DD_HFP	include/CUDD/cudd.h	/^typedef int (*DD_HFP)(DdManager *, const char *, void *);$/;"	t
DD_HYSTO_BINS	lib/CUDD/cuddCache.c	74;"	d	file:
DD_HYSTO_BINS	lib/CUDD/cuddLCache.c	439;"	d	file:
DD_INLINE	include/CUDD/cuddInt.h	81;"	d
DD_INLINE	include/CUDD/cuddInt.h	89;"	d
DD_INLINE	include/CUDD/cuddInt.h	91;"	d
DD_INSERT_COMPARE	lib/CUDD/cuddTable.c	132;"	d	file:
DD_IS_BLACK	lib/CUDD/cuddTable.c	135;"	d	file:
DD_IS_RED	lib/CUDD/cuddTable.c	136;"	d	file:
DD_LAZY_SIFT	lib/CUDD/cuddGroup.c	89;"	d	file:
DD_LEFT	lib/CUDD/cuddTable.c	137;"	d	file:
DD_LIC_0	lib/CUDD/cuddGenCof.c	95;"	d	file:
DD_LIC_1	lib/CUDD/cuddGenCof.c	94;"	d	file:
DD_LIC_DC	lib/CUDD/cuddGenCof.c	93;"	d	file:
DD_LIC_NL	lib/CUDD/cuddGenCof.c	96;"	d	file:
DD_LSDIGIT	include/CUDD/cuddInt.h	948;"	d
DD_MAOP	include/CUDD/cudd.h	/^typedef DdNode * (*DD_MAOP)(DdManager *, DdNode *);$/;"	t
DD_MAXREF	include/CUDD/cuddInt.h	101;"	d
DD_MAX_CACHE_FRACTION	include/CUDD/cuddInt.h	141;"	d
DD_MAX_CACHE_TO_SLOTS_RATIO	include/CUDD/cuddInt.h	145;"	d
DD_MAX_HASHTABLE_DENSITY	lib/CUDD/cuddLCache.c	85;"	d	file:
DD_MAX_LOOSE_FRACTION	include/CUDD/cuddInt.h	139;"	d
DD_MAX_REORDER_GROWTH	include/CUDD/cuddInt.h	151;"	d
DD_MAX_SUBTABLE_DENSITY	include/CUDD/cuddInt.h	127;"	d
DD_MAX_SUBTABLE_SPARSITY	lib/CUDD/cuddReorder.c	82;"	d	file:
DD_MAX_SUBTABLE_SPARSITY	lib/CUDD/cuddZddReord.c	83;"	d	file:
DD_MEM_CHUNK	include/CUDD/cuddInt.h	105;"	d
DD_MINUS_INFINITY	include/CUDD/cuddInt.h	908;"	d
DD_MINUS_INF_VAL	include/CUDD/cuddInt.h	122;"	d
DD_MIN_HIT	include/CUDD/cuddInt.h	137;"	d
DD_MSDIGIT	include/CUDD/cuddInt.h	963;"	d
DD_NEXT	lib/CUDD/cuddTable.c	139;"	d	file:
DD_NON_CONSTANT	include/CUDD/cuddInt.h	124;"	d
DD_NORMAL_SIFT	lib/CUDD/cuddGroup.c	88;"	d	file:
DD_ONE	include/CUDD/cuddInt.h	864;"	d
DD_ONE_VAL	include/CUDD/cuddInt.h	108;"	d
DD_OOMFP	include/CUDD/cudd.h	/^typedef void (*DD_OOMFP)(long);$/;"	t
DD_P1	include/CUDD/cuddInt.h	156;"	d
DD_P2	include/CUDD/cuddInt.h	157;"	d
DD_P3	include/CUDD/cuddInt.h	158;"	d
DD_P4	include/CUDD/cuddInt.h	159;"	d
DD_PAGE_MASK	lib/CUDD/cuddTable.c	98;"	d	file:
DD_PAGE_SIZE	lib/CUDD/cuddTable.c	97;"	d	file:
DD_PLUS_INFINITY	include/CUDD/cuddInt.h	894;"	d
DD_PLUS_INF_VAL	include/CUDD/cuddInt.h	116;"	d
DD_PLUS_INF_VAL	include/CUDD/cuddInt.h	118;"	d
DD_PRFP	include/CUDD/cudd.h	/^typedef DdNode * (*DD_PRFP)(DdManager * , int, DdNode **, DdNode **,$/;"	t
DD_QSFP	include/CUDD/cudd.h	/^typedef int (*DD_QSFP)(const void *, const void *);$/;"	t
DD_RED	lib/CUDD/cuddTable.c	95;"	d	file:
DD_RIGHT	lib/CUDD/cuddTable.c	138;"	d	file:
DD_SHRINK_FACTOR	lib/CUDD/cuddReorder.c	83;"	d	file:
DD_SHRINK_FACTOR	lib/CUDD/cuddZddReord.c	84;"	d	file:
DD_SIFT_DOWN	lib/CUDD/cuddGroup.c	92;"	d	file:
DD_SIFT_MAX_SWAPS	include/CUDD/cuddInt.h	149;"	d
DD_SIFT_MAX_VAR	include/CUDD/cuddInt.h	148;"	d
DD_SIFT_UP	lib/CUDD/cuddGroup.c	93;"	d	file:
DD_STACK_SIZE	lib/CUDD/cuddTable.c	94;"	d	file:
DD_STASH_FRACTION	include/CUDD/cuddInt.h	143;"	d
DD_UNUSED	include/CUDD/cuddInt.h	83;"	d
DD_UNUSED	include/CUDD/cuddInt.h	85;"	d
DD_UNUSED	include/CUDD/cuddInt.h	93;"	d
DD_UNUSED	lib/CUDD/cuddAPI.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddAPI.c,v 1.64 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddAddAbs.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddAddAbs.c,v 1.16 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddAddApply.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddAddApply.c,v 1.19 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddAddFind.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddAddFind.c,v 1.9 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddAddInv.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddAddInv.c,v 1.10 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddAddIte.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddAddIte.c,v 1.16 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddAddNeg.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddAddNeg.c,v 1.14 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddAddWalsh.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddAddWalsh.c,v 1.11 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddAndAbs.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddAndAbs.c,v 1.20 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddAnneal.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddAnneal.c,v 1.15 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddApa.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddApa.c,v 1.20 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddApprox.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddApprox.c,v 1.31 2012\/02\/05 04:38:07 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddBddAbs.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddBddAbs.c,v 1.28 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddBddCorr.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddBddCorr.c,v 1.15 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddBddIte.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddBddIte.c,v 1.26 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddBridge.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddBridge.c,v 1.20 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddCache.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddCache.c,v 1.36 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddCheck.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddCheck.c,v 1.37 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddClip.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddClip.c,v 1.9 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddCof.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddCof.c,v 1.11 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddCompose.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddCompose.c,v 1.46 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddDecomp.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddDecomp.c,v 1.45 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddEssent.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddEssent.c,v 1.25 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddExact.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddExact.c,v 1.30 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddExport.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddExport.c,v 1.23 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddGenCof.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddGenCof.c,v 1.40 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddGenetic.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddGenetic.c,v 1.30 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddGroup.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddGroup.c,v 1.49 2012\/02\/05 01:07:18 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddHarwell.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddHarwell.c,v 1.10 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddInit.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddInit.c,v 1.34 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddInteract.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddInteract.c,v 1.14 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddLCache.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddLCache.c,v 1.27 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddLevelQ.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddLevelQ.c,v 1.16 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddLinear.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddLinear.c,v 1.29 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddLiteral.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddLiteral.c,v 1.9 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddMatMult.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddMatMult.c,v 1.18 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddPriority.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddPriority.c,v 1.36 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddRead.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddRead.c,v 1.7 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddRef.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddRef.c,v 1.29 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddReorder.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddReorder.c,v 1.71 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddSat.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddSat.c,v 1.39 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddSign.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddSign.c,v 1.24 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddSolve.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddSolve.c,v 1.13 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddSubsetHB.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddSubsetHB.c,v 1.39 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddSubsetSP.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddSubsetSP.c,v 1.36 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddSymmetry.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddSymmetry.c,v 1.28 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddTable.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddTable.c,v 1.126 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddUtil.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddUtil.c,v 1.83 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddWindow.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddWindow.c,v 1.15 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddZddCount.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddZddCount.c,v 1.15 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddZddFuncs.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddZddFuncs.c,v 1.17 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddZddGroup.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddZddGroup.c,v 1.22 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddZddIsop.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddZddIsop.c,v 1.22 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddZddLin.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddZddLin.c,v 1.16 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddZddMisc.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddZddMisc.c,v 1.18 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddZddPort.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddZddPort.c,v 1.14 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddZddReord.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddZddReord.c,v 1.49 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddZddSetop.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddZddSetop.c,v 1.26 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddZddSymm.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddZddSymm.c,v 1.31 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_UNUSED	lib/CUDD/cuddZddUtil.c	/^static char rcsid[] DD_UNUSED = "$Id: cuddZddUtil.c,v 1.29 2012\/02\/05 01:07:19 fabio Exp $";$/;"	v	file:
DD_ZDD_ITE_TAG	include/CUDD/cuddInt.h	184;"	d
DD_ZERO	include/CUDD/cuddInt.h	880;"	d
DD_ZERO_VAL	include/CUDD/cuddInt.h	109;"	d
DDumpPT	include/Util/BasicTypes.h	116;"	d
DEBUG_TYPE	lib/Util/BreakConstantExpr.cpp	43;"	d	file:
DEC	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	472;"	d	file:
DEC	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	457;"	d	file:
DEFAULT_NODE_DATA_PAGE_SIZE	lib/CUDD/cuddSubsetHB.c	84;"	d	file:
DEFAULT_NODE_DIST_PAGE_SIZE	lib/CUDD/cuddSubsetSP.c	79;"	d	file:
DEFAULT_PAGE_SIZE	lib/CUDD/cuddSubsetHB.c	83;"	d	file:
DEFAULT_PAGE_SIZE	lib/CUDD/cuddSubsetSP.c	78;"	d	file:
DEFTYPE	include/MSSA/MSSAMuChi.h	/^    enum DEFTYPE {$/;"	g	class:MSSADEF
DEPTH	lib/CUDD/cuddDecomp.c	70;"	d	file:
DESTRUCTOR	include/MemoryModel/CHA.h	/^        DESTRUCTOR = 0x2 \/\/ connect node based on destructor$/;"	e	enum:CHGraph::__anon4
DF	include/Util/DataFlowUtil.h	/^    const DominanceFrontier *DF;$/;"	m	class:IteratedDominanceFrontier
DFInOutMap	include/WPA/FlowSensitive.h	/^    typedef BVDataPTAImpl::IncDFPTDataTy::DFPtsMap DFInOutMap;$/;"	t	class:FlowSensitive
DFInOutMap	include/WPA/WPAStat.h	/^    typedef FlowSensitive::DFInOutMap DFInOutMap;$/;"	t	class:FlowSensitiveStat
DFPTD	include/MemoryModel/PointsToDS.h	/^        DFPTD,$/;"	e	enum:PTData::PTDataTY
DFPTData	include/MemoryModel/PointsToDFDS.h	/^    DFPTData(PTDataTy ty = (PTData<Key,Data>::DFPTD)): PTData<Key,Data>(ty) {$/;"	f	class:DFPTData
DFPTData	include/MemoryModel/PointsToDFDS.h	/^class DFPTData : public PTData<Key,Data> {$/;"	c
DFPTDataTy	include/MemoryModel/PointerAnalysis.h	/^    typedef DFPTData<NodeID,PointsTo> DFPTDataTy;	\/\/\/ Points-to data structure type$/;"	t	class:BVDataPTAImpl
DFPtsMap	include/MemoryModel/PointsToDFDS.h	/^    typedef std::map<LocID, PtsMap> DFPtsMap;	\/\/\/< Data-flow point-to map$/;"	t	class:DFPTData
DFPtsMapIter	include/MemoryModel/PointsToDFDS.h	/^    typedef typename DFPtsMap::iterator DFPtsMapIter;$/;"	t	class:DFPTData
DFPtsMapconstIter	include/MemoryModel/PointsToDFDS.h	/^    typedef typename DFPtsMap::const_iterator DFPtsMapconstIter;$/;"	t	class:DFPTData
DGENERAL	include/Util/BasicTypes.h	109;"	d
DIBasicType	include/Util/BasicTypes.h	/^typedef llvm::DIBasicType DIBasicType;$/;"	t
DICompositeType	include/Util/BasicTypes.h	/^typedef llvm::DICompositeType DICompositeType;$/;"	t
DIDerivedType	include/Util/BasicTypes.h	/^typedef llvm::DIDerivedType DIDerivedType;$/;"	t
DIRS	lib/Makefile	/^DIRS=CUDD Util MemoryModel MSSA WPA SABER MTA$/;"	m
DIRS	tools/Makefile	/^DIRS= DisPatch$/;"	m
DISNCTMRGENERATOR_H_	include/MSSA/MemPartition.h	37;"	d
DISPATCH_H_	include/DisPatch/DisPatch.h	2;"	d
DISubprogram	include/Util/BasicTypes.h	/^typedef llvm::DISubprogram DISubprogram;$/;"	t
DISubroutineType	include/Util/BasicTypes.h	/^typedef llvm::DISubroutineType DISubroutineType;$/;"	t
DIType	include/Util/BasicTypes.h	/^typedef llvm::DIType DIType;$/;"	t
DInstrument	include/Util/BasicTypes.h	121;"	d
DMSSA	include/Util/BasicTypes.h	120;"	d
DMTA	include/Util/BasicTypes.h	124;"	d
DMemModel	include/Util/BasicTypes.h	112;"	d
DMemModelCE	include/Util/BasicTypes.h	113;"	d
DONT_CARE	lib/CUDD/cuddApprox.c	97;"	d	file:
DOSTAT	include/Util/BasicTypes.h	105;"	d
DOTGraphTraits	lib/MSSA/SVFG.cpp	/^    DOTGraphTraits(bool isSimple = false) :$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	lib/MSSA/SVFG.cpp	/^struct DOTGraphTraits<SVFG*> : public DOTGraphTraits<PAG*> {$/;"	s	namespace:llvm	file:
DOTGraphTraits	lib/MemoryModel/CHA.cpp	/^    DOTGraphTraits(bool isSimple = false) :$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	lib/MemoryModel/CHA.cpp	/^struct DOTGraphTraits<CHGraph*> : public DefaultDOTGraphTraits {$/;"	s	namespace:llvm	file:
DOTGraphTraits	lib/MemoryModel/ConsG.cpp	/^    DOTGraphTraits(bool isSimple = false) :$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	lib/MemoryModel/ConsG.cpp	/^struct DOTGraphTraits<ConstraintGraph*> : public DOTGraphTraits<PAG*> {$/;"	s	namespace:llvm	file:
DOTGraphTraits	lib/MemoryModel/OfflineConsG.cpp	/^        DOTGraphTraits(bool isSimple = false) :$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	lib/MemoryModel/OfflineConsG.cpp	/^    struct DOTGraphTraits<OfflineConsG*> : public DOTGraphTraits<PAG*> {$/;"	s	namespace:llvm	file:
DOTGraphTraits	lib/MemoryModel/PAG.cpp	/^    DOTGraphTraits(bool isSimple = false) :$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	lib/MemoryModel/PAG.cpp	/^struct DOTGraphTraits<PAG*> : public DefaultDOTGraphTraits {$/;"	s	namespace:llvm	file:
DOTGraphTraits	lib/Util/ICFG.cpp	/^    DOTGraphTraits(bool isSimple = false) :$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	lib/Util/ICFG.cpp	/^struct DOTGraphTraits<ICFG*> : public DOTGraphTraits<PAG*> {$/;"	s	namespace:llvm	file:
DOTGraphTraits	lib/Util/PTACallGraph.cpp	/^    DOTGraphTraits(bool isSimple = false) :$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	lib/Util/PTACallGraph.cpp	/^struct DOTGraphTraits<PTACallGraph*> : public DefaultDOTGraphTraits {$/;"	s	namespace:llvm	file:
DOTGraphTraits	lib/Util/VFG.cpp	/^    DOTGraphTraits(bool isSimple = false) :$/;"	f	struct:llvm::DOTGraphTraits
DOTGraphTraits	lib/Util/VFG.cpp	/^struct DOTGraphTraits<VFG*> : public DOTGraphTraits<PAG*> {$/;"	s	namespace:llvm	file:
DOTIMESTAT	include/Util/BasicTypes.h	106;"	d
DPAGBuild	include/Util/BasicTypes.h	111;"	d
DPITEM_H_	include/Util/DPItem.h	31;"	d
DPItem	include/Util/DPItem.h	/^    DPItem(NodeID c) : cur(c) {$/;"	f	class:DPItem
DPItem	include/Util/DPItem.h	/^    DPItem(const DPItem& dps) : cur(dps.cur) {$/;"	f	class:DPItem
DPItem	include/Util/DPItem.h	/^class DPItem {$/;"	c
DR_CHECK	include/Util/Annotator.h	/^    const char* DR_CHECK;$/;"	m	class:Annotator
DR_NOT_CHECK	include/Util/Annotator.h	/^    const char* DR_NOT_CHECK;$/;"	m	class:Annotator
DRefinePT	include/Util/BasicTypes.h	117;"	d
DSaber	include/Util/BasicTypes.h	123;"	d
DWPA	include/Util/BasicTypes.h	119;"	d
DataDeque	include/Util/WorkList.h	/^    typedef std::deque<Data> DataDeque;$/;"	t	class:FIFOWorkList
DataIter	include/MemoryModel/PointsToDFDS.h	/^    typedef typename Data::iterator DataIter;$/;"	t	class:IncDFPTData
DataLayout	include/Util/BasicTypes.h	/^typedef llvm::DataLayout DataLayout;$/;"	t
DataSet	include/Util/WorkList.h	/^    typedef std::set<Data> DataSet;$/;"	t	class:FIFOWorkList
DataSet	include/Util/WorkList.h	/^    typedef std::set<Data> DataSet;$/;"	t	class:FILOWorkList
DataSet	include/Util/WorkList.h	/^    typedef std::set<Data> DataSet;$/;"	t	class:List
DataVector	include/Util/WorkList.h	/^    typedef std::vector<Data> DataVector;$/;"	t	class:FILOWorkList
DdApaDigit	include/CUDD/cudd.h	/^typedef unsigned int DdApaDigit;$/;"	t
DdApaDigit	include/CUDD/cudd.h	/^typedef unsigned short int DdApaDigit;$/;"	t
DdApaDoubleDigit	include/CUDD/cudd.h	/^typedef unsigned int DdApaDoubleDigit;$/;"	t
DdApaDoubleDigit	include/CUDD/cudd.h	/^typedef unsigned long int DdApaDoubleDigit;$/;"	t
DdApaNumber	include/CUDD/cudd.h	/^typedef DdApaDigit * DdApaNumber;$/;"	t
DdCache	include/CUDD/cuddInt.h	/^typedef struct DdCache {$/;"	s
DdCache	include/CUDD/cuddInt.h	/^} DdCache;$/;"	t	typeref:struct:DdCache
DdChildren	include/CUDD/cudd.h	/^typedef struct DdChildren {$/;"	s
DdChildren	include/CUDD/cudd.h	/^} DdChildren;$/;"	t	typeref:struct:DdChildren
DdGen	include/CUDD/cudd.h	/^typedef struct DdGen DdGen;$/;"	t	typeref:struct:DdGen
DdGen	include/CUDD/cuddInt.h	/^struct DdGen {$/;"	s
DdHalfWord	include/CUDD/cudd.h	/^typedef unsigned int   DdHalfWord;$/;"	t
DdHalfWord	include/CUDD/cudd.h	/^typedef unsigned short DdHalfWord;$/;"	t
DdHashItem	include/CUDD/cuddInt.h	/^typedef struct DdHashItem {$/;"	s
DdHashItem	include/CUDD/cuddInt.h	/^} DdHashItem;$/;"	t	typeref:struct:DdHashItem
DdHashTable	include/CUDD/cuddInt.h	/^typedef struct DdHashTable {$/;"	s
DdHashTable	include/CUDD/cuddInt.h	/^} DdHashTable;$/;"	t	typeref:struct:DdHashTable
DdHook	include/CUDD/cuddInt.h	/^typedef struct DdHook {		\/* hook list element *\/$/;"	s
DdHook	include/CUDD/cuddInt.h	/^} DdHook;$/;"	t	typeref:struct:DdHook
DdLevelQueue	include/CUDD/cuddInt.h	/^typedef struct DdLevelQueue {$/;"	s
DdLevelQueue	include/CUDD/cuddInt.h	/^} DdLevelQueue;$/;"	t	typeref:struct:DdLevelQueue
DdLocalCache	include/CUDD/cuddInt.h	/^typedef struct DdLocalCache {$/;"	s
DdLocalCache	include/CUDD/cuddInt.h	/^} DdLocalCache;$/;"	t	typeref:struct:DdLocalCache
DdLocalCacheItem	include/CUDD/cuddInt.h	/^typedef struct DdLocalCacheItem {$/;"	s
DdLocalCacheItem	include/CUDD/cuddInt.h	/^} DdLocalCacheItem;$/;"	t	typeref:struct:DdLocalCacheItem
DdManager	include/CUDD/cudd.h	/^typedef struct DdManager DdManager;$/;"	t	typeref:struct:DdManager
DdManager	include/CUDD/cuddInt.h	/^struct DdManager {	\/* specialized DD symbol table *\/$/;"	s
DdNode	include/CUDD/cudd.h	/^struct DdNode {$/;"	s
DdNode	include/CUDD/cudd.h	/^typedef struct DdNode DdNode;$/;"	t	typeref:struct:DdNode
DdNodePtr	include/CUDD/cuddInt.h	/^typedef DdNode *DdNodePtr;$/;"	t
DdQueueItem	include/CUDD/cuddInt.h	/^typedef struct DdQueueItem {$/;"	s
DdQueueItem	include/CUDD/cuddInt.h	/^} DdQueueItem;$/;"	t	typeref:struct:DdQueueItem
DdSubtable	include/CUDD/cuddInt.h	/^typedef struct DdSubtable {	\/* subtable for one index *\/$/;"	s
DdSubtable	include/CUDD/cuddInt.h	/^} DdSubtable;$/;"	t	typeref:struct:DdSubtable
DdTlcInfo	include/CUDD/cudd.h	/^typedef struct DdTlcInfo DdTlcInfo;$/;"	t	typeref:struct:DdTlcInfo
DdTlcInfo	lib/CUDD/cuddEssent.c	/^struct DdTlcInfo {$/;"	s	file:
DddmpBddReadHeader	lib/CUDD/dddmpLoad.c	/^DddmpBddReadHeader ($/;"	f	file:
DddmpBddReadHeaderCnf	lib/CUDD/dddmpLoadCnf.c	/^DddmpBddReadHeaderCnf ($/;"	f	file:
DddmpClearVisited	lib/CUDD/dddmpDdNodeBdd.c	/^DddmpClearVisited ($/;"	f
DddmpClearVisitedAdd	lib/CUDD/dddmpNodeAdd.c	/^DddmpClearVisitedAdd ($/;"	f
DddmpClearVisitedBdd	lib/CUDD/dddmpNodeBdd.c	/^DddmpClearVisitedBdd ($/;"	f
DddmpClearVisitedCnf	lib/CUDD/dddmpNodeCnf.c	/^DddmpClearVisitedCnf ($/;"	f	file:
DddmpClearVisitedCnfRecur	lib/CUDD/dddmpNodeCnf.c	/^DddmpClearVisitedCnfRecur ($/;"	f	file:
DddmpCnfClauses2Bdd	lib/CUDD/dddmpLoadCnf.c	/^DddmpCnfClauses2Bdd ($/;"	f	file:
DddmpCuddBddArrayStore	lib/CUDD/dddmpStoreBdd.c	/^DddmpCuddBddArrayStore ($/;"	f
DddmpCuddBddArrayStoreCnf	lib/CUDD/dddmpStoreCnf.c	/^DddmpCuddBddArrayStoreCnf ($/;"	f	file:
DddmpCuddDdArrayLoad	lib/CUDD/dddmpLoad.c	/^DddmpCuddDdArrayLoad ($/;"	f	file:
DddmpCuddDdArrayLoadCnf	lib/CUDD/dddmpLoadCnf.c	/^DddmpCuddDdArrayLoadCnf ($/;"	f	file:
DddmpCuddDdArrayStoreBdd	lib/CUDD/dddmpStoreAdd.c	/^DddmpCuddDdArrayStoreBdd ($/;"	f
DddmpCuddDdArrayStoreBlif	lib/CUDD/dddmpStoreMisc.c	/^DddmpCuddDdArrayStoreBlif ($/;"	f	file:
DddmpCuddDdArrayStoreBlifBody	lib/CUDD/dddmpStoreMisc.c	/^DddmpCuddDdArrayStoreBlifBody ($/;"	f	file:
DddmpCuddDdArrayStoreBlifStep	lib/CUDD/dddmpStoreMisc.c	/^DddmpCuddDdArrayStoreBlifStep ($/;"	f	file:
DddmpCuddDdArrayStorePrefix	lib/CUDD/dddmpStoreMisc.c	/^DddmpCuddDdArrayStorePrefix ($/;"	f	file:
DddmpCuddDdArrayStorePrefixBody	lib/CUDD/dddmpStoreMisc.c	/^DddmpCuddDdArrayStorePrefixBody ($/;"	f	file:
DddmpCuddDdArrayStorePrefixStep	lib/CUDD/dddmpStoreMisc.c	/^DddmpCuddDdArrayStorePrefixStep ($/;"	f	file:
DddmpCuddDdArrayStoreSmv	lib/CUDD/dddmpStoreMisc.c	/^DddmpCuddDdArrayStoreSmv ($/;"	f	file:
DddmpCuddDdArrayStoreSmvBody	lib/CUDD/dddmpStoreMisc.c	/^DddmpCuddDdArrayStoreSmvBody ($/;"	f	file:
DddmpCuddDdArrayStoreSmvStep	lib/CUDD/dddmpStoreMisc.c	/^DddmpCuddDdArrayStoreSmvStep ($/;"	f	file:
DddmpDdNodesCheckIncomingAndScanPath	lib/CUDD/dddmpNodeCnf.c	/^DddmpDdNodesCheckIncomingAndScanPath ($/;"	f	file:
DddmpDdNodesCountEdgesAndNumber	lib/CUDD/dddmpNodeCnf.c	/^DddmpDdNodesCountEdgesAndNumber ($/;"	f
DddmpDdNodesCountEdgesRecur	lib/CUDD/dddmpNodeCnf.c	/^DddmpDdNodesCountEdgesRecur ($/;"	f	file:
DddmpDdNodesNumberEdgesRecur	lib/CUDD/dddmpNodeCnf.c	/^DddmpDdNodesNumberEdgesRecur ($/;"	f	file:
DddmpDdNodesResetCountRecur	lib/CUDD/dddmpNodeCnf.c	/^DddmpDdNodesResetCountRecur ($/;"	f	file:
DddmpFreeHeader	lib/CUDD/dddmpLoad.c	/^DddmpFreeHeader ($/;"	f	file:
DddmpFreeHeaderCnf	lib/CUDD/dddmpLoadCnf.c	/^DddmpFreeHeaderCnf ($/;"	f	file:
DddmpIntArrayDup	lib/CUDD/dddmpUtil.c	/^DddmpIntArrayDup ($/;"	f
DddmpIntArrayRead	lib/CUDD/dddmpUtil.c	/^DddmpIntArrayRead ($/;"	f
DddmpIntArrayWrite	lib/CUDD/dddmpUtil.c	/^DddmpIntArrayWrite ($/;"	f
DddmpNumberAddNodes	lib/CUDD/dddmpNodeAdd.c	/^DddmpNumberAddNodes ($/;"	f
DddmpNumberBddNodes	lib/CUDD/dddmpNodeBdd.c	/^DddmpNumberBddNodes ($/;"	f
DddmpNumberDdNodes	lib/CUDD/dddmpDdNodeBdd.c	/^DddmpNumberDdNodes ($/;"	f
DddmpNumberDdNodesCnf	lib/CUDD/dddmpNodeCnf.c	/^DddmpNumberDdNodesCnf ($/;"	f
DddmpPrintBddAndNext	lib/CUDD/dddmpNodeCnf.c	/^DddmpPrintBddAndNext ($/;"	f
DddmpPrintBddAndNextRecur	lib/CUDD/dddmpNodeCnf.c	/^DddmpPrintBddAndNextRecur ($/;"	f	file:
DddmpReadCnfClauses	lib/CUDD/dddmpLoadCnf.c	/^DddmpReadCnfClauses ($/;"	f	file:
DddmpReadCode	lib/CUDD/dddmpBinary.c	/^DddmpReadCode ($/;"	f
DddmpReadInt	lib/CUDD/dddmpBinary.c	/^DddmpReadInt ($/;"	f
DddmpReadNodeIndex	lib/CUDD/dddmpDdNodeBdd.c	/^DddmpReadNodeIndex ($/;"	f
DddmpReadNodeIndexAdd	lib/CUDD/dddmpNodeAdd.c	/^DddmpReadNodeIndexAdd ($/;"	f
DddmpReadNodeIndexBdd	lib/CUDD/dddmpNodeBdd.c	/^DddmpReadNodeIndexBdd ($/;"	f
DddmpReadNodeIndexCnf	lib/CUDD/dddmpNodeCnf.c	/^DddmpReadNodeIndexCnf ($/;"	f
DddmpSetVisited	lib/CUDD/dddmpDdNodeBdd.c	/^DddmpSetVisited ($/;"	f
DddmpSetVisitedAdd	lib/CUDD/dddmpNodeAdd.c	/^DddmpSetVisitedAdd ($/;"	f
DddmpSetVisitedBdd	lib/CUDD/dddmpNodeBdd.c	/^DddmpSetVisitedBdd ($/;"	f
DddmpSetVisitedCnf	lib/CUDD/dddmpNodeCnf.c	/^DddmpSetVisitedCnf ($/;"	f
DddmpStrArrayDup	lib/CUDD/dddmpUtil.c	/^DddmpStrArrayDup ($/;"	f
DddmpStrArrayFree	lib/CUDD/dddmpUtil.c	/^DddmpStrArrayFree ($/;"	f
DddmpStrArrayRead	lib/CUDD/dddmpUtil.c	/^DddmpStrArrayRead ($/;"	f
DddmpStrArrayWrite	lib/CUDD/dddmpUtil.c	/^DddmpStrArrayWrite ($/;"	f
DddmpStrDup	lib/CUDD/dddmpUtil.c	/^DddmpStrDup ($/;"	f
DddmpUnnumberAddNodes	lib/CUDD/dddmpNodeAdd.c	/^DddmpUnnumberAddNodes ($/;"	f
DddmpUnnumberBddNodes	lib/CUDD/dddmpNodeBdd.c	/^DddmpUnnumberBddNodes($/;"	f
DddmpUnnumberDdNodes	lib/CUDD/dddmpDdNodeBdd.c	/^DddmpUnnumberDdNodes($/;"	f
DddmpUnnumberDdNodesCnf	lib/CUDD/dddmpNodeCnf.c	/^DddmpUnnumberDdNodesCnf($/;"	f
DddmpVisited	lib/CUDD/dddmpDdNodeBdd.c	/^DddmpVisited ($/;"	f
DddmpVisitedAdd	lib/CUDD/dddmpNodeAdd.c	/^DddmpVisitedAdd ($/;"	f
DddmpVisitedBdd	lib/CUDD/dddmpNodeBdd.c	/^DddmpVisitedBdd ($/;"	f
DddmpVisitedCnf	lib/CUDD/dddmpNodeCnf.c	/^DddmpVisitedCnf ($/;"	f
DddmpWriteCode	lib/CUDD/dddmpBinary.c	/^DddmpWriteCode ($/;"	f
DddmpWriteInt	lib/CUDD/dddmpBinary.c	/^DddmpWriteInt ($/;"	f
DddmpWriteNodeIndex	lib/CUDD/dddmpDdNodeBdd.c	/^DddmpWriteNodeIndex ($/;"	f
DddmpWriteNodeIndexAdd	lib/CUDD/dddmpNodeAdd.c	/^DddmpWriteNodeIndexAdd ($/;"	f
DddmpWriteNodeIndexBdd	lib/CUDD/dddmpNodeBdd.c	/^DddmpWriteNodeIndexBdd ($/;"	f
DddmpWriteNodeIndexCnf	lib/CUDD/dddmpNodeCnf.c	/^DddmpWriteNodeIndexCnf ($/;"	f
DddmpWriteNodeIndexCnfWithTerminalCheck	lib/CUDD/dddmpNodeCnf.c	/^DddmpWriteNodeIndexCnfWithTerminalCheck ($/;"	f	file:
Dddmp_Assert	include/CUDD/dddmp.h	208;"	d
Dddmp_Assert	include/CUDD/dddmp.h	219;"	d
Dddmp_Bin2Text	lib/CUDD/dddmpConvert.c	/^Dddmp_Bin2Text ($/;"	f
Dddmp_CheckAndGotoLabel	include/CUDD/dddmp.h	283;"	d
Dddmp_CheckAndReturn	include/CUDD/dddmp.h	258;"	d
Dddmp_DecompCnfLoadType	include/CUDD/dddmp.h	/^} Dddmp_DecompCnfLoadType;$/;"	t	typeref:enum:__anon7
Dddmp_DecompCnfStoreType	include/CUDD/dddmp.h	/^} Dddmp_DecompCnfStoreType;$/;"	t	typeref:enum:__anon6
Dddmp_DecompType	include/CUDD/dddmp.h	/^} Dddmp_DecompType;$/;"	t	typeref:enum:__anon8
Dddmp_Hdr_s	include/CUDD/dddmpInt.h	/^struct Dddmp_Hdr_s {$/;"	s
Dddmp_Hdr_t	include/CUDD/dddmp.h	/^typedef struct Dddmp_Hdr_s Dddmp_Hdr_t;$/;"	t	typeref:struct:Dddmp_Hdr_s
Dddmp_RootMatchType	include/CUDD/dddmp.h	/^} Dddmp_RootMatchType;$/;"	t	typeref:enum:__anon11
Dddmp_Text2Bin	lib/CUDD/dddmpConvert.c	/^Dddmp_Text2Bin ($/;"	f
Dddmp_VarInfoType	include/CUDD/dddmp.h	/^} Dddmp_VarInfoType;$/;"	t	typeref:enum:__anon9
Dddmp_VarMatchType	include/CUDD/dddmp.h	/^} Dddmp_VarMatchType;$/;"	t	typeref:enum:__anon10
Dddmp_Warning	include/CUDD/dddmp.h	236;"	d
Dddmp_cuddAddArrayLoad	lib/CUDD/dddmpLoad.c	/^Dddmp_cuddAddArrayLoad ($/;"	f
Dddmp_cuddAddArrayStore	lib/CUDD/dddmpStoreAdd.c	/^Dddmp_cuddAddArrayStore ($/;"	f
Dddmp_cuddAddLoad	lib/CUDD/dddmpLoad.c	/^Dddmp_cuddAddLoad ($/;"	f
Dddmp_cuddAddStore	lib/CUDD/dddmpStoreAdd.c	/^Dddmp_cuddAddStore ($/;"	f
Dddmp_cuddBddArrayLoad	lib/CUDD/dddmpLoad.c	/^Dddmp_cuddBddArrayLoad ($/;"	f
Dddmp_cuddBddArrayLoadCnf	lib/CUDD/dddmpLoadCnf.c	/^Dddmp_cuddBddArrayLoadCnf ($/;"	f
Dddmp_cuddBddArrayStore	lib/CUDD/dddmpStoreBdd.c	/^Dddmp_cuddBddArrayStore ($/;"	f
Dddmp_cuddBddArrayStoreBlif	lib/CUDD/dddmpStoreMisc.c	/^Dddmp_cuddBddArrayStoreBlif ($/;"	f
Dddmp_cuddBddArrayStoreCnf	lib/CUDD/dddmpStoreCnf.c	/^Dddmp_cuddBddArrayStoreCnf ($/;"	f
Dddmp_cuddBddArrayStorePrefix	lib/CUDD/dddmpStoreMisc.c	/^Dddmp_cuddBddArrayStorePrefix ($/;"	f
Dddmp_cuddBddArrayStoreSmv	lib/CUDD/dddmpStoreMisc.c	/^Dddmp_cuddBddArrayStoreSmv ($/;"	f
Dddmp_cuddBddDisplayBinary	lib/CUDD/dddmpDbg.c	/^Dddmp_cuddBddDisplayBinary($/;"	f
Dddmp_cuddBddLoad	lib/CUDD/dddmpLoad.c	/^Dddmp_cuddBddLoad ($/;"	f
Dddmp_cuddBddLoadCnf	lib/CUDD/dddmpLoadCnf.c	/^Dddmp_cuddBddLoadCnf ($/;"	f
Dddmp_cuddBddStore	lib/CUDD/dddmpStoreBdd.c	/^Dddmp_cuddBddStore ($/;"	f
Dddmp_cuddBddStoreBlif	lib/CUDD/dddmpStoreMisc.c	/^Dddmp_cuddBddStoreBlif ($/;"	f
Dddmp_cuddBddStoreCnf	lib/CUDD/dddmpStoreCnf.c	/^Dddmp_cuddBddStoreCnf ($/;"	f
Dddmp_cuddBddStorePrefix	lib/CUDD/dddmpStoreMisc.c	/^Dddmp_cuddBddStorePrefix ($/;"	f
Dddmp_cuddBddStoreSmv	lib/CUDD/dddmpStoreMisc.c	/^Dddmp_cuddBddStoreSmv ($/;"	f
Dddmp_cuddHeaderLoad	lib/CUDD/dddmpLoad.c	/^Dddmp_cuddHeaderLoad ($/;"	f
Dddmp_cuddHeaderLoadCnf	lib/CUDD/dddmpLoadCnf.c	/^Dddmp_cuddHeaderLoadCnf ($/;"	f
DebugInfoFinder	include/Util/BasicTypes.h	/^typedef llvm::DebugInfoFinder DebugInfoFinder;$/;"	t
Default	include/MemoryModel/PointsToDS.h	/^        Default$/;"	e	enum:PTData::PTDataTY
Default_PTA	include/MemoryModel/PointerAnalysis.h	/^        Default_PTA		\/\/\/< default pta without any analysis$/;"	e	enum:PointerAnalysis::PTATY
DemangledName	include/Util/CPPUtil.h	/^struct DemangledName {$/;"	s	namespace:cppUtil
DerefEdge	include/MemoryModel/GenericGraph.h	/^    typedef std::pointer_to_unary_function<EdgeType*, NodeType*> DerefEdge;$/;"	t	struct:llvm::GraphTraits
DerefVal	include/MemoryModel/GenericGraph.h	/^    typedef std::pointer_to_unary_function<PairTy, NodeType*> DerefVal;$/;"	t	struct:llvm::GraphTraits
DiffPTD	include/MemoryModel/PointsToDS.h	/^        DiffPTD,$/;"	e	enum:PTData::PTDataTY
DiffPTData	include/MemoryModel/PointsToDS.h	/^    DiffPTData(PTDataTy ty = (PTData<Key,Data>::DiffPTD)): PTData<Key,Data>(ty) {$/;"	f	class:DiffPTData
DiffPTData	include/MemoryModel/PointsToDS.h	/^class DiffPTData : public PTData<Key,Data> {$/;"	c
DiffPTDataTy	include/MemoryModel/PointerAnalysis.h	/^    typedef DiffPTData<NodeID,PointsTo,EdgeID> DiffPTDataTy;	\/\/\/ Points-to data structure type$/;"	t	class:BVDataPTAImpl
Direct	include/MemoryModel/ConsGNode.h	/^        Copy, Direct$/;"	e	enum:ConstraintNode::SCCEdgeFlag
DirectSVFGEdge	include/Util/VFGEdge.h	/^	DirectSVFGEdge(VFGNode* s, VFGNode* d, GEdgeFlag k): VFGEdge(s,d,k) {$/;"	f	class:DirectSVFGEdge
DirectSVFGEdge	include/Util/VFGEdge.h	/^class DirectSVFGEdge : public VFGEdge {$/;"	c
DisPatch	include/DisPatch/DisPatch.h	/^class DisPatch: public ModulePass, public UtilDef {$/;"	c
DisPatch	lib/DisPatch/DisPatch.cpp	/^DisPatch::DisPatch() :$/;"	f	class:DisPatch
DistinctMRG	include/MSSA/MemPartition.h	/^    DistinctMRG(BVDataPTAImpl* p, bool ptrOnly) : MRGenerator(p, ptrOnly)$/;"	f	class:DistinctMRG
DistinctMRG	include/MSSA/MemPartition.h	/^class DistinctMRG : public MRGenerator {$/;"	c
DomTreeNode	include/Util/BasicTypes.h	/^typedef llvm::DomTreeNode DomTreeNode;$/;"	t
DominanceFrontier	include/Util/BasicTypes.h	/^typedef llvm::DominanceFrontier DominanceFrontier;$/;"	t
DominanceFrontierBase	include/Util/BasicTypes.h	/^typedef llvm::DominanceFrontierBase<BasicBlock, false> DominanceFrontierBase;$/;"	t
DominatorTree	include/Util/BasicTypes.h	/^typedef llvm::DominatorTree DominatorTree;$/;"	t
DummyObjNode	include/MemoryModel/PAGNode.h	/^        DummyObjNode$/;"	e	enum:PAGNode::PNODEK
DummyObjPN	include/MemoryModel/PAGNode.h	/^    DummyObjPN(NodeID i,const MemObj* m) : ObjPN(NULL, i, m, DummyObjNode) {$/;"	f	class:DummyObjPN
DummyObjPN	include/MemoryModel/PAGNode.h	/^class DummyObjPN: public ObjPN {$/;"	c
DummyValNode	include/MemoryModel/PAGNode.h	/^        DummyValNode,$/;"	e	enum:PAGNode::PNODEK
DummyValPN	include/MemoryModel/PAGNode.h	/^    DummyValPN(NodeID i) : ValPN(NULL, i, DummyValNode) {$/;"	f	class:DummyValPN
DummyValPN	include/MemoryModel/PAGNode.h	/^class DummyValPN: public ValPN {$/;"	c
E	include/CUDD/cudd.h	/^    struct DdNode *E;$/;"	m	struct:DdChildren	typeref:struct:DdChildren::DdNode
E	include/CUDD/dddmpInt.h	/^  unsigned  E      : 2;$/;"	m	struct:binary_dd_code
EFT_A0R_NEW	include/Util/ExtAPI.h	/^        EFT_A0R_NEW,      \/\/stores a pointer to an allocated object in *arg0$/;"	e	enum:ExtAPI::extf_t
EFT_A11R_NEW	include/Util/ExtAPI.h	/^        EFT_A11R_NEW,$/;"	e	enum:ExtAPI::extf_t
EFT_A1R_A0	include/Util/ExtAPI.h	/^        EFT_A1R_A0,       \/\/stores arg0 into *arg1$/;"	e	enum:ExtAPI::extf_t
EFT_A1R_A0R	include/Util/ExtAPI.h	/^        EFT_A1R_A0R,      \/\/copies *arg0 into *arg1, with non-ptr return$/;"	e	enum:ExtAPI::extf_t
EFT_A1R_NEW	include/Util/ExtAPI.h	/^        EFT_A1R_NEW,      \/\/as above, into *arg1, etc.$/;"	e	enum:ExtAPI::extf_t
EFT_A2R_A1	include/Util/ExtAPI.h	/^        EFT_A2R_A1,       \/\/stores arg1 into *arg2$/;"	e	enum:ExtAPI::extf_t
EFT_A2R_NEW	include/Util/ExtAPI.h	/^        EFT_A2R_NEW,$/;"	e	enum:ExtAPI::extf_t
EFT_A3R_A1R_NS	include/Util/ExtAPI.h	/^        EFT_A3R_A1R_NS,   \/\/copies *arg1 into *arg3 (non-struct copy only)$/;"	e	enum:ExtAPI::extf_t
EFT_A4R_A1	include/Util/ExtAPI.h	/^        EFT_A4R_A1,       \/\/stores arg1 into *arg4$/;"	e	enum:ExtAPI::extf_t
EFT_A4R_NEW	include/Util/ExtAPI.h	/^        EFT_A4R_NEW,$/;"	e	enum:ExtAPI::extf_t
EFT_ALLOC	include/Util/ExtAPI.h	/^        EFT_ALLOC,        \/\/returns a ptr to a newly allocated object$/;"	e	enum:ExtAPI::extf_t
EFT_CXA_BEGIN_CATCH	include/Util/ExtAPI.h	/^        EFT_CXA_BEGIN_CATCH,  \/\/__cxa_begin_catch$/;"	e	enum:ExtAPI::extf_t
EFT_FREE	include/Util/ExtAPI.h	/^        EFT_FREE,      	\/\/free memory arg0 and all pointers passing into free function$/;"	e	enum:ExtAPI::extf_t
EFT_L_A0	include/Util/ExtAPI.h	/^        EFT_L_A0,         \/\/copies arg0, arg1, or arg2 into LHS$/;"	e	enum:ExtAPI::extf_t
EFT_L_A0__A0R_A1R	include/Util/ExtAPI.h	/^        EFT_L_A0__A0R_A1R,  \/\/copies the data that arg1 points to into the location$/;"	e	enum:ExtAPI::extf_t
EFT_L_A0__A2R_A0	include/Util/ExtAPI.h	/^        EFT_L_A0__A2R_A0, \/\/stores arg0 into *arg2 and returns it$/;"	e	enum:ExtAPI::extf_t
EFT_L_A1	include/Util/ExtAPI.h	/^        EFT_L_A1,$/;"	e	enum:ExtAPI::extf_t
EFT_L_A2	include/Util/ExtAPI.h	/^        EFT_L_A2,$/;"	e	enum:ExtAPI::extf_t
EFT_L_A8	include/Util/ExtAPI.h	/^        EFT_L_A8,$/;"	e	enum:ExtAPI::extf_t
EFT_NOOP	include/Util/ExtAPI.h	/^        EFT_NOOP= 0,      \/\/no effect on pointers$/;"	e	enum:ExtAPI::extf_t
EFT_NOSTRUCT_ALLOC	include/Util/ExtAPI.h	/^        EFT_NOSTRUCT_ALLOC, \/\/like ALLOC but only allocates non-struct data$/;"	e	enum:ExtAPI::extf_t
EFT_OTHER	include/Util/ExtAPI.h	/^        EFT_OTHER         \/\/not found in the list$/;"	e	enum:ExtAPI::extf_t
EFT_REALLOC	include/Util/ExtAPI.h	/^        EFT_REALLOC,      \/\/like L_A0 if arg0 is a non-null ptr, else ALLOC$/;"	e	enum:ExtAPI::extf_t
EFT_STAT	include/Util/ExtAPI.h	/^        EFT_STAT,         \/\/retval points to an unknown static var X$/;"	e	enum:ExtAPI::extf_t
EFT_STAT2	include/Util/ExtAPI.h	/^        EFT_STAT2,        \/\/ret -> X -> Y (X, Y - external static vars)$/;"	e	enum:ExtAPI::extf_t
EFT_STD_LIST_HOOK	include/Util/ExtAPI.h	/^        EFT_STD_LIST_HOOK,  \/\/ Some complex effects$/;"	e	enum:ExtAPI::extf_t
EFT_STD_RB_TREE_INCREMENT	include/Util/ExtAPI.h	/^        EFT_STD_RB_TREE_INCREMENT,  \/\/ Some complex effects$/;"	e	enum:ExtAPI::extf_t
EFT_STD_RB_TREE_INSERT_AND_REBALANCE	include/Util/ExtAPI.h	/^        EFT_STD_RB_TREE_INSERT_AND_REBALANCE,  \/\/ Some complex effects$/;"	e	enum:ExtAPI::extf_t
ENTRYCHI	include/MSSA/MemSSA.h	/^    typedef EntryCHI<Condition> ENTRYCHI;$/;"	t	class:MemSSA
ENTRYCHI	include/MSSA/SVFG.h	/^    typedef MemSSA::ENTRYCHI ENTRYCHI;$/;"	t	class:SVFG
ENUM_INOUT	include/WPA/WPAStat.h	/^    enum ENUM_INOUT {$/;"	g	class:FlowSensitiveStat
EPD_EXP_INF	include/CUDD/epd.h	64;"	d
EPD_MAX_BIN	include/CUDD/epd.h	62;"	d
EPD_MAX_DEC	include/CUDD/epd.h	63;"	d
EQUAL	lib/CUDD/st.c	59;"	d	file:
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/lib/CUDD/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/lib/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/tools/DisPatch/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/tools/Makefile	/^EQUALS = =$/;"	m
EXC_PROB	lib/CUDD/cuddAnneal.c	75;"	d	file:
EXTERN	lib/CUDD/datalimit.c	26;"	d	file:
EXTERN	lib/CUDD/datalimit.c	28;"	d	file:
EXTERNALPAG_H_	include/MemoryModel/ExternalPAG.h	11;"	d
Ecompl	include/CUDD/dddmpInt.h	/^  unsigned  Ecompl : 1;$/;"	m	struct:binary_dd_code
EdgeID	include/Util/BasicTypes.h	/^typedef u32_t EdgeID;$/;"	t
EdgeKindMask	include/MemoryModel/GenericGraph.h	/^    static constexpr u64_t EdgeKindMask = (~0ULL) >> (64 - EdgeKindMaskBits);$/;"	m	class:GenericEdge
EdgeKindMaskBits	include/MemoryModel/GenericGraph.h	/^    static constexpr unsigned char EdgeKindMaskBits = 8;  \/\/\/< We use the lower 8 bits to denote edge kind$/;"	m	class:GenericEdge
EdgeSet	include/Util/BasicTypes.h	/^typedef NodeSet EdgeSet;$/;"	t
EdgeSet	include/Util/DPItem.h	/^    typedef std::vector<std::pair<NodeID,NodeID> > EdgeSet;$/;"	t	class:VFPathCond
EdgeType	include/MemoryModel/GenericGraph.h	/^    typedef EdgeTy EdgeType;$/;"	t	class:GenericGraph
EdgeType	include/MemoryModel/GenericGraph.h	/^    typedef EdgeTy EdgeType;$/;"	t	class:GenericNode
EdgeType	include/MemoryModel/GenericGraph.h	/^    typedef EdgeTy EdgeType;$/;"	t	struct:llvm::GraphTraits
EdgeVector	include/Util/BasicTypes.h	/^typedef std::vector<EdgeID> EdgeVector;$/;"	t
ElemNumStridePairVec	include/MemoryModel/LocationSet.h	/^    typedef FieldInfo::ElemNumStridePairVec ElemNumStridePairVec;$/;"	t	class:LocationSet
ElemNumStridePairVec	include/MemoryModel/LocationSet.h	/^    typedef std::vector<NodePair > ElemNumStridePairVec;$/;"	t	class:FieldInfo
ElementSet	include/MemoryModel/ConditionalPT.h	/^    typedef typename std::set<Element> ElementSet;$/;"	t	class:CondStdSet
EntryCHI	include/MSSA/MSSAMuChi.h	/^    EntryCHI(const Function* f, const MemRegion* m, Cond c = PathCondAllocator::trueCond()) :$/;"	f	class:EntryCHI
EntryCHI	include/MSSA/MSSAMuChi.h	/^class EntryCHI : public MSSACHI<Cond> {$/;"	c
EntryMSSACHI	include/MSSA/MSSAMuChi.h	/^        EntryMSSACHI,$/;"	e	enum:MSSADEF::DEFTYPE
Eolp	lib/CUDD/cuddEssent.c	/^static BitVector *Eolp;$/;"	v	file:
Eolv	lib/CUDD/cuddEssent.c	/^static BitVector *Eolv;$/;"	v	file:
EpDouble	include/CUDD/epd.h	/^typedef struct EpDoubleStruct EpDouble;$/;"	t	typeref:struct:EpDoubleStruct
EpDoubleStruct	include/CUDD/epd.h	/^struct EpDoubleStruct {$/;"	s
EpType	include/CUDD/epd.h	/^typedef union EpTypeUnion EpType;$/;"	t	typeref:union:EpTypeUnion
EpTypeUnion	include/CUDD/epd.h	/^union EpTypeUnion {$/;"	u
EpdAdd	lib/CUDD/epd.c	/^EpdAdd(EpDouble *epd1, double value)$/;"	f
EpdAdd2	lib/CUDD/epd.c	/^EpdAdd2(EpDouble *epd1, EpDouble *epd2)$/;"	f
EpdAdd3	lib/CUDD/epd.c	/^EpdAdd3(EpDouble *epd1, EpDouble *epd2, EpDouble *epd3)$/;"	f
EpdAlloc	lib/CUDD/epd.c	/^EpdAlloc(void)$/;"	f
EpdCmp	lib/CUDD/epd.c	/^EpdCmp(const char *key1, const char *key2)$/;"	f
EpdConvert	lib/CUDD/epd.c	/^EpdConvert(double value, EpDouble *epd)$/;"	f
EpdCopy	lib/CUDD/epd.c	/^EpdCopy(EpDouble *from, EpDouble *to)$/;"	f
EpdDivide	lib/CUDD/epd.c	/^EpdDivide(EpDouble *epd1, double value)$/;"	f
EpdDivide2	lib/CUDD/epd.c	/^EpdDivide2(EpDouble *epd1, EpDouble *epd2)$/;"	f
EpdDivide3	lib/CUDD/epd.c	/^EpdDivide3(EpDouble *epd1, EpDouble *epd2, EpDouble *epd3)$/;"	f
EpdFree	lib/CUDD/epd.c	/^EpdFree(EpDouble *epd)$/;"	f
EpdGetExponent	lib/CUDD/epd.c	/^EpdGetExponent(double value)$/;"	f
EpdGetExponentDecimal	lib/CUDD/epd.c	/^EpdGetExponentDecimal(double value)$/;"	f
EpdGetString	lib/CUDD/epd.c	/^EpdGetString(EpDouble *epd, char *str)$/;"	f
EpdGetValueAndDecimalExponent	lib/CUDD/epd.c	/^EpdGetValueAndDecimalExponent(EpDouble *epd, double *value, int *exponent)$/;"	f
EpdIsInf	lib/CUDD/epd.c	/^EpdIsInf(EpDouble *epd)$/;"	f
EpdIsNan	lib/CUDD/epd.c	/^EpdIsNan(EpDouble *epd)$/;"	f
EpdIsNanOrInf	lib/CUDD/epd.c	/^EpdIsNanOrInf(EpDouble *epd)$/;"	f
EpdIsZero	lib/CUDD/epd.c	/^EpdIsZero(EpDouble *epd)$/;"	f
EpdMakeInf	lib/CUDD/epd.c	/^EpdMakeInf(EpDouble *epd, int sign)$/;"	f
EpdMakeNan	lib/CUDD/epd.c	/^EpdMakeNan(EpDouble *epd)$/;"	f
EpdMakeZero	lib/CUDD/epd.c	/^EpdMakeZero(EpDouble *epd, int sign)$/;"	f
EpdMultiply	lib/CUDD/epd.c	/^EpdMultiply(EpDouble *epd1, double value)$/;"	f
EpdMultiply2	lib/CUDD/epd.c	/^EpdMultiply2(EpDouble *epd1, EpDouble *epd2)$/;"	f
EpdMultiply2Decimal	lib/CUDD/epd.c	/^EpdMultiply2Decimal(EpDouble *epd1, EpDouble *epd2)$/;"	f
EpdMultiply3	lib/CUDD/epd.c	/^EpdMultiply3(EpDouble *epd1, EpDouble *epd2, EpDouble *epd3)$/;"	f
EpdMultiply3Decimal	lib/CUDD/epd.c	/^EpdMultiply3Decimal(EpDouble *epd1, EpDouble *epd2, EpDouble *epd3)$/;"	f
EpdNormalize	lib/CUDD/epd.c	/^EpdNormalize(EpDouble *epd)$/;"	f
EpdNormalizeDecimal	lib/CUDD/epd.c	/^EpdNormalizeDecimal(EpDouble *epd)$/;"	f
EpdPow2	lib/CUDD/epd.c	/^EpdPow2(int n, EpDouble *epd)$/;"	f
EpdPow2Decimal	lib/CUDD/epd.c	/^EpdPow2Decimal(int n, EpDouble *epd)$/;"	f
EpdSubtract	lib/CUDD/epd.c	/^EpdSubtract(EpDouble *epd1, double value)$/;"	f
EpdSubtract2	lib/CUDD/epd.c	/^EpdSubtract2(EpDouble *epd1, EpDouble *epd2)$/;"	f
EpdSubtract3	lib/CUDD/epd.c	/^EpdSubtract3(EpDouble *epd1, EpDouble *epd2, EpDouble *epd3)$/;"	f
ExtAPI	include/Util/ExtAPI.h	/^    ExtAPI() {$/;"	f	class:ExtAPI
ExtAPI	include/Util/ExtAPI.h	/^class ExtAPI {$/;"	c
ExternalPAG	include/MemoryModel/ExternalPAG.h	/^    ExternalPAG(std::string functionName) : functionName(functionName),$/;"	f	class:ExternalPAG
ExternalPAG	include/MemoryModel/ExternalPAG.h	/^class ExternalPAG {$/;"	c
ExtractElementInst	include/Util/BasicTypes.h	/^typedef llvm::ExtractElementInst ExtractElementInst;$/;"	t
ExtractValueInst	include/Util/BasicTypes.h	/^typedef llvm::ExtractValueInst  ExtractValueInst;$/;"	t
FIFOWorkList	include/Util/WorkList.h	/^    FIFOWorkList() {}$/;"	f	class:FIFOWorkList
FIFOWorkList	include/Util/WorkList.h	/^class FIFOWorkList {$/;"	c
FILOWorkList	include/Util/WorkList.h	/^    FILOWorkList() {}$/;"	f	class:FILOWorkList
FILOWorkList	include/Util/WorkList.h	/^class FILOWorkList {$/;"	c
FIND_ENTRY	lib/CUDD/st.c	71;"	d	file:
FIObjNode	include/MemoryModel/PAGNode.h	/^        FIObjNode,$/;"	e	enum:PAGNode::PNODEK
FIObjPN	include/MemoryModel/PAGNode.h	/^    FIObjPN(const Value* val, NodeID i, const MemObj* mem) :$/;"	f	class:FIObjPN
FIObjPN	include/MemoryModel/PAGNode.h	/^class FIObjPN: public ObjPN {$/;"	c
FLOWSENSITIVEANALYSIS_H_	include/WPA/FlowSensitive.h	31;"	d
FLOWSENSITIVESTAT_H_	include/WPA/WPAStat.h	32;"	d
FPIN	include/Util/VFGNode.h	/^		FunRet, APIN, APOUT, FPIN, FPOUT, NPtr$/;"	e	enum:VFGNode::VFGNodeK
FPNodes	include/Util/ICFGNode.h	/^    FormalParmVFGNodeVec FPNodes;$/;"	m	class:FunEntryBlockNode
FPOUT	include/Util/VFGNode.h	/^		FunRet, APIN, APOUT, FPIN, FPOUT, NPtr$/;"	e	enum:VFGNode::VFGNodeK
FParm	include/Util/VFGNode.h	/^        MPhi, MIntraPhi, MInterPhi, FRet, ARet, AParm, FParm,$/;"	e	enum:VFGNode::VFGNodeK
FREE	include/CUDD/util.h	69;"	d
FREE	include/CUDD/util.h	80;"	d
FRet	include/Util/VFGNode.h	/^        MPhi, MIntraPhi, MInterPhi, FRet, ARet, AParm, FParm,$/;"	e	enum:VFGNode::VFGNodeK
FSCSPS_WPA	include/MemoryModel/PointerAnalysis.h	/^        FSCSPS_WPA,		\/\/\/< Flow-, context-, path- sensitive WPA$/;"	e	enum:PointerAnalysis::PTATY
FSCS_WPA	include/MemoryModel/PointerAnalysis.h	/^        FSCS_WPA,			\/\/\/< Flow-, context- sensitive WPA$/;"	e	enum:PointerAnalysis::PTATY
FSDATAFLOW_WPA	include/MemoryModel/PointerAnalysis.h	/^        FSDATAFLOW_WPA,	\/\/\/< Traditional Dataflow-based flow sensitive WPA$/;"	e	enum:PointerAnalysis::PTATY
FSSPARSE_WPA	include/MemoryModel/PointerAnalysis.h	/^        FSSPARSE_WPA,		\/\/\/< Sparse flow sensitive WPA$/;"	e	enum:PointerAnalysis::PTATY
FUNCTION_OBJ	include/MemoryModel/MemModel.h	/^        FUNCTION_OBJ = 0x1,  \/\/ object is a function$/;"	e	enum:ObjTypeInfo::__anon5
FactorsComplement	lib/CUDD/cuddDecomp.c	118;"	d	file:
FactorsNotStored	lib/CUDD/cuddDecomp.c	116;"	d	file:
FactorsUncomplement	lib/CUDD/cuddDecomp.c	120;"	d	file:
FenceInst	include/Util/BasicTypes.h	/^typedef llvm::FenceInst FenceInst;$/;"	t
FieldInfo	include/MemoryModel/LocationSet.h	/^	FieldInfo(u32_t idx, u32_t byteOff, const Type* ty, ElemNumStridePairVec pa) :$/;"	f	class:FieldInfo
FieldInfo	include/MemoryModel/LocationSet.h	/^class FieldInfo {$/;"	c
FieldReps	include/WPA/AndersenSFR.h	/^    typedef llvm::DenseMap<NodeID, NodeSet> FieldReps;$/;"	t	class:AndersenSFR
FieldS_DDA	include/MemoryModel/PointerAnalysis.h	/^        FieldS_DDA,		\/\/\/< Field sensitive DDA$/;"	e	enum:PointerAnalysis::PTATY
FindVarname	lib/CUDD/dddmpUtil.c	/^FindVarname ($/;"	f
FlowS_DDA	include/MemoryModel/PointerAnalysis.h	/^        FlowS_DDA,		\/\/\/< Flow sensitive DDA$/;"	e	enum:PointerAnalysis::PTATY
FlowSensitive	include/WPA/FlowSensitive.h	/^    FlowSensitive(PTATY type = FSSPARSE_WPA) : WPASVFGFSSolver(), BVDataPTAImpl(type)$/;"	f	class:FlowSensitive
FlowSensitive	include/WPA/FlowSensitive.h	/^class FlowSensitive : public WPASVFGFSSolver, public BVDataPTAImpl {$/;"	c
FlowSensitiveStat	include/WPA/WPAStat.h	/^    FlowSensitiveStat(FlowSensitive* pta): PTAStat(pta) {$/;"	f	class:FlowSensitiveStat
FlowSensitiveStat	include/WPA/WPAStat.h	/^class FlowSensitiveStat : public PTAStat {$/;"	c
ForkEdgeSet	include/Util/ThreadCallGraph.h	/^    typedef GenericNode<PTACallGraphNode, ThreadForkEdge>::GEdgeSetTy ForkEdgeSet;$/;"	t	class:ThreadForkEdge
ForkEdgeSet	include/Util/ThreadCallGraph.h	/^    typedef ThreadForkEdge::ForkEdgeSet ForkEdgeSet;$/;"	t	class:ThreadCallGraph
FormalINSVFGNode	include/MSSA/SVFGNode.h	/^    FormalINSVFGNode(NodeID id, const MemSSA::ENTRYCHI* entry): MRSVFGNode(id, FPIN), chi(entry) {$/;"	f	class:FormalINSVFGNode
FormalINSVFGNode	include/MSSA/SVFGNode.h	/^class FormalINSVFGNode : public MRSVFGNode {$/;"	c
FormalINSVFGNodeSet	include/MSSA/SVFG.h	/^    typedef NodeBS FormalINSVFGNodeSet;$/;"	t	class:SVFG
FormalOUTSVFGNode	include/MSSA/SVFGNode.h	/^    FormalOUTSVFGNode(NodeID id, const MemSSA::RETMU* exit): MRSVFGNode(id, FPOUT), mu(exit) {$/;"	f	class:FormalOUTSVFGNode
FormalOUTSVFGNode	include/MSSA/SVFGNode.h	/^class FormalOUTSVFGNode : public MRSVFGNode {$/;"	c
FormalOUTSVFGNodeSet	include/MSSA/SVFG.h	/^    typedef NodeBS FormalOUTSVFGNodeSet;$/;"	t	class:SVFG
FormalParmSVFGNode	include/MSSA/SVFG.h	/^typedef FormalParmVFGNode FormalParmSVFGNode;$/;"	t
FormalParmVFGNode	include/Util/VFGNode.h	/^    FormalParmVFGNode(NodeID id, const PAGNode* n, const Function* f):$/;"	f	class:FormalParmVFGNode
FormalParmVFGNode	include/Util/VFGNode.h	/^class FormalParmVFGNode : public ArgumentVFGNode {$/;"	c
FormalParmVFGNodeVec	include/Util/ICFGNode.h	/^    typedef std::vector<const FormalParmVFGNode *> FormalParmVFGNodeVec;$/;"	t	class:FunEntryBlockNode
FormalRetSVFGNode	include/MSSA/SVFG.h	/^typedef FormalRetVFGNode FormalRetSVFGNode;$/;"	t
FormalRetVFGNode	include/Util/VFGNode.h	/^	FormalRetVFGNode(NodeID id, const PAGNode* n, const Function* f) :$/;"	f	class:FormalRetVFGNode
FormalRetVFGNode	include/Util/VFGNode.h	/^class FormalRetVFGNode: public ArgumentVFGNode {$/;"	c
FunCallBlock	include/Util/ICFGNode.h	/^        IntraBlock, FunEntryBlock, FunExitBlock, FunCallBlock, FunRetBlock$/;"	e	enum:ICFGNode::ICFGNodeK
FunDeclToDefMap	include/Util/SVFModule.h	/^    FunDeclToDefMapTy FunDeclToDefMap;$/;"	m	class:LLVMModuleSet
FunDeclToDefMapTy	include/Util/SVFModule.h	/^    typedef LLVMModuleSet::FunDeclToDefMapTy FunDeclToDefMapTy;$/;"	t	class:SVFModule
FunDeclToDefMapTy	include/Util/SVFModule.h	/^    typedef std::map<const Function*, Function*> FunDeclToDefMapTy;$/;"	t	class:LLVMModuleSet
FunDefToDeclsMap	include/Util/SVFModule.h	/^    FunDefToDeclsMapTy FunDefToDeclsMap;$/;"	m	class:LLVMModuleSet
FunDefToDeclsMapTy	include/Util/SVFModule.h	/^    typedef LLVMModuleSet::FunDefToDeclsMapTy FunDefToDeclsMapTy;$/;"	t	class:SVFModule
FunDefToDeclsMapTy	include/Util/SVFModule.h	/^    typedef std::map<const Function*, FunctionSetType> FunDefToDeclsMapTy;$/;"	t	class:LLVMModuleSet
FunEntryBlock	include/Util/ICFGNode.h	/^        IntraBlock, FunEntryBlock, FunExitBlock, FunCallBlock, FunRetBlock$/;"	e	enum:ICFGNode::ICFGNodeK
FunEntryBlockNode	include/Util/ICFGNode.h	/^    FunEntryBlockNode(NodeID id, const Function *f) : InterBlockNode(id, FunEntryBlock), fun(f) {$/;"	f	class:FunEntryBlockNode
FunEntryBlockNode	include/Util/ICFGNode.h	/^class FunEntryBlockNode : public InterBlockNode {$/;"	c
FunExitBlock	include/Util/ICFGNode.h	/^        IntraBlock, FunEntryBlock, FunExitBlock, FunCallBlock, FunRetBlock$/;"	e	enum:ICFGNode::ICFGNodeK
FunExitBlockNode	include/Util/ICFGNode.h	/^    FunExitBlockNode(NodeID id, const Function *f) : InterBlockNode(id, FunExitBlock), fun(f), formalRet(NULL) {$/;"	f	class:FunExitBlockNode
FunExitBlockNode	include/Util/ICFGNode.h	/^class FunExitBlockNode : public InterBlockNode {$/;"	c
FunPtrToCallSitesMap	include/MemoryModel/PAG.h	/^    typedef std::map<NodeID,CallSiteSet> FunPtrToCallSitesMap;$/;"	t	class:PAG
FunRet	include/Util/VFGNode.h	/^		FunRet, APIN, APOUT, FPIN, FPOUT, NPtr$/;"	e	enum:VFGNode::VFGNodeK
FunRetBlock	include/Util/ICFGNode.h	/^        IntraBlock, FunEntryBlock, FunExitBlock, FunCallBlock, FunRetBlock$/;"	e	enum:ICFGNode::ICFGNodeK
FunToArgsListMap	include/MemoryModel/PAG.h	/^    typedef llvm::DenseMap<const Function*,PAGNodeList> FunToArgsListMap;$/;"	t	class:PAG
FunToCallGraphNodeMap	include/Util/PTACallGraph.h	/^    typedef llvm::DenseMap<const Function*, PTACallGraphNode *> FunToCallGraphNodeMap;$/;"	t	class:PTACallGraph
FunToDTMap	include/Util/DataFlowUtil.h	/^    typedef std::map<const Function*, DominatorTree*> FunToDTMap;  \/\/\/< map a function to its dominator tree$/;"	t	class:PTACFInfoBuilder
FunToEntryChiSetMap	include/MSSA/MemSSA.h	/^    typedef llvm::DenseMap<const Function*, CHISet> FunToEntryChiSetMap;$/;"	t	class:MemSSA
FunToExitBBsMap	include/Util/PathCondAllocator.h	/^    typedef std::map<const Function*,  BasicBlockSet> FunToExitBBsMap;  \/\/\/< map a function to all its basic blocks calling program exit$/;"	t	class:PathCondAllocator
FunToFunEntryNodeMap	include/Util/ICFG.h	/^    FunToFunEntryNodeMapTy FunToFunEntryNodeMap; \/\/\/< map a function to its FunExitBlockNode$/;"	m	class:ICFG
FunToFunEntryNodeMapTy	include/Util/ICFG.h	/^    typedef std::map<const Function*, FunEntryBlockNode *> FunToFunEntryNodeMapTy;$/;"	t	class:ICFG
FunToFunExitNodeMap	include/Util/ICFG.h	/^    FunToFunExitNodeMapTy FunToFunExitNodeMap; \/\/\/< map a function to its FunEntryBlockNode$/;"	m	class:ICFG
FunToFunExitNodeMapTy	include/Util/ICFG.h	/^    typedef std::map<const Function*, FunExitBlockNode *> FunToFunExitNodeMapTy;$/;"	t	class:ICFG
FunToIDMapTy	include/MemoryModel/MemModel.h	/^    typedef llvm::DenseMap<const Function *, SymID> FunToIDMapTy;$/;"	t	class:SymbolTableInfo
FunToInterMap	include/MSSA/MemPartition.h	/^    typedef std::map<const Function*, PointsToList> FunToInterMap;$/;"	t	class:IntraDisjointMRG
FunToLoopInfoMap	include/Util/DataFlowUtil.h	/^    typedef std::map<const Function*, PTALoopInfo*> FunToLoopInfoMap;  \/\/\/< map a function to its loop info$/;"	t	class:PTACFInfoBuilder
FunToMRsMap	include/MSSA/MemRegion.h	/^    typedef llvm::DenseMap<const Function*, MRSet> FunToMRsMap;$/;"	t	class:MRGenerator
FunToNodeBSMap	include/MSSA/MemRegion.h	/^    typedef llvm::DenseMap<const Function*, NodeBS> FunToNodeBSMap;$/;"	t	class:MRGenerator
FunToPAGEdgeSetMap	include/MemoryModel/PAG.h	/^    typedef llvm::DenseMap<const Function*,PAGEdgeSet> FunToPAGEdgeSetMap;$/;"	t	class:PAG
FunToPointsToMap	include/MSSA/MemRegion.h	/^    typedef std::map<const Function*, PointsToList > FunToPointsToMap;$/;"	t	class:MRGenerator
FunToPostDTMap	include/Util/DataFlowUtil.h	/^    typedef std::map<const Function*, PostDominatorTree*> FunToPostDTMap;  \/\/\/< map a function to its post dominator tree$/;"	t	class:PTACFInfoBuilder
FunToPtsMap	include/MSSA/MemPartition.h	/^    typedef std::map<const Function*, PtsToSubPtsMap> FunToPtsMap;$/;"	t	class:IntraDisjointMRG
FunToRetMap	include/MemoryModel/PAG.h	/^    typedef llvm::DenseMap<const Function*,const PAGNode*> FunToRetMap;$/;"	t	class:PAG
FunToReturnMuSetMap	include/MSSA/MemSSA.h	/^    typedef llvm::DenseMap<const Function*, MUSet> FunToReturnMuSetMap;$/;"	t	class:MemSSA
FuncInfo	include/DisPatch/BinIRWrapper.h	/^class FuncInfo{$/;"	c
FuncVector	include/MemoryModel/CHA.h	/^    typedef std::vector<const Function*> FuncVector;$/;"	t	class:CHNode
Function	include/Util/BasicTypes.h	/^typedef llvm::Function Function;$/;"	t
FunctionCallee	include/Util/BasicTypes.h	/^typedef llvm::FunctionCallee FunctionCallee;$/;"	t
FunctionSet	include/MSSA/SVFGBuilder.h	/^    typedef PointerAnalysis::FunctionSet FunctionSet;$/;"	t	class:SVFGBuilder
FunctionSet	include/MemoryModel/PointerAnalysis.h	/^    typedef	std::set<const Function*> FunctionSet;$/;"	t	class:PointerAnalysis
FunctionSet	include/Util/PTACallGraph.h	/^    typedef	std::set<const Function*> FunctionSet;$/;"	t	class:PTACallGraph
FunctionSet	include/Util/SVFModule.h	/^    FunctionSetType FunctionSet;  \/\/\/< The Functions in the module$/;"	m	class:LLVMModuleSet
FunctionSetType	include/Util/SVFModule.h	/^    typedef LLVMModuleSet::FunctionSetType FunctionSetType;$/;"	t	class:SVFModule
FunctionSetType	include/Util/SVFModule.h	/^    typedef std::vector<Function*> FunctionSetType;$/;"	t	class:LLVMModuleSet
FunctionToFormalINsMapTy	include/MSSA/SVFG.h	/^    typedef llvm::DenseMap<const Function*, FormalINSVFGNodeSet>  FunctionToFormalINsMapTy;$/;"	t	class:SVFG
FunctionToFormalOUTsMapTy	include/MSSA/SVFG.h	/^    typedef llvm::DenseMap<const Function*, FormalOUTSVFGNodeSet>  FunctionToFormalOUTsMapTy;$/;"	t	class:SVFG
FunctionType	include/Util/BasicTypes.h	/^typedef llvm::FunctionType FunctionType;$/;"	t
GCTime	include/CUDD/cuddInt.h	/^    unsigned long GCTime;	\/* total time spent in garbage collection *\/$/;"	m	struct:DdManager
GEDGE	include/Util/CFLSolver.h	/^    typedef typename GTraits::EdgeType          GEDGE;$/;"	t	class:CFLSolver
GEDGE	include/WPA/WPASolver.h	/^    typedef typename GTraits::EdgeType          GEDGE;$/;"	t	class:WPASolver
GENERICGRAPH_H_	include/MemoryModel/GenericGraph.h	31;"	d
GET_MAX	lib/CUDD/dddmpStoreCnf.c	49;"	d	file:
GEdgeFlag	include/MemoryModel/GenericGraph.h	/^    typedef u64_t GEdgeFlag;$/;"	t	class:GenericEdge
GEdgeKind	include/MemoryModel/GenericGraph.h	/^    typedef s32_t GEdgeKind;$/;"	t	class:GenericEdge
GEdgeSetTy	include/MemoryModel/GenericGraph.h	/^    typedef std::set<EdgeType*, typename EdgeType::equalGEdge> GEdgeSetTy;$/;"	t	class:GenericNode
GLOBVAR_OBJ	include/MemoryModel/MemModel.h	/^        GLOBVAR_OBJ = 0x2,  \/\/ object is a global variable$/;"	e	enum:ObjTypeInfo::__anon5
GNODE	include/Util/CFLSolver.h	/^    typedef typename GTraits::NodeType          GNODE;$/;"	t	class:CFLSolver
GNODE	include/Util/SCC.h	/^    typedef typename GTraits::NodeRef          GNODE;$/;"	t	class:SCCDetection
GNODE	include/WPA/WPAFSSolver.h	/^    typedef typename WPASolver<GraphType>::GNODE GNODE;$/;"	t	class:WPAMinimumSolver
GNODE	include/WPA/WPAFSSolver.h	/^    typedef typename WPASolver<GraphType>::GNODE GNODE;$/;"	t	class:WPASCCSolver
GNODE	include/WPA/WPASolver.h	/^    typedef typename GTraits::NodeRef           GNODE;$/;"	t	class:WPASolver
GNODESCCInfoMap	include/Util/SCC.h	/^    typedef std::map<NodeID,GNodeSCCInfo > GNODESCCInfoMap;$/;"	t	class:SCCDetection
GNodeK	include/MemoryModel/GenericGraph.h	/^    typedef s32_t GNodeK;$/;"	t	class:GenericNode
GNodeSCCInfo	include/Util/SCC.h	/^        GNodeSCCInfo() : _visited(false), _inSCC(false), _rep(UINT_MAX) {}$/;"	f	class:SCCDetection::GNodeSCCInfo
GNodeSCCInfo	include/Util/SCC.h	/^    class GNodeSCCInfo {$/;"	c	class:SCCDetection
GNodeSCCInfo	include/Util/SCC.h	/^    const inline  GNODESCCInfoMap &GNodeSCCInfo() const {$/;"	f	class:SCCDetection
GNodeStack	include/Util/SCC.h	/^    typedef std::stack<NodeID> GNodeStack;$/;"	t	class:SCCDetection
GRAPHSOLVER_H_	include/WPA/WPASolver.h	32;"	d
GSymID	include/MemoryModel/MemModel.h	/^    SymID GSymID;$/;"	m	class:MemObj
GTraits	include/Util/CFLSolver.h	/^    typedef llvm::GraphTraits<GraphType> GTraits;$/;"	t	class:CFLSolver
GTraits	include/Util/SCC.h	/^    typedef llvm::GraphTraits<GraphType> GTraits;$/;"	t	class:SCCDetection
GTraits	include/WPA/WPAFSSolver.h	/^    typedef typename WPASolver<GraphType>::GTraits GTraits;$/;"	t	class:WPAMinimumSolver
GTraits	include/WPA/WPAFSSolver.h	/^    typedef typename WPASolver<GraphType>::GTraits GTraits;$/;"	t	class:WPASCCSolver
GTraits	include/WPA/WPASolver.h	/^    typedef llvm::GraphTraits<GraphType> GTraits;$/;"	t	class:WPASolver
G_CR	lib/CUDD/cuddDecomp.c	76;"	d	file:
G_ST	lib/CUDD/cuddDecomp.c	75;"	d	file:
GenericCHEdgeTy	include/MemoryModel/CHA.h	/^typedef GenericEdge<CHNode> GenericCHEdgeTy;$/;"	t
GenericCHGraphTy	include/MemoryModel/CHA.h	/^typedef GenericGraph<CHNode,CHEdge> GenericCHGraphTy;$/;"	t
GenericCHNodeTy	include/MemoryModel/CHA.h	/^typedef GenericNode<CHNode,CHEdge> GenericCHNodeTy;$/;"	t
GenericCallGraphEdgeTy	include/Util/PTACallGraph.h	/^typedef GenericEdge<PTACallGraphNode> GenericCallGraphEdgeTy;$/;"	t
GenericCallGraphNodeTy	include/Util/PTACallGraph.h	/^typedef GenericNode<PTACallGraphNode,PTACallGraphEdge> GenericCallGraphNodeTy;$/;"	t
GenericCallGraphTy	include/Util/PTACallGraph.h	/^typedef GenericGraph<PTACallGraphNode,PTACallGraphEdge> GenericCallGraphTy;$/;"	t
GenericConsEdgeTy	include/MemoryModel/ConsGEdge.h	/^typedef GenericEdge<ConstraintNode> GenericConsEdgeTy;$/;"	t
GenericConsNodeTy	include/MemoryModel/ConsGNode.h	/^typedef GenericNode<ConstraintNode,ConstraintEdge> GenericConsNodeTy;$/;"	t
GenericEdge	include/MemoryModel/GenericGraph.h	/^    GenericEdge(NodeTy* s, NodeTy* d, GEdgeFlag k): src(s),dst(d), edgeFlag(k) {$/;"	f	class:GenericEdge
GenericEdge	include/MemoryModel/GenericGraph.h	/^class GenericEdge {$/;"	c
GenericGraph	include/MemoryModel/GenericGraph.h	/^    GenericGraph(): edgeNum(0),nodeNum(0)$/;"	f	class:GenericGraph
GenericGraph	include/MemoryModel/GenericGraph.h	/^class GenericGraph {$/;"	c
GenericGraphTy	include/MemoryModel/GenericGraph.h	/^    typedef GenericGraph<NodeTy,EdgeTy> GenericGraphTy;$/;"	t	struct:llvm::GraphTraits
GenericICFGEdgeTy	include/Util/ICFGEdge.h	/^typedef GenericEdge<ICFGNode> GenericICFGEdgeTy;$/;"	t
GenericICFGNodeTy	include/Util/ICFGNode.h	/^typedef GenericNode<ICFGNode, ICFGEdge> GenericICFGNodeTy;$/;"	t
GenericICFGTy	include/Util/ICFG.h	/^typedef GenericGraph<ICFGNode,ICFGEdge> GenericICFGTy;$/;"	t
GenericNode	include/MemoryModel/GenericGraph.h	/^    GenericNode(NodeID i, GNodeK k): id(i),nodeKind(k) {$/;"	f	class:GenericNode
GenericNode	include/MemoryModel/GenericGraph.h	/^class GenericNode {$/;"	c
GenericPAGEdgeTy	include/MemoryModel/PAGEdge.h	/^typedef GenericEdge<PAGNode> GenericPAGEdgeTy;$/;"	t
GenericPAGNodeTy	include/MemoryModel/PAGNode.h	/^typedef GenericNode<PAGNode,PAGEdge> GenericPAGNodeTy;$/;"	t
GenericVFGEdgeTy	include/Util/VFGEdge.h	/^typedef GenericEdge<VFGNode> GenericVFGEdgeTy;$/;"	t
GenericVFGNodeTy	include/Util/VFGNode.h	/^typedef GenericNode<VFGNode,VFGEdge> GenericVFGNodeTy;$/;"	t
GenericVFGTy	include/Util/VFG.h	/^typedef GenericGraph<VFGNode,VFGEdge> GenericVFGTy;$/;"	t
Gep	include/Util/VFGNode.h	/^        Addr, Copy, Gep, Store, Load, Cmp, BinaryOp, TPhi, TIntraPhi, TInterPhi,$/;"	e	enum:VFGNode::VFGNodeK
GepCGEdge	include/MemoryModel/ConsGEdge.h	/^    GepCGEdge(ConstraintNode* s, ConstraintNode* d, ConstraintEdgeK k, EdgeID id)$/;"	f	class:GepCGEdge
GepCGEdge	include/MemoryModel/ConsGEdge.h	/^class GepCGEdge: public ConstraintEdge {$/;"	c
GepObjNode	include/MemoryModel/PAGNode.h	/^        GepObjNode,$/;"	e	enum:PAGNode::PNODEK
GepObjNodeMap	include/MemoryModel/PAG.h	/^    NodeLocationSetMap GepObjNodeMap;	\/\/\/< Map a pair<base,off> to a gep obj node id$/;"	m	class:PAG
GepObjPN	include/MemoryModel/PAGNode.h	/^    GepObjPN(const MemObj* mem, NodeID i, const LocationSet& l) :$/;"	f	class:GepObjPN
GepObjPN	include/MemoryModel/PAGNode.h	/^class GepObjPN: public ObjPN {$/;"	c
GepPE	include/MemoryModel/PAGEdge.h	/^    GepPE(PAGNode* s, PAGNode* d, PEDGEK k) : PAGEdge(s,d,k) {$/;"	f	class:GepPE
GepPE	include/MemoryModel/PAGEdge.h	/^class GepPE: public PAGEdge {$/;"	c
GepSVFGNode	include/MSSA/SVFG.h	/^typedef GepVFGNode GepSVFGNode;$/;"	t
GepVFGNode	include/Util/VFGNode.h	/^    GepVFGNode(NodeID id,const GepPE* edge): StmtVFGNode(id,edge,Gep) {$/;"	f	class:GepVFGNode
GepVFGNode	include/Util/VFGNode.h	/^class GepVFGNode: public StmtVFGNode {$/;"	c
GepValNode	include/MemoryModel/PAGNode.h	/^        GepValNode,$/;"	e	enum:PAGNode::PNODEK
GepValNodeMap	include/MemoryModel/PAG.h	/^    NodeLocationSetMap GepValNodeMap;	\/\/\/< Map a pair<base,off> to a gep value node id$/;"	m	class:PAG
GepValPN	include/MemoryModel/PAGNode.h	/^    GepValPN(const Value* val, NodeID i, const LocationSet& l, const Type *ty, u32_t idx) :$/;"	f	class:GepValPN
GepValPN	include/MemoryModel/PAGNode.h	/^class GepValPN: public ValPN {$/;"	c
GetElementPtrInst	include/Util/BasicTypes.h	/^typedef llvm::GetElementPtrInst GetElementPtrInst;$/;"	t
GlobalAlias	include/Util/BasicTypes.h	/^typedef llvm::GlobalAlias GlobalAlias;$/;"	t
GlobalDefToRepMap	include/Util/SVFModule.h	/^    GlobalDefToRepMapTy GlobalDefToRepMap;$/;"	m	class:LLVMModuleSet
GlobalDefToRepMapTy	include/Util/SVFModule.h	/^    typedef LLVMModuleSet::GlobalDefToRepMapTy GlobalDefToRepMapTy;$/;"	t	class:SVFModule
GlobalDefToRepMapTy	include/Util/SVFModule.h	/^    typedef std::map<const GlobalVariable*, GlobalVariable*> GlobalDefToRepMapTy;$/;"	t	class:LLVMModuleSet
GlobalInfo	lib/CUDD/cuddSubsetSP.c	/^struct GlobalInfo {$/;"	s	file:
GlobalInfo_t	lib/CUDD/cuddSubsetSP.c	/^typedef struct GlobalInfo GlobalInfo_t;$/;"	t	typeref:struct:GlobalInfo	file:
GlobalQueueItem	lib/CUDD/cuddApprox.c	/^typedef struct GlobalQueueItem {$/;"	s	file:
GlobalQueueItem	lib/CUDD/cuddApprox.c	/^} GlobalQueueItem;$/;"	t	typeref:struct:GlobalQueueItem	file:
GlobalSet	include/Util/SVFModule.h	/^    GlobalSetType GlobalSet;      \/\/\/< The Global Variables in the module$/;"	m	class:LLVMModuleSet
GlobalSetType	include/Util/SVFModule.h	/^    typedef LLVMModuleSet::GlobalSetType GlobalSetType;$/;"	t	class:SVFModule
GlobalSetType	include/Util/SVFModule.h	/^    typedef std::vector<GlobalVariable*> GlobalSetType;$/;"	t	class:LLVMModuleSet
GlobalVFGNodeSet	include/Util/VFG.h	/^    typedef std::set<const VFGNode*> GlobalVFGNodeSet;$/;"	t	class:VFG
GlobalValue	include/Util/BasicTypes.h	/^typedef llvm::GlobalValue GlobalValue;$/;"	t
GlobalVariable	include/Util/BasicTypes.h	/^typedef llvm::GlobalVariable GlobalVariable;$/;"	t
GraphPrinter	include/Util/BasicTypes.h	/^typedef llvm::GraphPrinter GraphPrinter;$/;"	t
GraphPrinter	include/Util/GraphPrinter.h	/^    GraphPrinter() {$/;"	f	class:llvm::GraphPrinter
GraphPrinter	include/Util/GraphPrinter.h	/^class GraphPrinter {$/;"	c	namespace:llvm
GraphTraits	include/MSSA/SVFG.h	/^template<> struct GraphTraits<SVFG*> : public GraphTraits<GenericGraph<SVFGNode,SVFGEdge>* > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/CHA.h	/^struct GraphTraits<Inverse<CHNode*> > : public GraphTraits<Inverse<GenericNode<CHNode,CHEdge>* > > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/CHA.h	/^template<> struct GraphTraits<CHGraph*> : public GraphTraits<GenericGraph<CHNode,CHEdge>* > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/CHA.h	/^template<> struct GraphTraits<CHNode*> : public GraphTraits<GenericNode<CHNode,CHEdge>*  > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/ConsG.h	/^struct GraphTraits<Inverse<ConstraintNode *> > : public GraphTraits<Inverse<GenericNode<ConstraintNode,ConstraintEdge>* > > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/ConsG.h	/^template<> struct GraphTraits<ConstraintGraph*> : public GraphTraits<GenericGraph<ConstraintNode,ConstraintEdge>* > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/ConsG.h	/^template<> struct GraphTraits<ConstraintNode*> : public GraphTraits<GenericNode<ConstraintNode,ConstraintEdge>*  > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/GenericGraph.h	/^struct GraphTraits<Inverse<GenericNode<NodeTy,EdgeTy>* > > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/GenericGraph.h	/^template<class NodeTy,class EdgeTy> struct GraphTraits<GenericGraph<NodeTy,EdgeTy>* > : public GraphTraits<GenericNode<NodeTy,EdgeTy>*  > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/GenericGraph.h	/^template<class NodeTy,class EdgeTy> struct GraphTraits<GenericNode<NodeTy,EdgeTy>*  > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/OfflineConsG.h	/^template<> struct GraphTraits<OfflineConsG*> : public GraphTraits<GenericGraph<ConstraintNode,ConstraintEdge>* > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/PAG.h	/^template<> struct GraphTraits<Inverse<PAGNode *> > : public GraphTraits<Inverse<GenericNode<PAGNode,PAGEdge>* > > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/PAG.h	/^template<> struct GraphTraits<PAG*> : public GraphTraits<GenericGraph<PAGNode,PAGEdge>* > {$/;"	s	namespace:llvm
GraphTraits	include/MemoryModel/PAG.h	/^template<> struct GraphTraits<PAGNode*> : public GraphTraits<GenericNode<PAGNode,PAGEdge>*  > {$/;"	s	namespace:llvm
GraphTraits	include/Util/ICFG.h	/^struct GraphTraits<Inverse<ICFGNode *> > : public GraphTraits<Inverse<GenericNode<ICFGNode,ICFGEdge>* > > {$/;"	s	namespace:llvm
GraphTraits	include/Util/ICFG.h	/^template<> struct GraphTraits<ICFG*> : public GraphTraits<GenericGraph<ICFGNode,ICFGEdge>* > {$/;"	s	namespace:llvm
GraphTraits	include/Util/ICFG.h	/^template<> struct GraphTraits<ICFGNode*> : public GraphTraits<GenericNode<ICFGNode,ICFGEdge>*  > {$/;"	s	namespace:llvm
GraphTraits	include/Util/PTACallGraph.h	/^struct GraphTraits<Inverse<PTACallGraphNode *> > : public GraphTraits<Inverse<GenericNode<PTACallGraphNode,PTACallGraphEdge>* > > {$/;"	s	namespace:llvm
GraphTraits	include/Util/PTACallGraph.h	/^template<> struct GraphTraits<PTACallGraph*> : public GraphTraits<GenericGraph<PTACallGraphNode,PTACallGraphEdge>* > {$/;"	s	namespace:llvm
GraphTraits	include/Util/PTACallGraph.h	/^template<> struct GraphTraits<PTACallGraphNode*> : public GraphTraits<GenericNode<PTACallGraphNode,PTACallGraphEdge>*  > {$/;"	s	namespace:llvm
GraphTraits	include/Util/VFG.h	/^struct GraphTraits<Inverse<VFGNode *> > : public GraphTraits<Inverse<GenericNode<VFGNode,VFGEdge>* > > {$/;"	s	namespace:llvm
GraphTraits	include/Util/VFG.h	/^template<> struct GraphTraits<VFG*> : public GraphTraits<GenericGraph<VFGNode,VFGEdge>* > {$/;"	s	namespace:llvm
GraphTraits	include/Util/VFG.h	/^template<> struct GraphTraits<VFGNode*> : public GraphTraits<GenericNode<VFGNode,VFGEdge>*  > {$/;"	s	namespace:llvm
HARE_PAR_FOR	include/Util/ThreadAPI.h	/^        HARE_PAR_FOR$/;"	e	enum:ThreadAPI::TD_TYPE
HASPTR_OBJ	include/MemoryModel/MemModel.h	/^        HASPTR_OBJ = 0x400		\/\/ non pointer object including compound type have field that is a pointer type$/;"	e	enum:ObjTypeInfo::__anon5
HAVE_GETRLIMIT	lib/CUDD/datalimit.c	10;"	d	file:
HAVE_SYS_RESOURCE_H	lib/CUDD/datalimit.c	4;"	d	file:
HAVE_SYS_TIME_H	lib/CUDD/datalimit.c	7;"	d	file:
HEAP_OBJ	include/MemoryModel/MemModel.h	/^        HEAP_OBJ = 0x10,  \/\/ object is a heap variable$/;"	e	enum:ObjTypeInfo::__anon5
HEX	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	483;"	d	file:
HEX	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	468;"	d	file:
H_CR	lib/CUDD/cuddDecomp.c	78;"	d	file:
H_ST	lib/CUDD/cuddDecomp.c	77;"	d	file:
HareParForEdge	include/Util/PTACallGraph.h	/^        CallRetEdge,TDForkEdge,TDJoinEdge,HareParForEdge$/;"	e	enum:PTACallGraphEdge::CEDGEK
HareParForEdge	include/Util/ThreadCallGraph.h	/^    HareParForEdge(PTACallGraphNode* s, PTACallGraphNode* d, CallSiteID csId) :$/;"	f	class:HareParForEdge
HareParForEdge	include/Util/ThreadCallGraph.h	/^class HareParForEdge: public PTACallGraphEdge {$/;"	c
HashEntry	lib/CUDD/cuddBddCorr.c	/^} HashEntry;$/;"	t	typeref:struct:hashEntry	file:
ICFG	include/Util/ICFG.h	/^class ICFG : public GenericICFGTy {$/;"	c
ICFG	lib/Util/ICFG.cpp	/^ICFG::ICFG(PTACallGraph* cg): totalICFGNode(0), callgraph(cg), pag(PAG::getPAG()) {$/;"	f	class:ICFG
ICFGEdge	include/Util/ICFGEdge.h	/^    ICFGEdge(ICFGNode* s, ICFGNode* d, GEdgeFlag k) : GenericICFGEdgeTy(s,d,k) {$/;"	f	class:ICFGEdge
ICFGEdge	include/Util/ICFGEdge.h	/^class ICFGEdge : public GenericICFGEdgeTy {$/;"	c
ICFGEdgeK	include/Util/ICFGEdge.h	/^	enum ICFGEdgeK {$/;"	g	class:ICFGEdge
ICFGEdgeSetTy	include/Util/ICFG.h	/^    typedef ICFGEdge::ICFGEdgeSetTy ICFGEdgeSetTy;$/;"	t	class:ICFG
ICFGEdgeSetTy	include/Util/ICFGEdge.h	/^    typedef GenericNode<ICFGNode,ICFGEdge>::GEdgeSetTy ICFGEdgeSetTy;$/;"	t	class:ICFGEdge
ICFGEdge_H_	include/Util/ICFGEdge.h	31;"	d
ICFGNODE_H_	include/Util/ICFGNode.h	31;"	d
ICFGNode	include/Util/ICFGNode.h	/^    ICFGNode(NodeID i, ICFGNodeK k) : GenericICFGNodeTy(i, k), bb(NULL) {$/;"	f	class:ICFGNode
ICFGNode	include/Util/ICFGNode.h	/^class ICFGNode : public GenericICFGNodeTy {$/;"	c
ICFGNodeIDToNodeMapTy	include/Util/ICFG.h	/^    typedef llvm::DenseMap<NodeID, ICFGNode *> ICFGNodeIDToNodeMapTy;$/;"	t	class:ICFG
ICFGNodeK	include/Util/ICFGNode.h	/^    enum ICFGNodeK {$/;"	g	class:ICFGNode
ICFGNodeSet	include/Util/ICFGStat.h	/^    typedef std::set<const ICFGNode *> ICFGNodeSet;$/;"	t	class:ICFGStat
ICFGStat	include/Util/ICFGStat.h	/^    ICFGStat(ICFG *cfg) : PTAStat(NULL), icfg(cfg) {$/;"	f	class:ICFGStat
ICFGStat	include/Util/ICFGStat.h	/^class ICFGStat : public PTAStat {$/;"	c
ID	include/DisPatch/DisPatch.h	/^    static char ID;$/;"	m	class:DisPatch
ID	include/Util/BreakConstantExpr.h	/^    static char ID;$/;"	m	class:BreakConstantGEPs
ID	include/Util/BreakConstantExpr.h	/^    static char ID;$/;"	m	class:MergeFunctionRets
ID	include/Util/DataFlowUtil.h	/^    static char ID;$/;"	m	class:IteratedDominanceFrontier
ID	include/WPA/Andersen.h	/^    static char ID;$/;"	m	class:Andersen
ID	include/WPA/WPAPass.h	/^    static char ID;$/;"	m	class:WPAPass
ID	lib/DisPatch/DisPatch.cpp	/^char DisPatch::ID = 0;$/;"	m	class:DisPatch	file:
ID	lib/Util/BreakConstantExpr.cpp	/^char BreakConstantGEPs::ID = 0;$/;"	m	class:BreakConstantGEPs	file:
ID	lib/Util/BreakConstantExpr.cpp	/^char MergeFunctionRets::ID = 0;$/;"	m	class:MergeFunctionRets	file:
ID	lib/Util/DataFlowUtil.cpp	/^char IteratedDominanceFrontier::ID = 0;$/;"	m	class:IteratedDominanceFrontier	file:
ID	lib/WPA/WPAPass.cpp	/^char WPAPass::ID = 0;$/;"	m	class:WPAPass	file:
IDToCallSiteMapTy	include/MemoryModel/MemModel.h	/^    typedef llvm::DenseMap<CallSiteID,const Instruction*> IDToCallSiteMapTy;$/;"	t	class:SymbolTableInfo
IDToMemMapTy	include/MemoryModel/MemModel.h	/^    typedef llvm::DenseMap<SymID,MemObj*> IDToMemMapTy;$/;"	t	class:SymbolTableInfo
IDToNodeMap	include/MemoryModel/GenericGraph.h	/^    IDToNodeMapTy IDToNodeMap; \/\/\/< node map$/;"	m	class:GenericGraph
IDToNodeMapTy	include/MemoryModel/GenericGraph.h	/^    typedef llvm::DenseMap<NodeID, NodeType*> IDToNodeMapTy;$/;"	t	class:GenericGraph
IDToSymTyMapTy	include/MemoryModel/MemModel.h	/^    typedef llvm::DenseMap<SymID,SYMTYPE> IDToSymTyMapTy;$/;"	t	class:SymbolTableInfo
ID_VOID_MAIN	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
IN	include/WPA/WPAStat.h	/^        IN,$/;"	e	enum:FlowSensitiveStat::ENUM_INOUT
INCLUDE_MEMORYMODEL_PAGBUILDERFROMFILE_H_	include/MemoryModel/PAGBuilderFromFile.h	31;"	d
INCLUDE_MSSA_SVFGEDGE_H_	include/MSSA/SVFGEdge.h	31;"	d
INCLUDE_MSSA_SVFGNODE_H_	include/MSSA/SVFGNode.h	31;"	d
INCLUDE_UTIL_CASTING_H_	include/Util/Casting.h	9;"	d
INCLUDE_UTIL_CXTSTMT_H_	include/Util/CxtStmt.h	31;"	d
INCLUDE_UTIL_GRAPHPRINTER_H_	include/Util/GraphPrinter.h	32;"	d
INCLUDE_UTIL_ICFGSTAT_H_	include/Util/ICFGStat.h	30;"	d
INCLUDE_UTIL_ICFG_H_	include/Util/ICFG.h	31;"	d
INCLUDE_UTIL_VFGEDGE_H_	include/Util/VFGEdge.h	31;"	d
INCLUDE_UTIL_VFGNODE_H_	include/Util/VFGNode.h	31;"	d
INCLUDE_UTIL_VFG_H_	include/Util/VFG.h	31;"	d
INCLUDE_WPA_TYPEANALYSIS_H_	include/WPA/TypeAnalysis.h	31;"	d
INHERITANCE	include/MemoryModel/CHA.h	/^        INHERITANCE = 0x1, \/\/ inheritance relation$/;"	e	enum:CHEdge::__anon2
INITIAL_PAGES	lib/CUDD/cuddSubsetHB.c	85;"	d	file:
INITIAL_PAGES	lib/CUDD/cuddSubsetSP.c	84;"	d	file:
INITPIDOBJ_H_	include/DisPatch/InitPIDObj.h	2;"	d
INSTANTCE	include/MemoryModel/CHA.h	/^        INSTANTCE = 0x2 \/\/ template-instance relation$/;"	e	enum:CHEdge::__anon2
INTERPROCANAL_H_	include/DisPatch/InterProcAnal.h	2;"	d
IRBuilder	include/Util/BasicTypes.h	/^typedef llvm::IRBuilder<> IRBuilder;$/;"	t
IdToCallSiteMap	include/Util/PTACallGraph.h	/^    typedef std::map<CallSiteID, CallSitePair> IdToCallSiteMap;$/;"	t	class:PTACallGraph
IdToIdMap	include/WPA/CSC.h	/^    typedef llvm::DenseMap<NodeID, NodeID> IdToIdMap;$/;"	t	class:CSC
IeeeDouble	include/CUDD/epd.h	/^typedef struct IeeeDoubleStruct IeeeDouble;$/;"	t	typeref:struct:IeeeDoubleStruct
IeeeDoubleStruct	include/CUDD/epd.h	/^struct IeeeDoubleStruct {	\/* BIG_ENDIAN *\/$/;"	s
IeeeDoubleStruct	include/CUDD/epd.h	/^struct IeeeDoubleStruct {	\/* LITTLE_ENDIAN *\/$/;"	s
IeeeNan	include/CUDD/epd.h	/^typedef struct IeeeNanStruct IeeeNan;$/;"	t	typeref:struct:IeeeNanStruct
IeeeNanStruct	include/CUDD/epd.h	/^struct IeeeNanStruct {	\/* BIG_ENDIAN *\/$/;"	s
IeeeNanStruct	include/CUDD/epd.h	/^struct IeeeNanStruct {	\/* LITTLE_ENDIAN *\/$/;"	s
InEdgeBegin	include/MemoryModel/GenericGraph.h	/^    inline const_iterator InEdgeBegin() const {$/;"	f	class:GenericNode
InEdgeBegin	include/MemoryModel/GenericGraph.h	/^    inline iterator InEdgeBegin() {$/;"	f	class:GenericNode
InEdgeEnd	include/MemoryModel/GenericGraph.h	/^    inline const_iterator InEdgeEnd() const {$/;"	f	class:GenericNode
InEdgeEnd	include/MemoryModel/GenericGraph.h	/^    inline iterator InEdgeEnd() {$/;"	f	class:GenericNode
InEdgeKindToSetMap	include/MemoryModel/PAGNode.h	/^    PAGEdge::PAGKindToEdgeSetMapTy InEdgeKindToSetMap;$/;"	m	class:PAGNode
InEdges	include/MemoryModel/GenericGraph.h	/^    GEdgeSetTy InEdges; \/\/\/< all incoming edge of this node$/;"	m	class:GenericNode
IncDFPTD	include/MemoryModel/PointsToDS.h	/^        IncDFPTD,$/;"	e	enum:PTData::PTDataTY
IncDFPTData	include/MemoryModel/PointsToDFDS.h	/^    IncDFPTData(PTDataTy ty = (PTData<Key,Data>::IncDFPTD)): DFPTData<Key,Data>(ty) {$/;"	f	class:IncDFPTData
IncDFPTData	include/MemoryModel/PointsToDFDS.h	/^class IncDFPTData : public DFPTData<Key,Data> {$/;"	c
IncDFPTDataTy	include/MemoryModel/PointerAnalysis.h	/^    typedef IncDFPTData<NodeID,PointsTo> IncDFPTDataTy;	\/\/\/ Points-to data structure type$/;"	t	class:BVDataPTAImpl
IndexToDDNodeMap	include/Util/Conditions.h	/^    typedef std::map<unsigned,DdNode*> IndexToDDNodeMap;$/;"	t	class:BddCondManager
IndirectSVFGEdge	include/MSSA/SVFGEdge.h	/^    IndirectSVFGEdge(VFGNode* s, VFGNode* d, GEdgeFlag k): VFGEdge(s,d,k) {$/;"	f	class:IndirectSVFGEdge
IndirectSVFGEdge	include/MSSA/SVFGEdge.h	/^class IndirectSVFGEdge : public VFGEdge {$/;"	c
InitPIDObj	include/DisPatch/InitPIDObj.h	/^    InitPIDObj(){ assert(0); };$/;"	f	class:InitPIDObj
InitPIDObj	include/DisPatch/InitPIDObj.h	/^    InitPIDObj(SVFModule &inmodule, unsigned inmaxdist, unsigned inmaxcallercxt, string inconfig){$/;"	f	class:InitPIDObj
InitPIDObj	include/DisPatch/InitPIDObj.h	/^class InitPIDObj: public BinIRWrapper {$/;"	c
InitialGlobal	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::InitialGlobal(const GlobalVariable *gvar, Constant *C,$/;"	f	class:PAGBuilder
InsertElementInst	include/Util/BasicTypes.h	/^typedef llvm::InsertElementInst InsertElementInst;$/;"	t
InsertValueInst	include/Util/BasicTypes.h	/^typedef llvm::InsertValueInst InsertValueInst;$/;"	t
Inst2LabelMap	include/MemoryModel/PAGEdge.h	/^    typedef llvm::DenseMap<const Value*, u32_t> Inst2LabelMap;$/;"	t	class:PAGEdge
Inst2PAGEdgesMap	include/MemoryModel/PAG.h	/^    typedef llvm::DenseMap<const Instruction*,PAGEdgeList> Inst2PAGEdgesMap;$/;"	t	class:PAG
InstSet	include/Util/ThreadCallGraph.h	/^    typedef std::set<const Instruction*> InstSet;$/;"	t	class:ThreadCallGraph
InstToBlockNodeMap	include/Util/ICFG.h	/^    InstToBlockNodeMapTy InstToBlockNodeMap; \/\/\/< map a basic block to its ICFGNode$/;"	m	class:ICFG
InstToBlockNodeMapTy	include/Util/ICFG.h	/^    typedef std::map<const Instruction*, IntraBlockNode *> InstToBlockNodeMapTy;$/;"	t	class:ICFG
InstVec	include/Util/ICFG.h	/^    typedef std::vector<const Instruction*> InstVec;$/;"	t	class:ICFG
InstVector	include/Util/ThreadCallGraph.h	/^    typedef std::vector<const Instruction*> InstVector;$/;"	t	class:ThreadCallGraph
Instruction	include/Util/BasicTypes.h	/^typedef llvm::Instruction Instruction;$/;"	t
IntToPtrInst	include/Util/BasicTypes.h	/^typedef llvm::IntToPtrInst IntToPtrInst;$/;"	t
IntegerType	include/Util/BasicTypes.h	/^typedef llvm::IntegerType IntegerType;$/;"	t
InterBlockNode	include/Util/ICFGNode.h	/^    InterBlockNode(NodeID id, ICFGNodeK k) : ICFGNode(id, k) {$/;"	f	class:InterBlockNode
InterBlockNode	include/Util/ICFGNode.h	/^class InterBlockNode : public ICFGNode {$/;"	c
InterDisjointMRG	include/MSSA/MemPartition.h	/^    InterDisjointMRG(BVDataPTAImpl* p, bool ptrOnly) : IntraDisjointMRG(p, ptrOnly)$/;"	f	class:InterDisjointMRG
InterDisjointMRG	include/MSSA/MemPartition.h	/^class InterDisjointMRG : public IntraDisjointMRG {$/;"	c
InterMSSAPHISVFGNode	include/MSSA/SVFGNode.h	/^    InterMSSAPHISVFGNode(NodeID id, const ActualOUTSVFGNode* ao) : MSSAPHISVFGNode(id, ao->getCallCHI(), MInterPhi), fun(NULL),callInst(ao->getCallSite().getInstruction()) {}$/;"	f	class:InterMSSAPHISVFGNode
InterMSSAPHISVFGNode	include/MSSA/SVFGNode.h	/^    InterMSSAPHISVFGNode(NodeID id, const FormalINSVFGNode* fi) : MSSAPHISVFGNode(id, fi->getEntryChi(), MInterPhi),fun(fi->getFun()),callInst(NULL) {}$/;"	f	class:InterMSSAPHISVFGNode
InterMSSAPHISVFGNode	include/MSSA/SVFGNode.h	/^class InterMSSAPHISVFGNode : public MSSAPHISVFGNode {$/;"	c
InterPHISVFGNode	include/MSSA/SVFG.h	/^typedef InterPHIVFGNode InterPHISVFGNode;$/;"	t
InterPHIVFGNode	include/Util/VFGNode.h	/^    InterPHIVFGNode(NodeID id, const ActualRetVFGNode* ar) : PHIVFGNode(id, ar->getRev(), TInterPhi), fun(NULL),callInst(ar->getCallSite().getInstruction()) {}$/;"	f	class:InterPHIVFGNode
InterPHIVFGNode	include/Util/VFGNode.h	/^    InterPHIVFGNode(NodeID id, const FormalParmVFGNode* fp) : PHIVFGNode(id, fp->getParam(), TInterPhi),fun(fp->getFun()),callInst(NULL) {}$/;"	f	class:InterPHIVFGNode
InterPHIVFGNode	include/Util/VFGNode.h	/^class InterPHIVFGNode : public PHIVFGNode {$/;"	c
InterProcAnal	include/DisPatch/InterProcAnal.h	/^    InterProcAnal(){ assert(0); };$/;"	f	class:InterProcAnal
InterProcAnal	include/DisPatch/InterProcAnal.h	/^    InterProcAnal(SVFModule &inmodule){ assert(0); };$/;"	f	class:InterProcAnal
InterProcAnal	include/DisPatch/InterProcAnal.h	/^    InterProcAnal(SVFModule &inmodule, string infilename, string inarch, uint64_t inbaseoff, uint64_t inbaseaddr){$/;"	f	class:InterProcAnal
InterProcAnal	include/DisPatch/InterProcAnal.h	/^class InterProcAnal: public BinIRWrapper {$/;"	c
IntraBlock	include/Util/ICFGNode.h	/^        IntraBlock, FunEntryBlock, FunExitBlock, FunCallBlock, FunRetBlock$/;"	e	enum:ICFGNode::ICFGNodeK
IntraBlockNode	include/Util/ICFGNode.h	/^    IntraBlockNode(NodeID id, const Instruction *i) : ICFGNode(id, IntraBlock), inst(i) {$/;"	f	class:IntraBlockNode
IntraBlockNode	include/Util/ICFGNode.h	/^class IntraBlockNode : public ICFGNode {$/;"	c
IntraCF	include/Util/ICFGEdge.h	/^		IntraCF,$/;"	e	enum:ICFGEdge::ICFGEdgeK
IntraCFGEdge	include/Util/ICFGEdge.h	/^	IntraCFGEdge(ICFGNode* s, ICFGNode* d): ICFGEdge(s,d,IntraCF) {$/;"	f	class:IntraCFGEdge
IntraCFGEdge	include/Util/ICFGEdge.h	/^class IntraCFGEdge : public ICFGEdge {$/;"	c
IntraDirSVFGEdge	include/Util/VFGEdge.h	/^	IntraDirSVFGEdge(VFGNode* s, VFGNode* d): DirectSVFGEdge(s,d,IntraDirectVF) {$/;"	f	class:IntraDirSVFGEdge
IntraDirSVFGEdge	include/Util/VFGEdge.h	/^class IntraDirSVFGEdge : public DirectSVFGEdge {$/;"	c
IntraDirectVF	include/Util/VFGEdge.h	/^		IntraDirectVF,$/;"	e	enum:VFGEdge::VFGEdgeK
IntraDisjointMRG	include/MSSA/MemPartition.h	/^    IntraDisjointMRG(BVDataPTAImpl* p, bool ptrOnly) : MRGenerator(p, ptrOnly)$/;"	f	class:IntraDisjointMRG
IntraDisjointMRG	include/MSSA/MemPartition.h	/^class IntraDisjointMRG : public MRGenerator {$/;"	c
IntraIndSVFGEdge	include/MSSA/SVFGEdge.h	/^	IntraIndSVFGEdge(VFGNode* s, VFGNode* d): IndirectSVFGEdge(s,d,IntraIndirectVF) {$/;"	f	class:IntraIndSVFGEdge
IntraIndSVFGEdge	include/MSSA/SVFGEdge.h	/^class IntraIndSVFGEdge : public IndirectSVFGEdge {$/;"	c
IntraIndirectVF	include/Util/VFGEdge.h	/^		IntraIndirectVF,$/;"	e	enum:VFGEdge::VFGEdgeK
IntraMSSAPHISVFGNode	include/MSSA/SVFGNode.h	/^    IntraMSSAPHISVFGNode(NodeID id, const MemSSA::PHI* phi): MSSAPHISVFGNode(id, phi, MIntraPhi) {$/;"	f	class:IntraMSSAPHISVFGNode
IntraMSSAPHISVFGNode	include/MSSA/SVFGNode.h	/^class IntraMSSAPHISVFGNode : public MSSAPHISVFGNode {$/;"	c
IntraPHISVFGNode	include/MSSA/SVFG.h	/^typedef IntraPHIVFGNode IntraPHISVFGNode;$/;"	t
IntraPHIVFGNode	include/Util/VFGNode.h	/^    IntraPHIVFGNode(NodeID id, const PAGNode* r): PHIVFGNode(id, r, TIntraPhi) {$/;"	f	class:IntraPHIVFGNode
IntraPHIVFGNode	include/Util/VFGNode.h	/^class IntraPHIVFGNode : public PHIVFGNode {$/;"	c
InvGTraits	include/Util/CFLSolver.h	/^    typedef llvm::GraphTraits<llvm::Inverse<GNODE *> > InvGTraits;$/;"	t	class:CFLSolver
InvokeInst	include/Util/BasicTypes.h	/^typedef llvm::InvokeInst InvokeInst;$/;"	t
IsInfDouble	lib/CUDD/epd.c	/^IsInfDouble(double value)$/;"	f
IsNanDouble	lib/CUDD/epd.c	/^IsNanDouble(double value)$/;"	f
IsNanOrInfDouble	lib/CUDD/epd.c	/^IsNanOrInfDouble(double value)$/;"	f
IteratedDominanceFrontier	include/Util/DataFlowUtil.h	/^    IteratedDominanceFrontier() :$/;"	f	class:IteratedDominanceFrontier
IteratedDominanceFrontier	include/Util/DataFlowUtil.h	/^class IteratedDominanceFrontier: public llvm::DominanceFrontierBase<BasicBlock, false> {$/;"	c
JUMP_UP_PROB	lib/CUDD/cuddAnneal.c	76;"	d	file:
JoinEdgeSet	include/Util/ThreadCallGraph.h	/^    typedef GenericNode<PTACallGraphNode, ThreadJoinEdge>::GEdgeSetTy JoinEdgeSet;$/;"	t	class:ThreadJoinEdge
JoinEdgeSet	include/Util/ThreadCallGraph.h	/^    typedef ThreadJoinEdge::JoinEdgeSet JoinEdgeSet;$/;"	t	class:ThreadCallGraph
KBLU	lib/Util/SVFUtil.cpp	41;"	d	file:
KCYA	lib/Util/SVFUtil.cpp	43;"	d	file:
KGRN	lib/Util/SVFUtil.cpp	39;"	d	file:
KNRM	lib/Util/SVFUtil.cpp	37;"	d	file:
KPUR	lib/Util/SVFUtil.cpp	42;"	d	file:
KRED	lib/Util/SVFUtil.cpp	38;"	d	file:
KWHT	lib/Util/SVFUtil.cpp	44;"	d	file:
KYEL	lib/Util/SVFUtil.cpp	40;"	d	file:
KeepAllSelfCycle	lib/MSSA/SVFGOPT.cpp	/^static std::string KeepAllSelfCycle = "all";$/;"	v	file:
KeepContextSelfCycle	lib/MSSA/SVFGOPT.cpp	/^static std::string KeepContextSelfCycle = "context";$/;"	v	file:
KeepNoneSelfCycle	lib/MSSA/SVFGOPT.cpp	/^static std::string KeepNoneSelfCycle = "none";$/;"	v	file:
LEQA1	lib/CUDD/cuddUtil.c	122;"	d	file:
LEQA2	lib/CUDD/cuddUtil.c	126;"	d	file:
LEQQ1	lib/CUDD/cuddUtil.c	123;"	d	file:
LEQQ2	lib/CUDD/cuddUtil.c	127;"	d	file:
LEQR1	lib/CUDD/cuddUtil.c	124;"	d	file:
LEQR2	lib/CUDD/cuddUtil.c	128;"	d	file:
LEVEL	lib/CUDD/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	lib/DisPatch/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	lib/MSSA/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	lib/Makefile	/^LEVEL=..$/;"	m
LEVEL	lib/MemoryModel/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	lib/Util/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	lib/WPA/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	tools/DisPatch/Makefile	/^LEVEL=..\/..$/;"	m
LEVEL	tools/Makefile	/^LEVEL=..$/;"	m
LIBRARYNAME	lib/CUDD/Makefile	/^LIBRARYNAME=cudd$/;"	m
LIBRARYNAME	lib/DisPatch/Makefile	/^LIBRARYNAME=libmta$/;"	m
LIBRARYNAME	lib/MSSA/Makefile	/^LIBRARYNAME=libmssa$/;"	m
LIBRARYNAME	lib/MemoryModel/Makefile	/^LIBRARYNAME=mem$/;"	m
LIBRARYNAME	lib/Util/Makefile	/^LIBRARYNAME=libmta$/;"	m
LIBRARYNAME	lib/WPA/Makefile	/^LIBRARYNAME=libwpa$/;"	m
LINK_COMPONENTS	tools/DisPatch/Makefile	/^LINK_COMPONENTS := bitreader bitwriter asmparser irreader instrumentation scalaropts ipo codegen$/;"	m
LLVMCallGraph	include/Util/BasicTypes.h	/^typedef llvm::CallGraph LLVMCallGraph;$/;"	t
LLVMContext	include/Util/BasicTypes.h	/^typedef llvm::LLVMContext LLVMContext;$/;"	t
LLVMModuleSet	include/Util/SVFModule.h	/^    LLVMModuleSet() {}$/;"	f	class:LLVMModuleSet
LLVMModuleSet	include/Util/SVFModule.h	/^class LLVMModuleSet {$/;"	c
LLVMModuleSet	lib/Util/SVFModule.cpp	/^LLVMModuleSet::LLVMModuleSet(Module &mod) {$/;"	f	class:LLVMModuleSet
LLVMModuleSet	lib/Util/SVFModule.cpp	/^LLVMModuleSet::LLVMModuleSet(Module *mod) {$/;"	f	class:LLVMModuleSet
LLVMModuleSet	lib/Util/SVFModule.cpp	/^LLVMModuleSet::LLVMModuleSet(const vector<string> &moduleNameVec) {$/;"	f	class:LLVMModuleSet
LOADABLE_MODULE	lib/DisPatch/Makefile	/^LOADABLE_MODULE := 1$/;"	m
LOADABLE_MODULE	lib/MSSA/Makefile	/^LOADABLE_MODULE := 1$/;"	m
LOADABLE_MODULE	lib/Util/Makefile	/^LOADABLE_MODULE := 1$/;"	m
LOADABLE_MODULE	lib/WPA/Makefile	/^LOADABLE_MODULE := 1$/;"	m
LOADMU	include/MSSA/MemSSA.h	/^    typedef LoadMU<Condition> LOADMU;$/;"	t	class:MemSSA
LOADMU	include/MSSA/SVFG.h	/^    typedef MemSSA::LOADMU LOADMU;$/;"	t	class:SVFG
LOCATIONSET_H_	include/MemoryModel/LocationSet.h	34;"	d
LOCMEMMODEL_H_	include/MemoryModel/LocMemModel.h	31;"	d
LOGBPL	lib/CUDD/cuddEssent.c	84;"	d	file:
LOGBPL	lib/CUDD/cuddEssent.c	87;"	d	file:
LOGBPL	lib/CUDD/cuddInteract.c	87;"	d	file:
LOGBPL	lib/CUDD/cuddInteract.c	90;"	d	file:
LOGBPL	lib/CUDD/cuddLinear.c	76;"	d	file:
LOGBPL	lib/CUDD/cuddLinear.c	79;"	d	file:
LSRelation	include/MemoryModel/LocationSet.h	/^    enum LSRelation {$/;"	g	class:LocationSet
LandingPadInst	include/Util/BasicTypes.h	/^typedef llvm::LandingPadInst LandingPadInst;$/;"	t
List	include/Util/WorkList.h	/^    List() {$/;"	f	class:List
List	include/Util/WorkList.h	/^class List {$/;"	c
ListNode	include/Util/WorkList.h	/^        ListNode(Data d) {$/;"	f	class:List::ListNode
ListNode	include/Util/WorkList.h	/^    class ListNode {$/;"	c	class:List
Load	include/MemoryModel/ConsGEdge.h	/^        Addr, Copy, Store, Load, NormalGep, VariantGep$/;"	e	enum:ConstraintEdge::ConstraintEdgeK
Load	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
Load	include/Util/VFGNode.h	/^        Addr, Copy, Gep, Store, Load, Cmp, BinaryOp, TPhi, TIntraPhi, TInterPhi,$/;"	e	enum:VFGNode::VFGNodeK
LoadCGEdge	include/MemoryModel/ConsGEdge.h	/^    LoadCGEdge(ConstraintNode* s, ConstraintNode* d, EdgeID id) : ConstraintEdge(s,d,Load,id) {$/;"	f	class:LoadCGEdge
LoadCGEdge	include/MemoryModel/ConsGEdge.h	/^class LoadCGEdge: public ConstraintEdge {$/;"	c
LoadCGEdgeSet	include/MemoryModel/ConsG.h	/^    ConstraintEdge::ConstraintEdgeSetTy LoadCGEdgeSet;$/;"	m	class:ConstraintGraph
LoadEdges	include/MemoryModel/OfflineConsG.h	/^    typedef std::set<LoadCGEdge*> LoadEdges;$/;"	t	class:OfflineConsG
LoadInst	include/Util/BasicTypes.h	/^typedef llvm::LoadInst LoadInst;$/;"	t
LoadMSSAMU	include/MSSA/MSSAMuChi.h	/^        LoadMSSAMU, CallMSSAMU, RetMSSAMU$/;"	e	enum:MSSAMU::MUTYPE
LoadMU	include/MSSA/MSSAMuChi.h	/^    LoadMU(const BasicBlock* b,const LoadPE* i, const MemRegion* m, Cond c = PathCondAllocator::trueCond()) :$/;"	f	class:LoadMU
LoadMU	include/MSSA/MSSAMuChi.h	/^class LoadMU : public MSSAMU<Cond> {$/;"	c
LoadPE	include/MemoryModel/PAGEdge.h	/^    LoadPE(PAGNode* s, PAGNode* d) : PAGEdge(s,d,PAGEdge::Load) {$/;"	f	class:LoadPE
LoadPE	include/MemoryModel/PAGEdge.h	/^class LoadPE: public PAGEdge {$/;"	c
LoadSVFGNode	include/MSSA/SVFG.h	/^typedef LoadVFGNode LoadSVFGNode;$/;"	t
LoadToMUSetMap	include/MSSA/MemSSA.h	/^    typedef llvm::DenseMap<const LoadPE*, MUSet> LoadToMUSetMap;$/;"	t	class:MemSSA
LoadVFGNode	include/Util/VFGNode.h	/^    LoadVFGNode(NodeID id, const LoadPE* edge): StmtVFGNode(id, edge,Load) {$/;"	f	class:LoadVFGNode
LoadVFGNode	include/Util/VFGNode.h	/^class LoadVFGNode: public StmtVFGNode {$/;"	c
LoadsToMRsMap	include/MSSA/MemRegion.h	/^    typedef llvm::DenseMap<const LoadPE*, MRSet> LoadsToMRsMap;$/;"	t	class:MRGenerator
LoadsToPointsToMap	include/MSSA/MemRegion.h	/^    typedef llvm::DenseMap<const LoadPE*, PointsTo> LoadsToPointsToMap;$/;"	t	class:MRGenerator
LocID	include/MemoryModel/PointsToDFDS.h	/^    typedef NodeID LocID;$/;"	t	class:DFPTData
LocID	include/MemoryModel/PointsToDFDS.h	/^    typedef typename DFPTData<Key,Data>::LocID LocID;$/;"	t	class:IncDFPTData
LocObjTypeInfo	include/MemoryModel/LocMemModel.h	/^    LocObjTypeInfo(const Value* val, Type* t, Size_t max) : ObjTypeInfo(val,t,max) {$/;"	f	class:LocObjTypeInfo
LocObjTypeInfo	include/MemoryModel/LocMemModel.h	/^class LocObjTypeInfo : public ObjTypeInfo {$/;"	c
LocSymTableInfo	include/MemoryModel/LocMemModel.h	/^    LocSymTableInfo() {$/;"	f	class:LocSymTableInfo
LocSymTableInfo	include/MemoryModel/LocMemModel.h	/^class LocSymTableInfo : public SymbolTableInfo {$/;"	c
LocalQueueItem	lib/CUDD/cuddApprox.c	/^typedef struct LocalQueueItem {$/;"	s	file:
LocalQueueItem	lib/CUDD/cuddApprox.c	/^} LocalQueueItem;$/;"	t	typeref:struct:LocalQueueItem	file:
LocationSet	include/MemoryModel/LocationSet.h	/^    LocationSet(Size_t o = 0) : fldIdx(o), byteOffset(o)$/;"	f	class:LocationSet
LocationSet	include/MemoryModel/LocationSet.h	/^    LocationSet(const FieldInfo& fi) : fldIdx(fi.getFlattenFldIdx())$/;"	f	class:LocationSet
LocationSet	include/MemoryModel/LocationSet.h	/^    LocationSet(const LocationSet& ls) : fldIdx(ls.fldIdx)$/;"	f	class:LocationSet
LocationSet	include/MemoryModel/LocationSet.h	/^class LocationSet {$/;"	c
Loop	include/Util/BasicTypes.h	/^typedef llvm::Loop Loop;$/;"	t
LoopInfo	include/Util/BasicTypes.h	/^typedef llvm::LoopInfo LoopInfo;$/;"	t
MAX	include/CUDD/util.h	175;"	d
MAXGEN_RATIO	lib/CUDD/cuddAnneal.c	77;"	d	file:
MAXSHORTINT	lib/CUDD/cuddSubsetSP.c	80;"	d	file:
MDEF	include/MSSA/MemSSA.h	/^    typedef MSSADEF MDEF;$/;"	t	class:MemSSA
MDNode	include/Util/BasicTypes.h	/^typedef llvm::MDNode MDNode;$/;"	t
MDString	include/Util/BasicTypes.h	/^typedef llvm::MDString MDString;$/;"	t
MEMORYREGION_H_	include/MSSA/MemRegion.h	31;"	d
MEMORYSSAPASS_H_	include/MSSA/MemSSA.h	31;"	d
MEMTYPE	include/MemoryModel/MemModel.h	/^    } MEMTYPE;$/;"	t	class:ObjTypeInfo	typeref:enum:ObjTypeInfo::__anon5
MIN	include/CUDD/util.h	176;"	d
MInterPhi	include/Util/VFGNode.h	/^        MPhi, MIntraPhi, MInterPhi, FRet, ARet, AParm, FParm,$/;"	e	enum:VFGNode::VFGNodeK
MIntraPhi	include/Util/VFGNode.h	/^        MPhi, MIntraPhi, MInterPhi, FRet, ARet, AParm, FParm,$/;"	e	enum:VFGNode::VFGNodeK
MMalloc	lib/CUDD/safe_mem.c	/^MMalloc(long size)$/;"	f
MMfree	lib/CUDD/safe_mem.c	/^MMfree(char *obj)$/;"	f
MMoutOfMemory	lib/CUDD/safe_mem.c	/^void (*MMoutOfMemory)(long) = MMout_of_memory;$/;"	v
MMout_of_memory	lib/CUDD/safe_mem.c	/^MMout_of_memory(long size)$/;"	f
MMrealloc	lib/CUDD/safe_mem.c	/^MMrealloc(char *obj, long size)$/;"	f
MODULUS1	lib/CUDD/cuddUtil.c	121;"	d	file:
MODULUS2	lib/CUDD/cuddUtil.c	125;"	d	file:
MPhi	include/Util/VFGNode.h	/^        MPhi, MIntraPhi, MInterPhi, FRet, ARet, AParm, FParm,$/;"	e	enum:VFGNode::VFGNodeK
MRGenerator	include/MSSA/MemRegion.h	/^    MRGenerator(BVDataPTAImpl* p, bool ptrOnly) :$/;"	f	class:MRGenerator
MRGenerator	include/MSSA/MemRegion.h	/^class MRGenerator {$/;"	c
MRID	include/MSSA/MemRegion.h	/^typedef NodeID MRID;$/;"	t
MRSVFGNode	include/MSSA/SVFGNode.h	/^    MRSVFGNode(NodeID id, VFGNodeK k) : VFGNode(id, k) {}$/;"	f	class:MRSVFGNode
MRSVFGNode	include/MSSA/SVFGNode.h	/^class MRSVFGNode : public VFGNode {$/;"	c
MRSet	include/MSSA/MemRegion.h	/^    typedef std::set<const MemRegion*, MemRegion::equalMemRegion> MRSet;$/;"	t	class:MRGenerator
MRSet	include/MSSA/MemSSA.h	/^    typedef MRGenerator::MRSet MRSet;$/;"	t	class:MemSSA
MRVERID	include/MSSA/MemRegion.h	/^typedef NodeID MRVERID;$/;"	t
MRVector	include/MSSA/MemSSA.h	/^    typedef std::vector<const MemRegion*> MRVector;$/;"	t	class:MemSSA
MRVer	include/MSSA/MSSAMuChi.h	/^    MRVer(const MemRegion* m, VERSION v, MSSADef* d) :$/;"	f	class:MRVer
MRVer	include/MSSA/MSSAMuChi.h	/^class MRVer {$/;"	c
MRVerSet	include/MSSA/SVFGEdge.h	/^    typedef std::set<const MRVer*> MRVerSet;$/;"	t	class:IndirectSVFGEdge
MSSACHI	include/MSSA/MSSAMuChi.h	/^    MSSACHI(CHITYPE t, const MemRegion* m, Cond c): MSSADEF(t,m), opVer(NULL), cond(c) {$/;"	f	class:MSSACHI
MSSACHI	include/MSSA/MSSAMuChi.h	/^class MSSACHI : public MSSADEF {$/;"	c
MSSADEF	include/MSSA/MSSAMuChi.h	/^    MSSADEF(DEFTYPE t, const MemRegion* m): type(t), mr(m), resVer(NULL) {$/;"	f	class:MSSADEF
MSSADEF	include/MSSA/MSSAMuChi.h	/^class MSSADEF {$/;"	c
MSSADef	include/MSSA/MSSAMuChi.h	/^    typedef MSSADEF MSSADef;$/;"	t	class:MRVer
MSSAMU	include/MSSA/MSSAMuChi.h	/^    MSSAMU(MUTYPE t, const MemRegion* m, Cond c) : type(t), mr(m), ver(NULL), cond(c)  {$/;"	f	class:MSSAMU
MSSAMU	include/MSSA/MSSAMuChi.h	/^class MSSAMU {$/;"	c
MSSAMUCHI_H_	include/MSSA/MSSAMuChi.h	31;"	d
MSSAPHI	include/MSSA/MSSAMuChi.h	/^    MSSAPHI(const BasicBlock* b, const MemRegion* m, Cond c = PathCondAllocator::trueCond()) :$/;"	f	class:MSSAPHI
MSSAPHI	include/MSSA/MSSAMuChi.h	/^class MSSAPHI : public MSSADEF {$/;"	c
MSSAPHISVFGNode	include/MSSA/SVFGNode.h	/^    MSSAPHISVFGNode(NodeID id, const MemSSA::MDEF* def,VFGNodeK k = MPhi): MRSVFGNode(id, k), res(def) {$/;"	f	class:MSSAPHISVFGNode
MSSAPHISVFGNode	include/MSSA/SVFGNode.h	/^class MSSAPHISVFGNode : public MRSVFGNode {$/;"	c
MSSAVarToDefMap	include/MSSA/SVFG.h	/^    MSSAVarToDefMapTy MSSAVarToDefMap;	\/\/\/< map a memory SSA operator to its definition SVFG node$/;"	m	class:SVFG
MSSAVarToDefMapTy	include/MSSA/SVFG.h	/^    typedef llvm::DenseMap<const MRVer*, NodeID> MSSAVarToDefMapTy;$/;"	t	class:SVFG
MTAANNOTATOR_H_	include/Util/RaceAnnotator.h	9;"	d
MTR_DEFAULT	include/CUDD/mtr.h	94;"	d
MTR_FIXED	include/CUDD/mtr.h	97;"	d
MTR_INLINE	include/CUDD/mtr.h	82;"	d
MTR_INLINE	include/CUDD/mtr.h	89;"	d
MTR_MAXHIGH	include/CUDD/mtr.h	105;"	d
MTR_MAXHIGH	include/CUDD/mtr.h	107;"	d
MTR_NEWNODE	include/CUDD/mtr.h	98;"	d
MTR_RESET	include/CUDD/mtr.h	149;"	d
MTR_SET	include/CUDD/mtr.h	148;"	d
MTR_SOFT	include/CUDD/mtr.h	96;"	d
MTR_TERMINAL	include/CUDD/mtr.h	95;"	d
MTR_TEST	include/CUDD/mtr.h	150;"	d
MTR_UNUSED	include/CUDD/mtr.h	84;"	d
MTR_UNUSED	include/CUDD/mtr.h	86;"	d
MTR_UNUSED	include/CUDD/mtr.h	90;"	d
MTR_UNUSED	lib/CUDD/mtrBasic.c	/^static char rcsid[] MTR_UNUSED = "$Id: mtrBasic.c,v 1.15 2012\/02\/05 01:06:19 fabio Exp $";$/;"	v	file:
MTR_UNUSED	lib/CUDD/mtrGroup.c	/^static char rcsid[] MTR_UNUSED = "$Id: mtrGroup.c,v 1.21 2012\/02\/05 01:06:19 fabio Exp $";$/;"	v	file:
MU	include/MSSA/MemSSA.h	/^    typedef MSSAMU<Condition> MU;$/;"	t	class:MemSSA
MU	include/MSSA/SVFG.h	/^    typedef MemSSA::MU MU;$/;"	t	class:SVFG
MULTI_INHERITANCE	include/MemoryModel/CHA.h	/^        MULTI_INHERITANCE = 0x2, \/\/ multi inheritance class$/;"	e	enum:CHNode::__anon3
MUSet	include/MSSA/MemSSA.h	/^    typedef std::set<MU*> MUSet;$/;"	t	class:MemSSA
MUSet	include/MSSA/SVFG.h	/^    typedef MemSSA::MUSet MUSet;$/;"	t	class:SVFG
MUTYPE	include/MSSA/MSSAMuChi.h	/^    enum MUTYPE {$/;"	g	class:MSSAMU
MV_OOM	lib/CUDD/cuddSymmetry.c	75;"	d	file:
MarkCacheCleanUp	lib/CUDD/cuddGenCof.c	/^MarkCacheCleanUp($/;"	f	file:
MarkCacheCompare	lib/CUDD/cuddGenCof.c	/^MarkCacheCompare($/;"	f	file:
MarkCacheHash	lib/CUDD/cuddGenCof.c	/^MarkCacheHash($/;"	f	file:
MarkCacheKey	lib/CUDD/cuddGenCof.c	/^typedef struct MarkCacheKey {$/;"	s	file:
MarkCacheKey	lib/CUDD/cuddGenCof.c	/^} MarkCacheKey;$/;"	t	typeref:struct:MarkCacheKey	file:
MaxNumOfNodesInSCC	include/Util/PTAStat.h	/^    static const char* MaxNumOfNodesInSCC;	\/\/\/< max Number of nodes in one scc$/;"	m	class:PTAStat
MaxNumOfNodesInSCC	lib/Util/PTAStat.cpp	/^const char* PTAStat:: MaxNumOfNodesInSCC = "MaxNodesInSCC";	\/\/\/< max Number of nodes in one scc cycle$/;"	m	class:PTAStat	file:
MaxPointsToSetSize	include/Util/PTAStat.h	/^    static const char* MaxPointsToSetSize;			\/\/\/< Max points-to size$/;"	m	class:PTAStat
MaxPointsToSetSize	include/WPA/Andersen.h	/^    static Size_t MaxPointsToSetSize;$/;"	m	class:Andersen
MaxPointsToSetSize	lib/Util/PTAStat.cpp	/^const char* PTAStat:: MaxPointsToSetSize = "MaxPtsSetSize";		\/\/\/< Max Points-to set size$/;"	m	class:PTAStat	file:
MaxPointsToSetSize	lib/WPA/Andersen.cpp	/^Size_t Andersen::MaxPointsToSetSize = 0;$/;"	m	class:Andersen	file:
MaxStructSize	include/Util/PTAStat.h	/^    static const char* MaxStructSize;	\/\/\/< Max struct size$/;"	m	class:PTAStat
MaxStructSize	lib/Util/PTAStat.cpp	/^const char* PTAStat:: MaxStructSize = "MaxStructSize";	\/\/\/< Max struct size (bytes)$/;"	m	class:PTAStat	file:
MemObj	include/MemoryModel/MemModel.h	/^class MemObj {$/;"	c
MemObj	lib/MemoryModel/MemModel.cpp	/^MemObj::MemObj(SymID id, const Type* type) :$/;"	f	class:MemObj
MemObj	lib/MemoryModel/MemModel.cpp	/^MemObj::MemObj(const Value *val, SymID id) :$/;"	f	class:MemObj
MemObjToFieldsMap	include/MemoryModel/PAG.h	/^    typedef llvm::DenseMap<NodeID,NodeBS> MemObjToFieldsMap;$/;"	t	class:PAG
MemRegToBBsMap	include/MSSA/MemSSA.h	/^    typedef llvm::DenseMap<const MemRegion*, BBList> MemRegToBBsMap;$/;"	t	class:MemSSA
MemRegToCounterMap	include/MSSA/MemSSA.h	/^    typedef llvm::DenseMap<const MemRegion*, VERSION> MemRegToCounterMap;$/;"	t	class:MemSSA
MemRegToVerStackMap	include/MSSA/MemSSA.h	/^    typedef llvm::DenseMap<const MemRegion*, std::vector<MRVer*> > MemRegToVerStackMap;$/;"	t	class:MemSSA
MemRegion	include/MSSA/MemRegion.h	/^    MemRegion(const PointsTo& cp) :$/;"	f	class:MemRegion
MemRegion	include/MSSA/MemRegion.h	/^class MemRegion {$/;"	c
MemSSA	include/MSSA/MemSSA.h	/^class MemSSA {$/;"	c
MemSSA	lib/MSSA/MemSSA.cpp	/^MemSSA::MemSSA(BVDataPTAImpl* p, bool ptrOnlyMSSA) : df(NULL),dt(NULL) {$/;"	f	class:MemSSA
MemSSADF	include/MSSA/SVFGBuilder.h	/^    MemSSADF() : DominanceFrontier()$/;"	f	class:MemSSADF
MemSSADF	include/MSSA/SVFGBuilder.h	/^class MemSSADF : public DominanceFrontier {$/;"	c
MemSSAStat	include/MSSA/SVFGStat.h	/^class MemSSAStat : public PTAStat {$/;"	c
MemSSAStat	lib/MSSA/SVFGStat.cpp	/^MemSSAStat::MemSSAStat(MemSSA* memSSA) : PTAStat(NULL) {$/;"	f	class:MemSSAStat
MemoryLocation	include/Util/BasicTypes.h	/^typedef llvm::MemoryLocation MemoryLocation;$/;"	t
MergeFunctionRets	include/Util/BreakConstantExpr.h	/^    MergeFunctionRets() : ModulePass(ID) {}$/;"	f	class:MergeFunctionRets
MergeFunctionRets	include/Util/BreakConstantExpr.h	/^class MergeFunctionRets : public ModulePass {$/;"	c
ModRefInfo	include/Util/BasicTypes.h	/^typedef llvm::ModRefInfo ModRefInfo;$/;"	t
Module	include/Util/BasicTypes.h	/^typedef llvm::Module Module;$/;"	t
ModulePass	include/Util/BasicTypes.h	/^typedef llvm::ModulePass ModulePass;$/;"	t
Move	include/CUDD/cuddInt.h	/^typedef struct Move {$/;"	s
Move	include/CUDD/cuddInt.h	/^} Move;$/;"	t	typeref:struct:Move
MtrHalfWord	include/CUDD/mtr.h	/^typedef unsigned int   MtrHalfWord;$/;"	t
MtrHalfWord	include/CUDD/mtr.h	/^typedef unsigned short MtrHalfWord;$/;"	t
MtrNode	include/CUDD/mtr.h	/^typedef struct MtrNode {$/;"	s
MtrNode	include/CUDD/mtr.h	/^} MtrNode;$/;"	t	typeref:struct:MtrNode
Mtr_AllocNode	lib/CUDD/mtrBasic.c	/^Mtr_AllocNode(void)$/;"	f
Mtr_CopyTree	lib/CUDD/mtrBasic.c	/^Mtr_CopyTree($/;"	f
Mtr_CreateFirstChild	lib/CUDD/mtrBasic.c	/^Mtr_CreateFirstChild($/;"	f
Mtr_CreateLastChild	lib/CUDD/mtrBasic.c	/^Mtr_CreateLastChild($/;"	f
Mtr_DeallocNode	lib/CUDD/mtrBasic.c	/^Mtr_DeallocNode($/;"	f
Mtr_DissolveGroup	lib/CUDD/mtrGroup.c	/^Mtr_DissolveGroup($/;"	f
Mtr_FindGroup	lib/CUDD/mtrGroup.c	/^Mtr_FindGroup($/;"	f
Mtr_FreeTree	lib/CUDD/mtrBasic.c	/^Mtr_FreeTree($/;"	f
Mtr_InitGroupTree	lib/CUDD/mtrGroup.c	/^Mtr_InitGroupTree($/;"	f
Mtr_InitTree	lib/CUDD/mtrBasic.c	/^Mtr_InitTree(void)$/;"	f
Mtr_MakeFirstChild	lib/CUDD/mtrBasic.c	/^Mtr_MakeFirstChild($/;"	f
Mtr_MakeGroup	lib/CUDD/mtrGroup.c	/^Mtr_MakeGroup($/;"	f
Mtr_MakeLastChild	lib/CUDD/mtrBasic.c	/^Mtr_MakeLastChild($/;"	f
Mtr_MakeNextSibling	lib/CUDD/mtrBasic.c	/^Mtr_MakeNextSibling($/;"	f
Mtr_PrintGroupedOrder	lib/CUDD/mtrGroup.c	/^Mtr_PrintGroupedOrder($/;"	f
Mtr_PrintGroups	lib/CUDD/mtrGroup.c	/^Mtr_PrintGroups($/;"	f
Mtr_PrintTree	lib/CUDD/mtrBasic.c	/^Mtr_PrintTree($/;"	f
Mtr_ReadGroups	lib/CUDD/mtrGroup.c	/^Mtr_ReadGroups($/;"	f
Mtr_ReorderGroups	lib/CUDD/mtrGroup.c	/^Mtr_ReorderGroups($/;"	f
Mtr_SwapGroups	lib/CUDD/mtrGroup.c	/^Mtr_SwapGroups($/;"	f
NEG	lib/Util/Conditions.cpp	/^DdNode* BddCondManager::NEG(DdNode* lhs) {$/;"	f	class:BddCondManager
NIL	include/CUDD/util.h	44;"	d
NONE	lib/CUDD/cuddDecomp.c	72;"	d	file:
NOTHING	lib/CUDD/cuddApprox.c	90;"	d	file:
NPtr	include/Util/VFGNode.h	/^		FunRet, APIN, APOUT, FPIN, FPOUT, NPtr$/;"	e	enum:VFGNode::VFGNodeK
NUMStatMap	include/Util/PTAStat.h	/^    typedef std::map<const char*,u32_t> NUMStatMap;$/;"	t	class:PTAStat
NameToCHNodesMap	include/MemoryModel/CHA.h	/^    typedef std::map<std::string, CHNodeSetTy> NameToCHNodesMap;$/;"	t	class:CHGraph
NamedMDNode	include/Util/BasicTypes.h	/^typedef llvm::NamedMDNode NamedMDNode;$/;"	t
Node	include/Util/SCC.h	/^    inline GNODE Node(NodeID id) const {$/;"	f	class:SCCDetection
Node	include/Util/WorkList.h	/^    typedef ListNode Node;$/;"	t	class:List
Node	include/WPA/WPASolver.h	/^    inline GNODE* Node(NodeID id) {$/;"	f	class:WPASolver
NodeBS	include/Util/BasicTypes.h	/^typedef llvm::SparseBitVector<> NodeBS;$/;"	t
NodeBinaryStoreBdd	lib/CUDD/dddmpStoreBdd.c	/^NodeBinaryStoreBdd ($/;"	f	file:
NodeData	lib/CUDD/cuddApprox.c	/^typedef struct NodeData {$/;"	s	file:
NodeData	lib/CUDD/cuddApprox.c	/^} NodeData;$/;"	t	typeref:struct:NodeData	file:
NodeData	lib/CUDD/cuddSubsetHB.c	/^struct NodeData {$/;"	s	file:
NodeData_t	lib/CUDD/cuddSubsetHB.c	/^typedef struct NodeData NodeData_t;$/;"	t	typeref:struct:NodeData	file:
NodeDeque	include/Util/BasicTypes.h	/^typedef std::deque<NodeID> NodeDeque;$/;"	t
NodeDist	lib/CUDD/cuddSubsetSP.c	/^struct NodeDist {$/;"	s	file:
NodeDist_t	lib/CUDD/cuddSubsetSP.c	/^typedef struct NodeDist NodeDist_t;$/;"	t	typeref:struct:NodeDist	file:
NodeID	include/Util/BasicTypes.h	/^typedef u32_t NodeID;$/;"	t
NodeID	include/Util/SCC.h	/^    typedef unsigned NodeID ;$/;"	t	class:SCCDetection
NodeIDToNodeIDMap	include/MSSA/SVFGOPT.h	/^    typedef std::map<NodeID, NodeID> NodeIDToNodeIDMap;$/;"	t	class:SVFGOPT
NodeList	include/Util/BasicTypes.h	/^typedef std::list<NodeID> NodeList;$/;"	t
NodeLocationSet	include/MemoryModel/PAG.h	/^    typedef std::pair<NodeID, LocationSet> NodeLocationSet;$/;"	t	class:PAG
NodeLocationSetMap	include/MemoryModel/PAG.h	/^    typedef std::map<NodeLocationSet,NodeID> NodeLocationSetMap;$/;"	t	class:PAG
NodeOffset	include/MemoryModel/PAG.h	/^    typedef std::pair<NodeID, Size_t> NodeOffset;$/;"	t	class:PAG
NodeOffsetMap	include/MemoryModel/PAG.h	/^    typedef llvm::DenseMap<NodeOffset,NodeID,llvm::DenseMapInfo<std::pair<NodeID,Size_t> > > NodeOffsetMap;$/;"	t	class:PAG
NodePair	include/Util/BasicTypes.h	/^typedef std::pair<NodeID, NodeID> NodePair;$/;"	t
NodePairMap	include/Util/BasicTypes.h	/^typedef llvm::DenseMap<NodePair,NodeID,llvm::DenseMapInfo<std::pair<NodeID,NodeID> > > NodePairMap;$/;"	t
NodePairSet	include/Util/BasicTypes.h	/^typedef llvm::DenseSet<NodePair,llvm::DenseMapInfo<std::pair<NodeID,NodeID> > > NodePairSet;$/;"	t
NodePairSetMap	include/MemoryModel/PAG.h	/^    typedef std::map<NodePair,NodeID> NodePairSetMap;$/;"	t	class:PAG
NodeRef	include/MSSA/SVFG.h	/^    typedef SVFGNode *NodeRef;$/;"	t	struct:llvm::GraphTraits
NodeRef	include/MemoryModel/CHA.h	/^    typedef CHNode *NodeRef;$/;"	t	struct:llvm::GraphTraits
NodeRef	include/MemoryModel/ConsG.h	/^    typedef ConstraintNode *NodeRef;$/;"	t	struct:llvm::GraphTraits
NodeRef	include/MemoryModel/OfflineConsG.h	/^typedef ConstraintNode *NodeRef;$/;"	t	struct:llvm::GraphTraits
NodeRef	include/MemoryModel/PAG.h	/^    typedef PAGNode *NodeRef;$/;"	t	struct:llvm::GraphTraits
NodeRef	include/Util/ICFG.h	/^    typedef ICFGNode *NodeRef;$/;"	t	struct:llvm::GraphTraits
NodeRef	include/Util/PTACallGraph.h	/^    typedef PTACallGraphNode *NodeRef;$/;"	t	struct:llvm::GraphTraits
NodeRef	include/Util/VFG.h	/^    typedef VFGNode *NodeRef;$/;"	t	struct:llvm::GraphTraits
NodeSet	include/Util/BasicTypes.h	/^typedef std::set<NodeID> NodeSet;$/;"	t
NodeStack	include/Util/BasicTypes.h	/^typedef std::stack<NodeID> NodeStack;$/;"	t
NodeStat	lib/CUDD/cuddDecomp.c	/^typedef struct  NodeStat {$/;"	s	file:
NodeStat	lib/CUDD/cuddDecomp.c	/^} NodeStat;$/;"	t	typeref:struct:NodeStat	file:
NodeStoreRecurAdd	lib/CUDD/dddmpStoreAdd.c	/^NodeStoreRecurAdd ($/;"	f	file:
NodeStoreRecurBdd	lib/CUDD/dddmpStoreBdd.c	/^NodeStoreRecurBdd ($/;"	f	file:
NodeStrides	include/WPA/AndersenSFR.h	/^    typedef llvm::DenseMap<NodeID, NodeBS> NodeStrides;$/;"	t	class:AndersenSFR
NodeTextStoreAdd	lib/CUDD/dddmpStoreAdd.c	/^NodeTextStoreAdd ($/;"	f	file:
NodeTextStoreBdd	lib/CUDD/dddmpStoreBdd.c	/^NodeTextStoreBdd ($/;"	f	file:
NodeToNodeMap	include/MemoryModel/PAG.h	/^    typedef std::map<NodeID, NodeID> NodeToNodeMap;$/;"	t	class:PAG
NodeToNodeMap	include/Util/SCC.h	/^    typedef std::map<NodeID,NodeID > NodeToNodeMap;$/;"	t	class:SCCDetection
NodeToNodeMap	include/WPA/AndersenSFR.h	/^    typedef llvm::DenseMap<NodeID, NodeID> NodeToNodeMap;$/;"	t	class:AndersenSCD
NodeToPTSSMap	include/MSSA/MemRegion.h	/^    typedef std::map<NodeID, NodeBS> NodeToPTSSMap;$/;"	t	class:MRGenerator
NodeToRepMap	include/MemoryModel/ConsG.h	/^    typedef llvm::DenseMap<NodeID, NodeID> NodeToRepMap;$/;"	t	class:ConstraintGraph
NodeToSubsMap	include/MemoryModel/ConsG.h	/^    typedef llvm::DenseMap<NodeID, NodeBS> NodeToSubsMap;$/;"	t	class:ConstraintGraph
NodeType	include/MemoryModel/GenericGraph.h	/^    typedef NodeTy NodeType;$/;"	t	class:GenericEdge
NodeType	include/MemoryModel/GenericGraph.h	/^    typedef NodeTy NodeType;$/;"	t	class:GenericGraph
NodeType	include/MemoryModel/GenericGraph.h	/^    typedef NodeTy NodeType;$/;"	t	class:GenericNode
NodeType	include/MemoryModel/GenericGraph.h	/^    typedef NodeTy NodeType;$/;"	t	struct:llvm::GraphTraits
NodeType	lib/MSSA/SVFG.cpp	/^    typedef SVFGNode NodeType;$/;"	t	struct:llvm::DOTGraphTraits	file:
NodeType	lib/MemoryModel/CHA.cpp	/^    typedef CHNode NodeType;$/;"	t	struct:llvm::DOTGraphTraits	file:
NodeType	lib/MemoryModel/ConsG.cpp	/^    typedef ConstraintNode NodeType;$/;"	t	struct:llvm::DOTGraphTraits	file:
NodeType	lib/MemoryModel/OfflineConsG.cpp	/^        typedef ConstraintNode NodeType;$/;"	t	struct:llvm::DOTGraphTraits	file:
NodeType	lib/MemoryModel/PAG.cpp	/^    typedef PAGNode NodeType;$/;"	t	struct:llvm::DOTGraphTraits	file:
NodeType	lib/Util/ICFG.cpp	/^    typedef ICFGNode NodeType;$/;"	t	struct:llvm::DOTGraphTraits	file:
NodeType	lib/Util/PTACallGraph.cpp	/^    typedef PTACallGraphNode NodeType;$/;"	t	struct:llvm::DOTGraphTraits	file:
NodeType	lib/Util/VFG.cpp	/^    typedef VFGNode NodeType;$/;"	t	struct:llvm::DOTGraphTraits	file:
NodeVector	include/Util/BasicTypes.h	/^typedef std::vector<NodeID> NodeVector;$/;"	t
Node_Index	include/Util/SCC.h	/^    inline NodeID Node_Index(GNODE node) const {$/;"	f	class:SCCDetection
Node_Index	include/WPA/WPASolver.h	/^    inline NodeID Node_Index(GNODE node) {$/;"	f	class:WPASolver
NonOverlap	include/MemoryModel/LocationSet.h	/^        NonOverlap, Overlap, Subset, Superset, Same$/;"	e	enum:LocationSet::LSRelation
NormCallGraph	include/Util/PTACallGraph.h	/^        NormCallGraph, ThdCallGraph$/;"	e	enum:PTACallGraph::CGEK
NormalGep	include/MemoryModel/ConsGEdge.h	/^        Addr, Copy, Store, Load, NormalGep, VariantGep$/;"	e	enum:ConstraintEdge::ConstraintEdgeK
NormalGep	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
NormalGepCGEdge	include/MemoryModel/ConsGEdge.h	/^    NormalGepCGEdge(ConstraintNode* s, ConstraintNode* d, const LocationSet& l, EdgeID id)$/;"	f	class:NormalGepCGEdge
NormalGepCGEdge	include/MemoryModel/ConsGEdge.h	/^class NormalGepCGEdge : public GepCGEdge {$/;"	c
NormalGepPE	include/MemoryModel/PAGEdge.h	/^    NormalGepPE(PAGNode* s, PAGNode* d, const LocationSet& l) : GepPE(s,d,PAGEdge::NormalGep), ls(l)$/;"	f	class:NormalGepPE
NormalGepPE	include/MemoryModel/PAGEdge.h	/^class NormalGepPE : public GepPE {$/;"	c
NormalizePointsTo	include/MemoryModel/PointerAnalysis.h	/^    virtual void NormalizePointsTo() {$/;"	f	class:CondPTAImpl
NullPtr	include/MemoryModel/MemModel.h	/^    NullPtr,$/;"	e	enum:SYMTYPE
NullPtrSVFGNode	include/MSSA/SVFG.h	/^typedef NullPtrVFGNode NullPtrSVFGNode;$/;"	t
NullPtrVFGNode	include/Util/VFGNode.h	/^    NullPtrVFGNode(NodeID id, const PAGNode* n) : VFGNode(id,NPtr), node(n) {$/;"	f	class:NullPtrVFGNode
NullPtrVFGNode	include/Util/VFGNode.h	/^class NullPtrVFGNode : public VFGNode {$/;"	c
NumOfAddrs	include/Util/PTAStat.h	/^    static const char* NumOfAddrs;		\/\/\/< PAG addr edge$/;"	m	class:PTAStat
NumOfAddrs	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfAddrs = "AddrsNum";		\/\/\/< PAG addr edge$/;"	m	class:PTAStat	file:
NumOfAveragePtsInRegion	include/MSSA/SVFGStat.h	/^    static const char* NumOfAveragePtsInRegion;	\/\/\/< Number of average points-to set in region.$/;"	m	class:MemSSAStat
NumOfAveragePtsInRegion	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfAveragePtsInRegion = "AverageRegSize";	\/\/\/< Number of average points-to set in region.$/;"	m	class:MemSSAStat	file:
NumOfBBHasMSSAPhi	include/MSSA/SVFGStat.h	/^    static const char* NumOfBBHasMSSAPhi;	\/\/\/< Number of basic blocks which have mssa phi$/;"	m	class:MemSSAStat
NumOfBBHasMSSAPhi	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfBBHasMSSAPhi = "BBHasMSSAPhi";	\/\/\/< Number of basic blocks which have mssa phi$/;"	m	class:MemSSAStat	file:
NumOfCSChi	include/MSSA/SVFGStat.h	/^    static const char* NumOfCSChi;	\/\/\/< Number of call site chi$/;"	m	class:MemSSAStat
NumOfCSChi	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfCSChi = "CSChiNode";	\/\/\/< Number of call site chi$/;"	m	class:MemSSAStat	file:
NumOfCSHasChi	include/MSSA/SVFGStat.h	/^    static const char* NumOfCSHasChi;	\/\/\/< Number of call sites which have chi$/;"	m	class:MemSSAStat
NumOfCSHasChi	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfCSHasChi = "CSHasChi";	\/\/\/< Number of call sites which have chi$/;"	m	class:MemSSAStat	file:
NumOfCSHasMu	include/MSSA/SVFGStat.h	/^    static const char* NumOfCSHasMu;	\/\/\/< Number of call sites which have mu$/;"	m	class:MemSSAStat
NumOfCSHasMu	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfCSHasMu = "CSHasMu";	\/\/\/< Number of call sites which have mu$/;"	m	class:MemSSAStat	file:
NumOfCSMu	include/MSSA/SVFGStat.h	/^    static const char* NumOfCSMu;	\/\/\/< Number of call site mu$/;"	m	class:MemSSAStat
NumOfCSMu	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfCSMu = "CSMuNode";	\/\/\/< Number of call site mu$/;"	m	class:MemSSAStat	file:
NumOfCalls	include/Util/PTAStat.h	/^    static const char* NumOfCalls;		\/\/\/< PAG call edge$/;"	m	class:PTAStat
NumOfCalls	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfCalls = "CallsNum";		\/\/\/< PAG call edge$/;"	m	class:PTAStat	file:
NumOfConstantObjs	include/Util/PTAStat.h	/^    static const char* NumOfConstantObjs;	\/\/\/< PAG object node which is purely constant$/;"	m	class:PTAStat
NumOfConstantObjs	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfConstantObjs = "ConstantObj";	\/\/\/< PAG object node which is purely scalar$/;"	m	class:PTAStat	file:
NumOfCopys	include/Util/PTAStat.h	/^    static const char* NumOfCopys;		\/\/\/< PAG copy edge$/;"	m	class:PTAStat
NumOfCopys	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfCopys = "CopysNum";		\/\/\/< PAG copy edge$/;"	m	class:PTAStat	file:
NumOfCycles	include/Util/PTAStat.h	/^    static const char* NumOfCycles;   \/\/\/< Number of scc cycles detected$/;"	m	class:PTAStat
NumOfCycles	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfCycles = "TotalCycleNum";   \/\/\/< Number of scc cycles detected$/;"	m	class:PTAStat	file:
NumOfEntryChi	include/MSSA/SVFGStat.h	/^    static const char* NumOfEntryChi;	\/\/\/< Number of function entry chi$/;"	m	class:MemSSAStat
NumOfEntryChi	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfEntryChi = "FunEntryChi";	\/\/\/< Number of function entry chi$/;"	m	class:MemSSAStat	file:
NumOfFieldExpand	include/Util/PTAStat.h	/^    static const char* NumOfFieldExpand;$/;"	m	class:PTAStat
NumOfFieldExpand	lib/Util/PTAStat.cpp	/^const char* PTAStat::NumOfFieldExpand = "NumOfFieldExpand";$/;"	m	class:PTAStat	file:
NumOfFunHasEntryChi	include/MSSA/SVFGStat.h	/^    static const char* NumOfFunHasEntryChi;	\/\/\/< Number of functions which have entry chi$/;"	m	class:MemSSAStat
NumOfFunHasEntryChi	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfFunHasEntryChi = "FunHasEntryChi";	\/\/\/< Number of functions which have entry chi$/;"	m	class:MemSSAStat	file:
NumOfFunHasRetMu	include/MSSA/SVFGStat.h	/^    static const char* NumOfFunHasRetMu;	\/\/\/< Number of functions which have return mu$/;"	m	class:MemSSAStat
NumOfFunHasRetMu	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfFunHasRetMu = "FunHasRetMu";	\/\/\/< Number of functions which have return mu$/;"	m	class:MemSSAStat	file:
NumOfFunctionObjs	include/Util/PTAStat.h	/^    static const char* NumOfFunctionObjs;	\/\/\/< Function numbers$/;"	m	class:PTAStat
NumOfFunctionObjs	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfFunctionObjs = "FunctionObjs";	\/\/\/< function numbers$/;"	m	class:PTAStat	file:
NumOfGepFieldObjects	include/Util/PTAStat.h	/^    static const char* NumOfGepFieldObjects;	\/\/\/< PAG gep object node (field obj, dynamically created dummy node)$/;"	m	class:PTAStat
NumOfGepFieldObjects	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfGepFieldObjects = "DYFieldObjs";	\/\/\/< PAG gep object node (field obj, dynamically created dummy node)$/;"	m	class:PTAStat	file:
NumOfGepFieldPointers	include/Util/PTAStat.h	/^    static const char* NumOfGepFieldPointers;	\/\/\/< PAG gep value node (field value, dynamically created dummy node)$/;"	m	class:PTAStat
NumOfGepFieldPointers	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfGepFieldPointers = "DYFieldPtrs";	\/\/\/< PAG gep value node (field value, dynamically created dummy node)$/;"	m	class:PTAStat	file:
NumOfGeps	include/Util/PTAStat.h	/^    static const char* NumOfGeps;		\/\/\/< PAG gep edge$/;"	m	class:PTAStat
NumOfGeps	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfGeps = "GepsNum";		\/\/\/< PAG gep edge$/;"	m	class:PTAStat	file:
NumOfGlobalObjs	include/Util/PTAStat.h	/^    static const char* NumOfGlobalObjs;	\/\/\/< PAG global object node$/;"	m	class:PTAStat
NumOfGlobalObjs	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfGlobalObjs = "GlobalObjs";	\/\/\/< PAG global object node$/;"	m	class:PTAStat	file:
NumOfHeapObjs	include/Util/PTAStat.h	/^    static const char* NumOfHeapObjs;	\/\/\/< PAG heap object node$/;"	m	class:PTAStat
NumOfHeapObjs	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfHeapObjs  = "HeapObjs";	\/\/\/< PAG heap object node$/;"	m	class:PTAStat	file:
NumOfIndirectCallSites	include/Util/PTAStat.h	/^    static const char* NumOfIndirectCallSites;	\/\/\/< Number of indirect callsites$/;"	m	class:PTAStat
NumOfIndirectCallSites	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfIndirectCallSites = "IndCallSites";	\/\/\/< Number of indirect callsites$/;"	m	class:PTAStat	file:
NumOfIndirectEdgeSolved	include/Util/PTAStat.h	/^    static const char* NumOfIndirectEdgeSolved;	\/\/\/< Number of indirect calledge resolved$/;"	m	class:PTAStat
NumOfIndirectEdgeSolved	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfIndirectEdgeSolved = "IndEdgeSolved";	\/\/\/< Number of indirect calledge resolved$/;"	m	class:PTAStat	file:
NumOfIterations	include/Util/PTAStat.h	/^    static const char* NumOfIterations;	\/\/\/< Number of iterations during resolution$/;"	m	class:PTAStat
NumOfIterations	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfIterations = "Iterations";	\/\/\/< Number of iterations during resolution$/;"	m	class:PTAStat	file:
NumOfLoadHasMu	include/MSSA/SVFGStat.h	/^    static const char* NumOfLoadHasMu;	\/\/\/< Number of loads which have mu$/;"	m	class:MemSSAStat
NumOfLoadHasMu	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfLoadHasMu = "LoadHasMu";	\/\/\/< Number of loads which have mu$/;"	m	class:MemSSAStat	file:
NumOfLoadMu	include/MSSA/SVFGStat.h	/^    static const char* NumOfLoadMu;	\/\/\/< Number of load mu$/;"	m	class:MemSSAStat
NumOfLoadMu	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfLoadMu = "LoadMuNode";	\/\/\/< Number of load mu$/;"	m	class:MemSSAStat	file:
NumOfLoads	include/Util/PTAStat.h	/^    static const char* NumOfLoads;		\/\/\/< PAG load edge$/;"	m	class:PTAStat
NumOfLoads	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfLoads = "LoadsNum";		\/\/\/< PAG load edge$/;"	m	class:PTAStat	file:
NumOfMSSAPhi	include/MSSA/SVFGStat.h	/^    static const char* NumOfMSSAPhi;	\/\/\/< Number of mssa phi$/;"	m	class:MemSSAStat
NumOfMSSAPhi	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfMSSAPhi = "MSSAPhi";	\/\/\/< Number of non-top level ptr phi$/;"	m	class:MemSSAStat	file:
NumOfMaxRegion	include/MSSA/SVFGStat.h	/^    static const char* NumOfMaxRegion;	\/\/\/< Number of max points-to set in region.$/;"	m	class:MemSSAStat
NumOfMaxRegion	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfMaxRegion = "MaxRegSize";	\/\/\/< Number of max points-to set in region.$/;"	m	class:MemSSAStat	file:
NumOfMemObjects	include/Util/PTAStat.h	/^    static const char* NumOfMemObjects;	\/\/\/< PAG object node, each of them maps to a llvm value$/;"	m	class:PTAStat
NumOfMemObjects	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfMemObjects = "MemObjects";	\/\/\/< PAG object node, each of them maps to a llvm value$/;"	m	class:PTAStat	file:
NumOfMemRegions	include/MSSA/SVFGStat.h	/^    static const char* NumOfMemRegions;	\/\/\/< Number of memory regions$/;"	m	class:MemSSAStat
NumOfMemRegions	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfMemRegions = "MemRegions";	\/\/\/< Number of memory regions$/;"	m	class:MemSSAStat	file:
NumOfNodesInCycles	include/Util/PTAStat.h	/^    static const char* NumOfNodesInCycles; \/\/\/< Number of nodes in cycles detected$/;"	m	class:PTAStat
NumOfNodesInCycles	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfNodesInCycles = "NodesInCycles"; \/\/\/< Number of nodes in cycles detected$/;"	m	class:PTAStat	file:
NumOfNonPtrObjs	include/Util/PTAStat.h	/^    static const char* NumOfNonPtrObjs;	\/\/\/< PAG object node which is non pointer type object (do not have pts)$/;"	m	class:PTAStat
NumOfNonPtrObjs	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfNonPtrObjs = "NonPtrObj";	\/\/\/< PAG object node which is non pointer type object (do not have pts)$/;"	m	class:PTAStat	file:
NumOfNullPointer	include/Util/PTAStat.h	/^    static const char* NumOfNullPointer;	\/\/\/< Number of pointers points-to null$/;"	m	class:PTAStat
NumOfNullPointer	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfNullPointer = "NullPointer";	\/\/\/< Number of pointers points-to null$/;"	m	class:PTAStat	file:
NumOfObjsHasConstArray	include/Util/PTAStat.h	/^    static const char* NumOfObjsHasConstArray;	\/\/\/< PAG object node has const array (maybe nested with struct)$/;"	m	class:PTAStat
NumOfObjsHasConstArray	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfObjsHasConstArray = "ConstArrayObj";	\/\/\/< PAG object node has const array (maybe nested with struct)$/;"	m	class:PTAStat	file:
NumOfObjsHasConstStruct	include/Util/PTAStat.h	/^    static const char* NumOfObjsHasConstStruct;	\/\/\/< PAG object node has const struct (maybe nested with array)$/;"	m	class:PTAStat
NumOfObjsHasConstStruct	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfObjsHasConstStruct = "ConstStructObj";	\/\/\/< PAG object node has const struct (maybe nested with array)$/;"	m	class:PTAStat	file:
NumOfObjsHasVarArray	include/Util/PTAStat.h	/^    static const char* NumOfObjsHasVarArray;	\/\/\/< PAG object node has var array (maybe nested with struct)$/;"	m	class:PTAStat
NumOfObjsHasVarArray	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfObjsHasVarArray = "VarArrayObj";	\/\/\/< PAG object node has array (maybe nested with struct)$/;"	m	class:PTAStat	file:
NumOfObjsHasVarStruct	include/Util/PTAStat.h	/^    static const char* NumOfObjsHasVarStruct;	\/\/\/< PAG object node has var struct (maybe nested with array)$/;"	m	class:PTAStat
NumOfObjsHasVarStruct	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfObjsHasVarStruct = "VarStructObj";	\/\/\/< PAG object node has struct (maybe nested with array)$/;"	m	class:PTAStat	file:
NumOfPWCCycles	include/Util/PTAStat.h	/^    static const char* NumOfPWCCycles;   \/\/\/< Number of scc cycles detected$/;"	m	class:PTAStat
NumOfPWCCycles	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfPWCCycles = "TotalPWCCycleNum";   \/\/\/< Number of pwc scc cycles detected$/;"	m	class:PTAStat	file:
NumOfPointers	include/Util/PTAStat.h	/^    static const char* NumOfPointers;	\/\/\/< PAG value node, each of them maps to a llvm value$/;"	m	class:PTAStat
NumOfPointers	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfPointers = "Pointers";	\/\/\/< PAG value node, each of them maps to a llvm value$/;"	m	class:PTAStat	file:
NumOfProcessedAddrs	include/Util/PTAStat.h	/^    static const char* NumOfProcessedAddrs;		\/\/\/< PAG processed addr edge$/;"	m	class:PTAStat
NumOfProcessedAddrs	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfProcessedAddrs = "AddrProcessed";		\/\/\/< PAG addr processed edge$/;"	m	class:PTAStat	file:
NumOfProcessedCopys	include/Util/PTAStat.h	/^    static const char* NumOfProcessedCopys;		\/\/\/< PAG processed copy edge$/;"	m	class:PTAStat
NumOfProcessedCopys	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfProcessedCopys = "CopyProcessed";		\/\/\/< PAG copy processed edge$/;"	m	class:PTAStat	file:
NumOfProcessedGeps	include/Util/PTAStat.h	/^    static const char* NumOfProcessedGeps;		\/\/\/< PAG processed gep edge$/;"	m	class:PTAStat
NumOfProcessedGeps	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfProcessedGeps = "GepProcessed";		\/\/\/< PAG gep processed edge$/;"	m	class:PTAStat	file:
NumOfProcessedLoads	include/Util/PTAStat.h	/^    static const char* NumOfProcessedLoads;		\/\/\/< PAG processed load edge$/;"	m	class:PTAStat
NumOfProcessedLoads	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfProcessedLoads = "LoadProcessed";		\/\/\/< PAG load processed edge$/;"	m	class:PTAStat	file:
NumOfProcessedStores	include/Util/PTAStat.h	/^    static const char* NumOfProcessedStores;	\/\/\/< PAG processed store edge$/;"	m	class:PTAStat
NumOfProcessedStores	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfProcessedStores = "StoreProcessed";		\/\/\/< PAG store processed edge$/;"	m	class:PTAStat	file:
NumOfRetMu	include/MSSA/SVFGStat.h	/^    static const char* NumOfRetMu;	\/\/\/< Number of function return mu$/;"	m	class:MemSSAStat
NumOfRetMu	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfRetMu = "FunRetMu";	\/\/\/< Number of function return mu$/;"	m	class:MemSSAStat	file:
NumOfReturns	include/Util/PTAStat.h	/^    static const char* NumOfReturns;	\/\/\/< PAG return edge$/;"	m	class:PTAStat
NumOfReturns	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfReturns = "ReturnsNum";	\/\/\/< PAG return edge$/;"	m	class:PTAStat	file:
NumOfSCCDetection	include/Util/PTAStat.h	/^    static const char* NumOfSCCDetection; \/\/\/< Number of scc detection performed$/;"	m	class:PTAStat
NumOfSCCDetection	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfSCCDetection = "NumOfSCCDetect";   \/\/\/< Number of scc detection performed$/;"	m	class:PTAStat	file:
NumOfSfr	include/Util/PTAStat.h	/^    static const char* NumOfSfr;                \/\/\/< num of field representatives$/;"	m	class:PTAStat
NumOfSfr	lib/Util/PTAStat.cpp	/^const char* PTAStat::NumOfSfr = "NumOfSFRs";                    \/\/\/< number of field representatives$/;"	m	class:PTAStat	file:
NumOfStackObjs	include/Util/PTAStat.h	/^    static const char* NumOfStackObjs;	\/\/\/< PAG stack object node$/;"	m	class:PTAStat
NumOfStackObjs	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfStackObjs = "StackObjs";	\/\/\/< PAG stack object node$/;"	m	class:PTAStat	file:
NumOfStoreChi	include/MSSA/SVFGStat.h	/^    static const char* NumOfStoreChi;	\/\/\/< Number of store chi$/;"	m	class:MemSSAStat
NumOfStoreChi	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfStoreChi = "StoreChiNode";	\/\/\/< Number of store chi$/;"	m	class:MemSSAStat	file:
NumOfStoreHasChi	include/MSSA/SVFGStat.h	/^    static const char* NumOfStoreHasChi;	\/\/\/< Number of stores which have chi$/;"	m	class:MemSSAStat
NumOfStoreHasChi	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::NumOfStoreHasChi = "StoreHasChi";	\/\/\/< Number of stores which have chi$/;"	m	class:MemSSAStat	file:
NumOfStores	include/Util/PTAStat.h	/^    static const char* NumOfStores;		\/\/\/< PAG store edge$/;"	m	class:PTAStat
NumOfStores	lib/Util/PTAStat.cpp	/^const char* PTAStat:: NumOfStores = "StoresNum";		\/\/\/< PAG store edge$/;"	m	class:PTAStat	file:
NumberNodeRecur	lib/CUDD/dddmpDdNodeBdd.c	/^NumberNodeRecur($/;"	f	file:
NumberNodeRecurAdd	lib/CUDD/dddmpNodeAdd.c	/^NumberNodeRecurAdd ($/;"	f	file:
NumberNodeRecurBdd	lib/CUDD/dddmpNodeBdd.c	/^NumberNodeRecurBdd ($/;"	f	file:
NumberNodeRecurCnf	lib/CUDD/dddmpNodeCnf.c	/^NumberNodeRecurCnf($/;"	f	file:
NumberOfFieldInsensitiveObj	include/Util/PTAStat.h	/^    static const char* NumberOfFieldInsensitiveObj;$/;"	m	class:PTAStat
NumberOfFieldInsensitiveObj	lib/Util/PTAStat.cpp	/^const char* PTAStat::NumberOfFieldInsensitiveObj = "FIObjNum";$/;"	m	class:PTAStat	file:
NumberOfFieldSensitiveObj	include/Util/PTAStat.h	/^    static const char* NumberOfFieldSensitiveObj;$/;"	m	class:PTAStat
NumberOfFieldSensitiveObj	lib/Util/PTAStat.cpp	/^const char* PTAStat::NumberOfFieldSensitiveObj = "FSObjNum";$/;"	m	class:PTAStat	file:
OBJECTANDSYMBOL_H_	include/MemoryModel/MemModel.h	31;"	d
OFFLINECONSG_H	include/MemoryModel/OfflineConsG.h	31;"	d
OPIncomingBBs	include/Util/VFGNode.h	/^    typedef llvm::DenseMap<u32_t,const BasicBlock*> OPIncomingBBs;$/;"	t	class:IntraPHIVFGNode
OPVers	include/MSSA/MSSAMuChi.h	/^    typedef llvm::DenseMap<u32_t,const MRVer*> OPVers;$/;"	t	class:MSSAPHI
OPVers	include/MSSA/SVFGNode.h	/^    typedef llvm::DenseMap<u32_t,const MRVer*> OPVers;$/;"	t	class:MSSAPHISVFGNode
OPVers	include/Util/VFGNode.h	/^    typedef std::map<u32_t,const PAGNode*> OPVers;$/;"	t	class:BinaryOPVFGNode
OPVers	include/Util/VFGNode.h	/^    typedef std::map<u32_t,const PAGNode*> OPVers;$/;"	t	class:CmpVFGNode
OPVers	include/Util/VFGNode.h	/^    typedef std::map<u32_t,const PAGNode*> OPVers;$/;"	t	class:PHIVFGNode
OR	lib/Util/Conditions.cpp	/^DdNode* BddCondManager::OR(DdNode* lhs, DdNode* rhs) {$/;"	f	class:BddCondManager
ORIGSVFGK	include/Util/VFG.h	/^        ORIGSVFGK, PTRONLYSVFGK$/;"	e	enum:VFG::VFGK
OSCC	include/MemoryModel/OfflineConsG.h	/^    typedef SCCDetection<OfflineConsG*> OSCC;$/;"	t	class:OfflineConsG
OSCC	include/WPA/Andersen.h	/^    typedef SCCDetection<OfflineConsG*> OSCC;$/;"	t	class:AndersenHCD
OUT	include/WPA/WPAStat.h	/^        OUT$/;"	e	enum:FlowSensitiveStat::ENUM_INOUT
ObjNode	include/MemoryModel/PAGNode.h	/^        ObjNode,$/;"	e	enum:PAGNode::PNODEK
ObjPN	include/MemoryModel/PAGNode.h	/^    ObjPN(const Value* val, NodeID i, const MemObj* m, PNODEK ty = ObjNode) :$/;"	f	class:ObjPN
ObjPN	include/MemoryModel/PAGNode.h	/^class ObjPN: public PAGNode {$/;"	c
ObjSym	include/MemoryModel/MemModel.h	/^    ObjSym,$/;"	e	enum:SYMTYPE
ObjTypeInfo	include/MemoryModel/MemModel.h	/^    ObjTypeInfo(const Value* val, const Type* t, u32_t max) :$/;"	f	class:ObjTypeInfo
ObjTypeInfo	include/MemoryModel/MemModel.h	/^    ObjTypeInfo(u32_t max, const Type* t) : type(t), flags(0), maxOffsetLimit(max) {$/;"	f	class:ObjTypeInfo
ObjTypeInfo	include/MemoryModel/MemModel.h	/^class ObjTypeInfo {$/;"	c
OfflineConsG	include/MemoryModel/OfflineConsG.h	/^    OfflineConsG(PAG *p) : ConstraintGraph(p),$/;"	f	class:OfflineConsG
OfflineConsG	include/MemoryModel/OfflineConsG.h	/^class OfflineConsG: public ConstraintGraph{$/;"	c
OnTheFlyIterBudgetForStat	include/MemoryModel/PointerAnalysis.h	/^    u32_t OnTheFlyIterBudgetForStat;$/;"	m	class:PointerAnalysis
OpIt	include/Util/GEPTypeBridgeIterator.h	/^    ItTy OpIt;$/;"	m	class:llvm::generic_bridge_gep_type_iterator
OutEdgeBegin	include/MemoryModel/GenericGraph.h	/^    inline const_iterator OutEdgeBegin() const {$/;"	f	class:GenericNode
OutEdgeBegin	include/MemoryModel/GenericGraph.h	/^    inline iterator OutEdgeBegin() {$/;"	f	class:GenericNode
OutEdgeEnd	include/MemoryModel/GenericGraph.h	/^    inline const_iterator OutEdgeEnd() const {$/;"	f	class:GenericNode
OutEdgeEnd	include/MemoryModel/GenericGraph.h	/^    inline iterator OutEdgeEnd() {$/;"	f	class:GenericNode
OutEdgeKindToSetMap	include/MemoryModel/PAGNode.h	/^    PAGEdge::PAGKindToEdgeSetMapTy OutEdgeKindToSetMap;$/;"	m	class:PAGNode
OutEdges	include/MemoryModel/GenericGraph.h	/^    GEdgeSetTy OutEdges; \/\/\/< all outgoing edge of this node$/;"	m	class:GenericNode
Overlap	include/MemoryModel/LocationSet.h	/^        NonOverlap, Overlap, Subset, Superset, Same$/;"	e	enum:LocationSet::LSRelation
PAG	include/MemoryModel/PAG.h	/^    PAG(bool buildFromFile) : fromFile(buildFromFile), curBB(NULL),curVal(NULL), totalPTAPAGEdge(0),nodeNumAfterPAGBuild(0) {$/;"	f	class:PAG
PAG	include/MemoryModel/PAG.h	/^class PAG : public GenericGraph<PAGNode,PAGEdge> {$/;"	c
PAGBUILDER_H_	include/MemoryModel/PAGBuilder.h	31;"	d
PAGBuilder	include/MemoryModel/PAGBuilder.h	/^    PAGBuilder(): pag(PAG::getPAG()) {$/;"	f	class:PAGBuilder
PAGBuilder	include/MemoryModel/PAGBuilder.h	/^class PAGBuilder: public llvm::InstVisitor<PAGBuilder> {$/;"	c
PAGBuilderFromFile	include/MemoryModel/PAGBuilderFromFile.h	/^    PAGBuilderFromFile(std::string f) :$/;"	f	class:PAGBuilderFromFile
PAGBuilderFromFile	include/MemoryModel/PAGBuilderFromFile.h	/^class PAGBuilderFromFile {$/;"	c
PAGEDGE_H_	include/MemoryModel/PAGEdge.h	32;"	d
PAGEdge	include/MemoryModel/PAGEdge.h	/^class PAGEdge : public GenericPAGEdgeTy {$/;"	c
PAGEdge	lib/MemoryModel/PAG.cpp	/^PAGEdge::PAGEdge(PAGNode* s, PAGNode* d, GEdgeFlag k) :$/;"	f	class:PAGEdge
PAGEdgeKindToSetMap	include/MemoryModel/PAG.h	/^    PAGEdge::PAGKindToEdgeSetMapTy PAGEdgeKindToSetMap;  \/\/ < PAG edge map containing all PAGEdges$/;"	m	class:PAG
PAGEdgeList	include/MSSA/MemRegion.h	/^    typedef PAG::PAGEdgeList PAGEdgeList;$/;"	t	class:MRGenerator
PAGEdgeList	include/MSSA/MemSSA.h	/^    typedef PAG::PAGEdgeList PAGEdgeList;$/;"	t	class:MemSSA
PAGEdgeList	include/MemoryModel/PAG.h	/^    typedef std::list<const PAGEdge*> PAGEdgeList;$/;"	t	class:PAG
PAGEdgeSet	include/MemoryModel/PAG.h	/^    typedef std::set<const PAGEdge*> PAGEdgeSet;$/;"	t	class:PAG
PAGEdgeSet	include/Util/ICFG.h	/^    typedef PAG::PAGEdgeSet PAGEdgeSet;$/;"	t	class:ICFG
PAGEdgeSet	include/Util/VFG.h	/^    typedef PAG::PAGEdgeSet PAGEdgeSet;$/;"	t	class:VFG
PAGEdgeSetTy	include/MemoryModel/PAGEdge.h	/^    typedef GenericNode<PAGNode,PAGEdge>::GEdgeSetTy PAGEdgeSetTy;$/;"	t	class:PAGEdge
PAGEdgeToFunMap	include/MSSA/MemRegion.h	/^    typedef std::map<const PAGEdge*, const Function*> PAGEdgeToFunMap;$/;"	t	class:MRGenerator
PAGEdgeToSetMapTy	include/MemoryModel/PAGEdge.h	/^    typedef llvm::DenseMap<EdgeID, PAGEdgeSetTy> PAGEdgeToSetMapTy;$/;"	t	class:PAGEdge
PAGEdgeToStmtVFGNodeMap	include/Util/VFG.h	/^    PAGEdgeToStmtVFGNodeMapTy PAGEdgeToStmtVFGNodeMap;	\/\/\/< map a PAGEdge to its StmtVFGNode$/;"	m	class:VFG
PAGEdgeToStmtVFGNodeMapTy	include/Util/ICFG.h	/^    typedef std::map<const PAGEdge*, StmtVFGNode*> PAGEdgeToStmtVFGNodeMapTy;$/;"	t	class:ICFG
PAGEdgeToStmtVFGNodeMapTy	include/Util/VFG.h	/^    typedef std::map<const PAGEdge*, StmtVFGNode*> PAGEdgeToStmtVFGNodeMapTy;$/;"	t	class:VFG
PAGKindToEdgeSetMapTy	include/MemoryModel/PAGEdge.h	/^    typedef PAGEdgeToSetMapTy PAGKindToEdgeSetMapTy;$/;"	t	class:PAGEdge
PAGNODE_H_	include/MemoryModel/PAGNode.h	31;"	d
PAGNode	include/MemoryModel/PAGNode.h	/^class PAGNode : public GenericPAGNodeTy {$/;"	c
PAGNode	lib/MemoryModel/PAG.cpp	/^PAGNode::PAGNode(const Value* val, NodeID i, PNODEK k) :$/;"	f	class:PAGNode
PAGNodeList	include/MemoryModel/PAG.h	/^    typedef std::list<const PAGNode*> PAGNodeList;$/;"	t	class:PAG
PAGNodeToActualParmMap	include/Util/VFG.h	/^    PAGNodeToActualParmMapTy PAGNodeToActualParmMap; \/\/\/< map a PAGNode to an actual parameter$/;"	m	class:VFG
PAGNodeToActualParmMapTy	include/Util/VFG.h	/^    typedef std::map<std::pair<NodeID,CallSite>, ActualParmVFGNode *> PAGNodeToActualParmMapTy;$/;"	t	class:VFG
PAGNodeToActualRetMap	include/Util/VFG.h	/^    PAGNodeToActualRetMapTy PAGNodeToActualRetMap; \/\/\/< map a PAGNode to an actual return$/;"	m	class:VFG
PAGNodeToActualRetMapTy	include/Util/VFG.h	/^    typedef llvm::DenseMap<const PAGNode*, ActualRetVFGNode *> PAGNodeToActualRetMapTy;$/;"	t	class:VFG
PAGNodeToBinaryOPVFGNodeMap	include/Util/VFG.h	/^    PAGNodeToBinaryOPVFGNodeMapTy PAGNodeToBinaryOPVFGNodeMap;	\/\/\/< map a PAGNode to its BinaryOPVFGNode$/;"	m	class:VFG
PAGNodeToBinaryOPVFGNodeMapTy	include/Util/VFG.h	/^    typedef std::map<const PAGNode*, BinaryOPVFGNode*> PAGNodeToBinaryOPVFGNodeMapTy;$/;"	t	class:VFG
PAGNodeToCmpVFGNodeMap	include/Util/VFG.h	/^    PAGNodeToCmpVFGNodeMapTy PAGNodeToCmpVFGNodeMap;	\/\/\/< map a PAGNode to its CmpVFGNode$/;"	m	class:VFG
PAGNodeToCmpVFGNodeMapTy	include/Util/VFG.h	/^    typedef std::map<const PAGNode*, CmpVFGNode*> PAGNodeToCmpVFGNodeMapTy;$/;"	t	class:VFG
PAGNodeToDefMap	include/Util/VFG.h	/^    PAGNodeToDefMapTy PAGNodeToDefMap;	\/\/\/< map a pag node to its definition SVG node$/;"	m	class:VFG
PAGNodeToDefMapTy	include/MSSA/SVFG.h	/^    typedef llvm::DenseMap<const PAGNode*, NodeID> PAGNodeToDefMapTy;$/;"	t	class:SVFG
PAGNodeToDefMapTy	include/Util/VFG.h	/^    typedef llvm::DenseMap<const PAGNode*, NodeID> PAGNodeToDefMapTy;$/;"	t	class:VFG
PAGNodeToFormalParmMap	include/Util/VFG.h	/^    PAGNodeToFormalParmMapTy PAGNodeToFormalParmMap; \/\/\/< map a PAGNode to a formal parameter$/;"	m	class:VFG
PAGNodeToFormalParmMapTy	include/Util/VFG.h	/^    typedef llvm::DenseMap<const PAGNode*, FormalParmVFGNode *> PAGNodeToFormalParmMapTy;$/;"	t	class:VFG
PAGNodeToFormalRetMap	include/Util/VFG.h	/^    PAGNodeToFormalRetMapTy PAGNodeToFormalRetMap; \/\/\/< map a PAGNode to a formal return$/;"	m	class:VFG
PAGNodeToFormalRetMapTy	include/Util/VFG.h	/^    typedef llvm::DenseMap<const PAGNode*, FormalRetVFGNode *> PAGNodeToFormalRetMapTy;$/;"	t	class:VFG
PAGNodeToIntraPHIVFGNodeMap	include/Util/VFG.h	/^    PAGNodeToPHIVFGNodeMapTy PAGNodeToIntraPHIVFGNodeMap;	\/\/\/< map a PAGNode to its PHIVFGNode$/;"	m	class:VFG
PAGNodeToPHIVFGNodeMapTy	include/Util/VFG.h	/^    typedef std::map<const PAGNode*, IntraPHIVFGNode*> PAGNodeToPHIVFGNodeMapTy;$/;"	t	class:VFG
PAG_H_	include/MemoryModel/PAG.h	32;"	d
PAIR_CR	lib/CUDD/cuddDecomp.c	74;"	d	file:
PAIR_ST	lib/CUDD/cuddDecomp.c	73;"	d	file:
PATHALLOCATOR_H_	include/Util/PathCondAllocator.h	31;"	d
PEDGEK	include/MemoryModel/PAGEdge.h	/^    enum PEDGEK {$/;"	g	class:PAGEdge
PHI	include/MSSA/MemSSA.h	/^    typedef MSSAPHI<Condition> PHI;$/;"	t	class:MemSSA
PHINode	include/Util/BasicTypes.h	/^typedef llvm::PHINode PHINode;$/;"	t
PHINodeMap	include/MemoryModel/PAG.h	/^    typedef std::map<const PAGNode*,PNodeBBPairList> PHINodeMap;$/;"	t	class:PAG
PHISVFGNode	include/MSSA/SVFG.h	/^typedef PHIVFGNode PHISVFGNode;$/;"	t
PHISet	include/MSSA/MemSSA.h	/^    typedef std::set<PHI*> PHISet;$/;"	t	class:MemSSA
PHISet	include/MSSA/SVFG.h	/^    typedef MemSSA::PHISet PHISet;$/;"	t	class:SVFG
PHIVFGNode	include/Util/VFGNode.h	/^    PHIVFGNode(NodeID id, const PAGNode* r,VFGNodeK k = TPhi): VFGNode(id, k), res(r) {$/;"	f	class:PHIVFGNode
PHIVFGNode	include/Util/VFGNode.h	/^class PHIVFGNode : public VFGNode {$/;"	c
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	319;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	322;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	325;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	328;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	331;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	334;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	382;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	389;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	392;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	395;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	398;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	401;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	405;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	301;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	304;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	307;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	310;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	316;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	322;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	325;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	331;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	334;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	374;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	377;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	383;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	386;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	390;"	d	file:
PMX	lib/CUDD/cuddGenetic.c	/^PMX($/;"	f	file:
PNODEK	include/MemoryModel/PAGNode.h	/^    enum PNODEK {$/;"	g	class:PAGNode
PNodeBBPairList	include/MemoryModel/PAG.h	/^    typedef std::list<std::pair<const PAGNode*, const BasicBlock*> > PNodeBBPairList;$/;"	t	class:PAG
POINTERANALYSIS_H_	include/MemoryModel/PointerAnalysis.h	31;"	d
POINTSTODSDF_H_	include/MemoryModel/PointsToDFDS.h	31;"	d
POINTSTO_H_	include/MemoryModel/PointsToDS.h	33;"	d
PROJECT_ANDERSENSFR_H	include/WPA/AndersenSFR.h	31;"	d
PROJECT_CSC_H	include/WPA/CSC.h	31;"	d
PTACALLGRAPH_H_	include/Util/PTACallGraph.h	31;"	d
PTACFInfoBuilder	include/Util/DataFlowUtil.h	/^    PTACFInfoBuilder() {$/;"	f	class:PTACFInfoBuilder
PTACFInfoBuilder	include/Util/DataFlowUtil.h	/^class PTACFInfoBuilder {$/;"	c
PTACallGraph	include/Util/PTACallGraph.h	/^class PTACallGraph : public GenericCallGraphTy {$/;"	c
PTACallGraph	lib/Util/PTACallGraph.cpp	/^PTACallGraph::PTACallGraph(SVFModule svfModule, CGEK k): kind(k) {$/;"	f	class:PTACallGraph
PTACallGraphEdge	include/Util/PTACallGraph.h	/^	PTACallGraphEdge(PTACallGraphNode* s, PTACallGraphNode* d, CEDGEK kind, CallSiteID cs) :$/;"	f	class:PTACallGraphEdge
PTACallGraphEdge	include/Util/PTACallGraph.h	/^class PTACallGraphEdge : public GenericCallGraphEdgeTy {$/;"	c
PTACallGraphNode	include/Util/PTACallGraph.h	/^    PTACallGraphNode(NodeID i, const Function* f) : GenericCallGraphNodeTy(i,0), fun(f) {$/;"	f	class:PTACallGraphNode
PTACallGraphNode	include/Util/PTACallGraph.h	/^class PTACallGraphNode : public GenericCallGraphNodeTy {$/;"	c
PTALoopInfo	include/Util/DataFlowUtil.h	/^    PTALoopInfo() : LoopInfo()$/;"	f	class:PTALoopInfo
PTALoopInfo	include/Util/DataFlowUtil.h	/^class PTALoopInfo : public LoopInfo {$/;"	c
PTAName	include/MemoryModel/PointerAnalysis.h	/^    virtual const std::string PTAName() const {$/;"	f	class:PointerAnalysis
PTAName	include/WPA/Andersen.h	/^    virtual const std::string PTAName() const {$/;"	f	class:Andersen
PTAName	include/WPA/FlowSensitive.h	/^    virtual const std::string PTAName() const {$/;"	f	class:FlowSensitive
PTAPAGEdgeKindToSetMap	include/MemoryModel/PAG.h	/^    PAGEdge::PAGKindToEdgeSetMapTy PTAPAGEdgeKindToSetMap;  \/\/ < PAG edge map containing only pointer-related edges, i.e, both RHS and RHS are of pointer type$/;"	m	class:PAG
PTASCEV	include/Util/DataFlowUtil.h	/^    PTASCEV():scev(NULL), start(NULL), step(NULL),ptr(NULL),inloop(false),tripcount(0) {}$/;"	f	class:PTASCEV
PTASCEV	include/Util/DataFlowUtil.h	/^    PTASCEV(const PTASCEV& ptase): scev(ptase.scev), start(ptase.start), step(ptase.step), ptr(ptase.ptr), inloop(ptase.inloop),tripcount(ptase.tripcount) {$/;"	f	class:PTASCEV
PTASCEV	include/Util/DataFlowUtil.h	/^    PTASCEV(const Value* p, const SCEV* s, ScalarEvolution* SE): scev(s),start(NULL), step(NULL), ptr(p), inloop(false), tripcount(0) {$/;"	f	class:PTASCEV
PTASCEV	include/Util/DataFlowUtil.h	/^class PTASCEV {$/;"	c
PTAStat	include/Util/PTAStat.h	/^class PTAStat {$/;"	c
PTAStat	lib/Util/PTAStat.cpp	/^PTAStat::PTAStat(PointerAnalysis* p) : startTime(0), endTime(0), pta(p) {$/;"	f	class:PTAStat
PTATY	include/MemoryModel/PointerAnalysis.h	/^    enum PTATY {$/;"	g	class:PointerAnalysis
PTATYPE_H_	include/MemoryModel/PTAType.h	31;"	d
PTAType	include/MemoryModel/PTAType.h	/^    PTAType(const Type *ty): type(ty) {}$/;"	f	class:PTAType
PTAType	include/MemoryModel/PTAType.h	/^class PTAType {$/;"	c
PTAVector	include/WPA/WPAPass.h	/^    typedef std::vector<PointerAnalysis*> PTAVector;$/;"	t	class:WPAPass
PTData	include/MemoryModel/PointsToDS.h	/^    PTData(PTDataTY ty = Default): ptdTy(ty) {$/;"	f	class:PTData
PTData	include/MemoryModel/PointsToDS.h	/^class PTData {$/;"	c
PTDataTY	include/MemoryModel/PointsToDS.h	/^    enum PTDataTY {$/;"	g	class:PTData
PTDataTy	include/MemoryModel/PointerAnalysis.h	/^    typedef PTData<CVar,CPtSet> PTDataTy;	         \/\/\/ Points-to data structure type$/;"	t	class:CondPTAImpl
PTDataTy	include/MemoryModel/PointerAnalysis.h	/^    typedef PTData<NodeID,PointsTo> PTDataTy;	\/\/\/ Points-to data structure type$/;"	t	class:BVDataPTAImpl
PTDataTy	include/MemoryModel/PointsToDFDS.h	/^    typedef typename PTData<Key,Data>::PTDataTY PTDataTy;$/;"	t	class:DFPTData
PTDataTy	include/MemoryModel/PointsToDFDS.h	/^    typedef typename PTData<Key,Data>::PTDataTY PTDataTy;$/;"	t	class:IncDFPTData
PTDataTy	include/MemoryModel/PointsToDS.h	/^    typedef typename PTData<Key,Data>::PTDataTY PTDataTy;$/;"	t	class:DiffPTData
PTNumStatMap	include/Util/PTAStat.h	/^    NUMStatMap PTNumStatMap;$/;"	m	class:PTAStat
PTRONLYSVFGK	include/Util/VFG.h	/^        ORIGSVFGK, PTRONLYSVFGK$/;"	e	enum:VFG::VFGK
PTR_NOT_EQUAL	lib/CUDD/st.c	68;"	d	file:
PURE_ABSTRACT	include/MemoryModel/CHA.h	/^        PURE_ABSTRACT = 0x1, \/\/ pure virtual abstract class$/;"	e	enum:CHNode::__anon3
PWCDetect	lib/WPA/AndersenSCD.cpp	/^void AndersenSCD::PWCDetect() {$/;"	f	class:AndersenSCD
PWCDetect	lib/WPA/AndersenSFR.cpp	/^void AndersenSFR::PWCDetect(){$/;"	f	class:AndersenSFR
PairInTables	lib/CUDD/cuddDecomp.c	/^PairInTables($/;"	f	file:
PairTy	include/MemoryModel/GenericGraph.h	/^    typedef std::pair<NodeID, NodeType*> PairTy;$/;"	t	struct:llvm::GraphTraits
ParForEdgeSet	include/Util/ThreadCallGraph.h	/^    typedef GenericNode<PTACallGraphNode, HareParForEdge>::GEdgeSetTy ParForEdgeSet;$/;"	t	class:HareParForEdge
ParForEdgeSet	include/Util/ThreadCallGraph.h	/^    typedef HareParForEdge::ParForEdgeSet ParForEdgeSet;$/;"	t	class:ThreadCallGraph
PathCond	include/Util/DPItem.h	/^    typedef PathCondAllocator::Condition PathCond;$/;"	t	class:VFPathCond
PathCond	include/Util/DPItem.h	/^    typedef VFPathCond::PathCond PathCond;$/;"	t	class:PathStmtDPItem
PathCondAllocator	include/Util/PathCondAllocator.h	/^    PathCondAllocator() {$/;"	f	class:PathCondAllocator
PathCondAllocator	include/Util/PathCondAllocator.h	/^class PathCondAllocator {$/;"	c
PathS_DDA	include/MemoryModel/PointerAnalysis.h	/^        PathS_DDA,		\/\/\/< Guarded value-flow DDA$/;"	e	enum:PointerAnalysis::PTATY
PathStmtDPItem	include/Util/DPItem.h	/^    PathStmtDPItem(const PathStmtDPItem<LocCond>& dps) :$/;"	f	class:PathStmtDPItem
PathStmtDPItem	include/Util/DPItem.h	/^    PathStmtDPItem(const VFPathVar& var, const LocCond* locCond) :$/;"	f	class:PathStmtDPItem
PathStmtDPItem	include/Util/DPItem.h	/^class PathStmtDPItem : public StmtDPItem<LocCond> {$/;"	c
PickOnePair	lib/CUDD/cuddDecomp.c	/^PickOnePair($/;"	f	file:
PointerAnalysis	include/MemoryModel/PointerAnalysis.h	/^class PointerAnalysis {$/;"	c
PointerAnalysis	lib/MemoryModel/PointerAnalysis.cpp	/^PointerAnalysis::PointerAnalysis(PTATY ty) :$/;"	f	class:PointerAnalysis
PointerType	include/Util/BasicTypes.h	/^typedef llvm::PointerType PointerType;$/;"	t
PointsTo	include/Util/BasicTypes.h	/^typedef NodeBS PointsTo;$/;"	t
PointsToList	include/MSSA/MemRegion.h	/^    typedef std::set<PointsTo, MemRegion::equalPointsTo> PointsToList;$/;"	t	class:MRGenerator
PostDominatorTree	include/Util/BasicTypes.h	/^typedef llvm::PostDominatorTree PostDominatorTree;$/;"	t
PostDominatorTreeWrapperPass	include/Util/BasicTypes.h	/^typedef llvm::PostDominatorTreeWrapperPass PostDominatorTreeWrapperPass;$/;"	t
Precise	include/WPA/WPAPass.h	/^        Precise			\/\/\/< return alias result by the most precise pta$/;"	e	enum:WPAPass::AliasCheckRule
PrintAliasPairs	lib/WPA/WPAPass.cpp	/^void WPAPass::PrintAliasPairs(PointerAnalysis* pta) {$/;"	f	class:WPAPass
PrintGraph	include/Util/GraphPrinter.h	/^    static void PrintGraph(llvm::raw_ostream &O, const std::string &GraphName,$/;"	f	class:llvm::GraphPrinter
ProcessCopyGepTime	include/Util/PTAStat.h	/^    static const char* ProcessCopyGepTime;	\/\/\/< time of processing copys and geps$/;"	m	class:PTAStat
ProcessCopyGepTime	lib/Util/PTAStat.cpp	/^const char* PTAStat:: ProcessCopyGepTime = "CopyGepTime";	\/\/\/< process copy and gep time$/;"	m	class:PTAStat	file:
ProcessLoadStoreTime	include/Util/PTAStat.h	/^    static const char* ProcessLoadStoreTime;\/\/\/< time of processing loads and stores$/;"	m	class:PTAStat
ProcessLoadStoreTime	lib/Util/PTAStat.cpp	/^const char* PTAStat:: ProcessLoadStoreTime = "LoadStoreTime";	\/\/\/< process load and store time$/;"	m	class:PTAStat	file:
PtrToBVPtsMap	include/MemoryModel/PointerAnalysis.h	/^    typedef std::map<NodeID,PointsTo> PtrToBVPtsMap; \/\/\/ map a pointer to its BitVector points-to representation$/;"	t	class:CondPTAImpl
PtrToCPtsMap	include/MemoryModel/PointerAnalysis.h	/^    typedef std::map<NodeID,CPtSet> PtrToCPtsMap;	 \/\/\/ map a pointer to its conditional points-to set$/;"	t	class:CondPTAImpl
PtrToIntInst	include/Util/BasicTypes.h	/^typedef llvm::PtrToIntInst PtrToIntInst;$/;"	t
PtsMap	include/MemoryModel/PointsToDFDS.h	/^    typedef typename PTData<Key,Data>::PtsMap PtsMap;$/;"	t	class:DFPTData
PtsMap	include/MemoryModel/PointsToDS.h	/^    typedef std::map<const Key, Data> PtsMap;$/;"	t	class:PTData
PtsMap	include/MemoryModel/PointsToDS.h	/^    typedef typename PTData<Key,Data>::PtsMap PtsMap;$/;"	t	class:DiffPTData
PtsMap	include/WPA/FlowSensitive.h	/^    typedef BVDataPTAImpl::IncDFPTDataTy::PtsMap PtsMap;$/;"	t	class:FlowSensitive
PtsMap	include/WPA/WPAStat.h	/^    typedef FlowSensitive::PtsMap PtsMap;$/;"	t	class:FlowSensitiveStat
PtsMapConstIter	include/MemoryModel/PointsToDFDS.h	/^    typedef typename PTData<Key,Data>::PtsMapConstIter PtsMapConstIter;$/;"	t	class:DFPTData
PtsMapConstIter	include/MemoryModel/PointsToDS.h	/^    typedef typename PtsMap::const_iterator PtsMapConstIter;$/;"	t	class:PTData
PtsMapIter	include/MemoryModel/PointsToDS.h	/^    typedef typename PtsMap::iterator PtsMapIter;$/;"	t	class:PTData
PtsToRepPtsSetMap	include/MSSA/MemRegion.h	/^    typedef std::map<PointsTo, PointsTo, MemRegion::equalPointsTo > PtsToRepPtsSetMap;$/;"	t	class:MRGenerator
PtsToSubPtsMap	include/MSSA/MemPartition.h	/^    typedef std::map<PointsTo, PointsToList> PtsToSubPtsMap;$/;"	t	class:IntraDisjointMRG
QsortStrcmp	lib/CUDD/dddmpUtil.c	/^QsortStrcmp($/;"	f
RAbuildSubset	lib/CUDD/cuddApprox.c	/^RAbuildSubset($/;"	f	file:
RAmarkNodes	lib/CUDD/cuddApprox.c	/^RAmarkNodes($/;"	f	file:
RCG_H_	include/Util/ThreadCallGraph.h	31;"	d
REALLOC	include/CUDD/util.h	167;"	d
REALLOC	include/CUDD/util.h	169;"	d
REALLOC	include/CUDD/util.h	66;"	d
REALLOC	include/CUDD/util.h	78;"	d
RELATIONTYPE	include/MemoryModel/CHA.h	/^    } RELATIONTYPE;$/;"	t	class:CHGraph	typeref:enum:CHGraph::__anon4
REPLACE_E	lib/CUDD/cuddApprox.c	92;"	d	file:
REPLACE_N	lib/CUDD/cuddApprox.c	93;"	d	file:
REPLACE_T	lib/CUDD/cuddApprox.c	91;"	d	file:
REPLACE_TE	lib/CUDD/cuddApprox.c	95;"	d	file:
REPLACE_TT	lib/CUDD/cuddApprox.c	94;"	d	file:
RETMU	include/MSSA/MemSSA.h	/^    typedef RetMU<Condition> RETMU;$/;"	t	class:MemSSA
RETMU	include/MSSA/SVFG.h	/^    typedef MemSSA::RETMU RETMU;$/;"	t	class:SVFG
RLIMIT_DATA_DEFAULT	lib/CUDD/datalimit.c	21;"	d	file:
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/lib/CUDD/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/lib/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/tools/DisPatch/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/tools/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RaceAnnotator	include/Util/RaceAnnotator.h	/^    RaceAnnotator() {$/;"	f	class:RaceAnnotator
RaceAnnotator	include/Util/RaceAnnotator.h	/^class RaceAnnotator: public Annotator {$/;"	c
ReadByteBinary	lib/CUDD/dddmpBinary.c	/^ReadByteBinary ($/;"	f	file:
RemoveFromUniqueRecur	lib/CUDD/dddmpDdNodeBdd.c	/^RemoveFromUniqueRecur ($/;"	f	file:
RemoveFromUniqueRecurAdd	lib/CUDD/dddmpNodeAdd.c	/^RemoveFromUniqueRecurAdd ($/;"	f	file:
RemoveFromUniqueRecurBdd	lib/CUDD/dddmpNodeBdd.c	/^RemoveFromUniqueRecurBdd ($/;"	f	file:
RemoveFromUniqueRecurCnf	lib/CUDD/dddmpNodeCnf.c	/^RemoveFromUniqueRecurCnf ($/;"	f	file:
RenameChiSet	include/MSSA/MemSSA.h	/^    inline void RenameChiSet(const CHISet& chiSet, MRVector& memRegs) {$/;"	f	class:MemSSA
RenameMuSet	include/MSSA/MemSSA.h	/^    inline void RenameMuSet(const MUSet& muSet) {$/;"	f	class:MemSSA
RenamePhiOps	include/MSSA/MemSSA.h	/^    inline void RenamePhiOps(const PHISet& phiSet, u32_t pos, MRVector& memRegs) {$/;"	f	class:MemSSA
RenamePhiRes	include/MSSA/MemSSA.h	/^    inline void RenamePhiRes(const PHISet& phiSet, MRVector& memRegs) {$/;"	f	class:MemSSA
ResizeCountMintermPages	lib/CUDD/cuddSubsetHB.c	/^ResizeCountMintermPages(void)$/;"	f	file:
ResizeCountNodePages	lib/CUDD/cuddSubsetHB.c	/^ResizeCountNodePages(void)$/;"	f	file:
ResizeNodeDataPages	lib/CUDD/cuddSubsetHB.c	/^ResizeNodeDataPages(void)$/;"	f	file:
ResizeNodeDistPages	lib/CUDD/cuddSubsetSP.c	/^ResizeNodeDistPages($/;"	f	file:
ResizeQueuePages	lib/CUDD/cuddSubsetSP.c	/^ResizeQueuePages($/;"	f	file:
RestoreInUniqueRecur	lib/CUDD/dddmpDdNodeBdd.c	/^RestoreInUniqueRecur ($/;"	f	file:
RestoreInUniqueRecurAdd	lib/CUDD/dddmpNodeAdd.c	/^RestoreInUniqueRecurAdd ($/;"	f	file:
RestoreInUniqueRecurBdd	lib/CUDD/dddmpNodeBdd.c	/^RestoreInUniqueRecurBdd ($/;"	f	file:
RestoreInUniqueRecurCnf	lib/CUDD/dddmpNodeCnf.c	/^RestoreInUniqueRecurCnf ($/;"	f	file:
ResumeInst	include/Util/BasicTypes.h	/^typedef llvm::ResumeInst ResumeInst;$/;"	t
Ret	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
RetBlockNode	include/Util/ICFGNode.h	/^    RetBlockNode(NodeID id, CallSite c) : InterBlockNode(id, FunRetBlock), cs(c), actualRet(NULL) {$/;"	f	class:RetBlockNode
RetBlockNode	include/Util/ICFGNode.h	/^class RetBlockNode : public InterBlockNode {$/;"	c
RetCF	include/Util/ICFGEdge.h	/^		RetCF,$/;"	e	enum:ICFGEdge::ICFGEdgeK
RetCFGEdge	include/Util/ICFGEdge.h	/^    RetCFGEdge(ICFGNode* s, ICFGNode* d, CallSiteID id):$/;"	f	class:RetCFGEdge
RetCFGEdge	include/Util/ICFGEdge.h	/^class RetCFGEdge : public ICFGEdge {$/;"	c
RetDirSVFGEdge	include/Util/VFGEdge.h	/^    RetDirSVFGEdge(VFGNode* s, VFGNode* d, CallSiteID id):$/;"	f	class:RetDirSVFGEdge
RetDirSVFGEdge	include/Util/VFGEdge.h	/^class RetDirSVFGEdge : public DirectSVFGEdge {$/;"	c
RetDirVF	include/Util/VFGEdge.h	/^		RetDirVF,$/;"	e	enum:VFGEdge::VFGEdgeK
RetIndSVFGEdge	include/MSSA/SVFGEdge.h	/^    RetIndSVFGEdge(VFGNode* s, VFGNode* d, CallSiteID id):$/;"	f	class:RetIndSVFGEdge
RetIndSVFGEdge	include/MSSA/SVFGEdge.h	/^class RetIndSVFGEdge : public IndirectSVFGEdge {$/;"	c
RetIndVF	include/Util/VFGEdge.h	/^		RetIndVF,$/;"	e	enum:VFGEdge::VFGEdgeK
RetMSSAMU	include/MSSA/MSSAMuChi.h	/^        LoadMSSAMU, CallMSSAMU, RetMSSAMU$/;"	e	enum:MSSAMU::MUTYPE
RetMU	include/MSSA/MSSAMuChi.h	/^    RetMU(const Function* f, const MemRegion* m, Cond c = PathCondAllocator::trueCond()) :$/;"	f	class:RetMU
RetMU	include/MSSA/MSSAMuChi.h	/^class RetMU : public MSSAMU<Cond> {$/;"	c
RetNode	include/MemoryModel/PAGNode.h	/^        RetNode,$/;"	e	enum:PAGNode::PNODEK
RetPE	include/MemoryModel/PAGEdge.h	/^    RetPE(PAGNode* s, PAGNode* d, const Instruction* i) :$/;"	f	class:RetPE
RetPE	include/MemoryModel/PAGEdge.h	/^class RetPE: public PAGEdge {$/;"	c
RetPESet	include/Util/ICFGNode.h	/^    typedef std::set<const RetPE *> RetPESet;$/;"	t	class:ICFGNode
RetPESet	include/Util/VFG.h	/^    typedef FormalRetVFGNode::RetPESet RetPESet;$/;"	t	class:VFG
RetPESet	include/Util/VFGNode.h	/^    typedef std::set<const RetPE*> RetPESet;$/;"	t	class:VFGNode
RetPN	include/MemoryModel/PAGNode.h	/^    RetPN(const Function* val, NodeID i) :$/;"	f	class:RetPN
RetPN	include/MemoryModel/PAGNode.h	/^class RetPN: public PAGNode {$/;"	c
RetSym	include/MemoryModel/MemModel.h	/^    RetSym,$/;"	e	enum:SYMTYPE
ReturnInst	include/Util/BasicTypes.h	/^typedef llvm::ReturnInst ReturnInst;$/;"	t
SB_FESIBLE	include/Util/Annotator.h	/^    const char* SB_FESIBLE;$/;"	m	class:Annotator
SB_INFESIBLE	include/Util/Annotator.h	/^    const char* SB_INFESIBLE;$/;"	m	class:Annotator
SB_SLICESINK	include/Util/Annotator.h	/^    const char* SB_SLICESINK;$/;"	m	class:Annotator
SB_SLICESOURCE	include/Util/Annotator.h	/^    const char* SB_SLICESOURCE;$/;"	m	class:Annotator
SCC	include/MSSA/MemRegion.h	/^    typedef SCCDetection<PTACallGraph*> SCC;$/;"	t	class:MRGenerator
SCC	include/WPA/WPASolver.h	/^    typedef SCCDetection<GraphType> SCC;$/;"	t	class:WPASolver
SCCDetect	include/WPA/WPAFSSolver.h	/^    virtual NodeStack& SCCDetect() {$/;"	f	class:WPAFSSolver
SCCDetect	include/WPA/WPASolver.h	/^    virtual inline NodeStack& SCCDetect() {$/;"	f	class:WPASolver
SCCDetect	include/WPA/WPASolver.h	/^    virtual inline NodeStack& SCCDetect(NodeSet& candidates) {$/;"	f	class:WPASolver
SCCDetect	lib/WPA/Andersen.cpp	/^NodeStack& Andersen::SCCDetect() {$/;"	f	class:Andersen
SCCDetect	lib/WPA/AndersenLCD.cpp	/^NodeStack& AndersenLCD::SCCDetect() {$/;"	f	class:AndersenLCD
SCCDetect	lib/WPA/AndersenSCD.cpp	/^NodeStack& AndersenSCD::SCCDetect() {$/;"	f	class:AndersenSCD
SCCDetect	lib/WPA/AndersenWaveDiffWithType.cpp	/^NodeStack& AndersenWaveDiffWithType::SCCDetect() {$/;"	f	class:AndersenWaveDiffWithType
SCCDetect	lib/WPA/FlowSensitive.cpp	/^NodeStack& FlowSensitive::SCCDetect()$/;"	f	class:FlowSensitive
SCCDetection	include/Util/SCC.h	/^    SCCDetection(const GraphType &GT)$/;"	f	class:SCCDetection
SCCDetection	include/Util/SCC.h	/^class SCCDetection {$/;"	c
SCCDetectionTime	include/Util/PTAStat.h	/^    static const char* SCCDetectionTime; \/\/\/< Total SCC detection time$/;"	m	class:PTAStat
SCCDetectionTime	lib/Util/PTAStat.cpp	/^const char* PTAStat:: SCCDetectionTime = "SCCDetectTime"; \/\/\/< Total SCC detection time$/;"	m	class:PTAStat	file:
SCCEdgeFlag	include/MemoryModel/ConsGNode.h	/^    enum SCCEdgeFlag {$/;"	g	class:ConstraintNode
SCCMergeTime	include/Util/PTAStat.h	/^    static const char* SCCMergeTime; \/\/\/< Total SCC merge time$/;"	m	class:PTAStat
SCCMergeTime	lib/Util/PTAStat.cpp	/^const char* PTAStat:: SCCMergeTime = "SCCMergeTime"; \/\/\/< Total SCC merge time$/;"	m	class:PTAStat	file:
SCC_H_	include/Util/SCC.h	41;"	d
SCEV	include/Util/BasicTypes.h	/^typedef llvm::SCEV SCEV;$/;"	t
SCEVAddRecExpr	include/Util/BasicTypes.h	/^typedef llvm::SCEVAddRecExpr SCEVAddRecExpr;$/;"	t
SCEVConstant	include/Util/BasicTypes.h	/^typedef llvm::SCEVConstant SCEVConstant;$/;"	t
SFRTrait	include/WPA/AndersenSFR.h	/^    typedef llvm::DenseMap<NodeID, pair<NodeID, NodeSet>> SFRTrait;$/;"	t	class:AndersenSFR
SHARED_LIBRARY	lib/DisPatch/Makefile	/^SHARED_LIBRARY = 1$/;"	m
SHARED_LIBRARY	lib/MSSA/Makefile	/^SHARED_LIBRARY = 1$/;"	m
SHARED_LIBRARY	lib/Util/Makefile	/^SHARED_LIBRARY = 1$/;"	m
SHARED_LIBRARY	lib/WPA/Makefile	/^SHARED_LIBRARY = 1$/;"	m
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/lib/CUDD/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/lib/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/tools/DisPatch/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/tools/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SIZEOF_INT	include/CUDD/cudd.h	81;"	d
SIZEOF_INT	include/CUDD/mtr.h	78;"	d
SIZEOF_INT	include/CUDD/util.h	26;"	d
SIZEOF_LONG	include/CUDD/cudd.h	84;"	d
SIZEOF_LONG	include/CUDD/util.h	29;"	d
SIZEOF_VOID_P	include/CUDD/cudd.h	78;"	d
SIZEOF_VOID_P	include/CUDD/mtr.h	75;"	d
SIZEOF_VOID_P	include/CUDD/util.h	23;"	d
SMDiagnostic	include/Util/BasicTypes.h	/^typedef llvm::SMDiagnostic SMDiagnostic;$/;"	t
SSACHI	include/MSSA/MSSAMuChi.h	/^        SSACHI,$/;"	e	enum:MSSADEF::DEFTYPE
SSAPHI	include/MSSA/MSSAMuChi.h	/^        SSAPHI$/;"	e	enum:MSSADEF::DEFTYPE
SSARename	lib/MSSA/MemSSA.cpp	/^void MemSSA::SSARename(const Function& fun) {$/;"	f	class:MemSSA
SSARenameBB	lib/MSSA/MemSSA.cpp	/^void MemSSA::SSARenameBB(const BasicBlock& bb) {$/;"	f	class:MemSSA
STAB_DIV	lib/CUDD/cuddUtil.c	130;"	d	file:
STAB_SIZE	lib/CUDD/cuddUtil.c	129;"	d	file:
STACK_OBJ	include/MemoryModel/MemModel.h	/^        STACK_OBJ = 0x8,  \/\/ object is a stack variable$/;"	e	enum:ObjTypeInfo::__anon5
STATIC_OBJ	include/MemoryModel/MemModel.h	/^        STATIC_OBJ = 0x4,  \/\/ object is a static variable allocated before main$/;"	e	enum:ObjTypeInfo::__anon5
STOP_TEMP	lib/CUDD/cuddAnneal.c	78;"	d	file:
STORECHI	include/MSSA/MemSSA.h	/^    typedef StoreCHI<Condition> STORECHI;$/;"	t	class:MemSSA
STORECHI	include/MSSA/SVFG.h	/^    typedef MemSSA::STORECHI STORECHI;$/;"	t	class:SVFG
STOREDD	lib/CUDD/cuddGenetic.c	131;"	d	file:
STRINGIFY	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	309;"	d	file:
STRINGIFY	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	293;"	d	file:
ST_CONTINUE	include/CUDD/st.h	/^enum st_retval {ST_CONTINUE, ST_STOP, ST_DELETE};$/;"	e	enum:st_retval
ST_DEFAULT_GROW_FACTOR	include/CUDD/st.h	39;"	d
ST_DEFAULT_INIT_TABLE_SIZE	include/CUDD/st.h	38;"	d
ST_DEFAULT_MAX_DENSITY	include/CUDD/st.h	37;"	d
ST_DEFAULT_REORDER_FLAG	include/CUDD/st.h	40;"	d
ST_DELETE	include/CUDD/st.h	/^enum st_retval {ST_CONTINUE, ST_STOP, ST_DELETE};$/;"	e	enum:st_retval
ST_INCLUDED	include/CUDD/st.h	23;"	d
ST_NUMCMP	lib/CUDD/st.c	47;"	d	file:
ST_NUMHASH	lib/CUDD/st.c	49;"	d	file:
ST_OUT_OF_MEM	include/CUDD/st.h	41;"	d
ST_PFICPCP	include/CUDD/st.h	/^typedef int (*ST_PFICPCP)(const char *, const char *); \/* type for comparison function *\/$/;"	t
ST_PFICPI	include/CUDD/st.h	/^typedef int (*ST_PFICPI)(char *, int);     \/* type for hash function *\/$/;"	t
ST_PFSR	include/CUDD/st.h	/^typedef enum st_retval (*ST_PFSR)(char *, char *, char *);$/;"	t	typeref:enum:ST_PFSR
ST_PTRHASH	lib/CUDD/st.c	57;"	d	file:
ST_STOP	include/CUDD/st.h	/^enum st_retval {ST_CONTINUE, ST_STOP, ST_DELETE};$/;"	e	enum:st_retval
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/lib/CUDD/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/lib/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/tools/DisPatch/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/tools/Makefile	/^SUFFIXES =$/;"	m
SVFG	include/MSSA/SVFG.h	/^class SVFG : public VFG {$/;"	c
SVFG	lib/MSSA/SVFG.cpp	/^SVFG::SVFG(MemSSA* _mssa, VFGK k): VFG(_mssa->getPTA()->getPTACallGraph(),k),mssa(_mssa), pta(mssa->getPTA()) {$/;"	f	class:SVFG
SVFGBuilder	include/MSSA/SVFGBuilder.h	/^    SVFGBuilder(bool _SVFGWithIndCall = false): svfg(NULL), SVFGWithIndCall(_SVFGWithIndCall) {}$/;"	f	class:SVFGBuilder
SVFGBuilder	include/MSSA/SVFGBuilder.h	/^class SVFGBuilder {$/;"	c
SVFGEdge	include/MSSA/SVFG.h	/^typedef VFGEdge SVFGEdge;$/;"	t
SVFGEdgeK	include/Util/ICFGEdge.h	/^    typedef ICFGEdgeK SVFGEdgeK;$/;"	t	class:ICFGEdge
SVFGEdgeK	include/Util/VFGEdge.h	/^    typedef VFGEdgeK SVFGEdgeK;$/;"	t	class:VFGEdge
SVFGEdgeSet	include/MSSA/SVFGBuilder.h	/^    typedef SVFG::SVFGEdgeSetTy SVFGEdgeSet;$/;"	t	class:SVFGBuilder
SVFGEdgeSet	include/MSSA/SVFGStat.h	/^    typedef std::set<const SVFGEdge*> SVFGEdgeSet;$/;"	t	class:SVFGStat
SVFGEdgeSetTy	include/Util/ICFGEdge.h	/^    typedef ICFGEdgeSetTy SVFGEdgeSetTy;$/;"	t	class:ICFGEdge
SVFGEdgeSetTy	include/Util/VFG.h	/^    typedef VFGEdge::SVFGEdgeSetTy SVFGEdgeSetTy;$/;"	t	class:VFG
SVFGEdgeSetTy	include/Util/VFGEdge.h	/^    typedef VFGEdgeSetTy SVFGEdgeSetTy;$/;"	t	class:VFGEdge
SVFGEdgeSetTy	include/WPA/FlowSensitive.h	/^    typedef SVFG::SVFGEdgeSetTy SVFGEdgeSetTy;$/;"	t	class:FlowSensitive
SVFGNode	include/MSSA/SVFG.h	/^typedef VFGNode SVFGNode;$/;"	t
SVFGNodeIDToNodeMapTy	include/MSSA/SVFG.h	/^    typedef VFGNodeIDToNodeMapTy SVFGNodeIDToNodeMapTy;$/;"	t	class:SVFG
SVFGNodeSet	include/MSSA/SVFGOPT.h	/^    typedef std::set<SVFGNode*> SVFGNodeSet;$/;"	t	class:SVFGOPT
SVFGNodeSet	include/MSSA/SVFGStat.h	/^    typedef std::set<const SVFGNode*> SVFGNodeSet;$/;"	t	class:SVFGStat
SVFGOPT	include/MSSA/SVFGOPT.h	/^    SVFGOPT(MemSSA* _mssa, VFGK kind) : SVFG(_mssa, kind) {$/;"	f	class:SVFGOPT
SVFGOPT	include/MSSA/SVFGOPT.h	/^class SVFGOPT : public SVFG {$/;"	c
SVFGOPT_H_	include/MSSA/SVFGOPT.h	37;"	d
SVFGSCC	include/MSSA/SVFGStat.h	/^    typedef SCCDetection<SVFG*> SVFGSCC;$/;"	t	class:SVFGStat
SVFGSTAT_H_	include/MSSA/SVFGStat.h	37;"	d
SVFGStat	include/MSSA/SVFGStat.h	/^class SVFGStat : public PTAStat {$/;"	c
SVFGStat	lib/MSSA/SVFGStat.cpp	/^SVFGStat::SVFGStat(SVFG* g) : PTAStat(NULL)$/;"	f	class:SVFGStat
SVFGWithIndCall	include/MSSA/SVFGBuilder.h	/^    bool SVFGWithIndCall;$/;"	m	class:SVFGBuilder
SVFG_H_	include/MSSA/SVFG.h	31;"	d
SVFMODULE_H_	include/Util/SVFModule.h	31;"	d
SVFModule	include/Util/SVFModule.h	/^    SVFModule() {$/;"	f	class:SVFModule
SVFModule	include/Util/SVFModule.h	/^    SVFModule(Module &mod) {$/;"	f	class:SVFModule
SVFModule	include/Util/SVFModule.h	/^    SVFModule(Module *mod) {$/;"	f	class:SVFModule
SVFModule	include/Util/SVFModule.h	/^    SVFModule(const std::vector<std::string> &moduleNameVec) {$/;"	f	class:SVFModule
SVFModule	include/Util/SVFModule.h	/^class SVFModule {$/;"	c
SVFUtil	include/Util/Casting.h	/^namespace SVFUtil {$/;"	n
SVFUtil	include/Util/SVFUtil.h	/^namespace SVFUtil {$/;"	n
SVF_GEPTYPEBRIDGEITERATOR_H	include/Util/GEPTypeBridgeIterator.h	5;"	d
SVF_GLOBAL_SUB_I_XXX	lib/Util/SVFModule.cpp	52;"	d	file:
SVF_MAIN_FUNC_NAME	lib/Util/SVFModule.cpp	51;"	d	file:
SYMTYPE	include/MemoryModel/MemModel.h	/^enum SYMTYPE {$/;"	g
Same	include/MemoryModel/LocationSet.h	/^        NonOverlap, Overlap, Subset, Superset, Same$/;"	e	enum:LocationSet::LSRelation
ScalarEvolution	include/Util/BasicTypes.h	/^typedef llvm::ScalarEvolution ScalarEvolution;$/;"	t
ScalarEvolutionWrapperPass	include/Util/BasicTypes.h	/^typedef llvm::ScalarEvolutionWrapperPass ScalarEvolutionWrapperPass;$/;"	t
SelectInst	include/Util/BasicTypes.h	/^typedef llvm::SelectInst SelectInst;$/;"	t
ShuffleVectorInst	include/Util/BasicTypes.h	/^typedef llvm::ShuffleVectorInst ShuffleVectorInst;$/;"	t
SingleCondVar	include/MemoryModel/ConditionalPT.h	/^    typedef CondVar<Cond> SingleCondVar;$/;"	t	class:CondPointsToSet
Size_t	include/Util/BasicTypes.h	/^typedef signed long Size_t;$/;"	t
SmallBBVector	include/Util/BasicTypes.h	/^typedef llvm::SmallVector<BasicBlock*, 8> SmallBBVector;$/;"	t
SmallVector16	include/Util/BasicTypes.h	/^typedef llvm::SmallVector<u32_t,16> SmallVector16;$/;"	t
SmallVector8	include/Util/BasicTypes.h	/^typedef llvm::SmallVector<u32_t,8> SmallVector8;$/;"	t
StInfo	include/MemoryModel/MemModel.h	/^    StInfo() {$/;"	f	class:StInfo
StInfo	include/MemoryModel/MemModel.h	/^class StInfo {$/;"	c
StmtDPItem	include/Util/DPItem.h	/^    StmtDPItem(NodeID c, const LocCond* locCond) : DPItem(c), curloc(locCond) {$/;"	f	class:StmtDPItem
StmtDPItem	include/Util/DPItem.h	/^    StmtDPItem(const StmtDPItem& dps) :$/;"	f	class:StmtDPItem
StmtDPItem	include/Util/DPItem.h	/^class StmtDPItem : public DPItem {$/;"	c
StmtOrPHIVFGNodeVec	include/Util/ICFGNode.h	/^    typedef std::vector<const VFGNode *> StmtOrPHIVFGNodeVec;$/;"	t	class:IntraBlockNode
StmtSVFGNode	include/MSSA/SVFG.h	/^typedef StmtVFGNode StmtSVFGNode;$/;"	t
StmtVFGNode	include/Util/VFGNode.h	/^    StmtVFGNode(NodeID id, const PAGEdge* e, VFGNodeK k): VFGNode(id,k), pagEdge(e) {$/;"	f	class:StmtVFGNode
StmtVFGNode	include/Util/VFGNode.h	/^class StmtVFGNode : public VFGNode {$/;"	c
Store	include/MemoryModel/ConsGEdge.h	/^        Addr, Copy, Store, Load, NormalGep, VariantGep$/;"	e	enum:ConstraintEdge::ConstraintEdgeK
Store	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
Store	include/Util/VFGNode.h	/^        Addr, Copy, Gep, Store, Load, Cmp, BinaryOp, TPhi, TIntraPhi, TInterPhi,$/;"	e	enum:VFGNode::VFGNodeK
StoreCGEdge	include/MemoryModel/ConsGEdge.h	/^    StoreCGEdge(ConstraintNode* s, ConstraintNode* d, EdgeID id) : ConstraintEdge(s,d,Store,id) {$/;"	f	class:StoreCGEdge
StoreCGEdge	include/MemoryModel/ConsGEdge.h	/^class StoreCGEdge: public ConstraintEdge {$/;"	c
StoreCGEdgeSet	include/MemoryModel/ConsG.h	/^    ConstraintEdge::ConstraintEdgeSetTy StoreCGEdgeSet;$/;"	m	class:ConstraintGraph
StoreCHI	include/MSSA/MSSAMuChi.h	/^    StoreCHI(const BasicBlock* b, const StorePE* i, const MemRegion* m, Cond c = PathCondAllocator::trueCond()) :$/;"	f	class:StoreCHI
StoreCHI	include/MSSA/MSSAMuChi.h	/^class StoreCHI : public MSSACHI<Cond> {$/;"	c
StoreCnfBest	lib/CUDD/dddmpStoreCnf.c	/^StoreCnfBest ($/;"	f	file:
StoreCnfBestNotSharedRecur	lib/CUDD/dddmpStoreCnf.c	/^StoreCnfBestNotSharedRecur ($/;"	f	file:
StoreCnfBestSharedRecur	lib/CUDD/dddmpStoreCnf.c	/^StoreCnfBestSharedRecur ($/;"	f	file:
StoreCnfMaxtermByMaxterm	lib/CUDD/dddmpStoreCnf.c	/^StoreCnfMaxtermByMaxterm ($/;"	f	file:
StoreCnfMaxtermByMaxtermRecur	lib/CUDD/dddmpStoreCnf.c	/^StoreCnfMaxtermByMaxtermRecur ($/;"	f	file:
StoreCnfNodeByNode	lib/CUDD/dddmpStoreCnf.c	/^StoreCnfNodeByNode ($/;"	f	file:
StoreCnfNodeByNodeRecur	lib/CUDD/dddmpStoreCnf.c	/^StoreCnfNodeByNodeRecur ($/;"	f	file:
StoreCnfOneNode	lib/CUDD/dddmpStoreCnf.c	/^StoreCnfOneNode ($/;"	f	file:
StoreEdges	include/MemoryModel/OfflineConsG.h	/^    typedef std::set<StoreCGEdge*> StoreEdges;$/;"	t	class:OfflineConsG
StoreInst	include/Util/BasicTypes.h	/^typedef llvm::StoreInst StoreInst;$/;"	t
StoreMSSACHI	include/MSSA/MSSAMuChi.h	/^        StoreMSSACHI,$/;"	e	enum:MSSADEF::DEFTYPE
StoreNodes	lib/CUDD/cuddSubsetHB.c	/^StoreNodes($/;"	f	file:
StorePE	include/MemoryModel/PAGEdge.h	/^	StorePE(PAGNode* s, PAGNode* d, const Value* st) :$/;"	f	class:StorePE
StorePE	include/MemoryModel/PAGEdge.h	/^class StorePE: public PAGEdge {$/;"	c
StoreSVFGNode	include/MSSA/SVFG.h	/^typedef StoreVFGNode StoreSVFGNode;$/;"	t
StoreToChiSetMap	include/MSSA/MemSSA.h	/^    typedef llvm::DenseMap<const StorePE*, CHISet> StoreToChiSetMap;$/;"	t	class:MemSSA
StoreVFGNode	include/Util/VFGNode.h	/^    StoreVFGNode(NodeID id,const StorePE* edge): StmtVFGNode(id,edge,Store) {$/;"	f	class:StoreVFGNode
StoreVFGNode	include/Util/VFGNode.h	/^class StoreVFGNode: public StmtVFGNode {$/;"	c
StoresToMRsMap	include/MSSA/MemRegion.h	/^    typedef llvm::DenseMap<const StorePE*, MRSet> StoresToMRsMap;$/;"	t	class:MRGenerator
StoresToPointsToMap	include/MSSA/MemRegion.h	/^    typedef llvm::DenseMap<const StorePE*, PointsTo> StoresToPointsToMap;$/;"	t	class:MRGenerator
StringMap	include/Util/BasicTypes.h	/^typedef llvm::StringMap<u32_t> StringMap;$/;"	t
StringRef	include/Util/BasicTypes.h	/^typedef llvm::StringRef StringRef;$/;"	t
StructLayout	include/Util/BasicTypes.h	/^typedef llvm::StructLayout StructLayout;$/;"	t
StructType	include/Util/BasicTypes.h	/^typedef llvm::StructType StructType;$/;"	t
Subset	include/MemoryModel/LocationSet.h	/^        NonOverlap, Overlap, Subset, Superset, Same$/;"	e	enum:LocationSet::LSRelation
SubsetCountMinterm	lib/CUDD/cuddSubsetHB.c	/^SubsetCountMinterm($/;"	f	file:
SubsetCountMintermAux	lib/CUDD/cuddSubsetHB.c	/^SubsetCountMintermAux($/;"	f	file:
SubsetCountNodes	lib/CUDD/cuddSubsetHB.c	/^SubsetCountNodes($/;"	f	file:
SubsetCountNodesAux	lib/CUDD/cuddSubsetHB.c	/^SubsetCountNodesAux($/;"	f	file:
Superset	include/MemoryModel/LocationSet.h	/^        NonOverlap, Overlap, Subset, Superset, Same$/;"	e	enum:LocationSet::LSRelation
SwitchInst	include/Util/BasicTypes.h	/^typedef llvm::SwitchInst SwitchInst;$/;"	t
SymID	include/Util/BasicTypes.h	/^typedef unsigned SymID;$/;"	t
SymbolTableInfo	include/MemoryModel/MemModel.h	/^    SymbolTableInfo() :$/;"	f	class:SymbolTableInfo
SymbolTableInfo	include/MemoryModel/MemModel.h	/^class SymbolTableInfo {$/;"	c
Symbolnfo	lib/MemoryModel/MemModel.cpp	/^SymbolTableInfo* SymbolTableInfo::Symbolnfo() {$/;"	f	class:SymbolTableInfo
T	include/CUDD/cudd.h	/^    struct DdNode *T;$/;"	m	struct:DdChildren	typeref:struct:DdChildren::DdNode
T	include/CUDD/dddmpInt.h	/^  unsigned  T      : 2;$/;"	m	struct:binary_dd_code
TDAPIMap	include/Util/ThreadAPI.h	/^    typedef llvm::StringMap<TD_TYPE> TDAPIMap;$/;"	t	class:ThreadAPI
TDForkEdge	include/Util/PTACallGraph.h	/^        CallRetEdge,TDForkEdge,TDJoinEdge,HareParForEdge$/;"	e	enum:PTACallGraphEdge::CEDGEK
TDForkPE	include/MemoryModel/PAGEdge.h	/^    TDForkPE(PAGNode* s, PAGNode* d, const Instruction* i) :$/;"	f	class:TDForkPE
TDForkPE	include/MemoryModel/PAGEdge.h	/^class TDForkPE: public PAGEdge {$/;"	c
TDJoinEdge	include/Util/PTACallGraph.h	/^        CallRetEdge,TDForkEdge,TDJoinEdge,HareParForEdge$/;"	e	enum:PTACallGraphEdge::CEDGEK
TDJoinPE	include/MemoryModel/PAGEdge.h	/^    TDJoinPE(PAGNode* s, PAGNode* d, const Instruction* i) :$/;"	f	class:TDJoinPE
TDJoinPE	include/MemoryModel/PAGEdge.h	/^class TDJoinPE: public PAGEdge {$/;"	c
TD_ACQUIRE	include/Util/ThreadAPI.h	/^        TD_ACQUIRE,      \/\/\/ acquire a lock$/;"	e	enum:ThreadAPI::TD_TYPE
TD_BAR_INIT	include/Util/ThreadAPI.h	/^        TD_BAR_INIT,        \/\/\/ Barrier init$/;"	e	enum:ThreadAPI::TD_TYPE
TD_BAR_WAIT	include/Util/ThreadAPI.h	/^        TD_BAR_WAIT,         \/\/\/ Barrier wait$/;"	e	enum:ThreadAPI::TD_TYPE
TD_CANCEL	include/Util/ThreadAPI.h	/^        TD_CANCEL,	   \/\/\/ cancel a thread by another$/;"	e	enum:ThreadAPI::TD_TYPE
TD_CONDVAR_DESTROY	include/Util/ThreadAPI.h	/^        TD_CONDVAR_DESTROY, \/\/\/ initial a mutex variable$/;"	e	enum:ThreadAPI::TD_TYPE
TD_CONDVAR_INI	include/Util/ThreadAPI.h	/^        TD_CONDVAR_INI,	   \/\/\/ initial a mutex variable$/;"	e	enum:ThreadAPI::TD_TYPE
TD_COND_BROADCAST	include/Util/ThreadAPI.h	/^        TD_COND_BROADCAST,    \/\/\/ broadcast a condition$/;"	e	enum:ThreadAPI::TD_TYPE
TD_COND_SIGNAL	include/Util/ThreadAPI.h	/^        TD_COND_SIGNAL,    \/\/\/ signal a condition$/;"	e	enum:ThreadAPI::TD_TYPE
TD_COND_WAIT	include/Util/ThreadAPI.h	/^        TD_COND_WAIT,    \/\/\/ wait a condition$/;"	e	enum:ThreadAPI::TD_TYPE
TD_DETACH	include/Util/ThreadAPI.h	/^        TD_DETACH,       \/\/\/ detach a thread directly instead wait for it to join$/;"	e	enum:ThreadAPI::TD_TYPE
TD_DUMMY	include/Util/ThreadAPI.h	/^        TD_DUMMY = 0,		\/\/\/ dummy type$/;"	e	enum:ThreadAPI::TD_TYPE
TD_EXIT	include/Util/ThreadAPI.h	/^        TD_EXIT,		   \/\/\/ exit\/kill a thread$/;"	e	enum:ThreadAPI::TD_TYPE
TD_FORK	include/Util/ThreadAPI.h	/^        TD_FORK,         \/\/\/ create a new thread$/;"	e	enum:ThreadAPI::TD_TYPE
TD_JOIN	include/Util/ThreadAPI.h	/^        TD_JOIN,         \/\/\/ wait for a thread to join$/;"	e	enum:ThreadAPI::TD_TYPE
TD_MUTEX_DESTROY	include/Util/ThreadAPI.h	/^        TD_MUTEX_DESTROY,   \/\/\/ initial a mutex variable$/;"	e	enum:ThreadAPI::TD_TYPE
TD_MUTEX_INI	include/Util/ThreadAPI.h	/^        TD_MUTEX_INI,	     \/\/\/ initial a mutex variable$/;"	e	enum:ThreadAPI::TD_TYPE
TD_RELEASE	include/Util/ThreadAPI.h	/^        TD_RELEASE,      \/\/\/ release a lock$/;"	e	enum:ThreadAPI::TD_TYPE
TD_TRY_ACQUIRE	include/Util/ThreadAPI.h	/^        TD_TRY_ACQUIRE,  \/\/\/ try to acquire a lock$/;"	e	enum:ThreadAPI::TD_TYPE
TD_TYPE	include/Util/ThreadAPI.h	/^    enum TD_TYPE {$/;"	g	class:ThreadAPI
TEMPLATE	include/MemoryModel/CHA.h	/^        TEMPLATE = 0x04 \/\/ template class$/;"	e	enum:CHNode::__anon3
THREADAPI_CPP_	lib/Util/ThreadAPI.cpp	31;"	d	file:
THREADAPI_H_	include/Util/ThreadAPI.h	31;"	d
THRESHOLD	lib/CUDD/cuddDecomp.c	71;"	d	file:
TIMEINTERVAL	include/Util/BasicTypes.h	131;"	d
TIMEStatMap	include/Util/PTAStat.h	/^    typedef std::map<const char*,double> TIMEStatMap;$/;"	t	class:PTAStat
TInterPhi	include/Util/VFGNode.h	/^        Addr, Copy, Gep, Store, Load, Cmp, BinaryOp, TPhi, TIntraPhi, TInterPhi,$/;"	e	enum:VFGNode::VFGNodeK
TIntraPhi	include/Util/VFGNode.h	/^        Addr, Copy, Gep, Store, Load, Cmp, BinaryOp, TPhi, TIntraPhi, TInterPhi,$/;"	e	enum:VFGNode::VFGNodeK
TLVFNodeEnd	include/MSSA/SVFGStat.h	/^    void TLVFNodeEnd() {$/;"	f	class:SVFGStat
TLVFNodeStart	include/MSSA/SVFGStat.h	/^    void TLVFNodeStart() {$/;"	f	class:SVFGStat
TOOLNAME	tools/DisPatch/Makefile	/^TOOLNAME=dispatch$/;"	m
TOTAL_CARE	lib/CUDD/cuddApprox.c	99;"	d	file:
TPhi	include/Util/VFGNode.h	/^        Addr, Copy, Gep, Store, Load, Cmp, BinaryOp, TPhi, TIntraPhi, TInterPhi,$/;"	e	enum:VFGNode::VFGNodeK
ThdCallGraph	include/Util/PTACallGraph.h	/^        NormCallGraph, ThdCallGraph$/;"	e	enum:PTACallGraph::CGEK
TheadMHPIndirectVF	include/Util/VFGEdge.h	/^		TheadMHPIndirectVF$/;"	e	enum:VFGEdge::VFGEdgeK
ThreadAPI	include/Util/ThreadAPI.h	/^    ThreadAPI () {$/;"	f	class:ThreadAPI
ThreadAPI	include/Util/ThreadAPI.h	/^class ThreadAPI {$/;"	c
ThreadCallGraph	include/Util/ThreadCallGraph.h	/^class ThreadCallGraph: public PTACallGraph {$/;"	c
ThreadCallGraph	lib/Util/ThreadCallGraph.cpp	/^ThreadCallGraph::ThreadCallGraph(SVFModule svfModule) :$/;"	f	class:ThreadCallGraph
ThreadFork	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
ThreadForkEdge	include/Util/ThreadCallGraph.h	/^    ThreadForkEdge(PTACallGraphNode* s, PTACallGraphNode* d, CallSiteID csId) :$/;"	f	class:ThreadForkEdge
ThreadForkEdge	include/Util/ThreadCallGraph.h	/^class ThreadForkEdge: public PTACallGraphEdge {$/;"	c
ThreadID	include/Util/BasicTypes.h	/^typedef unsigned ThreadID;$/;"	t
ThreadJoin	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
ThreadJoinEdge	include/Util/ThreadCallGraph.h	/^    ThreadJoinEdge(PTACallGraphNode* s, PTACallGraphNode* d, CallSiteID csId) :$/;"	f	class:ThreadJoinEdge
ThreadJoinEdge	include/Util/ThreadCallGraph.h	/^class ThreadJoinEdge: public PTACallGraphEdge {$/;"	c
ThreadMHPIndSVFGEdge	include/MSSA/SVFGEdge.h	/^	ThreadMHPIndSVFGEdge(VFGNode* s, VFGNode* d): IndirectSVFGEdge(s,d,TheadMHPIndirectVF) {$/;"	f	class:ThreadMHPIndSVFGEdge
ThreadMHPIndSVFGEdge	include/MSSA/SVFGEdge.h	/^class ThreadMHPIndSVFGEdge : public IndirectSVFGEdge {$/;"	c
TimeOfCreateMUCHI	include/MSSA/SVFGStat.h	/^    static const char* TimeOfCreateMUCHI;	\/\/\/< Time for generating mu\/chi for load\/store\/calls$/;"	m	class:MemSSAStat
TimeOfCreateMUCHI	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::TimeOfCreateMUCHI  = "GenMUCHITime";	\/\/\/< Time for generating mu\/chi for load\/store\/calls$/;"	m	class:MemSSAStat	file:
TimeOfGeneratingMemRegions	include/MSSA/SVFGStat.h	/^    static const char* TimeOfGeneratingMemRegions;	\/\/\/< Time for allocating regions$/;"	m	class:MemSSAStat
TimeOfGeneratingMemRegions	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::TimeOfGeneratingMemRegions  = "GenRegionTime";	\/\/\/< Time for allocating regions$/;"	m	class:MemSSAStat	file:
TimeOfInsertingPHI	include/MSSA/SVFGStat.h	/^    static const char* TimeOfInsertingPHI;	\/\/\/< Time for inserting phis$/;"	m	class:MemSSAStat
TimeOfInsertingPHI	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::TimeOfInsertingPHI = "InsertPHITime";	\/\/\/< Time for inserting phis$/;"	m	class:MemSSAStat	file:
TimeOfSSARenaming	include/MSSA/SVFGStat.h	/^    static const char* TimeOfSSARenaming;	\/\/\/< Time for SSA rename$/;"	m	class:MemSSAStat
TimeOfSSARenaming	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::TimeOfSSARenaming = "SSARenameTime";	\/\/\/< Time for SSA rename$/;"	m	class:MemSSAStat	file:
TlClause	lib/CUDD/cuddEssent.c	/^struct TlClause {$/;"	s	file:
TlClause	lib/CUDD/cuddEssent.c	/^typedef struct TlClause TlClause;$/;"	t	typeref:struct:TlClause	file:
Tolp	lib/CUDD/cuddEssent.c	/^static BitVector *Tolp;$/;"	v	file:
Tolv	lib/CUDD/cuddEssent.c	/^static BitVector *Tolv;$/;"	v	file:
ToolOutputFile	include/Util/BasicTypes.h	/^typedef llvm::ToolOutputFile ToolOutputFile;$/;"	t
TotalAnalysisTime	include/Util/PTAStat.h	/^    static const char* TotalAnalysisTime; \/\/\/< Total analysis time$/;"	m	class:PTAStat
TotalAnalysisTime	lib/Util/PTAStat.cpp	/^const char* PTAStat:: TotalAnalysisTime = "TotalTime";	\/\/\/< PAG value nodes$/;"	m	class:PTAStat	file:
TotalNumOfEdges	include/Util/PTAStat.h	/^    static const char* TotalNumOfEdges;	\/\/\/< Total PAG edge number$/;"	m	class:PTAStat
TotalNumOfEdges	lib/Util/PTAStat.cpp	/^const char* PTAStat:: TotalNumOfEdges = "TotalPAGEdges";	\/\/\/< Total PAG edge number$/;"	m	class:PTAStat	file:
TotalNumOfFieldObjects	include/Util/PTAStat.h	/^    static const char* TotalNumOfFieldObjects;	\/\/\/< Total PAG field object node$/;"	m	class:PTAStat
TotalNumOfFieldObjects	lib/Util/PTAStat.cpp	/^const char* PTAStat:: TotalNumOfFieldObjects = "TotalFieldObjects";	\/\/\/< Total PAG field object node$/;"	m	class:PTAStat	file:
TotalNumOfObjects	include/Util/PTAStat.h	/^    static const char* TotalNumOfObjects;	\/\/\/< Total PAG object node$/;"	m	class:PTAStat
TotalNumOfObjects	lib/Util/PTAStat.cpp	/^const char* PTAStat:: TotalNumOfObjects = "TotalObjects";	\/\/\/< Total PAG object node$/;"	m	class:PTAStat	file:
TotalNumOfPointers	include/Util/PTAStat.h	/^    static const char* TotalNumOfPointers;	\/\/\/< Total PAG value node$/;"	m	class:PTAStat
TotalNumOfPointers	lib/Util/PTAStat.cpp	/^const char* PTAStat:: TotalNumOfPointers = "TotalPointers";	\/\/\/< PAG value nodes$/;"	m	class:PTAStat	file:
TotalTimeOfConstructMemSSA	include/MSSA/SVFGStat.h	/^    static const char* TotalTimeOfConstructMemSSA;	\/\/\/< Total time for constructing memory SSA$/;"	m	class:MemSSAStat
TotalTimeOfConstructMemSSA	lib/MSSA/SVFGStat.cpp	/^const char* MemSSAStat::TotalTimeOfConstructMemSSA = "TotalMSSATime";	\/\/\/< Total time for constructing memory SSA$/;"	m	class:MemSSAStat	file:
Type	include/Util/BasicTypes.h	/^typedef llvm::Type Type;$/;"	t
TypeAnalysis	include/WPA/TypeAnalysis.h	/^	TypeAnalysis(PTATY type = TypeCPP_WPA)$/;"	f	class:TypeAnalysis
TypeAnalysis	include/WPA/TypeAnalysis.h	/^class TypeAnalysis:  public Andersen {$/;"	c
TypeCPP_WPA	include/MemoryModel/PointerAnalysis.h	/^        TypeCPP_WPA, \/\/\/<  Type-based analysis for C++$/;"	e	enum:PointerAnalysis::PTATY
TypeMismatchedObjToEdgeTy	include/WPA/Andersen.h	/^    typedef std::map<NodeID, std::set<const GepCGEdge*>> TypeMismatchedObjToEdgeTy;$/;"	t	class:AndersenWaveDiffWithType
TypeSet	include/MemoryModel/PTAType.h	/^class TypeSet {$/;"	c
TypeSetTy	include/MemoryModel/PTAType.h	/^    typedef std::set<PTAType> TypeSetTy;$/;"	t	class:TypeSet
TypeSystem	include/MemoryModel/PTAType.h	/^    TypeSystem(const PAG *pag) {$/;"	f	class:TypeSystem
TypeSystem	include/MemoryModel/PTAType.h	/^class TypeSystem {$/;"	c
TypeToFieldInfoMap	include/MemoryModel/MemModel.h	/^    typedef llvm::DenseMap<const Type*, StInfo*> TypeToFieldInfoMap;$/;"	t	class:SymbolTableInfo
TypeToVarsMapTy	include/MemoryModel/PTAType.h	/^    typedef std::map<PTAType, NodeBS> TypeToVarsMapTy;$/;"	t	class:TypeSystem
UAbuildSubset	lib/CUDD/cuddApprox.c	/^UAbuildSubset($/;"	f	file:
UAmarkNodes	lib/CUDD/cuddApprox.c	/^UAmarkNodes($/;"	f	file:
USEDLIBS	lib/DisPatch/Makefile	/^USEDLIBS = wpa.a mssa.a mem.a ptautil.a cudd.a$/;"	m
USEDLIBS	lib/MSSA/Makefile	/^USEDLIBS = ptautil.a cudd.a$/;"	m
USEDLIBS	lib/MemoryModel/Makefile	/^USEDLIBS = ptautil.a$/;"	m
USEDLIBS	lib/Util/Makefile	/^USEDLIBS = wpa.a mssa.a mem.a ptautil.a cudd.a$/;"	m
USEDLIBS	lib/WPA/Makefile	/^USEDLIBS = mssa.a mem.a ptautil.a cudd.a$/;"	m
USEDLIBS	tools/DisPatch/Makefile	/^USEDLIBS = dispatch.a wpa.a mssa.a$/;"	m
UTILDEF_H_	include/DisPatch/UtilDef.h	2;"	d
UTIL_H	include/CUDD/util.h	4;"	d
UTIL_INLINE	include/CUDD/util.h	11;"	d
UTIL_INLINE	include/CUDD/util.h	18;"	d
UTIL_UNUSED	include/CUDD/util.h	13;"	d
UTIL_UNUSED	include/CUDD/util.h	15;"	d
UTIL_UNUSED	include/CUDD/util.h	19;"	d
UTIL_UNUSED	lib/CUDD/st.c	/^static char rcsid[] UTIL_UNUSED = " $Id: st.c,v 1.12 2010\/04\/22 19:00:55 fabio Exp fabio $";$/;"	v	file:
UndefValue	include/Util/BasicTypes.h	/^typedef llvm::UndefValue UndefValue;$/;"	t
UnifyFunctionExit	include/Util/BreakConstantExpr.h	/^    inline void UnifyFunctionExit(Module& module) {$/;"	f	class:MergeFunctionRets
UnifyFunctionExitNodes	include/Util/BasicTypes.h	/^typedef llvm::UnifyFunctionExitNodes UnifyFunctionExitNodes;$/;"	t
UnreachableInst	include/Util/BasicTypes.h	/^typedef llvm::UnreachableInst UnreachableInst;$/;"	t
Unused	include/CUDD/dddmpInt.h	/^  unsigned  Unused : 1;$/;"	m	struct:binary_dd_code
UpdateCallGraphTime	include/Util/PTAStat.h	/^    static const char* UpdateCallGraphTime;	\/\/\/< time of updating call graph$/;"	m	class:PTAStat
UpdateCallGraphTime	lib/Util/PTAStat.cpp	/^const char* PTAStat:: UpdateCallGraphTime = "UpdateCGTime";	\/\/\/< process copy and gep time$/;"	m	class:PTAStat	file:
UpdatedVarMap	include/MemoryModel/PointsToDFDS.h	/^    typedef std::map<LocID, Data> UpdatedVarMap;	\/\/\/< for propagating only newly added variable in IN\/OUT set$/;"	t	class:IncDFPTData
UpdatedVarMapIter	include/MemoryModel/PointsToDFDS.h	/^    typedef typename UpdatedVarMap::iterator UpdatedVarMapIter;$/;"	t	class:IncDFPTData
UpdatedVarconstIter	include/MemoryModel/PointsToDFDS.h	/^    typedef typename UpdatedVarMap::const_iterator UpdatedVarconstIter;$/;"	t	class:IncDFPTData
Use	include/Util/BasicTypes.h	/^typedef llvm::Use Use;$/;"	t
User	include/Util/BasicTypes.h	/^typedef llvm::User User;$/;"	t
UtilDef	include/DisPatch/UtilDef.h	/^class UtilDef{$/;"	c
V	include/CUDD/dddmpInt.h	/^  unsigned  V      : 2;$/;"	m	struct:binary_dd_code
VAArgInst	include/Util/BasicTypes.h	/^typedef llvm::VAArgInst VAArgInst;$/;"	t
VAR_ARRAY_OBJ	include/MemoryModel/MemModel.h	/^        VAR_ARRAY_OBJ = 0x40,  \/\/ object contains array$/;"	e	enum:ObjTypeInfo::__anon5
VAR_STRUCT_OBJ	include/MemoryModel/MemModel.h	/^        VAR_STRUCT_OBJ = 0x20,  \/\/ object contains struct$/;"	e	enum:ObjTypeInfo::__anon5
VCallInCtorOrDtor	lib/Util/CPPUtil.cpp	/^bool cppUtil::VCallInCtorOrDtor(CallSite cs)  {$/;"	f	class:cppUtil
VERSION	include/MSSA/MemRegion.h	/^typedef NodeID VERSION;$/;"	t
VFG	include/Util/VFG.h	/^class VFG : public GenericVFGTy {$/;"	c
VFG	lib/Util/VFG.cpp	/^VFG::VFG(PTACallGraph* cg, VFGK k): totalVFGNode(0), callgraph(cg), pag(PAG::getPAG()), kind(k) {$/;"	f	class:VFG
VFGEdge	include/Util/VFGEdge.h	/^    VFGEdge(VFGNode* s, VFGNode* d, GEdgeFlag k) : GenericVFGEdgeTy(s,d,k) {$/;"	f	class:VFGEdge
VFGEdge	include/Util/VFGEdge.h	/^class VFGEdge : public GenericVFGEdgeTy {$/;"	c
VFGEdgeK	include/Util/VFGEdge.h	/^	enum VFGEdgeK {$/;"	g	class:VFGEdge
VFGEdgeSetTy	include/Util/VFG.h	/^    typedef VFGEdge::VFGEdgeSetTy VFGEdgeSetTy;$/;"	t	class:VFG
VFGEdgeSetTy	include/Util/VFGEdge.h	/^    typedef GenericNode<VFGNode,VFGEdge>::GEdgeSetTy VFGEdgeSetTy;$/;"	t	class:VFGEdge
VFGK	include/Util/VFG.h	/^    enum VFGK {$/;"	g	class:VFG
VFGNode	include/Util/VFGNode.h	/^    VFGNode(NodeID i, VFGNodeK k): GenericVFGNodeTy(i,k), bb(NULL) {$/;"	f	class:VFGNode
VFGNode	include/Util/VFGNode.h	/^class VFGNode : public GenericVFGNodeTy {$/;"	c
VFGNodeIDToNodeMapTy	include/Util/VFG.h	/^    typedef llvm::DenseMap<NodeID, VFGNode *> VFGNodeIDToNodeMapTy;$/;"	t	class:VFG
VFGNodeIter	include/Util/VFG.h	/^    typedef VFGEdge::VFGEdgeSetTy::iterator VFGNodeIter;$/;"	t	class:VFG
VFGNodeK	include/Util/VFGNode.h	/^    enum VFGNodeK {$/;"	g	class:VFGNode
VFMA	include/DisPatch/BinIRWrapper.h	/^        VFMA = Instruction::InsertValue + 2$/;"	e	enum:BinIRWrapper::BinOpExtension
VFMS	include/DisPatch/BinIRWrapper.h	/^        VFMS = Instruction::InsertValue + 1, $/;"	e	enum:BinIRWrapper::BinOpExtension
VFPathCond	include/Util/DPItem.h	/^    VFPathCond(PathCond* p = PathCondAllocator::trueCond()) : ContextCond(), path(p) {$/;"	f	class:VFPathCond
VFPathCond	include/Util/DPItem.h	/^    VFPathCond(const VFPathCond& cond): ContextCond(cond), path(cond.getPaths()),edges(cond.getVFEdges()) {$/;"	f	class:VFPathCond
VFPathCond	include/Util/DPItem.h	/^class VFPathCond : public ContextCond {$/;"	c
VFPathPtSet	include/Util/DPItem.h	/^typedef CondStdSet<VFPathVar> VFPathPtSet;$/;"	t
VFPathVar	include/Util/DPItem.h	/^typedef CondVar<VFPathCond> VFPathVar;$/;"	t
VFunSet	include/MemoryModel/CHA.h	/^    typedef std::set<const Function*> VFunSet;$/;"	t	class:CHGraph
VFunSet	include/MemoryModel/PointerAnalysis.h	/^    typedef std::set<const Function*> VFunSet;$/;"	t	class:PointerAnalysis
VOID_OR_CHAR	include/CUDD/util.h	88;"	d
VOID_OR_CHAR	include/CUDD/util.h	91;"	d
VOID_OR_INT	include/CUDD/util.h	87;"	d
VOID_OR_INT	include/CUDD/util.h	90;"	d
VTableSet	include/MemoryModel/CHA.h	/^    typedef std::set<const GlobalValue*> VTableSet;$/;"	t	class:CHGraph
VTableSet	include/MemoryModel/PointerAnalysis.h	/^    typedef std::set<const GlobalValue*> VTableSet;$/;"	t	class:PointerAnalysis
ValNode	include/MemoryModel/PAGNode.h	/^        ValNode,$/;"	e	enum:PAGNode::PNODEK
ValPN	include/MemoryModel/PAGNode.h	/^    ValPN(const Value* val, NodeID i, PNODEK ty = ValNode) :$/;"	f	class:ValPN
ValPN	include/MemoryModel/PAGNode.h	/^class ValPN: public PAGNode {$/;"	c
ValSym	include/MemoryModel/MemModel.h	/^    ValSym,$/;"	e	enum:SYMTYPE
Valdereference	include/MemoryModel/GenericGraph.h	/^    static NodeType* Valdereference(PairTy P) {$/;"	f	struct:llvm::GraphTraits
Value	include/Util/BasicTypes.h	/^typedef llvm::Value Value;$/;"	t
ValueToIDMapTy	include/MemoryModel/MemModel.h	/^    typedef llvm::DenseMap<const Value *, SymID> ValueToIDMapTy;$/;"	t	class:SymbolTableInfo
VarArgPN	include/MemoryModel/PAGNode.h	/^    VarArgPN(const Function* val, NodeID i) :$/;"	f	class:VarArgPN
VarArgPN	include/MemoryModel/PAGNode.h	/^class VarArgPN: public PAGNode {$/;"	c
VarToTypeSetMap	include/MemoryModel/PTAType.h	/^    VarToTypeSetMapTy VarToTypeSetMap;$/;"	m	class:TypeSystem
VarToTypeSetMapTy	include/MemoryModel/PTAType.h	/^    typedef std::map<NodeID, TypeSet*> VarToTypeSetMapTy;$/;"	t	class:TypeSystem
VarargNode	include/MemoryModel/PAGNode.h	/^        VarargNode,$/;"	e	enum:PAGNode::PNODEK
VarargSym	include/MemoryModel/MemModel.h	/^    VarargSym$/;"	e	enum:SYMTYPE
VariantGep	include/MemoryModel/ConsGEdge.h	/^        Addr, Copy, Store, Load, NormalGep, VariantGep$/;"	e	enum:ConstraintEdge::ConstraintEdgeK
VariantGep	include/MemoryModel/PAGEdge.h	/^        Addr, Copy, Store, Load, Call, Ret, NormalGep, VariantGep, ThreadFork, ThreadJoin, Cmp, BinaryOp$/;"	e	enum:PAGEdge::PEDGEK
VariantGepCGEdge	include/MemoryModel/ConsGEdge.h	/^    VariantGepCGEdge(ConstraintNode* s, ConstraintNode* d, EdgeID id)$/;"	f	class:VariantGepCGEdge
VariantGepCGEdge	include/MemoryModel/ConsGEdge.h	/^class VariantGepCGEdge : public GepCGEdge {$/;"	c
VariantGepPE	include/MemoryModel/PAGEdge.h	/^    VariantGepPE(PAGNode* s, PAGNode* d) : GepPE(s,d,PAGEdge::VariantGep) {}$/;"	f	class:VariantGepPE
VariantGepPE	include/MemoryModel/PAGEdge.h	/^class VariantGepPE : public GepPE {$/;"	c
VectorType	include/Util/BasicTypes.h	/^typedef llvm::VectorType VectorType;$/;"	t
Veto	include/WPA/WPAPass.h	/^        Veto,			\/\/\/< return NoAlias if any pta says no alias$/;"	e	enum:WPAPass::AliasCheckRule
WEIGHT	lib/CUDD/cuddSat.c	111;"	d	file:
WORKLIST_H_	include/Util/WorkList.h	37;"	d
WPAConstraintSolver	include/WPA/Andersen.h	/^typedef WPASolver<ConstraintGraph*> WPAConstraintSolver;$/;"	t
WPAFSSOLVER_H_	include/WPA/WPAFSSolver.h	37;"	d
WPAFSSolver	include/WPA/WPAFSSolver.h	/^    WPAFSSolver() : WPASolver<GraphType>()$/;"	f	class:WPAFSSolver
WPAFSSolver	include/WPA/WPAFSSolver.h	/^class WPAFSSolver : public WPASolver<GraphType> {$/;"	c
WPAMinimumSolver	include/WPA/WPAFSSolver.h	/^    WPAMinimumSolver() : WPASCCSolver<GraphType>() {}$/;"	f	class:WPAMinimumSolver
WPAMinimumSolver	include/WPA/WPAFSSolver.h	/^class WPAMinimumSolver : public WPASCCSolver<GraphType> {$/;"	c
WPAPass	include/WPA/WPAPass.h	/^    WPAPass() : ModulePass(ID) {$/;"	f	class:WPAPass
WPAPass	include/WPA/WPAPass.h	/^class WPAPass: public ModulePass {$/;"	c
WPASCCSolver	include/WPA/WPAFSSolver.h	/^    WPASCCSolver() : WPAFSSolver<GraphType>() {}$/;"	f	class:WPASCCSolver
WPASCCSolver	include/WPA/WPAFSSolver.h	/^class WPASCCSolver : public WPAFSSolver<GraphType> {$/;"	c
WPASVFGFSSolver	include/WPA/FlowSensitive.h	/^typedef WPAFSSolver<SVFG*> WPASVFGFSSolver;$/;"	t
WPASolver	include/WPA/WPASolver.h	/^    WPASolver(): _graph(NULL),scc(NULL), reanalyze(false), numOfIteration(0), iterationForPrintStat(1000)$/;"	f	class:WPASolver
WPASolver	include/WPA/WPASolver.h	/^class WPASolver {$/;"	c
WPA_H_	include/WPA/WPAPass.h	38;"	d
WorkList	include/MSSA/MemRegion.h	/^    typedef FIFOWorkList<NodeID> WorkList;$/;"	t	class:MRGenerator
WorkList	include/MSSA/SVFGOPT.h	/^    typedef FIFOWorkList<const MSSAPHISVFGNode*> WorkList;$/;"	t	class:SVFGOPT
WorkList	include/MemoryModel/CHA.h	/^    typedef FIFOWorkList<const CHNode*> WorkList;$/;"	t	class:CHGraph
WorkList	include/MemoryModel/ConsG.h	/^    typedef FIFOWorkList<NodeID> WorkList;$/;"	t	class:ConstraintGraph
WorkList	include/Util/CFLSolver.h	/^    typedef FIFOWorkList<DPIm> WorkList;$/;"	t	class:CFLSolver
WorkList	include/Util/ICFG.h	/^    typedef FIFOWorkList<const Instruction*> WorkList;$/;"	t	class:ICFG
WorkList	include/WPA/WPASolver.h	/^    typedef FIFOWorkList<NodeID> WorkList;$/;"	t	class:WPASolver
WorkStack	include/WPA/CSC.h	/^    typedef FILOWorkList<NodeID> WorkStack;$/;"	t	class:CSC
WriteByteBinary	lib/CUDD/dddmpBinary.c	/^WriteByteBinary ($/;"	f	file:
WriteGraphToFile	include/Util/GraphPrinter.h	/^    static void WriteGraphToFile(llvm::raw_ostream &O,$/;"	f	class:llvm::GraphPrinter
ZDD_MV_OOM	lib/CUDD/cuddZddSymm.c	77;"	d	file:
ZeroCase	lib/CUDD/cuddDecomp.c	/^ZeroCase($/;"	f	file:
_AvgAddrTakenVarPtsSize	include/WPA/WPAStat.h	/^    double _AvgAddrTakenVarPtsSize;	\/\/\/< average points-to set size of addr-taken variables.$/;"	m	class:FlowSensitiveStat
_AvgInOutPtsSize	include/WPA/WPAStat.h	/^    double _AvgInOutPtsSize[2];	\/\/\/< average points-to set size in IN set.$/;"	m	class:FlowSensitiveStat
_AvgPtsSize	include/WPA/WPAStat.h	/^    double _AvgPtsSize;	\/\/\/< average points-to set size.$/;"	m	class:FlowSensitiveStat
_AvgTopLvlPtsSize	include/WPA/WPAStat.h	/^    double _AvgTopLvlPtsSize;	\/\/\/< average points-to set size in top-level pointers.$/;"	m	class:FlowSensitiveStat
_CUDD	include/CUDD/cudd.h	58;"	d
_CUDDINT	include/CUDD/cuddInt.h	52;"	d
_D	include/Util/SCC.h	/^    NodeToNodeMap            _D;$/;"	m	class:SCCDetection
_D	include/WPA/CSC.h	/^    IdToIdMap _D;       \/\/ the sum of weight of a path relevant to a certain node, while accessing the node via DFS$/;"	m	class:CSC
_DDDMP	include/CUDD/dddmp.h	30;"	d
_DDDMPINT	include/CUDD/dddmpInt.h	37;"	d
_EPD	include/CUDD/epd.h	52;"	d
_I	include/Util/SCC.h	/^    NodeID                   _I;$/;"	m	class:SCCDetection
_I	include/WPA/CSC.h	/^    NodeID _I;$/;"	m	class:CSC
_INCL_MNEMOSYNE_H	include/CUDD/mnemosyne.h	72;"	d
_MTRINT	include/CUDD/mtrInt.h	52;"	d
_MaxAddrTakenVarPts	include/WPA/WPAStat.h	/^    u32_t _MaxAddrTakenVarPts;	\/\/\/< max points-to set size of addr-taken variables.$/;"	m	class:FlowSensitiveStat
_MaxInOutPtsSize	include/WPA/WPAStat.h	/^    u32_t _MaxInOutPtsSize[2];	\/\/\/< max points-to set size in IN\/OUT set.$/;"	m	class:FlowSensitiveStat
_MaxNumOfNodesInSCC	include/WPA/WPAStat.h	/^    static u32_t _MaxNumOfNodesInSCC;$/;"	m	class:AndersenStat
_MaxNumOfNodesInSCC	lib/WPA/AndersenStat.cpp	/^u32_t AndersenStat::_MaxNumOfNodesInSCC = 0;$/;"	m	class:AndersenStat	file:
_MaxPtsSize	include/WPA/WPAStat.h	/^    static u32_t _MaxPtsSize;$/;"	m	class:AndersenStat
_MaxPtsSize	include/WPA/WPAStat.h	/^    u32_t _MaxPtsSize;	\/\/\/< max points-to set size.$/;"	m	class:FlowSensitiveStat
_MaxTopLvlPtsSize	include/WPA/WPAStat.h	/^    u32_t _MaxTopLvlPtsSize;	\/\/\/< max points-to set size in top-level pointers.$/;"	m	class:FlowSensitiveStat
_NodeSCCAuxInfo	include/Util/SCC.h	/^    GNODESCCInfoMap  _NodeSCCAuxInfo;$/;"	m	class:SCCDetection
_NumOfActualInSVFGNodesHaveInOut	include/WPA/WPAStat.h	/^    u32_t _NumOfActualInSVFGNodesHaveInOut[2];$/;"	m	class:FlowSensitiveStat
_NumOfActualOutSVFGNodesHaveInOut	include/WPA/WPAStat.h	/^    u32_t _NumOfActualOutSVFGNodesHaveInOut[2];$/;"	m	class:FlowSensitiveStat
_NumOfAddrTakeVar	include/WPA/WPAStat.h	/^    u32_t _NumOfAddrTakeVar;	\/\/\/< number of occurrences of addr-taken variables in load\/store.$/;"	m	class:FlowSensitiveStat
_NumOfBlackholePtr	include/WPA/WPAStat.h	/^    u32_t _NumOfBlackholePtr;$/;"	m	class:AndersenStat
_NumOfBlackholePtr	include/WPA/WPAStat.h	/^    u32_t _NumOfBlackholePtr;$/;"	m	class:FlowSensitiveStat
_NumOfConstantPtr	include/WPA/WPAStat.h	/^    u32_t _NumOfConstantPtr;$/;"	m	class:AndersenStat
_NumOfConstantPtr	include/WPA/WPAStat.h	/^    u32_t _NumOfConstantPtr;$/;"	m	class:FlowSensitiveStat
_NumOfCycles	include/WPA/WPAStat.h	/^    static u32_t _NumOfCycles;$/;"	m	class:AndersenStat
_NumOfCycles	lib/WPA/AndersenStat.cpp	/^u32_t AndersenStat::_NumOfCycles = 0;$/;"	m	class:AndersenStat	file:
_NumOfFormalInSVFGNodesHaveInOut	include/WPA/WPAStat.h	/^    u32_t _NumOfFormalInSVFGNodesHaveInOut[2];$/;"	m	class:FlowSensitiveStat
_NumOfFormalOutSVFGNodesHaveInOut	include/WPA/WPAStat.h	/^    u32_t _NumOfFormalOutSVFGNodesHaveInOut[2];$/;"	m	class:FlowSensitiveStat
_NumOfLoadSVFGNodesHaveInOut	include/WPA/WPAStat.h	/^    u32_t _NumOfLoadSVFGNodesHaveInOut[2];$/;"	m	class:FlowSensitiveStat
_NumOfMSSAPhiSVFGNodesHaveInOut	include/WPA/WPAStat.h	/^    u32_t _NumOfMSSAPhiSVFGNodesHaveInOut[2];$/;"	m	class:FlowSensitiveStat
_NumOfNodesInCycles	include/WPA/WPAStat.h	/^    static u32_t _NumOfNodesInCycles;$/;"	m	class:AndersenStat
_NumOfNodesInCycles	lib/WPA/AndersenStat.cpp	/^u32_t AndersenStat::_NumOfNodesInCycles = 0;$/;"	m	class:AndersenStat	file:
_NumOfNullPtr	include/WPA/WPAStat.h	/^    u32_t _NumOfNullPtr;$/;"	m	class:AndersenStat
_NumOfNullPtr	include/WPA/WPAStat.h	/^    u32_t _NumOfNullPtr;$/;"	m	class:FlowSensitiveStat
_NumOfPWCCycles	include/WPA/WPAStat.h	/^    static u32_t _NumOfPWCCycles;$/;"	m	class:AndersenStat
_NumOfPWCCycles	lib/WPA/AndersenStat.cpp	/^u32_t AndersenStat::_NumOfPWCCycles = 0;$/;"	m	class:AndersenStat	file:
_NumOfSVFGNodesHaveInOut	include/WPA/WPAStat.h	/^    u32_t _NumOfSVFGNodesHaveInOut[2];$/;"	m	class:FlowSensitiveStat
_NumOfStoreSVFGNodesHaveInOut	include/WPA/WPAStat.h	/^    u32_t _NumOfStoreSVFGNodesHaveInOut[2];$/;"	m	class:FlowSensitiveStat
_NumOfVarHaveINOUTPts	include/WPA/WPAStat.h	/^    u32_t _NumOfVarHaveINOUTPts[2];$/;"	m	class:FlowSensitiveStat
_NumOfVarHaveINOUTPtsInActualIn	include/WPA/WPAStat.h	/^    u32_t _NumOfVarHaveINOUTPtsInActualIn[2];$/;"	m	class:FlowSensitiveStat
_NumOfVarHaveINOUTPtsInActualOut	include/WPA/WPAStat.h	/^    u32_t _NumOfVarHaveINOUTPtsInActualOut[2];$/;"	m	class:FlowSensitiveStat
_NumOfVarHaveINOUTPtsInFormalIn	include/WPA/WPAStat.h	/^    u32_t _NumOfVarHaveINOUTPtsInFormalIn[2];$/;"	m	class:FlowSensitiveStat
_NumOfVarHaveINOUTPtsInFormalOut	include/WPA/WPAStat.h	/^    u32_t _NumOfVarHaveINOUTPtsInFormalOut[2];$/;"	m	class:FlowSensitiveStat
_NumOfVarHaveINOUTPtsInLoad	include/WPA/WPAStat.h	/^    u32_t _NumOfVarHaveINOUTPtsInLoad[2];$/;"	m	class:FlowSensitiveStat
_NumOfVarHaveINOUTPtsInMSSAPhi	include/WPA/WPAStat.h	/^    u32_t _NumOfVarHaveINOUTPtsInMSSAPhi[2];$/;"	m	class:FlowSensitiveStat
_NumOfVarHaveINOUTPtsInStore	include/WPA/WPAStat.h	/^    u32_t _NumOfVarHaveINOUTPtsInStore[2];$/;"	m	class:FlowSensitiveStat
_S	include/WPA/CSC.h	/^    NodeStack _S;       \/\/ a stack holding a DFS branch$/;"	m	class:CSC
_SS	include/Util/SCC.h	/^    GNodeStack             _SS;$/;"	m	class:SCCDetection
_T	include/Util/SCC.h	/^    GNodeStack             _T;$/;"	m	class:SCCDetection
_TotalPtsSize	include/WPA/WPAStat.h	/^    u32_t _TotalPtsSize;	\/\/\/< total points-to set size.$/;"	m	class:FlowSensitiveStat
__ExtAPI_H	include/Util/ExtAPI.h	34;"	d
__MTR	include/CUDD/mtr.h	60;"	d
_condPts	include/MemoryModel/ConditionalPT.h	/^    CondPts _condPts;$/;"	m	class:CondPointsToSet
_consG	include/WPA/CSC.h	/^    ConstraintGraph* _consG;$/;"	m	class:CSC
_ctrlinfo	include/DisPatch/CtrlIdentifier.h	/^    typedef struct _ctrlinfo{$/;"	s	class:CtrlIdentifier
_curIter	include/MemoryModel/ConditionalPT.h	/^        typename CondPointsToSet<Cond>::CondPtsIter _curIter;$/;"	m	class:CondPointsToSet::CondPtsSetIterator
_endIter	include/MemoryModel/ConditionalPT.h	/^        typename CondPointsToSet<Cond>::CondPtsIter _endIter;$/;"	m	class:CondPointsToSet::CondPtsSetIterator
_graph	include/Util/CFLSolver.h	/^    GraphType _graph;$/;"	m	class:CFLSolver
_graph	include/Util/SCC.h	/^    const GraphType &           _graph;$/;"	m	class:SCCDetection
_graph	include/WPA/WPASolver.h	/^    GraphType _graph;$/;"	m	class:WPASolver
_inSCC	include/Util/SCC.h	/^        bool     _inSCC;$/;"	m	class:SCCDetection::GNodeSCCInfo
_isPWCNode	include/MemoryModel/ConsGNode.h	/^    bool _isPWCNode;$/;"	m	class:ConstraintNode
_ptEndIter	include/MemoryModel/ConditionalPT.h	/^        PointsTo::iterator _ptEndIter;$/;"	m	class:CondPointsToSet::CondPtsSetIterator
_ptIter	include/MemoryModel/ConditionalPT.h	/^        PointsTo::iterator _ptIter;$/;"	m	class:CondPointsToSet::CondPtsSetIterator
_pta	include/WPA/WPAPass.h	/^    PointerAnalysis* _pta;	\/\/\/<  pointer analysis to be executed.$/;"	m	class:WPAPass
_rep	include/Util/SCC.h	/^        NodeID  _rep;$/;"	m	class:SCCDetection::GNodeSCCInfo
_scc	include/WPA/CSC.h	/^    CGSCC* _scc;$/;"	m	class:CSC
_subNodes	include/Util/SCC.h	/^        NodeBS _subNodes; \/\/\/ nodes in the scc represented by this node$/;"	m	class:SCCDetection::GNodeSCCInfo
_svfg	include/WPA/WPAPass.h	/^    SVFG* _svfg;  \/\/\/< svfg generated through -ander pointer analysis$/;"	m	class:WPAPass
_visited	include/Util/SCC.h	/^        bool     _visited;$/;"	m	class:SCCDetection::GNodeSCCInfo
_visited	include/WPA/CSC.h	/^    NodeSet _visited;   \/\/ a set holding visited nodes$/;"	m	class:CSC
acache	include/CUDD/cuddInt.h	/^    DdCache *acache;		\/* address of allocated memory for cache *\/$/;"	m	struct:DdManager
acceptances	lib/CUDD/cuddAnneal.c	/^static	int	acceptances;$/;"	v	file:
actualInOfIndCS	include/MSSA/SVFGOPT.h	/^    inline bool actualInOfIndCS(const ActualINSVFGNode* ai) const {$/;"	f	class:SVFGOPT
actualInToDefMap	include/MSSA/SVFGOPT.h	/^    NodeIDToNodeIDMap actualInToDefMap;	\/\/\/< map actual-in to its def-site node$/;"	m	class:SVFGOPT
actualOutOfIndCS	include/MSSA/SVFGOPT.h	/^    inline bool actualOutOfIndCS(const ActualOUTSVFGNode* ao) const {$/;"	f	class:SVFGOPT
actualRet	include/Util/ICFGNode.h	/^    const ActualRetVFGNode *actualRet;$/;"	m	class:RetBlockNode
addActualINSVFGNode	include/MSSA/SVFG.h	/^    inline void addActualINSVFGNode(const MemSSA::CALLMU* mu) {$/;"	f	class:SVFG
addActualOUTSVFGNode	include/MSSA/SVFG.h	/^    inline void addActualOUTSVFGNode(const MemSSA::CALLCHI* chi) {$/;"	f	class:SVFG
addActualParmVFGNode	include/Util/VFG.h	/^    inline void addActualParmVFGNode(const PAGNode* aparm, CallSite cs) {$/;"	f	class:VFG
addActualParms	include/Util/ICFGNode.h	/^    inline void addActualParms(const ActualParmVFGNode *ap) {$/;"	f	class:CallBlockNode
addActualRet	include/Util/ICFGNode.h	/^    inline void addActualRet(const ActualRetVFGNode *ar) {$/;"	f	class:RetBlockNode
addActualRetVFGNode	include/Util/VFG.h	/^    inline void addActualRetVFGNode(const PAGNode* ret,CallSite cs) {$/;"	f	class:VFG
addAddrCGEdge	lib/MemoryModel/ConsG.cpp	/^bool ConstraintGraph::addAddrCGEdge(NodeID src, NodeID dst) {$/;"	f	class:ConstraintGraph
addAddrEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addAddrEdge(NodeID src, NodeID dst) {$/;"	f	class:PAG
addAddrTakenNodeTimeEnd	include/MSSA/SVFGStat.h	/^    double addAddrTakenNodeTimeEnd;$/;"	m	class:SVFGStat
addAddrTakenNodeTimeStart	include/MSSA/SVFGStat.h	/^    double addAddrTakenNodeTimeStart;$/;"	m	class:SVFGStat
addAddrVFGNode	include/Util/VFG.h	/^    inline void addAddrVFGNode(const AddrPE* addr) {$/;"	f	class:VFG
addBddDoInterval	lib/CUDD/cuddBridge.c	/^addBddDoInterval($/;"	f	file:
addBddDoIthBit	lib/CUDD/cuddBridge.c	/^addBddDoIthBit($/;"	f	file:
addBddDoStrictThreshold	lib/CUDD/cuddBridge.c	/^addBddDoStrictThreshold($/;"	f	file:
addBddDoThreshold	lib/CUDD/cuddBridge.c	/^addBddDoThreshold($/;"	f	file:
addBinaryNode	include/MemoryModel/PAG.h	/^    inline void addBinaryNode(const PAGNode* res, const PAGNode* op) {$/;"	f	class:PAG
addBinaryOPEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addBinaryOPEdge(NodeID src, NodeID dst) {$/;"	f	class:PAG
addBinaryOPVFGNode	include/Util/VFG.h	/^    inline void addBinaryOPVFGNode(const PAGNode* resNode, PAG::PAGNodeList& oplist) {$/;"	f	class:VFG
addBlackHoleAddrEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addBlackHoleAddrEdge(NodeID node) {$/;"	f	class:PAG
addBlackholeObjNode	include/MemoryModel/PAG.h	/^    inline NodeID addBlackholeObjNode() {$/;"	f	class:PAG
addBlackholePtrNode	include/MemoryModel/PAG.h	/^    inline NodeID addBlackholePtrNode() {$/;"	f	class:PAG
addCPtsToCallSiteMods	include/MSSA/MemRegion.h	/^    inline void addCPtsToCallSiteMods(PointsTo& cpts, CallSite cs) {$/;"	f	class:MRGenerator
addCPtsToCallSiteRefs	include/MSSA/MemRegion.h	/^    inline void addCPtsToCallSiteRefs(PointsTo& cpts, CallSite cs) {$/;"	f	class:MRGenerator
addCPtsToLoad	include/MSSA/MemRegion.h	/^    inline void addCPtsToLoad(PointsTo& cpts, const LoadPE *ld, const Function* fun) {$/;"	f	class:MRGenerator
addCPtsToStore	include/MSSA/MemRegion.h	/^    inline void addCPtsToStore(PointsTo& cpts, const StorePE *st, const Function* fun) {$/;"	f	class:MRGenerator
addCachePts	include/MemoryModel/PointsToDS.h	/^    inline void addCachePts(CacheKey& cache, Data& data) {$/;"	f	class:DiffPTData
addCallEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addCallEdge(NodeID src, NodeID dst, const Instruction* cs) {$/;"	f	class:PAG
addCallEdge	lib/Util/ICFG.cpp	/^ICFGEdge* ICFG::addCallEdge(ICFGNode* srcNode, ICFGNode* dstNode, CallSiteID csId) {$/;"	f	class:ICFG
addCallEdge	lib/Util/VFG.cpp	/^VFGEdge* VFG::addCallEdge(NodeID srcId, NodeID dstId, CallSiteID csId) {$/;"	f	class:VFG
addCallGraphNode	lib/Util/PTACallGraph.cpp	/^void PTACallGraph::addCallGraphNode(const Function* fun) {$/;"	f	class:PTACallGraph
addCallIndirectSVFGEdge	lib/MSSA/SVFGOPT.cpp	/^SVFGEdge* SVFGOPT::addCallIndirectSVFGEdge(NodeID srcId, NodeID dstId, CallSiteID csid, const PointsTo& cpts)$/;"	f	class:SVFGOPT
addCallIndirectVFEdge	lib/MSSA/SVFG.cpp	/^SVFGEdge* SVFG::addCallIndirectVFEdge(NodeID srcId, NodeID dstId, const PointsTo& cpts,CallSiteID csId)$/;"	f	class:SVFG
addCallPE	include/Util/VFGNode.h	/^    inline void addCallPE(const CallPE* call) {$/;"	f	class:FormalParmVFGNode
addCallSite	include/Util/PTACallGraph.h	/^    inline CallSiteID addCallSite(CallSite cs, const Function* callee) {$/;"	f	class:PTACallGraph
addCallSiteArgs	include/MemoryModel/PAG.h	/^    inline void addCallSiteArgs(CallSite cs,const PAGNode* arg) {$/;"	f	class:PAG
addCallSiteRets	include/MemoryModel/PAG.h	/^    inline void addCallSiteRets(CallSite cs,const PAGNode* arg) {$/;"	f	class:PAG
addCheckPositiveCube	lib/CUDD/cuddAddAbs.c	/^addCheckPositiveCube($/;"	f	file:
addCmpEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addCmpEdge(NodeID src, NodeID dst) {$/;"	f	class:PAG
addCmpNode	include/MemoryModel/PAG.h	/^    inline void addCmpNode(const PAGNode* res, const PAGNode* op) {$/;"	f	class:PAG
addCmpVFGNode	include/Util/VFG.h	/^    inline void addCmpVFGNode(const PAGNode* resNode, PAG::PAGNodeList& oplist) {$/;"	f	class:VFG
addComplexConsForExt	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::addComplexConsForExt(Value *D, Value *S, u32_t sz) {$/;"	f	class:PAGBuilder
addConstantObjNode	include/MemoryModel/PAG.h	/^    inline NodeID addConstantObjNode() {$/;"	f	class:PAG
addConstraintNode	include/MemoryModel/ConsG.h	/^    inline void addConstraintNode(ConstraintNode* node, NodeID id) {$/;"	f	class:ConstraintGraph
addCopyCGEdge	lib/MemoryModel/ConsG.cpp	/^bool ConstraintGraph::addCopyCGEdge(NodeID src, NodeID dst) {$/;"	f	class:ConstraintGraph
addCopyEdge	include/WPA/Andersen.h	/^    virtual inline bool addCopyEdge(NodeID src, NodeID dst) {$/;"	f	class:Andersen
addCopyEdge	include/WPA/Andersen.h	/^    virtual inline bool addCopyEdge(NodeID src, NodeID dst) {$/;"	f	class:AndersenWaveDiff
addCopyEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addCopyEdge(NodeID src, NodeID dst) {$/;"	f	class:PAG
addCopyEdge	lib/WPA/AndersenSCD.cpp	/^bool AndersenSCD::addCopyEdge(NodeID src, NodeID dst) {$/;"	f	class:AndersenSCD
addCopyVFGNode	include/Util/VFG.h	/^    inline void addCopyVFGNode(const CopyPE* copy) {$/;"	f	class:VFG
addDirectCallGraphEdge	lib/Util/PTACallGraph.cpp	/^void PTACallGraph::addDirectCallGraphEdge(const Instruction* call) {$/;"	f	class:PTACallGraph
addDirectCallSite	include/Util/PTACallGraph.h	/^    void addDirectCallSite(const Instruction* call) {$/;"	f	class:PTACallGraphEdge
addDirectForkEdge	lib/Util/ThreadCallGraph.cpp	/^void ThreadCallGraph::addDirectForkEdge(const Instruction* call) {$/;"	f	class:ThreadCallGraph
addDirectJoinEdge	lib/Util/ThreadCallGraph.cpp	/^void ThreadCallGraph::addDirectJoinEdge(const Instruction* call,const CallSiteSet& forkset) {$/;"	f	class:ThreadCallGraph
addDirectParForEdge	lib/Util/ThreadCallGraph.cpp	/^void ThreadCallGraph::addDirectParForEdge(const Instruction* call) {$/;"	f	class:ThreadCallGraph
addDoIthBit	lib/CUDD/cuddAddFind.c	/^addDoIthBit($/;"	f	file:
addDummyMemObj	include/MemoryModel/PAG.h	/^    inline const MemObj* addDummyMemObj(NodeID i, const Type* type) {$/;"	f	class:PAG
addDummyObjNode	include/MemoryModel/PAG.h	/^    inline NodeID addDummyObjNode(NodeID i, const Type* type) {$/;"	f	class:PAG
addDummyObjNode	include/MemoryModel/PAG.h	/^    inline NodeID addDummyObjNode(const Type* type = NULL) {$/;"	f	class:PAG
addDummyValNode	include/MemoryModel/PAG.h	/^    inline NodeID addDummyValNode() {$/;"	f	class:PAG
addDummyValNode	include/MemoryModel/PAG.h	/^    inline NodeID addDummyValNode(NodeID i) {$/;"	f	class:PAG
addEdge	include/Util/PTACallGraph.h	/^    inline void addEdge(PTACallGraphEdge* edge) {$/;"	f	class:PTACallGraph
addEdge	lib/MemoryModel/CHA.cpp	/^void CHGraph::addEdge(const string className, const string baseClassName,$/;"	f	class:CHGraph
addEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addEdge(PAGNode* src, PAGNode* dst, PAGEdge* edge) {$/;"	f	class:PAG
addEdge	lib/MemoryModel/PAGBuilderFromFile.cpp	/^void PAGBuilderFromFile::addEdge(NodeID srcID, NodeID dstID,$/;"	f	class:PAGBuilderFromFile
addElemNumStridePair	lib/MemoryModel/LocationSet.cpp	/^void LocationSet::addElemNumStridePair(const NodePair& pair) {$/;"	f	class:LocationSet
addExternalPAG	lib/MemoryModel/ExternalPAG.cpp	/^bool ExternalPAG::addExternalPAG(Function *function) {$/;"	f	class:ExternalPAG
addFIObjNode	lib/MemoryModel/PAG.cpp	/^NodeID PAG::addFIObjNode(const MemObj* obj)$/;"	f	class:PAG
addFldWithType	include/MemoryModel/MemModel.h	/^	inline void addFldWithType(u32_t fldIdx, u32_t offset, const llvm::Type* type) {$/;"	f	class:StInfo
addForksite	include/Util/ThreadCallGraph.h	/^    inline bool addForksite(const Instruction* csInst) {$/;"	f	class:ThreadCallGraph
addFormalINSVFGNode	include/MSSA/SVFG.h	/^    inline void addFormalINSVFGNode(const MemSSA::ENTRYCHI* chi) {$/;"	f	class:SVFG
addFormalOUTSVFGNode	include/MSSA/SVFG.h	/^    inline void addFormalOUTSVFGNode(const MemSSA::RETMU* mu) {$/;"	f	class:SVFG
addFormalParamBlackHoleAddrEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addFormalParamBlackHoleAddrEdge(NodeID node, const Argument *arg)$/;"	f	class:PAG
addFormalParmVFGNode	include/Util/VFG.h	/^    inline void addFormalParmVFGNode(const PAGNode* fparm, const Function* fun, CallPESet& callPEs) {$/;"	f	class:VFG
addFormalParms	include/Util/ICFGNode.h	/^    inline void addFormalParms(const FormalParmVFGNode *fp) {$/;"	f	class:FunEntryBlockNode
addFormalRet	include/Util/ICFGNode.h	/^    inline void addFormalRet(const FormalRetVFGNode *fr) {$/;"	f	class:FunExitBlockNode
addFormalRetVFGNode	include/Util/VFG.h	/^    inline void addFormalRetVFGNode(const PAGNode* ret, const Function* fun, RetPESet& retPEs) {$/;"	f	class:VFG
addFunArgs	include/MemoryModel/PAG.h	/^    inline void addFunArgs(const Function* fun, const PAGNode* arg) {$/;"	f	class:PAG
addFunRet	include/MemoryModel/PAG.h	/^    inline void addFunRet(const Function* fun, const PAGNode* ret) {$/;"	f	class:PAG
addGNode	include/MemoryModel/GenericGraph.h	/^    inline void addGNode(NodeID id, NodeType* node) {$/;"	f	class:GenericGraph
addGeneralVectorComposeHits	lib/CUDD/cuddCompose.c	/^static int addGeneralVectorComposeHits;$/;"	v	file:
addGepEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addGepEdge(NodeID src, NodeID dst, const LocationSet& ls, bool constGep) {$/;"	f	class:PAG
addGepObjNode	lib/MemoryModel/PAG.cpp	/^NodeID PAG::addGepObjNode(const MemObj* obj, const LocationSet& ls) {$/;"	f	class:PAG
addGepVFGNode	include/Util/VFG.h	/^    inline void addGepVFGNode(const GepPE* gep) {$/;"	f	class:VFG
addGepValNode	lib/MemoryModel/PAG.cpp	/^NodeID PAG::addGepValNode(const Value* gepVal, const LocationSet& ls, NodeID i, const Type *type, u32_t fieldidx) {$/;"	f	class:PAG
addGlobalBlackHoleAddrEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addGlobalBlackHoleAddrEdge(NodeID node, const ConstantExpr *int2Ptrce) {$/;"	f	class:PAG
addHareParForEdgeSetMap	include/Util/ThreadCallGraph.h	/^    inline void addHareParForEdgeSetMap(const Instruction* inst, HareParForEdge* edge) {$/;"	f	class:ThreadCallGraph
addICFGEdge	include/Util/ICFG.h	/^    inline bool addICFGEdge(ICFGEdge* edge) {$/;"	f	class:ICFG
addICFGInterEdges	lib/Util/ICFG.cpp	/^void ICFG::addICFGInterEdges(CallSite cs, const Function* callee){$/;"	f	class:ICFG
addICFGNode	include/Util/ICFG.h	/^    virtual inline void addICFGNode(ICFGNode* node) {$/;"	f	class:ICFG
addInDirectCallSite	include/Util/PTACallGraph.h	/^    void addInDirectCallSite(const Instruction* call) {$/;"	f	class:PTACallGraphEdge
addInEdge	include/MemoryModel/PAGNode.h	/^    inline void addInEdge(PAGEdge* inEdge) {$/;"	f	class:PAGNode
addIncomingAddrEdge	include/MemoryModel/ConsGNode.h	/^    inline void addIncomingAddrEdge(AddrCGEdge* inEdge) {$/;"	f	class:ConstraintNode
addIncomingCopyEdge	include/MemoryModel/ConsGNode.h	/^    inline void addIncomingCopyEdge(CopyCGEdge *inEdge) {$/;"	f	class:ConstraintNode
addIncomingDirectEdge	include/MemoryModel/ConsGNode.h	/^    inline void addIncomingDirectEdge(ConstraintEdge* inEdge) {$/;"	f	class:ConstraintNode
addIncomingEdge	include/MemoryModel/GenericGraph.h	/^    inline bool addIncomingEdge(EdgeType* inEdge) {$/;"	f	class:GenericNode
addIncomingGepEdge	include/MemoryModel/ConsGNode.h	/^    inline void addIncomingGepEdge(GepCGEdge* inEdge) {$/;"	f	class:ConstraintNode
addIncomingLoadEdge	include/MemoryModel/ConsGNode.h	/^    inline void addIncomingLoadEdge(LoadCGEdge* inEdge) {$/;"	f	class:ConstraintNode
addIncomingStoreEdge	include/MemoryModel/ConsGNode.h	/^    inline void addIncomingStoreEdge(StoreCGEdge* inEdge) {$/;"	f	class:ConstraintNode
addIndirectCallGraphEdge	lib/Util/PTACallGraph.cpp	/^void PTACallGraph::addIndirectCallGraphEdge(const Instruction* call, const Function* calleefun) {$/;"	f	class:PTACallGraph
addIndirectCallsites	include/MemoryModel/PAG.h	/^    inline void addIndirectCallsites(const CallSite cs,NodeID funPtr) {$/;"	f	class:PAG
addIndirectForkEdge	lib/Util/ThreadCallGraph.cpp	/^void ThreadCallGraph::addIndirectForkEdge(const Instruction* call, const Function* calleefun) {$/;"	f	class:ThreadCallGraph
addIndirectParForEdge	lib/Util/ThreadCallGraph.cpp	/^void ThreadCallGraph::addIndirectParForEdge(const Instruction* call, const Function* calleefun) {$/;"	f	class:ThreadCallGraph
addInstances	include/MemoryModel/CHA.h	/^	inline void addInstances(const std::string templateName, CHNode* node) {$/;"	f	class:CHGraph
addInterEdgeFromAPToFP	include/Util/VFG.h	/^    inline VFGEdge* addInterEdgeFromAPToFP(ActualParmVFGNode* src, FormalParmVFGNode* dst, CallSiteID csId) {$/;"	f	class:VFG
addInterEdgeFromFRToAR	include/Util/VFG.h	/^    inline VFGEdge* addInterEdgeFromFRToAR(FormalRetVFGNode* src, ActualRetVFGNode* dst, CallSiteID csId) {$/;"	f	class:VFG
addInterIndirectVFCallEdge	lib/MSSA/SVFG.cpp	/^SVFGEdge* SVFG::addInterIndirectVFCallEdge(const ActualINSVFGNode* src, const FormalINSVFGNode* dst,CallSiteID csId) {$/;"	f	class:SVFG
addInterIndirectVFRetEdge	lib/MSSA/SVFG.cpp	/^SVFGEdge* SVFG::addInterIndirectVFRetEdge(const FormalOUTSVFGNode* src, const ActualOUTSVFGNode* dst,CallSiteID csId) {$/;"	f	class:SVFG
addInterPHIForAR	include/MSSA/SVFGOPT.h	/^    inline InterPHISVFGNode* addInterPHIForAR(const ActualRetSVFGNode* ar) {$/;"	f	class:SVFGOPT
addInterPHIForFP	include/MSSA/SVFGOPT.h	/^    inline InterPHISVFGNode* addInterPHIForFP(const FormalParmSVFGNode* fp) {$/;"	f	class:SVFGOPT
addInterPHIOperands	include/MSSA/SVFGOPT.h	/^    inline void addInterPHIOperands(PHISVFGNode* phi, const PAGNode* operand) {$/;"	f	class:SVFGOPT
addIntoWorklist	include/MSSA/SVFGOPT.h	/^    inline bool addIntoWorklist(const SVFGNode* node) {$/;"	f	class:SVFGOPT
addIntraDirectVFEdge	lib/Util/VFG.cpp	/^VFGEdge* VFG::addIntraDirectVFEdge(NodeID srcId, NodeID dstId) {$/;"	f	class:VFG
addIntraEdge	lib/Util/ICFG.cpp	/^ICFGEdge* ICFG::addIntraEdge(ICFGNode* srcNode, ICFGNode* dstNode){$/;"	f	class:ICFG
addIntraIndirectVFEdge	lib/MSSA/SVFG.cpp	/^SVFGEdge* SVFG::addIntraIndirectVFEdge(NodeID srcId, NodeID dstId, const PointsTo& cpts)$/;"	f	class:SVFG
addIntraMSSAPHISVFGNode	include/MSSA/SVFG.h	/^    inline void addIntraMSSAPHISVFGNode(const MemSSA::PHI* phi) {$/;"	f	class:SVFG
addIntraPHIVFGNode	include/Util/VFG.h	/^    inline void addIntraPHIVFGNode(const PAGNode* phiResNode, PAG::PNodeBBPairList& oplist) {$/;"	f	class:VFG
addJoinsite	include/Util/ThreadCallGraph.h	/^    inline bool addJoinsite(const Instruction* csInst) {$/;"	f	class:ThreadCallGraph
addLCDCandidate	include/WPA/Andersen.h	/^    inline void addLCDCandidate(NodeID nodeId) {$/;"	f	class:AndersenLCD
addLoadCGEdge	lib/MemoryModel/ConsG.cpp	/^bool ConstraintGraph::addLoadCGEdge(NodeID src, NodeID dst) {$/;"	f	class:ConstraintGraph
addLoadEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addLoadEdge(NodeID src, NodeID dst) {$/;"	f	class:PAG
addLoadVFGNode	include/Util/VFG.h	/^    void addLoadVFGNode(const LoadPE* load) {$/;"	f	class:VFG
addMDTag	include/Util/Annotator.h	/^    inline void addMDTag(Instruction *inst, Value *val, std::string str) {$/;"	f	class:Annotator
addMDTag	include/Util/Annotator.h	/^    inline void addMDTag(Instruction *inst, std::string str) {$/;"	f	class:Annotator
addMMRecur	lib/CUDD/cuddMatMult.c	/^addMMRecur($/;"	f	file:
addMetEdge	include/WPA/Andersen.h	/^    void addMetEdge(ConstraintEdge* edge) {$/;"	f	class:AndersenLCD
addModSideEffectOfCallSite	lib/MSSA/MemRegion.cpp	/^bool MRGenerator::addModSideEffectOfCallSite(CallSite cs, const NodeBS& mods) {$/;"	f	class:MRGenerator
addModSideEffectOfFunction	lib/MSSA/MemRegion.cpp	/^void MRGenerator::addModSideEffectOfFunction(const Function* fun, const NodeBS& mods) {$/;"	f	class:MRGenerator
addMrVer	include/MSSA/SVFGEdge.h	/^    inline bool addMrVer(const MRVer* mr) {$/;"	f	class:IndirectSVFGEdge
addMultiplicityGroups	lib/CUDD/cuddAPI.c	/^addMultiplicityGroups($/;"	f	file:
addNewCandidate	include/WPA/WPAFSSolver.h	/^    inline void addNewCandidate(NodeID node) {$/;"	f	class:WPAMinimumSolver
addNewSVFGEdge	lib/MSSA/SVFGOPT.cpp	/^bool SVFGOPT::addNewSVFGEdge(NodeID srcId, NodeID dstId, const SVFGEdge* preEdge, const SVFGEdge* succEdge)$/;"	f	class:SVFGOPT
addNode	include/MemoryModel/PAG.h	/^    inline NodeID addNode(PAGNode* node, NodeID i) {$/;"	f	class:PAG
addNodeIntoWorkList	include/WPA/WPAFSSolver.h	/^    virtual inline void addNodeIntoWorkList(NodeID node) {$/;"	f	class:WPAMinimumSolver
addNodeIntoWorkList	include/WPA/WPAFSSolver.h	/^    virtual inline void addNodeIntoWorkList(NodeID node) {$/;"	f	class:WPASCCSolver
addNodeToBeCollapsed	include/MemoryModel/ConsG.h	/^    inline void addNodeToBeCollapsed(NodeID id) {$/;"	f	class:ConstraintGraph
addNormalGepCGEdge	lib/MemoryModel/ConsG.cpp	/^bool ConstraintGraph::addNormalGepCGEdge(NodeID src, NodeID dst, const LocationSet& ls) {$/;"	f	class:ConstraintGraph
addNormalGepEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addNormalGepEdge(NodeID src, NodeID dst, const LocationSet& ls) {$/;"	f	class:PAG
addNullPtrNode	include/MemoryModel/PAG.h	/^    inline NodeID addNullPtrNode() {$/;"	f	class:PAG
addNullPtrVFGNode	include/Util/VFG.h	/^    inline void addNullPtrVFGNode(const PAGNode* pagNode) {$/;"	f	class:VFG
addObjNode	include/MemoryModel/PAG.h	/^    inline NodeID addObjNode(const Value* val, NodeID i) {$/;"	f	class:PAG
addObjNode	include/MemoryModel/PAG.h	/^    inline NodeID addObjNode(const Value* val, PAGNode *node, NodeID i) {$/;"	f	class:PAG
addOutEdge	include/MemoryModel/PAGNode.h	/^    inline void addOutEdge(PAGEdge* outEdge) {$/;"	f	class:PAGNode
addOutgoingAddrEdge	include/MemoryModel/ConsGNode.h	/^    inline void addOutgoingAddrEdge(AddrCGEdge* outEdge) {$/;"	f	class:ConstraintNode
addOutgoingCopyEdge	include/MemoryModel/ConsGNode.h	/^    inline void addOutgoingCopyEdge(CopyCGEdge *outEdge) {$/;"	f	class:ConstraintNode
addOutgoingDirectEdge	include/MemoryModel/ConsGNode.h	/^    inline void addOutgoingDirectEdge(ConstraintEdge* outEdge) {$/;"	f	class:ConstraintNode
addOutgoingEdge	include/MemoryModel/GenericGraph.h	/^    inline bool addOutgoingEdge(EdgeType* outEdge) {$/;"	f	class:GenericNode
addOutgoingGepEdge	include/MemoryModel/ConsGNode.h	/^    inline void addOutgoingGepEdge(GepCGEdge* outEdge) {$/;"	f	class:ConstraintNode
addOutgoingLoadEdge	include/MemoryModel/ConsGNode.h	/^    inline void addOutgoingLoadEdge(LoadCGEdge* outEdge) {$/;"	f	class:ConstraintNode
addOutgoingStoreEdge	include/MemoryModel/ConsGNode.h	/^    inline void addOutgoingStoreEdge(StoreCGEdge* outEdge) {$/;"	f	class:ConstraintNode
addParForSite	include/Util/ThreadCallGraph.h	/^    inline bool addParForSite(const Instruction* csInst) {$/;"	f	class:ThreadCallGraph
addPath	include/Util/DPItem.h	/^    inline bool addPath(PathCondAllocator* allocator, PathCond* c, NodeID from, NodeID to) {$/;"	f	class:VFPathCond
addPermuteRecurHits	lib/CUDD/cuddCompose.c	/^static int addPermuteRecurHits;$/;"	v	file:
addPhiNode	include/MemoryModel/PAG.h	/^    inline void addPhiNode(const PAGNode* res, const PAGNode* op,const BasicBlock* bb) {$/;"	f	class:PAG
addPointsTo	include/MSSA/SVFGEdge.h	/^    inline bool addPointsTo(const PointsTo& c) {$/;"	f	class:IndirectSVFGEdge
addPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline bool addPts(CVar id, CVar ptd) {$/;"	f	class:CondPTAImpl
addPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline bool addPts(NodeID id, NodeID ptd) {$/;"	f	class:BVDataPTAImpl
addPts	include/MemoryModel/PointsToDFDS.h	/^    inline bool addPts(const Key &dstKey, const Key& srcKey) {$/;"	f	class:DFPTData
addPts	include/MemoryModel/PointsToDS.h	/^    inline bool addPts(Data &d, const Key& e) {$/;"	f	class:PTData
addPts	include/MemoryModel/PointsToDS.h	/^    inline bool addPts(const Key &dstKey, const Key& srcKey) {$/;"	f	class:PTData
addRefLoadEdge	lib/MemoryModel/OfflineConsG.cpp	/^bool  OfflineConsG::addRefLoadEdge(NodeID src, NodeID dst) {$/;"	f	class:OfflineConsG
addRefSideEffectOfCallSite	lib/MSSA/MemRegion.cpp	/^bool MRGenerator::addRefSideEffectOfCallSite(CallSite cs, const NodeBS& refs) {$/;"	f	class:MRGenerator
addRefSideEffectOfFunction	lib/MSSA/MemRegion.cpp	/^void MRGenerator::addRefSideEffectOfFunction(const Function* fun, const NodeBS& refs) {$/;"	f	class:MRGenerator
addRefStoreEdge	lib/MemoryModel/OfflineConsG.cpp	/^bool OfflineConsG::addRefStoreEdge(NodeID src, NodeID dst) {$/;"	f	class:OfflineConsG
addRetEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addRetEdge(NodeID src, NodeID dst, const Instruction* cs) {$/;"	f	class:PAG
addRetEdge	lib/Util/ICFG.cpp	/^ICFGEdge* ICFG::addRetEdge(ICFGNode* srcNode, ICFGNode* dstNode, CallSiteID csId) {$/;"	f	class:ICFG
addRetEdge	lib/Util/VFG.cpp	/^VFGEdge* VFG::addRetEdge(NodeID srcId, NodeID dstId, CallSiteID csId) {$/;"	f	class:VFG
addRetIndirectSVFGEdge	lib/MSSA/SVFGOPT.cpp	/^SVFGEdge* SVFGOPT::addRetIndirectSVFGEdge(NodeID srcId, NodeID dstId, CallSiteID csid, const PointsTo& cpts)$/;"	f	class:SVFGOPT
addRetIndirectVFEdge	lib/MSSA/SVFG.cpp	/^SVFGEdge* SVFG::addRetIndirectVFEdge(NodeID srcId, NodeID dstId, const PointsTo& cpts,CallSiteID csId)$/;"	f	class:SVFG
addRetNode	include/MemoryModel/PAG.h	/^    inline NodeID addRetNode(const Function* val, NodeID i) {$/;"	f	class:PAG
addRetNode	include/MemoryModel/PAG.h	/^    inline NodeID addRetNode(const Function* val, PAGNode *node, NodeID i) {$/;"	f	class:PAG
addRetPE	include/Util/VFGNode.h	/^    inline void addRetPE(const RetPE* retPE) {$/;"	f	class:FormalRetVFGNode
addRevPts	include/MemoryModel/PointsToDS.h	/^    inline void addRevPts(const Data &ptsData, const Key& tgr) {$/;"	f	class:PTData
addSVFGEdge	include/MSSA/SVFG.h	/^    inline bool addSVFGEdge(SVFGEdge* edge) {$/;"	f	class:SVFG
addSVFGNode	include/MSSA/SVFG.h	/^    virtual inline void addSVFGNode(SVFGNode* node) {$/;"	f	class:SVFG
addSVFGNodesForAddrTakenVars	lib/MSSA/SVFG.cpp	/^void SVFG::addSVFGNodesForAddrTakenVars() {$/;"	f	class:SVFG
addSVFMain	lib/Util/SVFModule.cpp	/^void LLVMModuleSet::addSVFMain(){$/;"	f	class:LLVMModuleSet
addSccCandidate	include/WPA/AndersenSFR.h	/^    inline void addSccCandidate(NodeID nodeId) {$/;"	f	class:AndersenSCD
addSingleRevPts	include/MemoryModel/PointsToDS.h	/^    inline void addSingleRevPts(Data &revData, const Key& tgr) {$/;"	f	class:PTData
addStmtVFGNode	include/Util/VFG.h	/^    inline void addStmtVFGNode(StmtVFGNode* node, const PAGEdge* pagEdge) {$/;"	f	class:VFG
addStoreCGEdge	lib/MemoryModel/ConsG.cpp	/^bool ConstraintGraph::addStoreCGEdge(NodeID src, NodeID dst) {$/;"	f	class:ConstraintGraph
addStoreEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addStoreEdge(NodeID src, NodeID dst) {$/;"	f	class:PAG
addStoreVFGNode	include/Util/VFG.h	/^    void addStoreVFGNode(const StorePE* store) {$/;"	f	class:VFG
addSubNodes	include/Util/SCC.h	/^        inline void addSubNodes(NodeID n)    {$/;"	f	class:SCCDetection::GNodeSCCInfo
addThreadForkEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addThreadForkEdge(NodeID src, NodeID dst, const Instruction* cs) {$/;"	f	class:PAG
addThreadForkEdgeSetMap	include/Util/ThreadCallGraph.h	/^    inline void addThreadForkEdgeSetMap(const Instruction* inst, ThreadForkEdge* edge) {$/;"	f	class:ThreadCallGraph
addThreadJoinEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addThreadJoinEdge(NodeID src, NodeID dst, const Instruction* cs) {$/;"	f	class:PAG
addThreadJoinEdgeSetMap	include/Util/ThreadCallGraph.h	/^    inline void addThreadJoinEdgeSetMap(const Instruction* inst, ThreadJoinEdge* edge) {$/;"	f	class:ThreadCallGraph
addThreadMHPIndirectVFEdge	lib/MSSA/SVFG.cpp	/^SVFGEdge* SVFG::addThreadMHPIndirectVFEdge(NodeID srcId, NodeID dstId, const PointsTo& cpts) {$/;"	f	class:SVFG
addToBackwardSlice	include/MSSA/SVFGStat.h	/^    inline void addToBackwardSlice(const SVFGNode* node) {$/;"	f	class:SVFGStat
addToForwardSlice	include/MSSA/SVFGStat.h	/^    inline void addToForwardSlice(const SVFGNode* node) {$/;"	f	class:SVFGStat
addToInstPAGEdgeList	include/MemoryModel/PAG.h	/^    inline void addToInstPAGEdgeList(const Instruction* inst, PAGEdge* edge) {$/;"	f	class:PAG
addToSinks	include/MSSA/SVFGStat.h	/^    inline void addToSinks(const SVFGNode* node) {$/;"	f	class:SVFGStat
addToSources	include/MSSA/SVFGStat.h	/^    inline void addToSources(const SVFGNode* node) {$/;"	f	class:SVFGStat
addTopLevelNodeTimeEnd	include/MSSA/SVFGStat.h	/^    double addTopLevelNodeTimeEnd;$/;"	m	class:SVFGStat
addTopLevelNodeTimeStart	include/MSSA/SVFGStat.h	/^    double addTopLevelNodeTimeStart;$/;"	m	class:SVFGStat
addTriangleRecur	lib/CUDD/cuddMatMult.c	/^addTriangleRecur($/;"	f	file:
addType	include/MemoryModel/PTAType.h	/^    inline bool addType(const PTAType &type) {$/;"	f	class:TypeSet
addTypeForGepObjNode	include/WPA/Andersen.h	/^    virtual void addTypeForGepObjNode(NodeID id, const NormalGepCGEdge* normalGepEdge) {$/;"	f	class:Andersen
addTypeForGepObjNode	lib/WPA/AndersenWaveDiffWithType.cpp	/^void AndersenWaveDiffWithType::addTypeForGepObjNode(NodeID id, const NormalGepCGEdge* normalGepEdge) {$/;"	f	class:AndersenWaveDiffWithType
addTypeForVar	include/MemoryModel/PTAType.h	/^    inline bool addTypeForVar(NodeID var, const PTAType &type) {$/;"	f	class:TypeSystem
addTypeForVar	include/MemoryModel/PTAType.h	/^    inline bool addTypeForVar(NodeID var, const Type *type) {$/;"	f	class:TypeSystem
addVFEdge	include/Util/DPItem.h	/^    inline void addVFEdge(NodeID from, NodeID to) {$/;"	f	class:VFPathCond
addVFGEdge	include/Util/VFG.h	/^    inline bool addVFGEdge(VFGEdge* edge) {$/;"	f	class:VFG
addVFGNode	include/Util/ICFGNode.h	/^    inline void addVFGNode(const VFGNode *s) {$/;"	f	class:IntraBlockNode
addVFGNode	include/Util/VFG.h	/^    virtual inline void addVFGNode(VFGNode* node) {$/;"	f	class:VFG
addVFGNodes	lib/Util/VFG.cpp	/^void VFG::addVFGNodes() {$/;"	f	class:VFG
addVFGToICFG	lib/Util/ICFG.cpp	/^void ICFG::addVFGToICFG(){$/;"	f	class:ICFG
addVFPath	include/Util/DPItem.h	/^    inline bool addVFPath(PathCondAllocator* allocator, PathCond* c, NodeID from, NodeID to) {$/;"	f	class:PathStmtDPItem
addValNode	include/MemoryModel/PAG.h	/^    inline NodeID addValNode(const Value* val, NodeID i) {$/;"	f	class:PAG
addValNode	include/MemoryModel/PAG.h	/^    inline NodeID addValNode(const Value* val, PAGNode *node, NodeID i) {$/;"	f	class:PAG
addVarForType	include/MemoryModel/PTAType.h	/^    void addVarForType(NodeID var, const PTAType &type) {$/;"	f	class:TypeSystem
addVarForType	include/MemoryModel/PTAType.h	/^    void addVarForType(NodeID var, const Type *type) {$/;"	f	class:TypeSystem
addVarToConst	lib/CUDD/cuddAddIte.c	/^addVarToConst($/;"	f	file:
addVarargNode	include/MemoryModel/PAG.h	/^    inline NodeID addVarargNode(const Function* val, NodeID i) {$/;"	f	class:PAG
addVarargNode	include/MemoryModel/PAG.h	/^    inline NodeID addVarargNode(const Function* val, PAGNode *node, NodeID i) {$/;"	f	class:PAG
addVariantGepCGEdge	lib/MemoryModel/ConsG.cpp	/^bool ConstraintGraph::addVariantGepCGEdge(NodeID src, NodeID dst) {$/;"	f	class:ConstraintGraph
addVariantGepEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::addVariantGepEdge(NodeID src, NodeID dst) {$/;"	f	class:PAG
addVectorComposeHits	lib/CUDD/cuddCompose.c	/^static int addVectorComposeHits;$/;"	v	file:
addVirtualFunctionVector	include/MemoryModel/CHA.h	/^    void addVirtualFunctionVector(FuncVector vfuncvec) {$/;"	f	class:CHNode
addWalshInt	lib/CUDD/cuddAddWalsh.c	/^addWalshInt($/;"	f	file:
addr2IRrrvec	include/DisPatch/BinIRWrapper.h	/^    static map <uint64_t, vector <const Value *>> addr2IRrrvec;$/;"	m	class:BinIRWrapper
addr2IRrrvec	lib/DisPatch/BinIRWrapper.cpp	/^map <uint64_t, vector <const Value *>> BinIRWrapper::addr2IRrrvec;$/;"	m	class:BinIRWrapper	file:
addr2IRwrvec	include/DisPatch/BinIRWrapper.h	/^    static map <uint64_t, vector <const Value *>> addr2IRwrvec;$/;"	m	class:BinIRWrapper
addr2IRwrvec	lib/DisPatch/BinIRWrapper.cpp	/^map <uint64_t, vector <const Value *>> BinIRWrapper::addr2IRwrvec;$/;"	m	class:BinIRWrapper	file:
addr2disas	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, cs_insn> addr2disas;$/;"	m	class:InterProcAnal
addr2funcInfo	include/DisPatch/BinIRWrapper.h	/^    static map <uint64_t, FuncInfo *> addr2funcInfo;                        \/\/ Func addr$/;"	m	class:BinIRWrapper
addr2funcInfo	lib/DisPatch/BinIRWrapper.cpp	/^map <uint64_t, FuncInfo *> BinIRWrapper::addr2funcInfo;$/;"	m	class:BinIRWrapper	file:
addr2funcaddr	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, uint64_t> addr2funcaddr;$/;"	m	class:InterProcAnal
addrTime	include/WPA/FlowSensitive.h	/^    double addrTime;	\/\/\/< time of handling address edges$/;"	m	class:FlowSensitive
addressInEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy addressInEdges; \/\/\/< all incoming address edge of this node$/;"	m	class:ConstraintNode
addressOutEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy addressOutEdges; \/\/\/< all outgoing address edge of this node$/;"	m	class:ConstraintNode
afmain	lib/DisPatch/AliasFinder.cpp	/^void AliasFinder::afmain(){$/;"	f	class:AliasFinder
alias	include/MemoryModel/PointerAnalysis.h	/^    virtual AliasResult alias(const CVar& var1, const CVar& var2) {$/;"	f	class:CondPTAImpl
alias	include/MemoryModel/PointerAnalysis.h	/^    virtual inline AliasResult alias(NodeID node1, NodeID node2) {$/;"	f	class:CondPTAImpl
alias	include/MemoryModel/PointerAnalysis.h	/^    virtual inline AliasResult alias(const CPtSet& pts1, const CPtSet& pts2) {$/;"	f	class:CondPTAImpl
alias	include/MemoryModel/PointerAnalysis.h	/^    virtual inline AliasResult alias(const MemoryLocation &LocA,$/;"	f	class:CondPTAImpl
alias	include/MemoryModel/PointerAnalysis.h	/^    virtual inline AliasResult alias(const Value* V1, const Value* V2) {$/;"	f	class:CondPTAImpl
alias	include/WPA/WPAPass.h	/^    virtual inline AliasResult alias(const MemoryLocation  &LocA, const MemoryLocation  &LocB) {$/;"	f	class:WPAPass
alias	lib/MemoryModel/PointerAnalysis.cpp	/^AliasResult BVDataPTAImpl::alias(NodeID node1, NodeID node2) {$/;"	f	class:BVDataPTAImpl
alias	lib/MemoryModel/PointerAnalysis.cpp	/^AliasResult BVDataPTAImpl::alias(const MemoryLocation &LocA,$/;"	f	class:BVDataPTAImpl
alias	lib/MemoryModel/PointerAnalysis.cpp	/^AliasResult BVDataPTAImpl::alias(const PointsTo& p1, const PointsTo& p2) {$/;"	f	class:BVDataPTAImpl
alias	lib/MemoryModel/PointerAnalysis.cpp	/^AliasResult BVDataPTAImpl::alias(const Value* V1,$/;"	f	class:BVDataPTAImpl
alias	lib/WPA/WPAPass.cpp	/^AliasResult WPAPass::alias(const Value* V1, const Value* V2) {$/;"	f	class:WPAPass
alias2ref	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, const Value *> alias2ref;$/;"	m	class:CtrlIdentifier
alias_begin	include/Util/SVFModule.h	/^    alias_iterator alias_begin() {$/;"	f	class:LLVMModuleSet
alias_begin	include/Util/SVFModule.h	/^    alias_iterator alias_begin() {$/;"	f	class:SVFModule
alias_begin	include/Util/SVFModule.h	/^    const_alias_iterator alias_begin() const {$/;"	f	class:LLVMModuleSet
alias_begin	include/Util/SVFModule.h	/^    const_alias_iterator alias_begin() const {$/;"	f	class:SVFModule
alias_end	include/Util/SVFModule.h	/^    alias_iterator alias_end() {$/;"	f	class:LLVMModuleSet
alias_end	include/Util/SVFModule.h	/^    alias_iterator alias_end() {$/;"	f	class:SVFModule
alias_end	include/Util/SVFModule.h	/^    const_alias_iterator alias_end() const {$/;"	f	class:LLVMModuleSet
alias_end	include/Util/SVFModule.h	/^    const_alias_iterator alias_end() const {$/;"	f	class:SVFModule
alias_iterator	include/Util/SVFModule.h	/^    typedef AliasSetType::iterator alias_iterator;$/;"	t	class:LLVMModuleSet
alias_iterator	include/Util/SVFModule.h	/^    typedef AliasSetType::iterator alias_iterator;$/;"	t	class:SVFModule
aliased	include/MemoryModel/ConditionalPT.h	/^    inline bool aliased(const CondPointsToSet<Cond>& rhs) const {$/;"	f	class:CondPointsToSet
allGlobals	include/MSSA/MemRegion.h	/^    NodeBS allGlobals;$/;"	m	class:MRGenerator
allPTATypes	include/MemoryModel/PTAType.h	/^    std::set<PTAType> allPTATypes;$/;"	m	class:TypeSystem
allocate	lib/Util/PathCondAllocator.cpp	/^void PathCondAllocator::allocate(const SVFModule M) {$/;"	f	class:PathCondAllocator
allocateForBB	lib/Util/PathCondAllocator.cpp	/^void PathCondAllocator::allocateForBB(const BasicBlock & bb)$/;"	f	class:PathCondAllocator
allocated	include/CUDD/cuddInt.h	/^    double allocated;		\/* number of nodes allocated *\/$/;"	m	struct:DdManager
analyze	lib/WPA/Andersen.cpp	/^void Andersen::analyze(SVFModule svfModule) {$/;"	f	class:Andersen
analyze	lib/WPA/FlowSensitive.cpp	/^void FlowSensitive::analyze(SVFModule svfModule) {$/;"	f	class:FlowSensitive
analyze	lib/WPA/TypeAnalysis.cpp	/^void TypeAnalysis::analyze(SVFModule svfModule){$/;"	f	class:TypeAnalysis
analyzeGlobalStackObjType	lib/MemoryModel/MemModel.cpp	/^void ObjTypeInfo::analyzeGlobalStackObjType(const Value* val) {$/;"	f	class:ObjTypeInfo
analyzeHeapStaticObjType	lib/MemoryModel/MemModel.cpp	/^void ObjTypeInfo::analyzeHeapStaticObjType(const Value* val) {$/;"	f	class:ObjTypeInfo
analyzeVTables	lib/MemoryModel/CHA.cpp	/^void CHGraph::analyzeVTables(const Module &M) {$/;"	f	class:CHGraph
annotateDRCheck	lib/Util/RaceAnnotator.cpp	/^void RaceAnnotator::annotateDRCheck(Instruction* inst) {$/;"	f	class:RaceAnnotator
arch	include/DisPatch/InitPIDObj.h	/^    string config, binname, arch;$/;"	m	class:InitPIDObj
arch	include/DisPatch/InterProcAnal.h	/^        cs_arch arch;$/;"	m	struct:InterProcAnal::platform
arch	include/DisPatch/InterProcAnal.h	/^    string filename, arch;$/;"	m	class:InterProcAnal
arcviolation	include/CUDD/cuddInt.h	/^    int arcviolation;		\/* used during group sifting *\/$/;"	m	struct:DdManager
arg2idx	include/DisPatch/UtilDef.h	/^    unsigned arg2idx(const Function *func, const Value *v){$/;"	f	class:UtilDef
argCeARMRegAnalysis	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::argCeARMRegAnalysis(uint64_t addr){$/;"	f	class:InterProcAnal
argNodes	include/MemoryModel/ExternalPAG.h	/^    std::map<int, NodeID> argNodes;$/;"	m	class:ExternalPAG
arg_cefunc2reg2cev	include/DisPatch/InterProcAnal.h	/^    map <const Function *, map <uint16_t, const Value *>> arg_cefunc2reg2cev;$/;"	m	class:InterProcAnal
arg_csaddr2cev2csv	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, map <const Value *, const Value *>> arg_csaddr2cev2csv;$/;"	m	class:InterProcAnal
arg_csaddr2cev2reg	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, map <const Value *, uint16_t>> arg_csaddr2cev2reg;$/;"	m	class:InterProcAnal
arg_csaddr2cevs	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, set <const Value *>> arg_csaddr2cevs;$/;"	m	class:InterProcAnal
arg_csaddr2csv2cev	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, map <const Value *, const Value *>> arg_csaddr2csv2cev;$/;"	m	class:InterProcAnal
arg_csaddr2csv2reg	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, map <const Value *, uint16_t>> arg_csaddr2csv2reg;$/;"	m	class:InterProcAnal
arg_csaddr2csvs	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, set <const Value *>> arg_csaddr2csvs;$/;"	m	class:InterProcAnal
arg_csaddr2reg2cev	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, map <uint16_t, const Value *>> arg_csaddr2reg2cev;$/;"	m	class:InterProcAnal
arg_csaddr2reg2csv	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, map <uint16_t, const Value *>> arg_csaddr2reg2csv;$/;"	m	class:InterProcAnal
argvar2csaddrs	include/DisPatch/InterProcAnal.h	/^    map <const Value *, set <uint64_t>> argvar2csaddrs;$/;"	m	class:InterProcAnal
array_compare	lib/CUDD/cuddGenetic.c	/^array_compare($/;"	f	file:
array_hash	lib/CUDD/cuddGenetic.c	/^array_hash($/;"	f	file:
asmMapping	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::asmMapping(string inst_str, const Instruction *inst){$/;"	f	class:BinIRWrapper
assert	include/CUDD/util.h	141;"	d
assert	include/CUDD/util.h	151;"	d
atEnd	include/MemoryModel/ConditionalPT.h	/^        bool atEnd;$/;"	m	class:CondPointsToSet::CondPtsSetIterator
autoDyn	include/CUDD/cuddInt.h	/^    int autoDyn;		\/* automatic dynamic reordering flag (BDD) *\/$/;"	m	struct:DdManager
autoDynZ	include/CUDD/cuddInt.h	/^    int autoDynZ;		\/* automatic dynamic reordering flag (ZDD) *\/$/;"	m	struct:DdManager
autoMethod	include/CUDD/cuddInt.h	/^    Cudd_ReorderingType autoMethod;  \/* default reordering method *\/$/;"	m	struct:DdManager
autoMethodZ	include/CUDD/cuddInt.h	/^    Cudd_ReorderingType autoMethodZ; \/* default reordering method (ZDD) *\/$/;"	m	struct:DdManager
auxids	include/CUDD/dddmpInt.h	/^  int *auxids;$/;"	m	struct:Dddmp_Hdr_s
avgInDegree	include/MSSA/SVFGStat.h	/^    int avgInDegree;	\/\/\/< average in degrees of SVFG nodes.$/;"	m	class:SVFGStat
avgIndInDegree	include/MSSA/SVFGStat.h	/^    int avgIndInDegree;	\/\/\/< average indirect in degrees of SVFG nodes.$/;"	m	class:SVFGStat
avgIndOutDegree	include/MSSA/SVFGStat.h	/^    int avgIndOutDegree;	\/\/\/< average indirect out degrees of SVFG nodes.$/;"	m	class:SVFGStat
avgOutDegree	include/MSSA/SVFGStat.h	/^    int avgOutDegree;	\/\/\/< average out degrees of SVFG nodes.$/;"	m	class:SVFGStat
avgWeight	include/MSSA/SVFGStat.h	/^    int avgWeight;	\/\/\/< average weight.$/;"	m	class:SVFGStat
axis	include/DisPatch/InitPIDObj.h	/^            string axis;$/;"	m	class:InitPIDObj::AxisInfo
background	include/CUDD/cuddInt.h	/^    DdNode *background;		\/* background value *\/$/;"	m	struct:DdManager
background	lib/CUDD/cuddApa.c	/^static	DdNode	*background, *zero;$/;"	v	file:
background	lib/CUDD/cuddUtil.c	/^static	DdNode	*background, *zero;$/;"	v	file:
backtrackArgPtrAlias	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::backtrackArgPtrAlias(const Value *v, set <const Value *> argset, const Function *func, set <const Value *> &doneset, set <const Value *> &vset){$/;"	f	class:CtrlIdentifier
backtrackPtrVLDR	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::backtrackPtrVLDR(const Value *v, set <const Value *> &doneset, set <const Value *> &vset){$/;"	f	class:CtrlIdentifier
backtrackVLDRLoadingAlias	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::backtrackVLDRLoadingAlias(const Value *v, const Function *func, set <const Value *> &doneset, set <const Value *> &vset){$/;"	f	class:CtrlIdentifier
backwardProcess	include/Util/CFLSolver.h	/^    virtual void backwardProcess(const DPIm& item) {$/;"	f	class:CFLSolver
backwardSlice	include/MSSA/SVFGStat.h	/^    SVFGNodeSet backwardSlice;$/;"	m	class:SVFGStat
backwardTraverse	include/Util/CFLSolver.h	/^    virtual void backwardTraverse(DPIm& it) {$/;"	f	class:CFLSolver
backwardpropagate	include/Util/CFLSolver.h	/^    virtual void backwardpropagate(const DPIm& item, GEDGE* edge) {$/;"	f	class:CFLSolver
bang	lib/CUDD/cuddUtil.c	160;"	d	file:
baseIds	include/MemoryModel/ConsGNode.h	/^    NodeBS baseIds;$/;"	m	class:ConstraintNode
baseaddr	include/DisPatch/InitPIDObj.h	/^    uint64_t baseoff, baseaddr;$/;"	m	class:InitPIDObj
baseaddr	include/DisPatch/InterProcAnal.h	/^    uint64_t baseaddr;$/;"	m	class:InterProcAnal
baseoff	include/DisPatch/InitPIDObj.h	/^    uint64_t baseoff, baseaddr;$/;"	m	class:InitPIDObj
baseoff	include/DisPatch/InterProcAnal.h	/^    uint64_t baseoff;$/;"	m	class:InterProcAnal
basicBlock	include/MemoryModel/PAGEdge.h	/^    const BasicBlock *basicBlock;   \/\/\/< LLVM BasicBlock$/;"	m	class:PAGEdge
batchInterAnalysis	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::batchInterAnalysis(unsigned si, unsigned di, const Function *func){$/;"	f	class:CtrlIdentifier
bb	include/MSSA/MSSAMuChi.h	/^    const BasicBlock* bb;$/;"	m	class:LoadMU
bb	include/MSSA/MSSAMuChi.h	/^    const BasicBlock* bb;$/;"	m	class:MSSAPHI
bb	include/MSSA/MSSAMuChi.h	/^    const BasicBlock* bb;$/;"	m	class:StoreCHI
bb	include/Util/ICFGNode.h	/^    const BasicBlock *bb;$/;"	m	class:ICFGNode
bb	include/Util/VFGNode.h	/^    const BasicBlock* bb;$/;"	m	class:VFGNode
bb2PhiSetMap	include/MSSA/MemSSA.h	/^    BBToPhiSetMap bb2PhiSetMap;$/;"	m	class:MemSSA
bbConds	include/Util/PathCondAllocator.h	/^    BBCondMap bbConds;						\/\/\/< map basic block to its successors\/predecessors branch conditions$/;"	m	class:PathCondAllocator
bbToCondMap	include/Util/PathCondAllocator.h	/^    BBToCondMap bbToCondMap;				\/\/\/< map a basic block to its path condition starting from root$/;"	m	class:PathCondAllocator
bddAnnotateMintermCount	lib/CUDD/cuddSplit.c	/^bddAnnotateMintermCount($/;"	f	file:
bddCheckPositiveCube	lib/CUDD/cuddBddAbs.c	/^bddCheckPositiveCube($/;"	f	file:
bddCondMgr	include/Util/PathCondAllocator.h	/^    static BddCondManager* bddCondMgr;		\/\/\/< bbd manager$/;"	m	class:PathCondAllocator
bddCondMgr	lib/Util/PathCondAllocator.cpp	/^BddCondManager* PathCondAllocator::bddCondMgr = NULL;$/;"	m	class:PathCondAllocator	file:
bddCorrelationAux	lib/CUDD/cuddBddCorr.c	/^bddCorrelationAux($/;"	f	file:
bddCorrelationWeightsAux	lib/CUDD/cuddBddCorr.c	/^bddCorrelationWeightsAux($/;"	f	file:
bddFixTree	lib/CUDD/cuddReorder.c	/^bddFixTree($/;"	f	file:
bddPermuteRecurHits	lib/CUDD/cuddCompose.c	/^static int bddPermuteRecurHits;$/;"	v	file:
bddVarToCanonical	lib/CUDD/cuddBddIte.c	/^bddVarToCanonical($/;"	f	file:
bddVarToCanonicalSimple	lib/CUDD/cuddBddIte.c	/^bddVarToCanonicalSimple($/;"	f	file:
bddVarToConst	lib/CUDD/cuddBddIte.c	/^bddVarToConst($/;"	f	file:
bddVectorComposeHits	lib/CUDD/cuddCompose.c	/^static int bddVectorComposeHits;$/;"	v	file:
beforep	lib/CUDD/cuddEssent.c	/^beforep($/;"	f	file:
begin	include/MemoryModel/ConditionalPT.h	/^    inline iterator begin() const {$/;"	f	class:CondPointsToSet
begin	include/MemoryModel/ConditionalPT.h	/^    inline iterator begin() const {$/;"	f	class:CondStdSet
begin	include/MemoryModel/ConditionalPT.h	/^    inline iterator begin() {$/;"	f	class:CondPointsToSet
begin	include/MemoryModel/ConditionalPT.h	/^    inline iterator begin() {$/;"	f	class:CondStdSet
begin	include/MemoryModel/GenericGraph.h	/^    inline const_iterator begin() const {$/;"	f	class:GenericGraph
begin	include/MemoryModel/GenericGraph.h	/^    inline iterator begin() {$/;"	f	class:GenericGraph
begin	include/MemoryModel/PTAType.h	/^    inline const_iterator begin() const {$/;"	f	class:TypeSet
begin	include/MemoryModel/PTAType.h	/^    inline const_iterator begin() const {$/;"	f	class:TypeSystem
begin	include/MemoryModel/PTAType.h	/^    inline iterator begin() {$/;"	f	class:TypeSet
begin	include/MemoryModel/PTAType.h	/^    inline iterator begin() {$/;"	f	class:TypeSystem
begin	include/Util/DPItem.h	/^    inline const_iterator begin() const {$/;"	f	class:ContextCond
begin	include/Util/GEPTypeBridgeIterator.h	/^    static generic_bridge_gep_type_iterator begin(Type *Ty, ItTy It) {$/;"	f	class:llvm::generic_bridge_gep_type_iterator
begin	include/Util/GEPTypeBridgeIterator.h	/^    static generic_bridge_gep_type_iterator begin(Type *Ty, unsigned AddrSpace,$/;"	f	class:llvm::generic_bridge_gep_type_iterator
begin	include/Util/SVFModule.h	/^    const_iterator begin() const {$/;"	f	class:LLVMModuleSet
begin	include/Util/SVFModule.h	/^    const_iterator begin() const {$/;"	f	class:SVFModule
begin	include/Util/SVFModule.h	/^    iterator begin() {$/;"	f	class:LLVMModuleSet
begin	include/Util/SVFModule.h	/^    iterator begin() {$/;"	f	class:SVFModule
binFuncRangeUpdate	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::binFuncRangeUpdate(uint64_t startaddr, uint64_t endaddr, string exemode){$/;"	f	class:BinIRWrapper
binIRInit	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::binIRInit(const Function *func){$/;"	f	class:BinIRWrapper
binInit	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::binInit(SVFModule &m){$/;"	f	class:BinIRWrapper
binaryNodeMap	include/MemoryModel/PAG.h	/^    BinaryNodeMap binaryNodeMap;	\/\/\/< A set of binary edges$/;"	m	class:PAG
binary_dd_code	include/CUDD/dddmpInt.h	/^struct binary_dd_code {$/;"	s
bindVar	include/CUDD/cuddInt.h	/^    int bindVar;		\/* flag to bind this variable to its level *\/$/;"	m	struct:DdSubtable
binname	include/DisPatch/InitPIDObj.h	/^    string config, binname, arch;$/;"	m	class:InitPIDObj
binop2ty	include/DisPatch/BinIRWrapper.h	/^    static map <const Value *, unsigned> binop2ty;$/;"	m	class:BinIRWrapper
binop2ty	lib/DisPatch/BinIRWrapper.cpp	/^map <const Value *, unsigned> BinIRWrapper::binop2ty;$/;"	m	class:BinIRWrapper	file:
bins	include/CUDD/st.h	/^    st_table_entry **bins;$/;"	m	struct:st_table
biset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
biset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::biset;$/;"	m	class:BinIRWrapper	file:
bitVectorAlloc	lib/CUDD/cuddEssent.c	/^bitVectorAlloc($/;"	f	file:
bitVectorClear	lib/CUDD/cuddEssent.c	/^bitVectorClear($/;"	f	file:
bitVectorFree	lib/CUDD/cuddEssent.c	/^bitVectorFree($/;"	f	file:
bitVectorRead	lib/CUDD/cuddEssent.c	/^bitVectorRead($/;"	f	file:
bitVectorSet	lib/CUDD/cuddEssent.c	/^bitVectorSet($/;"	f	file:
bitcastInstStat	lib/Util/PTAStat.cpp	/^void PTAStat::bitcastInstStat() {$/;"	f	class:PTAStat
bitcastset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
bitcastset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::bitcastset;$/;"	m	class:BinIRWrapper	file:
bits	include/CUDD/epd.h	/^  struct IeeeDoubleStruct	bits;$/;"	m	union:EpTypeUnion	typeref:struct:EpTypeUnion::IeeeDoubleStruct
bits	lib/CUDD/cuddTable.c	/^    unsigned int bits[2];$/;"	m	union:hack	file:
blackholeSymID	include/MemoryModel/MemModel.h	/^    inline SymID blackholeSymID() const {$/;"	f	class:SymbolTableInfo
blkPtrSymID	include/MemoryModel/MemModel.h	/^    inline SymID blkPtrSymID() const {$/;"	f	class:SymbolTableInfo
botctrl2topctrl	lib/DisPatch/CtrlIdentifier.cpp	/^CtrlIdentifier::ctrlinfo *CtrlIdentifier::botctrl2topctrl(ctrlinfo *ci){$/;"	f	class:CtrlIdentifier
bothInterEdges	include/MSSA/SVFGOPT.h	/^    inline bool bothInterEdges(const SVFGEdge* edge1, const SVFGEdge* edge2) const {$/;"	f	class:SVFGOPT
branchStat	lib/Util/PTAStat.cpp	/^void PTAStat::branchStat() {$/;"	f	class:PTAStat
bridge_gep_begin	include/Util/GEPTypeBridgeIterator.h	/^inline bridge_gep_iterator bridge_gep_begin(const User &GEP) {$/;"	f	namespace:llvm
bridge_gep_begin	include/Util/GEPTypeBridgeIterator.h	/^inline bridge_gep_iterator bridge_gep_begin(const User* GEP) {$/;"	f	namespace:llvm
bridge_gep_end	include/Util/GEPTypeBridgeIterator.h	/^inline bridge_gep_iterator bridge_gep_end(const User &GEP) {$/;"	f	namespace:llvm
bridge_gep_end	include/Util/GEPTypeBridgeIterator.h	/^inline bridge_gep_iterator bridge_gep_end(const User* GEP) {$/;"	f	namespace:llvm
bridge_gep_end	include/Util/GEPTypeBridgeIterator.h	/^inline generic_bridge_gep_type_iterator<const T*> bridge_gep_end( Type * \/*Op0*\/, ArrayRef<T> A ) {$/;"	f	namespace:llvm
bridge_gep_iterator	include/Util/BasicTypes.h	/^typedef llvm::bridge_gep_iterator bridge_gep_iterator;$/;"	t
bridge_gep_iterator	include/Util/GEPTypeBridgeIterator.h	/^typedef generic_bridge_gep_type_iterator<> bridge_gep_iterator;$/;"	t	namespace:llvm
bucket	include/CUDD/cuddInt.h	/^    DdHashItem **bucket;$/;"	m	struct:DdHashTable
buckets	include/CUDD/cuddInt.h	/^    DdQueueItem **buckets;$/;"	m	struct:DdLevelQueue
bugMsg1	lib/Util/SVFUtil.cpp	/^std::string SVFUtil::bugMsg1(std::string msg) {$/;"	f	class:SVFUtil
bugMsg2	lib/Util/SVFUtil.cpp	/^std::string SVFUtil::bugMsg2(std::string msg) {$/;"	f	class:SVFUtil
bugMsg3	lib/Util/SVFUtil.cpp	/^std::string SVFUtil::bugMsg3(std::string msg) {$/;"	f	class:SVFUtil
build	lib/MSSA/SVFGBuilder.cpp	/^SVFG* SVFGBuilder::build(BVDataPTAImpl* pta, VFG::VFGK kind) {$/;"	f	class:SVFGBuilder
build	lib/MemoryModel/PAGBuilder.cpp	/^PAG* PAGBuilder::build(SVFModule svfModule) {$/;"	f	class:PAGBuilder
build	lib/MemoryModel/PAGBuilderFromFile.cpp	/^PAG* PAGBuilderFromFile::build() {$/;"	f	class:PAGBuilderFromFile
build	lib/Util/ICFG.cpp	/^void ICFG::build(){$/;"	f	class:ICFG
build	lib/Util/SVFModule.cpp	/^void LLVMModuleSet::build(const vector<string> &moduleNameVec) {$/;"	f	class:LLVMModuleSet
build	lib/Util/ThreadCallGraph.cpp	/^void ThreadCallGraph::build(SVFModule svfModule) {$/;"	f	class:ThreadCallGraph
buildCG	lib/MemoryModel/ConsG.cpp	/^void ConstraintGraph::buildCG() {$/;"	f	class:ConstraintGraph
buildCHG	lib/MemoryModel/CHA.cpp	/^void CHGraph::buildCHG() {$/;"	f	class:CHGraph
buildCHGEdges	lib/MemoryModel/CHA.cpp	/^void CHGraph::buildCHGEdges(const Function *F) {$/;"	f	class:CHGraph
buildCHGNodes	lib/MemoryModel/CHA.cpp	/^void CHGraph::buildCHGNodes(const Function *F) {$/;"	f	class:CHGraph
buildCHGNodes	lib/MemoryModel/CHA.cpp	/^void CHGraph::buildCHGNodes(const GlobalValue *globalvalue) {$/;"	f	class:CHGraph
buildCSToCHAVtblsAndVfnsMap	lib/MemoryModel/CHA.cpp	/^void CHGraph::buildCSToCHAVtblsAndVfnsMap() {$/;"	f	class:CHGraph
buildCallGraph	lib/Util/PTACallGraph.cpp	/^void PTACallGraph::buildCallGraph(SVFModule svfModule) {$/;"	f	class:PTACallGraph
buildClassNameToAncestorsDescendantsMap	lib/MemoryModel/CHA.cpp	/^void CHGraph::buildClassNameToAncestorsDescendantsMap() {$/;"	f	class:CHGraph
buildFullSVFG	lib/MSSA/SVFGBuilder.cpp	/^SVFG* SVFGBuilder::buildFullSVFG(BVDataPTAImpl* pta) {$/;"	f	class:SVFGBuilder
buildFullSVFGWithoutOPT	lib/MSSA/SVFGBuilder.cpp	/^SVFG* SVFGBuilder::buildFullSVFGWithoutOPT(BVDataPTAImpl* pta) {$/;"	f	class:SVFGBuilder
buildFunToFunMap	lib/Util/SVFModule.cpp	/^void LLVMModuleSet::buildFunToFunMap() {$/;"	f	class:LLVMModuleSet
buildGlobalDefToRepMap	lib/Util/SVFModule.cpp	/^void LLVMModuleSet::buildGlobalDefToRepMap() {$/;"	f	class:LLVMModuleSet
buildInternalMaps	lib/MemoryModel/CHA.cpp	/^void CHGraph::buildInternalMaps() {$/;"	f	class:CHGraph
buildMSSA	lib/MSSA/SVFGBuilder.cpp	/^MemSSA* SVFGBuilder::buildMSSA(BVDataPTAImpl* pta, bool ptrOnlyMSSA){$/;"	f	class:SVFGBuilder
buildMemModel	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::buildMemModel(SVFModule svfModule) {$/;"	f	class:SymbolTableInfo
buildMemSSA	lib/MSSA/MemSSA.cpp	/^void MemSSA::buildMemSSA(const Function& fun, DominanceFrontier* f, DominatorTree* t) {$/;"	f	class:MemSSA
buildOfflineCG	lib/MemoryModel/OfflineConsG.cpp	/^void OfflineConsG::buildOfflineCG() {$/;"	f	class:OfflineConsG
buildOfflineMap	lib/MemoryModel/OfflineConsG.cpp	/^void OfflineConsG::buildOfflineMap(OSCC* oscc) {$/;"	f	class:OfflineConsG
buildPTROnlySVFG	lib/MSSA/SVFGBuilder.cpp	/^SVFG* SVFGBuilder::buildPTROnlySVFG(BVDataPTAImpl* pta) {$/;"	f	class:SVFGBuilder
buildPTROnlySVFGWithoutOPT	lib/MSSA/SVFGBuilder.cpp	/^SVFG* SVFGBuilder::buildPTROnlySVFGWithoutOPT(BVDataPTAImpl* pta) {$/;"	f	class:SVFGBuilder
buildSVFG	lib/MSSA/SVFG.cpp	/^void SVFG::buildSVFG() {$/;"	f	class:SVFG
buildSVFG	lib/MSSA/SVFGBuilder.cpp	/^void SVFGBuilder::buildSVFG() {$/;"	f	class:SVFGBuilder
buildSVFG	lib/MSSA/SVFGOPT.cpp	/^void SVFGOPT::buildSVFG() {$/;"	f	class:SVFGOPT
buildVirtualFunctionToIDMap	lib/MemoryModel/CHA.cpp	/^void CHGraph::buildVirtualFunctionToIDMap() {$/;"	f	class:CHGraph
build_dd	lib/CUDD/cuddGenetic.c	/^build_dd($/;"	f	file:
buildingCHGTime	include/MemoryModel/CHA.h	/^    double buildingCHGTime;$/;"	m	class:CHGraph
bypassMSSAPHINode	lib/MSSA/SVFGOPT.cpp	/^void SVFGOPT::bypassMSSAPHINode(const MSSAPHISVFGNode* node)$/;"	f	class:SVFGOPT
byteOffset	include/MemoryModel/LocationSet.h	/^    Size_t byteOffset;	\/\/\/< offset relative to base$/;"	m	class:LocationSet
byteOffset	include/MemoryModel/LocationSet.h	/^    u32_t byteOffset;$/;"	m	class:FieldInfo
c	lib/CUDD/cuddGenCof.c	/^    DdNode *c;$/;"	m	struct:MarkCacheKey	file:
cache	include/CUDD/cuddInt.h	/^    DdCache *cache;		\/* the cache-based computed table *\/$/;"	m	struct:DdManager
cacheHits	include/CUDD/cuddInt.h	/^    double cacheHits;		\/* number of cache hits (since resizing) *\/$/;"	m	struct:DdManager
cacheLastInserts	include/CUDD/cuddInt.h	/^    double cacheLastInserts;	\/* insertions at the last cache resizing *\/$/;"	m	struct:DdManager
cacheMisses	include/CUDD/cuddInt.h	/^    double cacheMisses;		\/* number of cache misses (since resizing) *\/$/;"	m	struct:DdManager
cacheShift	include/CUDD/cuddInt.h	/^    int cacheShift;		\/* shift value for cache hash function *\/$/;"	m	struct:DdManager
cacheSlack	include/CUDD/cuddInt.h	/^    int cacheSlack;		\/* slots still available for resizing *\/$/;"	m	struct:DdManager
cacheSlots	include/CUDD/cuddInt.h	/^    unsigned int cacheSlots;	\/* total number of cache entries *\/$/;"	m	struct:DdManager
cachecollisions	include/CUDD/cuddInt.h	/^    double cachecollisions;	\/* number of cache collisions *\/$/;"	m	struct:DdManager
cachedPtsChainMap	include/MSSA/MemRegion.h	/^    NodeToPTSSMap cachedPtsChainMap;$/;"	m	class:MRGenerator
cachedeletions	include/CUDD/cuddInt.h	/^    double cachedeletions;	\/* number of deletions during garbage coll. *\/$/;"	m	struct:DdManager
cacheinserts	include/CUDD/cuddInt.h	/^    double cacheinserts;	\/* number of cache insertions *\/$/;"	m	struct:DdManager
calculate	lib/Util/DataFlowUtil.cpp	/^void IteratedDominanceFrontier::calculate(BasicBlock * bb,$/;"	f	class:IteratedDominanceFrontier
calculateAddrVarPts	lib/WPA/FlowSensitiveStat.cpp	/^void FlowSensitiveStat::calculateAddrVarPts(NodeID pointer, const SVFGNode* svfg_node)$/;"	f	class:FlowSensitiveStat
calculateNodeDegrees	lib/MSSA/SVFGStat.cpp	/^void SVFGStat::calculateNodeDegrees(SVFGNode* node, NodeSet& nodeHasIndInEdge, NodeSet& nodeHasIndOutEdge)$/;"	f	class:SVFGStat
callEdgeLabelCounter	include/MemoryModel/PAGEdge.h	/^    static u64_t callEdgeLabelCounter;  \/\/\/< Call site Instruction counter$/;"	m	class:PAGEdge
callEdgeLabelCounter	lib/MemoryModel/PAG.cpp	/^u64_t PAGEdge::callEdgeLabelCounter = 0;$/;"	m	class:PAGEdge	file:
callGraph	include/MSSA/MemRegion.h	/^    PTACallGraph* callGraph;$/;"	m	class:MRGenerator
callGraphNodeNum	include/Util/PTACallGraph.h	/^    NodeID callGraphNodeNum;$/;"	m	class:PTACallGraph
callGraphSCC	include/MSSA/MemRegion.h	/^    SCC* callGraphSCC;$/;"	m	class:MRGenerator
callGraphSCC	include/MemoryModel/PointerAnalysis.h	/^    CallGraphSCC* callGraphSCC;$/;"	m	class:PointerAnalysis
callGraphSCCDetection	include/MemoryModel/PointerAnalysis.h	/^    inline void callGraphSCCDetection() {$/;"	f	class:PointerAnalysis
callGraphSolveBasedOnCHA	lib/WPA/TypeAnalysis.cpp	/^void TypeAnalysis::callGraphSolveBasedOnCHA(const CallSiteToFunPtrMap& callsites, CallEdgeMap& newEdges) {$/;"	f	class:TypeAnalysis
callInst	include/MSSA/SVFGNode.h	/^    Instruction* callInst;$/;"	m	class:InterMSSAPHISVFGNode
callInst	include/Util/VFGNode.h	/^    Instruction* callInst;$/;"	m	class:InterPHIVFGNode
callPEBegin	include/Util/VFGNode.h	/^    inline CallPESet::const_iterator callPEBegin() const {$/;"	f	class:FormalParmVFGNode
callPEEnd	include/Util/VFGNode.h	/^    inline CallPESet::const_iterator callPEEnd() const {$/;"	f	class:FormalParmVFGNode
callPEs	include/Util/VFGNode.h	/^    CallPESet callPEs;$/;"	m	class:FormalParmVFGNode
callSiteArgsListMap	include/MemoryModel/PAG.h	/^    CSToArgsListMap callSiteArgsListMap;	\/\/\/< Map a callsite to a list of all its actual parameters$/;"	m	class:PAG
callSiteRetMap	include/MemoryModel/PAG.h	/^    CSToRetMap callSiteRetMap;	\/\/\/< Map a callsite to its callsite returns PAGNodes$/;"	m	class:PAG
callSiteSet	include/MemoryModel/MemModel.h	/^    CallSiteSet callSiteSet;$/;"	m	class:SymbolTableInfo
callSiteToActualINMap	include/MSSA/SVFG.h	/^    CallSiteToActualINsMapTy callSiteToActualINMap;$/;"	m	class:SVFG
callSiteToActualOUTMap	include/MSSA/SVFG.h	/^    CallSiteToActualOUTsMapTy callSiteToActualOUTMap;$/;"	m	class:SVFG
callee2csset	include/DisPatch/InitPIDObj.h	/^    map <const Function *, set <const Instruction *>> callee2csset;$/;"	m	class:InitPIDObj
calleeAnalysis	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::calleeAnalysis(uint64_t addr, uint64_t sz, string mode){$/;"	f	class:InterProcAnal
callgraph	include/Util/ICFG.h	/^    PTACallGraph* callgraph;$/;"	m	class:ICFG
callgraph	include/Util/VFG.h	/^    PTACallGraph* callgraph;$/;"	m	class:VFG
callgraphStat	lib/Util/PTAStat.cpp	/^void PTAStat::callgraphStat() {$/;"	f	class:PTAStat
callinstToCallGraphEdgesMap	include/Util/PTACallGraph.h	/^    CallInstToCallGraphEdgesMap callinstToCallGraphEdgesMap; \/\/\/< Map a call instruction to its corresponding call edges$/;"	m	class:PTACallGraph
callinstToHareParForEdgesMap	include/Util/ThreadCallGraph.h	/^    CallInstToParForEdgesMap callinstToHareParForEdgesMap; \/\/\/< Map a call instruction to its corresponding hare_parallel_for edges$/;"	m	class:ThreadCallGraph
callinstToThreadForkEdgesMap	include/Util/ThreadCallGraph.h	/^    CallInstToForkEdgesMap callinstToThreadForkEdgesMap; \/\/\/< Map a call instruction to its corresponding fork edges$/;"	m	class:ThreadCallGraph
callinstToThreadJoinEdgesMap	include/Util/ThreadCallGraph.h	/^    CallInstToJoinEdgesMap callinstToThreadJoinEdgesMap; \/\/\/< Map a call instruction to its corresponding join edges$/;"	m	class:ThreadCallGraph
calloc	include/CUDD/mnemosyne.h	49;"	d
callsite	include/MSSA/MSSAMuChi.h	/^    const CallSite callsite;$/;"	m	class:CallCHI
callsite	include/MSSA/MSSAMuChi.h	/^    const CallSite callsite;$/;"	m	class:CallMU
callsite2DummyValPN	include/WPA/Andersen.h	/^    CallSite2DummyValPN callsite2DummyValPN;        \/\/\/< Map an instruction to a dummy obj which created at an indirect callsite, which invokes a heap allocator$/;"	m	class:Andersen
callsiteAnalysis	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::callsiteAnalysis(uint64_t csaddr, uint64_t ceaddr, uint64_t craddr, uint64_t crsz, string mode){$/;"	f	class:InterProcAnal
callsiteHasRet	include/MemoryModel/PAG.h	/^    inline bool callsiteHasRet(const CallSite cs) const {$/;"	f	class:PAG
callsiteToChiSetMap	include/MSSA/MemSSA.h	/^    CallSiteToCHISetMap callsiteToChiSetMap;$/;"	m	class:MemSSA
callsiteToModMRsMap	include/MSSA/MemRegion.h	/^    CallSiteToMRsMap callsiteToModMRsMap;$/;"	m	class:MRGenerator
callsiteToModPointsToMap	include/MSSA/MemRegion.h	/^    CallSiteToPointsToMap callsiteToModPointsToMap;$/;"	m	class:MRGenerator
callsiteToMuSetMap	include/MSSA/MemSSA.h	/^    CallSiteToMUSetMap callsiteToMuSetMap;$/;"	m	class:MemSSA
callsiteToRefMRsMap	include/MSSA/MemRegion.h	/^    CallSiteToMRsMap callsiteToRefMRsMap;$/;"	m	class:MRGenerator
callsiteToRefPointsToMap	include/MSSA/MemRegion.h	/^    CallSiteToPointsToMap callsiteToRefPointsToMap;$/;"	m	class:MRGenerator
canBeRemoved	lib/MSSA/SVFGOPT.cpp	/^bool SVFGOPT::canBeRemoved(const SVFGNode * node) {$/;"	f	class:SVFGOPT
candidatePointers	include/MemoryModel/PAG.h	/^    NodeSet candidatePointers;$/;"	m	class:PAG
candidates	include/WPA/WPAFSSolver.h	/^    NodeBS candidates;	\/\/\/< nodes which need to be analyzed in current iteration.$/;"	m	class:WPAMinimumSolver
care	lib/CUDD/cuddApprox.c	/^    char care;			\/* node intersects care set *\/$/;"	m	struct:NodeData	file:
cascadingTransition	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::cascadingTransition(){$/;"	f	class:CtrlIdentifier
cast	include/Util/Casting.h	/^cast(const Y &Val) {$/;"	f	namespace:SVFUtil
cast	include/Util/Casting.h	/^cast(std::unique_ptr<Y> &&Val) {$/;"	f	namespace:SVFUtil
cast	include/Util/Casting.h	/^inline typename cast_retty<X, Y *>::ret_type cast(Y *Val) {$/;"	f	namespace:SVFUtil
cast	include/Util/Casting.h	/^inline typename cast_retty<X, Y>::ret_type cast(Y &Val) {$/;"	f	namespace:SVFUtil
cast_convert_val	include/Util/Casting.h	/^template<class To, class From, class SimpleFrom> struct cast_convert_val {$/;"	s	namespace:SVFUtil
cast_convert_val	include/Util/Casting.h	/^template<class To, class FromTy> struct cast_convert_val<To,FromTy,FromTy> {$/;"	s	namespace:SVFUtil
cast_retty	include/Util/Casting.h	/^struct cast_retty {$/;"	s	namespace:SVFUtil
cast_retty_impl	include/Util/Casting.h	/^struct cast_retty_impl<To, std::unique_ptr<From>> {$/;"	s	namespace:SVFUtil
cast_retty_impl	include/Util/Casting.h	/^template<class To, class From> struct cast_retty_impl {$/;"	s	namespace:SVFUtil
cast_retty_impl	include/Util/Casting.h	/^template<class To, class From> struct cast_retty_impl<To, From*> {$/;"	s	namespace:SVFUtil
cast_retty_impl	include/Util/Casting.h	/^template<class To, class From> struct cast_retty_impl<To, const From*> {$/;"	s	namespace:SVFUtil
cast_retty_impl	include/Util/Casting.h	/^template<class To, class From> struct cast_retty_impl<To, const From*const> {$/;"	s	namespace:SVFUtil
cast_retty_impl	include/Util/Casting.h	/^template<class To, class From> struct cast_retty_impl<To, const From> {$/;"	s	namespace:SVFUtil
cast_retty_wrap	include/Util/Casting.h	/^struct cast_retty_wrap {$/;"	s	namespace:SVFUtil
cast_retty_wrap	include/Util/Casting.h	/^struct cast_retty_wrap<To, FromTy, FromTy> {$/;"	s	namespace:SVFUtil
castset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
castset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::castset;$/;"	m	class:BinIRWrapper	file:
ce2argset	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, set <uint16_t>> ce2argset;$/;"	m	class:InterProcAnal
ce2cssetMap	include/DisPatch/BinIRWrapper.h	/^    static map <const Function *, set <const CallInst*>> ce2cssetMap;$/;"	m	class:BinIRWrapper
ce2cssetMap	lib/DisPatch/BinIRWrapper.cpp	/^map <const Function *, set <const CallInst*>> BinIRWrapper::ce2cssetMap;$/;"	m	class:BinIRWrapper	file:
ce2retset	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, set <uint16_t>> ce2retset;$/;"	m	class:InterProcAnal
ceDoneSet	include/DisPatch/InterProcAnal.h	/^    set <uint64_t> ceDoneSet, csDoneSet;$/;"	m	class:InterProcAnal
cearg2csargptr	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, const Value *> cearg2csargptr, ceout2csoutptr;$/;"	m	class:CtrlIdentifier
ceout2csoutptr	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, const Value *> cearg2csargptr, ceout2csoutptr;$/;"	m	class:CtrlIdentifier
cfInfoBuilder	include/Util/PathCondAllocator.h	/^    PTACFInfoBuilder cfInfoBuilder;		    \/\/\/< map a function to its loop info$/;"	m	class:PathCondAllocator
checkCastInst	lib/DisPatch/BinIRWrapper.cpp	/^const Value *BinIRWrapper::checkCastInst(const Value *instv, const Value *gi, const Function *func){$/;"	f	class:BinIRWrapper
checkFunc	include/DisPatch/BinIRWrapper.h	/^    void inline checkFunc(const Function *func){$/;"	f	class:BinIRWrapper
checkFunc	include/DisPatch/BinIRWrapper.h	/^    void inline checkFunc(const Instruction *inst){$/;"	f	class:BinIRWrapper
checkFunc	include/DisPatch/BinIRWrapper.h	/^    void inline checkFunc(const Value *instv){$/;"	f	class:BinIRWrapper
checkIntraEdgeParents	include/Util/ICFG.h	/^    inline void checkIntraEdgeParents(const ICFGNode *srcNode, const ICFGNode *dstNode) {$/;"	f	class:ICFG
checkIntraEdgeParents	include/Util/VFG.h	/^    inline void checkIntraEdgeParents(const VFGNode *srcNode, const VFGNode *dstNode) {$/;"	f	class:VFG
checkOffsetInst	lib/DisPatch/BinIRWrapper.cpp	/^const Value *BinIRWrapper::checkOffsetInst(const Value *instv, const Value *gi, const Function *func){$/;"	f	class:BinIRWrapper
checkRelation	include/MemoryModel/LocationSet.h	/^    static inline LSRelation checkRelation(const LocationSet& LHS, const LocationSet& RHS) {$/;"	f	class:LocationSet
checkSelfCycleEdges	lib/MSSA/SVFGOPT.cpp	/^bool SVFGOPT::checkSelfCycleEdges(const MSSAPHISVFGNode* node)$/;"	f	class:SVFGOPT
checkSymmInfo	lib/CUDD/cuddExact.c	/^checkSymmInfo($/;"	f	file:
check_file	lib/CUDD/pathsearch.c	/^check_file(char const *filename, char const *mode)$/;"	f	file:
checkedCVset	include/DisPatch/CtrlIdentifier.h	/^    set <const Value*> checkedCVset;$/;"	m	class:CtrlIdentifier
checkedfuncset	include/DisPatch/BinIRWrapper.h	/^    static set <const Function *> checkedfuncset;$/;"	m	class:BinIRWrapper
checkedfuncset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Function *> BinIRWrapper::checkedfuncset;$/;"	m	class:BinIRWrapper	file:
chgraph	include/MemoryModel/PointerAnalysis.h	/^    static CHGraph *chgraph;$/;"	m	class:PointerAnalysis
chgraph	lib/MemoryModel/PointerAnalysis.cpp	/^CHGraph* PointerAnalysis::chgraph = NULL;$/;"	m	class:PointerAnalysis	file:
chi	include/MSSA/SVFGNode.h	/^    const MemSSA::CALLCHI* chi;$/;"	m	class:ActualOUTSVFGNode
chi	include/MSSA/SVFGNode.h	/^    const MemSSA::ENTRYCHI* chi;$/;"	m	class:FormalINSVFGNode
child	include/CUDD/mtr.h	/^    struct MtrNode *child;$/;"	m	struct:MtrNode	typeref:struct:MtrNode::MtrNode
child_begin	include/MemoryModel/GenericGraph.h	/^    static inline ChildIteratorType child_begin(const NodeType* N) {$/;"	f	struct:llvm::GraphTraits
child_end	include/MemoryModel/GenericGraph.h	/^    static inline ChildIteratorType child_end(const NodeType* N) {$/;"	f	struct:llvm::GraphTraits
child_iterator	include/Util/CFLSolver.h	/^    typedef typename GTraits::ChildIteratorType child_iterator;$/;"	t	class:CFLSolver
child_iterator	include/Util/SCC.h	/^    typedef typename GTraits::ChildIteratorType child_iterator;$/;"	t	class:SCCDetection
child_iterator	include/WPA/WPAFSSolver.h	/^    typedef typename WPASolver<GraphType>::child_iterator child_iterator;$/;"	t	class:WPAMinimumSolver
child_iterator	include/WPA/WPAFSSolver.h	/^    typedef typename WPASolver<GraphType>::child_iterator child_iterator;$/;"	t	class:WPASCCSolver
child_iterator	include/WPA/WPASolver.h	/^    typedef typename GTraits::ChildIteratorType child_iterator;$/;"	t	class:WPASolver
cimain	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::cimain(){$/;"	f	class:CtrlIdentifier
ciset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
ciset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::ciset;$/;"	m	class:BinIRWrapper	file:
className	include/MemoryModel/CHA.h	/^    std::string className;$/;"	m	class:CHNode
className	include/Util/CPPUtil.h	/^    std::string className;$/;"	m	struct:cppUtil::DemangledName
classNameToAncestorsMap	include/MemoryModel/CHA.h	/^    NameToCHNodesMap classNameToAncestorsMap;$/;"	m	class:CHGraph
classNameToDescendantsMap	include/MemoryModel/CHA.h	/^    NameToCHNodesMap classNameToDescendantsMap;$/;"	m	class:CHGraph
classNameToInstAndDescsMap	include/MemoryModel/CHA.h	/^    NameToCHNodesMap classNameToInstAndDescsMap;$/;"	m	class:CHGraph
classNameToNodeMap	include/MemoryModel/CHA.h	/^    std::map<const std::string, CHNode *> classNameToNodeMap;$/;"	m	class:CHGraph
classNum	include/MemoryModel/CHA.h	/^    u32_t classNum;$/;"	m	class:CHGraph
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const CallCHI * chi) {$/;"	f	class:CallCHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const CallMU *) {$/;"	f	class:CallMU
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const EntryCHI * chi) {$/;"	f	class:EntryCHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const LoadMU *) {$/;"	f	class:LoadMU
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSACHI * chi) {$/;"	f	class:MSSACHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSACHI<Cond> * chi) {$/;"	f	class:CallCHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSACHI<Cond> * chi) {$/;"	f	class:EntryCHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSACHI<Cond> * chi) {$/;"	f	class:StoreCHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSADEF *chi) {$/;"	f	class:CallCHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSADEF *chi) {$/;"	f	class:EntryCHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSADEF *chi) {$/;"	f	class:MSSACHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSADEF *chi) {$/;"	f	class:StoreCHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSADEF *phi) {$/;"	f	class:MSSAPHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSAMU<Cond> *mu) {$/;"	f	class:CallMU
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSAMU<Cond> *mu) {$/;"	f	class:LoadMU
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSAMU<Cond> *mu) {$/;"	f	class:RetMU
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const MSSAPHI * phi) {$/;"	f	class:MSSAPHI
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const RetMU *) {$/;"	f	class:RetMU
classof	include/MSSA/MSSAMuChi.h	/^    static inline bool classof(const StoreCHI * chi) {$/;"	f	class:StoreCHI
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const CallIndSVFGEdge *) {$/;"	f	class:CallIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const GenericVFGEdgeTy *edge) {$/;"	f	class:CallIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const GenericVFGEdgeTy *edge) {$/;"	f	class:IndirectSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const GenericVFGEdgeTy *edge) {$/;"	f	class:IntraIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const GenericVFGEdgeTy *edge) {$/;"	f	class:RetIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const GenericVFGEdgeTy *edge) {$/;"	f	class:ThreadMHPIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const IndirectSVFGEdge *) {$/;"	f	class:IndirectSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const IndirectSVFGEdge *edge) {$/;"	f	class:CallIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const IndirectSVFGEdge *edge) {$/;"	f	class:IntraIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const IndirectSVFGEdge *edge) {$/;"	f	class:RetIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const IndirectSVFGEdge *edge) {$/;"	f	class:ThreadMHPIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const IntraIndSVFGEdge*) {$/;"	f	class:IntraIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const RetIndSVFGEdge *) {$/;"	f	class:RetIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const ThreadMHPIndSVFGEdge*) {$/;"	f	class:ThreadMHPIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const VFGEdge *edge) {$/;"	f	class:CallIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const VFGEdge *edge) {$/;"	f	class:IndirectSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const VFGEdge *edge) {$/;"	f	class:IntraIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const VFGEdge *edge) {$/;"	f	class:RetIndSVFGEdge
classof	include/MSSA/SVFGEdge.h	/^    static inline bool classof(const VFGEdge *edge) {$/;"	f	class:ThreadMHPIndSVFGEdge
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const ActualINSVFGNode *) {$/;"	f	class:ActualINSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const ActualOUTSVFGNode *) {$/;"	f	class:ActualOUTSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const FormalINSVFGNode *) {$/;"	f	class:FormalINSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const FormalOUTSVFGNode *) {$/;"	f	class:FormalOUTSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:ActualINSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:ActualOUTSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:FormalINSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:FormalOUTSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:InterMSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:IntraMSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:MRSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:MSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const InterMSSAPHISVFGNode *) {$/;"	f	class:InterMSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const IntraMSSAPHISVFGNode *) {$/;"	f	class:IntraMSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const MRSVFGNode *) {$/;"	f	class:MRSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const MRSVFGNode *node) {$/;"	f	class:InterMSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const MRSVFGNode *node) {$/;"	f	class:IntraMSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const MRSVFGNode *node) {$/;"	f	class:MSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const MSSAPHISVFGNode * node) {$/;"	f	class:InterMSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const MSSAPHISVFGNode * node) {$/;"	f	class:IntraMSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const MSSAPHISVFGNode *) {$/;"	f	class:MSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:ActualINSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:ActualOUTSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:FormalINSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:FormalOUTSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:InterMSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:IntraMSSAPHISVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:MRSVFGNode
classof	include/MSSA/SVFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:MSSAPHISVFGNode
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const AddrCGEdge *) {$/;"	f	class:AddrCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const ConstraintEdge *edge) {$/;"	f	class:AddrCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const ConstraintEdge *edge) {$/;"	f	class:CopyCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const ConstraintEdge *edge) {$/;"	f	class:GepCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const ConstraintEdge *edge) {$/;"	f	class:LoadCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const ConstraintEdge *edge) {$/;"	f	class:NormalGepCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const ConstraintEdge *edge) {$/;"	f	class:StoreCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const ConstraintEdge *edge) {$/;"	f	class:VariantGepCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const CopyCGEdge *) {$/;"	f	class:CopyCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const GenericConsEdgeTy *edge) {$/;"	f	class:AddrCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const GenericConsEdgeTy *edge) {$/;"	f	class:ConstraintEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const GenericConsEdgeTy *edge) {$/;"	f	class:CopyCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const GenericConsEdgeTy *edge) {$/;"	f	class:GepCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const GenericConsEdgeTy *edge) {$/;"	f	class:LoadCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const GenericConsEdgeTy *edge) {$/;"	f	class:NormalGepCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const GenericConsEdgeTy *edge) {$/;"	f	class:StoreCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const GenericConsEdgeTy *edge) {$/;"	f	class:VariantGepCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const GepCGEdge *) {$/;"	f	class:GepCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const GepCGEdge *edge) {$/;"	f	class:NormalGepCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const GepCGEdge *edge) {$/;"	f	class:VariantGepCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const LoadCGEdge *) {$/;"	f	class:LoadCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const NormalGepCGEdge *) {$/;"	f	class:NormalGepCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const StoreCGEdge *) {$/;"	f	class:StoreCGEdge
classof	include/MemoryModel/ConsGEdge.h	/^    static inline bool classof(const VariantGepCGEdge *) {$/;"	f	class:VariantGepCGEdge
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const AddrPE *) {$/;"	f	class:AddrPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const BinaryOPPE *) {$/;"	f	class:BinaryOPPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const CallPE *) {$/;"	f	class:CallPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const CmpPE *) {$/;"	f	class:CmpPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const CopyPE *) {$/;"	f	class:CopyPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:AddrPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:BinaryOPPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:CallPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:CmpPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:CopyPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:GepPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:LoadPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:NormalGepPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:PAGEdge
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:RetPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:StorePE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:TDForkPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:TDJoinPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GenericPAGEdgeTy *edge) {$/;"	f	class:VariantGepPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GepPE *) {$/;"	f	class:GepPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GepPE *edge) {$/;"	f	class:NormalGepPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const GepPE *edge) {$/;"	f	class:VariantGepPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const LoadPE *) {$/;"	f	class:LoadPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const NormalGepPE *) {$/;"	f	class:NormalGepPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:AddrPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:BinaryOPPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:CallPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:CmpPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:CopyPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:GepPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:LoadPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:NormalGepPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:PAGEdge
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:RetPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:StorePE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:TDForkPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:TDJoinPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const PAGEdge *edge) {$/;"	f	class:VariantGepPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const RetPE *) {$/;"	f	class:RetPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const StorePE *) {$/;"	f	class:StorePE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const TDForkPE *) {$/;"	f	class:TDForkPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const TDJoinPE *) {$/;"	f	class:TDJoinPE
classof	include/MemoryModel/PAGEdge.h	/^    static inline bool classof(const VariantGepPE *) {$/;"	f	class:VariantGepPE
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const DummyObjPN *) {$/;"	f	class:DummyObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const DummyValPN *) {$/;"	f	class:DummyValPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const FIObjPN *) {$/;"	f	class:FIObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const GenericPAGNodeTy *node) {$/;"	f	class:DummyObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const GenericPAGNodeTy *node) {$/;"	f	class:DummyValPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const GenericPAGNodeTy *node) {$/;"	f	class:FIObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const GenericPAGNodeTy *node) {$/;"	f	class:GepObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const GenericPAGNodeTy *node) {$/;"	f	class:GepValPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const GenericPAGNodeTy *node) {$/;"	f	class:ObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const GenericPAGNodeTy *node) {$/;"	f	class:RetPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const GenericPAGNodeTy *node) {$/;"	f	class:ValPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const GenericPAGNodeTy *node) {$/;"	f	class:VarArgPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const GepObjPN *) {$/;"	f	class:GepObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const GepValPN *) {$/;"	f	class:GepValPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const ObjPN * node) {$/;"	f	class:FIObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const ObjPN * node) {$/;"	f	class:GepObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const ObjPN *) {$/;"	f	class:ObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const PAGNode *node) {$/;"	f	class:DummyObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const PAGNode *node) {$/;"	f	class:DummyValPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const PAGNode *node) {$/;"	f	class:FIObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const PAGNode *node) {$/;"	f	class:GepObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const PAGNode *node) {$/;"	f	class:GepValPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const PAGNode *node) {$/;"	f	class:ObjPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const PAGNode *node) {$/;"	f	class:RetPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const PAGNode *node) {$/;"	f	class:ValPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const PAGNode *node) {$/;"	f	class:VarArgPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const RetPN *) {$/;"	f	class:RetPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const ValPN * node) {$/;"	f	class:GepValPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const ValPN *) {$/;"	f	class:ValPN
classof	include/MemoryModel/PAGNode.h	/^    static inline bool classof(const VarArgPN *) {$/;"	f	class:VarArgPN
classof	include/MemoryModel/PointsToDFDS.h	/^    static inline bool classof(const DFPTData<Key,Data> * ptd) {$/;"	f	class:IncDFPTData
classof	include/MemoryModel/PointsToDFDS.h	/^    static inline bool classof(const DFPTData<Key,Data> *) {$/;"	f	class:DFPTData
classof	include/MemoryModel/PointsToDFDS.h	/^    static inline bool classof(const IncDFPTData<Key,Data> *) {$/;"	f	class:IncDFPTData
classof	include/MemoryModel/PointsToDFDS.h	/^    static inline bool classof(const PTData<Key,Data>* ptd) {$/;"	f	class:DFPTData
classof	include/MemoryModel/PointsToDFDS.h	/^    static inline bool classof(const PTData<Key,Data>* ptd) {$/;"	f	class:IncDFPTData
classof	include/MemoryModel/PointsToDS.h	/^    static inline bool classof(const DiffPTData<Key,Data,CacheKey> *) {$/;"	f	class:DiffPTData
classof	include/MemoryModel/PointsToDS.h	/^    static inline bool classof(const PTData<Key,Data>* ptd) {$/;"	f	class:DiffPTData
classof	include/Util/ICFGEdge.h	/^    static inline bool classof(const CallCFGEdge *) {$/;"	f	class:CallCFGEdge
classof	include/Util/ICFGEdge.h	/^    static inline bool classof(const GenericICFGEdgeTy *edge) {$/;"	f	class:CallCFGEdge
classof	include/Util/ICFGEdge.h	/^    static inline bool classof(const GenericICFGEdgeTy *edge) {$/;"	f	class:IntraCFGEdge
classof	include/Util/ICFGEdge.h	/^    static inline bool classof(const GenericICFGEdgeTy *edge) {$/;"	f	class:RetCFGEdge
classof	include/Util/ICFGEdge.h	/^    static inline bool classof(const ICFGEdge *edge) {$/;"	f	class:CallCFGEdge
classof	include/Util/ICFGEdge.h	/^    static inline bool classof(const ICFGEdge *edge) {$/;"	f	class:IntraCFGEdge
classof	include/Util/ICFGEdge.h	/^    static inline bool classof(const ICFGEdge *edge) {$/;"	f	class:RetCFGEdge
classof	include/Util/ICFGEdge.h	/^    static inline bool classof(const IntraCFGEdge *) {$/;"	f	class:IntraCFGEdge
classof	include/Util/ICFGEdge.h	/^    static inline bool classof(const RetCFGEdge *) {$/;"	f	class:RetCFGEdge
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const CallBlockNode *) {$/;"	f	class:CallBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const FunEntryBlockNode *) {$/;"	f	class:FunEntryBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const FunEntryBlockNode *) {$/;"	f	class:FunExitBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const GenericICFGNodeTy *node) {$/;"	f	class:CallBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const GenericICFGNodeTy *node) {$/;"	f	class:FunEntryBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const GenericICFGNodeTy *node) {$/;"	f	class:FunExitBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const GenericICFGNodeTy *node) {$/;"	f	class:InterBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const GenericICFGNodeTy *node) {$/;"	f	class:IntraBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const GenericICFGNodeTy *node) {$/;"	f	class:RetBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const ICFGNode *node) {$/;"	f	class:CallBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const ICFGNode *node) {$/;"	f	class:FunEntryBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const ICFGNode *node) {$/;"	f	class:FunExitBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const ICFGNode *node) {$/;"	f	class:InterBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const ICFGNode *node) {$/;"	f	class:IntraBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const ICFGNode *node) {$/;"	f	class:RetBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const InterBlockNode *) {$/;"	f	class:InterBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const InterBlockNode *node) {$/;"	f	class:CallBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const InterBlockNode *node) {$/;"	f	class:FunEntryBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const InterBlockNode *node) {$/;"	f	class:FunExitBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const InterBlockNode *node) {$/;"	f	class:RetBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const IntraBlockNode *) {$/;"	f	class:IntraBlockNode
classof	include/Util/ICFGNode.h	/^    static inline bool classof(const RetBlockNode *) {$/;"	f	class:RetBlockNode
classof	include/Util/PTACallGraph.h	/^    static inline bool classof(const GenericCallGraphEdgeTy *edge) {$/;"	f	class:PTACallGraphEdge
classof	include/Util/PTACallGraph.h	/^    static inline bool classof(const PTACallGraphEdge *edge) {$/;"	f	class:PTACallGraphEdge
classof	include/Util/ThreadCallGraph.h	/^    static inline bool classof(const HareParForEdge *edge) {$/;"	f	class:HareParForEdge
classof	include/Util/ThreadCallGraph.h	/^    static inline bool classof(const PTACallGraph *g) {$/;"	f	class:ThreadCallGraph
classof	include/Util/ThreadCallGraph.h	/^    static inline bool classof(const PTACallGraphEdge *edge) {$/;"	f	class:HareParForEdge
classof	include/Util/ThreadCallGraph.h	/^    static inline bool classof(const PTACallGraphEdge *edge) {$/;"	f	class:ThreadForkEdge
classof	include/Util/ThreadCallGraph.h	/^    static inline bool classof(const PTACallGraphEdge *edge) {$/;"	f	class:ThreadJoinEdge
classof	include/Util/ThreadCallGraph.h	/^    static inline bool classof(const ThreadCallGraph *) {$/;"	f	class:ThreadCallGraph
classof	include/Util/ThreadCallGraph.h	/^    static inline bool classof(const ThreadForkEdge *edge) {$/;"	f	class:ThreadForkEdge
classof	include/Util/ThreadCallGraph.h	/^    static inline bool classof(const ThreadJoinEdge *edge) {$/;"	f	class:ThreadJoinEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const CallDirSVFGEdge *) {$/;"	f	class:CallDirSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const DirectSVFGEdge *) {$/;"	f	class:DirectSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const DirectSVFGEdge *edge) {$/;"	f	class:CallDirSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const DirectSVFGEdge *edge) {$/;"	f	class:IntraDirSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const DirectSVFGEdge *edge) {$/;"	f	class:RetDirSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const GenericVFGEdgeTy *edge) {$/;"	f	class:CallDirSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const GenericVFGEdgeTy *edge) {$/;"	f	class:DirectSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const GenericVFGEdgeTy *edge) {$/;"	f	class:IntraDirSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const GenericVFGEdgeTy *edge) {$/;"	f	class:RetDirSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const IntraDirSVFGEdge*) {$/;"	f	class:IntraDirSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const RetDirSVFGEdge *) {$/;"	f	class:RetDirSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const VFGEdge *edge) {$/;"	f	class:CallDirSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const VFGEdge *edge) {$/;"	f	class:DirectSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const VFGEdge *edge) {$/;"	f	class:IntraDirSVFGEdge
classof	include/Util/VFGEdge.h	/^    static inline bool classof(const VFGEdge *edge) {$/;"	f	class:RetDirSVFGEdge
classof	include/Util/VFGNode.h	/^    static inline bool classof(const ActualParmVFGNode *) {$/;"	f	class:ActualParmVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const ActualRetVFGNode *) {$/;"	f	class:ActualRetVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const AddrVFGNode *) {$/;"	f	class:AddrVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const ArgumentVFGNode *) {$/;"	f	class:ArgumentVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const ArgumentVFGNode *node) {$/;"	f	class:ActualParmVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const ArgumentVFGNode *node) {$/;"	f	class:ActualRetVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const ArgumentVFGNode *node) {$/;"	f	class:FormalParmVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const ArgumentVFGNode *node) {$/;"	f	class:FormalRetVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const BinaryOPVFGNode *) {$/;"	f	class:BinaryOPVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const CmpVFGNode *) {$/;"	f	class:CmpVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const CopyVFGNode *) {$/;"	f	class:CopyVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const FormalParmVFGNode *) {$/;"	f	class:FormalParmVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const FormalRetVFGNode *) {$/;"	f	class:FormalRetVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:ActualParmVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:ActualRetVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:AddrVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:ArgumentVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:BinaryOPVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:CmpVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:CopyVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:FormalParmVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:FormalRetVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:GepVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:InterPHIVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:IntraPHIVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:LoadVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:NullPtrVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:PHIVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:StmtVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GenericVFGNodeTy *node) {$/;"	f	class:StoreVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const GepVFGNode *) {$/;"	f	class:GepVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const InterPHIVFGNode *node) {$/;"	f	class:InterPHIVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const IntraPHIVFGNode *node) {$/;"	f	class:IntraPHIVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const LoadVFGNode *) {$/;"	f	class:LoadVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const NullPtrVFGNode *) {$/;"	f	class:NullPtrVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const PHIVFGNode *) {$/;"	f	class:PHIVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const PHIVFGNode *node) {$/;"	f	class:InterPHIVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const PHIVFGNode *node) {$/;"	f	class:IntraPHIVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const StmtVFGNode *) {$/;"	f	class:StmtVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const StmtVFGNode *node) {$/;"	f	class:AddrVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const StmtVFGNode *node) {$/;"	f	class:CopyVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const StmtVFGNode *node) {$/;"	f	class:GepVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const StmtVFGNode *node) {$/;"	f	class:LoadVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const StmtVFGNode *node) {$/;"	f	class:StoreVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const StoreVFGNode *) {$/;"	f	class:StoreVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:ActualParmVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:ActualRetVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:AddrVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:ArgumentVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:BinaryOPVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:CmpVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:CopyVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:FormalParmVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:FormalRetVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:GepVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:InterPHIVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:IntraPHIVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:LoadVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:NullPtrVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:PHIVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:StmtVFGNode
classof	include/Util/VFGNode.h	/^    static inline bool classof(const VFGNode *node) {$/;"	f	class:StoreVFGNode
classof	include/WPA/Andersen.h	/^    static inline bool classof(const Andersen *) {$/;"	f	class:Andersen
classof	include/WPA/Andersen.h	/^    static inline bool classof(const PointerAnalysis *pta) {$/;"	f	class:Andersen
classof	include/WPA/FlowSensitive.h	/^    static inline bool classof(const FlowSensitive *) {$/;"	f	class:FlowSensitive
classof	include/WPA/FlowSensitive.h	/^    static inline bool classof(const PointerAnalysis *pta) {$/;"	f	class:FlowSensitive
classof	include/WPA/TypeAnalysis.h	/^    static inline bool classof(const PointerAnalysis *pta) {$/;"	f	class:TypeAnalysis
classof	include/WPA/TypeAnalysis.h	/^    static inline bool classof(const TypeAnalysis *) {$/;"	f	class:TypeAnalysis
cleanLCDCandidate	include/WPA/Andersen.h	/^    inline void cleanLCDCandidate() {$/;"	f	class:AndersenLCD
clear	include/MemoryModel/ConditionalPT.h	/^    inline void clear() {$/;"	f	class:CondPointsToSet
clear	include/MemoryModel/ConditionalPT.h	/^    inline void clear() {$/;"	f	class:CondStdSet
clear	include/MemoryModel/PointsToDS.h	/^    virtual void clear() {$/;"	f	class:PTData
clear	include/Util/SCC.h	/^    void clear() {$/;"	f	class:SCCDetection
clear	include/Util/WorkList.h	/^    inline void clear() {$/;"	f	class:FIFOWorkList
clear	include/Util/WorkList.h	/^    inline void clear() {$/;"	f	class:FILOWorkList
clear	lib/MSSA/SVFGStat.cpp	/^void SVFGStat::clear()$/;"	f	class:SVFGStat
clear	lib/WPA/CSC.cpp	/^void CSC::clear() {$/;"	f	class:CSC
clearAllDFOutUpdatedVar	include/MemoryModel/PointsToDFDS.h	/^    inline void clearAllDFOutUpdatedVar(LocID loc) {$/;"	f	class:IncDFPTData
clearAllDFOutUpdatedVar	include/MemoryModel/PointsToDFDS.h	/^    virtual inline void clearAllDFOutUpdatedVar(LocID loc) {$/;"	f	class:DFPTData
clearAllDFOutVarFlag	include/WPA/FlowSensitive.h	/^    inline void clearAllDFOutVarFlag(const SVFGNode* stmt) {$/;"	f	class:FlowSensitive
clearCFCond	include/Util/PathCondAllocator.h	/^    inline void clearCFCond() {$/;"	f	class:PathCondAllocator
clearMSSA	include/MSSA/SVFG.h	/^    inline void clearMSSA() {$/;"	f	class:SVFG
clearPropaPts	include/MemoryModel/PointsToDS.h	/^    inline void clearPropaPts(Key& var) {$/;"	f	class:DiffPTData
clearPropaPts	include/WPA/Andersen.h	/^    inline void clearPropaPts(NodeID src) {$/;"	f	class:Andersen
clearPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline void clearPts() {$/;"	f	class:BVDataPTAImpl
clearPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline void clearPts() {$/;"	f	class:CondPTAImpl
clearPts	include/MemoryModel/PointerAnalysis.h	/^    virtual void clearPts() {$/;"	f	class:PointerAnalysis
clearStat	lib/WPA/FlowSensitiveStat.cpp	/^void FlowSensitiveStat::clearStat()$/;"	f	class:FlowSensitiveStat
closestAliasInst	lib/DisPatch/BinIRWrapper.cpp	/^const Value *BinIRWrapper::closestAliasInst(const Value *from, const Value *to, const Function *func){$/;"	f	class:BinIRWrapper
closestAliasInst	lib/DisPatch/BinIRWrapper.cpp	/^const Value *BinIRWrapper::closestAliasInst(const Value *from, unsigned di, const Function *func){$/;"	f	class:BinIRWrapper
clsName	lib/Util/CPPUtil.cpp	/^const string clsName = "class.";$/;"	v
cmpNodeMap	include/MemoryModel/PAG.h	/^    CmpNodeMap cmpNodeMap;	\/\/\/< A set of comparision edges$/;"	m	class:PAG
cmpPts	include/Util/SVFUtil.h	/^inline bool cmpPts (const PointsTo& lpts,const PointsTo& rpts) {$/;"	f	namespace:SVFUtil
cnext	include/CUDD/cuddInt.h	/^    struct DdQueueItem *cnext;$/;"	m	struct:DdQueueItem	typeref:struct:DdQueueItem::DdQueueItem
cnext	lib/CUDD/cuddApprox.c	/^    struct GlobalQueueItem *cnext;$/;"	m	struct:GlobalQueueItem	typeref:struct:GlobalQueueItem::GlobalQueueItem	file:
cnext	lib/CUDD/cuddApprox.c	/^    struct LocalQueueItem *cnext;$/;"	m	struct:LocalQueueItem	typeref:struct:LocalQueueItem::LocalQueueItem	file:
cnfids	include/CUDD/dddmpInt.h	/^  int *cnfids;$/;"	m	struct:Dddmp_Hdr_s
cnt	lib/CUDD/cuddEssent.c	/^    DdHalfWord cnt;$/;"	m	struct:DdTlcInfo	file:
code	include/DisPatch/InterProcAnal.h	/^        unsigned char *code;$/;"	m	struct:InterProcAnal::platform
collapseField	lib/WPA/Andersen.cpp	/^bool Andersen::collapseField(NodeID nodeId)$/;"	f	class:Andersen
collapseFields	include/WPA/WPASolver.h	/^    virtual void collapseFields() {};$/;"	f	class:WPASolver
collapseFields	lib/WPA/Andersen.cpp	/^inline void Andersen::collapseFields() {$/;"	f	class:Andersen
collapseNodePts	lib/WPA/Andersen.cpp	/^bool Andersen::collapseNodePts(NodeID nodeId)$/;"	f	class:Andersen
collapsePWCNode	include/WPA/WPASolver.h	/^    virtual void collapsePWCNode(NodeID nodeId) {}$/;"	f	class:WPASolver
collapsePWCNode	lib/WPA/Andersen.cpp	/^inline void Andersen::collapsePWCNode(NodeID nodeId) {$/;"	f	class:Andersen
collectArrayInfo	lib/MemoryModel/LocMemModel.cpp	/^void LocSymTableInfo::collectArrayInfo(const llvm::ArrayType *ty) {$/;"	f	class:LocSymTableInfo
collectArrayInfo	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::collectArrayInfo(const ArrayType* ty) {$/;"	f	class:SymbolTableInfo
collectBBCallingProgExit	lib/Util/PathCondAllocator.cpp	/^void PathCondAllocator::collectBBCallingProgExit(const BasicBlock & bb) {$/;"	f	class:PathCondAllocator
collectCallSitePts	lib/MSSA/MemRegion.cpp	/^void MRGenerator::collectCallSitePts(CallSite cs) {$/;"	f	class:MRGenerator
collectCycleInfo	lib/WPA/AndersenStat.cpp	/^void AndersenStat::collectCycleInfo(ConstraintGraph* consCG) {$/;"	f	class:AndersenStat
collectGlobals	lib/MSSA/MemRegion.cpp	/^void MRGenerator::collectGlobals() {$/;"	f	class:MRGenerator
collectModRefForCall	lib/MSSA/MemRegion.cpp	/^void MRGenerator::collectModRefForCall() {$/;"	f	class:MRGenerator
collectModRefForLoadStore	lib/MSSA/MemRegion.cpp	/^void MRGenerator::collectModRefForLoadStore() {$/;"	f	class:MRGenerator
collectObj	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::collectObj(const Value *val) {$/;"	f	class:SymbolTableInfo
collectRegDefs	include/MSSA/MemSSA.h	/^    inline void collectRegDefs(const BasicBlock* bb, const MemRegion* mr) {$/;"	f	class:MemSSA
collectRegUses	include/MSSA/MemSSA.h	/^    inline void collectRegUses(const MemRegion* mr) {$/;"	f	class:MemSSA
collectRet	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::collectRet(const Function *val) {$/;"	f	class:SymbolTableInfo
collectSimpleTypeInfo	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::collectSimpleTypeInfo(const Type* ty)$/;"	f	class:SymbolTableInfo
collectStructInfo	lib/MemoryModel/LocMemModel.cpp	/^void LocSymTableInfo::collectStructInfo(const StructType *ty) {$/;"	f	class:LocSymTableInfo
collectStructInfo	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::collectStructInfo(const StructType *sty) {$/;"	f	class:SymbolTableInfo
collectSym	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::collectSym(const Value *val) {$/;"	f	class:SymbolTableInfo
collectTypeInfo	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::collectTypeInfo(const Type* ty) {$/;"	f	class:SymbolTableInfo
collectVal	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::collectVal(const Value *val) {$/;"	f	class:SymbolTableInfo
collectVararg	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::collectVararg(const Function *val) {$/;"	f	class:SymbolTableInfo
compResult	lib/CUDD/cuddSubsetSP.c	/^    DdNode *compResult;$/;"	m	struct:NodeDist	file:
compare	include/CUDD/st.h	/^    int (*compare)(const char *, const char *);$/;"	m	struct:st_table
computeAllLocations	lib/MemoryModel/LocationSet.cpp	/^PointsTo LocationSet::computeAllLocations() const {$/;"	f	class:LocationSet
computeClauses	lib/CUDD/cuddEssent.c	/^computeClauses($/;"	f	file:
computeClausesWithUniverse	lib/CUDD/cuddEssent.c	/^computeClausesWithUniverse($/;"	f	file:
computeDDAPts	include/MemoryModel/PointerAnalysis.h	/^    virtual void computeDDAPts(NodeID id) {}$/;"	f	class:PointerAnalysis
computeDiffPts	include/MemoryModel/PointsToDS.h	/^    inline bool computeDiffPts(Key& var, Data& all) {$/;"	f	class:DiffPTData
computeDiffPts	include/WPA/Andersen.h	/^    virtual inline void computeDiffPts(NodeID id) {$/;"	f	class:Andersen
computeDiffPts	include/WPA/Andersen.h	/^    virtual inline void computeDiffPts(NodeID id) {$/;"	f	class:AndersenWaveDiffWithType
computeGepOffset	lib/MemoryModel/LocMemModel.cpp	/^bool LocSymTableInfo::computeGepOffset(const User *V, LocationSet& ls) {$/;"	f	class:LocSymTableInfo
computeGepOffset	lib/MemoryModel/MemModel.cpp	/^bool SymbolTableInfo::computeGepOffset(const User *V, LocationSet& ls) {$/;"	f	class:SymbolTableInfo
computeGepOffset	lib/MemoryModel/PAGBuilder.cpp	/^bool PAGBuilder::computeGepOffset(const User *V, LocationSet& ls) {$/;"	f	class:PAGBuilder
computeIntersections	lib/MSSA/MemPartition.cpp	/^void IntraDisjointMRG::computeIntersections(const PointsTo& cpts, PointsToList& inters)$/;"	f	class:IntraDisjointMRG
computeLB	lib/CUDD/cuddExact.c	/^computeLB($/;"	f	file:
computeSavings	lib/CUDD/cuddApprox.c	/^computeSavings($/;"	f	file:
computed	lib/CUDD/cuddGenetic.c	/^static st_table *computed;	\/* hash table to identify existing orders *\/$/;"	v	file:
concreteCxt	include/Util/DPItem.h	/^    bool concreteCxt;$/;"	m	class:ContextCond
cond	include/MSSA/MSSAMuChi.h	/^    Cond cond;$/;"	m	class:MSSACHI
cond	include/MSSA/MSSAMuChi.h	/^    Cond cond;$/;"	m	class:MSSAMU
cond	include/MSSA/MSSAMuChi.h	/^    Cond cond;$/;"	m	class:MSSAPHI
cond	include/MemoryModel/ConditionalPT.h	/^        Cond cond(void) {$/;"	f	class:CondPointsToSet::CondPtsSetIterator
condAnd	include/Util/DPItem.h	/^    inline bool condAnd(PathCondAllocator* allocator, PathCond* c) {$/;"	f	class:VFPathCond
condAnd	include/Util/PathCondAllocator.h	/^    inline Condition* condAnd(Condition* lhs, Condition* rhs) {$/;"	f	class:PathCondAllocator
condNeg	include/Util/PathCondAllocator.h	/^    inline Condition* condNeg(Condition* cond) {$/;"	f	class:PathCondAllocator
condOr	include/Util/DPItem.h	/^    inline void condOr(PathCondAllocator* allocator, PathCond* c) {$/;"	f	class:VFPathCond
condOr	include/Util/PathCondAllocator.h	/^    inline Condition* condOr(Condition* lhs, Condition* rhs) {$/;"	f	class:PathCondAllocator
condToInstMap	include/Util/PathCondAllocator.h	/^    CondToTermInstMap condToInstMap;		\/\/\/< map a condition to its corresponding llvm instruction$/;"	m	class:PathCondAllocator
config	include/DisPatch/InitPIDObj.h	/^    string config, binname, arch;$/;"	m	class:InitPIDObj
connectAInAndFIn	include/MSSA/SVFG.h	/^    virtual inline void connectAInAndFIn(const ActualINSVFGNode* actualIn, const FormalINSVFGNode* formalIn, CallSiteID csId, SVFGEdgeSetTy& edges) {$/;"	f	class:SVFG
connectAInAndFIn	include/MSSA/SVFGOPT.h	/^    virtual inline void connectAInAndFIn(const ActualINSVFGNode* actualIn, const FormalINSVFGNode* formalIn, CallSiteID csId, SVFGEdgeSetTy& edges) {$/;"	f	class:SVFGOPT
connectAParamAndFParam	include/MSSA/SVFGOPT.h	/^    virtual inline void connectAParamAndFParam(const PAGNode* cs_arg, const PAGNode* fun_arg, CallSite cs, CallSiteID csId, SVFGEdgeSetTy& edges) {$/;"	f	class:SVFGOPT
connectAParamAndFParam	include/Util/VFG.h	/^    virtual inline void connectAParamAndFParam(const PAGNode* cs_arg, const PAGNode* fun_arg, CallSite cs, CallSiteID csId, VFGEdgeSetTy& edges) {$/;"	f	class:VFG
connectCaller2CalleeParams	lib/WPA/Andersen.cpp	/^void Andersen::connectCaller2CalleeParams(CallSite cs, const Function *F, NodePairSet &cpySrcNodes) {$/;"	f	class:Andersen
connectCallerAndCallee	lib/MSSA/SVFG.cpp	/^void SVFG::connectCallerAndCallee(CallSite cs, const Function* callee, SVFGEdgeSetTy& edges)$/;"	f	class:SVFG
connectCallerAndCallee	lib/Util/VFG.cpp	/^void VFG::connectCallerAndCallee(CallSite cs, const Function* callee, VFGEdgeSetTy& edges)$/;"	f	class:VFG
connectCallerAndCallee	lib/WPA/FlowSensitive.cpp	/^void FlowSensitive::connectCallerAndCallee(const CallEdgeMap& newEdges, SVFGEdgeSetTy& edges) {$/;"	f	class:FlowSensitive
connectCallsiteToExternalPAG	lib/MemoryModel/ExternalPAG.cpp	/^bool ExternalPAG::connectCallsiteToExternalPAG(CallSite *cs) {$/;"	f	class:ExternalPAG
connectDirSVFGEdgeTimeEnd	include/MSSA/SVFGStat.h	/^    double connectDirSVFGEdgeTimeEnd;$/;"	m	class:SVFGStat
connectDirSVFGEdgeTimeStart	include/MSSA/SVFGStat.h	/^    double connectDirSVFGEdgeTimeStart;$/;"	m	class:SVFGStat
connectDirectVFGEdges	lib/Util/VFG.cpp	/^void VFG::connectDirectVFGEdges() {$/;"	f	class:VFG
connectFOutAndAOut	include/MSSA/SVFG.h	/^    virtual inline void connectFOutAndAOut(const FormalOUTSVFGNode* formalOut, const ActualOUTSVFGNode* actualOut, CallSiteID csId, SVFGEdgeSetTy& edges) {$/;"	f	class:SVFG
connectFOutAndAOut	include/MSSA/SVFGOPT.h	/^    virtual inline void connectFOutAndAOut(const FormalOUTSVFGNode* formalOut, const ActualOUTSVFGNode* actualOut, CallSiteID csId, SVFGEdgeSetTy& edges) {$/;"	f	class:SVFGOPT
connectFRetAndARet	include/MSSA/SVFGOPT.h	/^    virtual inline void connectFRetAndARet(const PAGNode* fun_ret, const PAGNode* cs_ret, CallSiteID csId, SVFGEdgeSetTy& edges) {$/;"	f	class:SVFGOPT
connectFRetAndARet	include/Util/VFG.h	/^    virtual inline void connectFRetAndARet(const PAGNode* fun_return, const PAGNode* cs_return, CallSiteID csId, VFGEdgeSetTy& edges) {$/;"	f	class:VFG
connectFromGlobalToProgEntry	lib/MSSA/SVFG.cpp	/^void SVFG::connectFromGlobalToProgEntry()$/;"	f	class:SVFG
connectGlobalToProgEntry	lib/Util/ICFG.cpp	/^void ICFG::connectGlobalToProgEntry()$/;"	f	class:ICFG
connectIndSVFGEdgeTimeEnd	include/MSSA/SVFGStat.h	/^    double connectIndSVFGEdgeTimeEnd;$/;"	m	class:SVFGStat
connectIndSVFGEdgeTimeStart	include/MSSA/SVFGStat.h	/^    double connectIndSVFGEdgeTimeStart;$/;"	m	class:SVFGStat
connectIndirectSVFGEdges	lib/MSSA/SVFG.cpp	/^void SVFG::connectIndirectSVFGEdges() {$/;"	f	class:SVFG
connectInheritEdgeViaCall	lib/MemoryModel/CHA.cpp	/^void CHGraph::connectInheritEdgeViaCall(const Function* caller, CallSite cs){$/;"	f	class:CHGraph
connectInheritEdgeViaStore	lib/MemoryModel/CHA.cpp	/^void CHGraph::connectInheritEdgeViaStore(const Function* caller, const StoreInst* storeInst){$/;"	f	class:CHGraph
connectVCallToVFns	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::connectVCallToVFns(CallSite cs, const VFunSet &vfns, CallEdgeMap& newEdges) {$/;"	f	class:PointerAnalysis
consCG	include/WPA/Andersen.h	/^    ConstraintGraph* consCG;$/;"	m	class:Andersen
const	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
constTypePrint	include/DisPatch/UtilDef.h	/^    inline void constTypePrint(const Value *v){$/;"	f	class:UtilDef
const_alias_iterator	include/Util/SVFModule.h	/^    typedef AliasSetType::const_iterator const_alias_iterator;$/;"	t	class:LLVMModuleSet
const_alias_iterator	include/Util/SVFModule.h	/^    typedef AliasSetType::const_iterator const_alias_iterator;$/;"	t	class:SVFModule
const_global_iterator	include/Util/SVFModule.h	/^    typedef GlobalSetType::const_iterator const_global_iterator;$/;"	t	class:LLVMModuleSet
const_global_iterator	include/Util/SVFModule.h	/^    typedef GlobalSetType::const_iterator const_global_iterator;$/;"	t	class:SVFModule
const_inst_iterator	include/Util/BasicTypes.h	/^typedef llvm::const_inst_iterator const_inst_iterator;$/;"	t
const_iterator	include/MemoryModel/ConditionalPT.h	/^    typedef typename std::set<Element>::const_iterator const_iterator;$/;"	t	class:CondStdSet
const_iterator	include/MemoryModel/ConsGNode.h	/^    typedef ConstraintEdge::ConstraintEdgeSetTy::const_iterator const_iterator;$/;"	t	class:ConstraintNode
const_iterator	include/MemoryModel/GenericGraph.h	/^    typedef typename GEdgeSetTy::const_iterator const_iterator;$/;"	t	class:GenericNode
const_iterator	include/MemoryModel/GenericGraph.h	/^    typedef typename IDToNodeMapTy::const_iterator const_iterator;$/;"	t	class:GenericGraph
const_iterator	include/MemoryModel/PTAType.h	/^    typedef TypeSetTy::const_iterator const_iterator;$/;"	t	class:TypeSet
const_iterator	include/MemoryModel/PTAType.h	/^    typedef typename VarToTypeSetMapTy::const_iterator const_iterator;$/;"	t	class:TypeSystem
const_iterator	include/Util/DPItem.h	/^    typedef CallStrCxt::const_iterator const_iterator;$/;"	t	class:ContextCond
const_iterator	include/Util/ICFG.h	/^    typedef ICFGNodeIDToNodeMapTy::const_iterator const_iterator;$/;"	t	class:ICFG
const_iterator	include/Util/ICFGNode.h	/^    typedef ICFGEdge::ICFGEdgeSetTy::const_iterator const_iterator;$/;"	t	class:ICFGNode
const_iterator	include/Util/ICFGNode.h	/^    typedef StmtOrPHIVFGNodeVec::const_iterator const_iterator;$/;"	t	class:IntraBlockNode
const_iterator	include/Util/PTACallGraph.h	/^    typedef PTACallGraphEdge::CallGraphEdgeSet::const_iterator const_iterator;$/;"	t	class:PTACallGraphNode
const_iterator	include/Util/SVFModule.h	/^    typedef FunctionSetType::const_iterator const_iterator;$/;"	t	class:LLVMModuleSet
const_iterator	include/Util/SVFModule.h	/^    typedef FunctionSetType::const_iterator const_iterator;$/;"	t	class:SVFModule
const_iterator	include/Util/VFG.h	/^    typedef VFGNodeIDToNodeMapTy::const_iterator const_iterator;$/;"	t	class:VFG
const_iterator	include/Util/VFGNode.h	/^    typedef VFGEdge::VFGEdgeSetTy::const_iterator const_iterator;$/;"	t	class:VFGNode
const_pred_iterator	include/Util/BasicTypes.h	/^typedef llvm::const_pred_iterator const_pred_iterator;$/;"	t
constantSymID	include/MemoryModel/MemModel.h	/^    inline SymID constantSymID() const {$/;"	f	class:SymbolTableInfo
constants	include/CUDD/cuddInt.h	/^    DdSubtable constants;	\/* unique subtable for the constants *\/$/;"	m	struct:DdManager
constraintGraphStat	lib/WPA/AndersenStat.cpp	/^void AndersenStat::constraintGraphStat(){$/;"	f	class:AndersenStat
containBlackHoleNode	include/MemoryModel/PointerAnalysis.h	/^    inline bool containBlackHoleNode(PointsTo& pts) {$/;"	f	class:PointerAnalysis
containBlackHoleNode	include/MemoryModel/PointerAnalysis.h	/^    inline bool containBlackHoleNode(const CPtSet& cpts) {$/;"	f	class:CondPTAImpl
containCallStr	include/Util/DPItem.h	/^    inline bool containCallStr(NodeID cxt) const {$/;"	f	class:ContextCond
containConstantNode	include/MemoryModel/PointerAnalysis.h	/^    inline bool containConstantNode(PointsTo& pts) {$/;"	f	class:PointerAnalysis
containConstantNode	include/MemoryModel/PointerAnalysis.h	/^    inline bool containConstantNode(const CPtSet& cpts) {$/;"	f	class:CondPTAImpl
containType	include/MemoryModel/PTAType.h	/^    inline bool containType(const PTAType &type) const {$/;"	f	class:TypeSet
contains	include/MemoryModel/PointerAnalysis.h	/^    bool contains(const CPtSet& cpts1, const CPtSet& cpts2) {$/;"	f	class:CondPTAImpl
context	include/Util/DPItem.h	/^    CallStrCxt context;$/;"	m	class:ContextCond
context	include/Util/DPItem.h	/^    ContextCond context;$/;"	m	class:CxtDPItem
context	include/Util/DPItem.h	/^    ContextCond context;$/;"	m	class:CxtStmtDPItem
controlidx	include/DisPatch/InitPIDObj.h	/^            unsigned controlidx;$/;"	m	class:InitPIDObj::CtrlInfo
convertExpression	lib/Util/BreakConstantExpr.cpp	/^convertExpression (ConstantExpr * CE, Instruction * InsertPt) {$/;"	f	file:
convertGEP	lib/Util/BreakConstantExpr.cpp	/^convertGEP (ConstantExpr * CE, Instruction * InsertPt) {$/;"	f	file:
copyGepTime	include/WPA/FlowSensitive.h	/^    double copyGepTime;	\/\/\/< time of handling copy and gep edges$/;"	m	class:FlowSensitive
copyInEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy copyInEdges;$/;"	m	class:ConstraintNode
copyOrder	lib/CUDD/cuddAnneal.c	/^copyOrder($/;"	f	file:
copyOutEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy copyOutEdges;$/;"	m	class:ConstraintNode
copy_file	lib/CUDD/saveimage.c	/^copy_file(inFd, outFd, nbytes)$/;"	f	file:
count	include/CUDD/cuddInt.h	/^    ptrint count;$/;"	m	struct:DdCache
count	include/CUDD/cuddInt.h	/^    ptrint count;$/;"	m	struct:DdHashItem
count	include/CUDD/cuddInt.h	/^    ptrint count;$/;"	m	struct:DdLocalCacheItem
count	include/MemoryModel/ConditionalPT.h	/^    inline unsigned count() const {$/;"	f	class:CondStdSet
countDead	include/CUDD/cuddInt.h	/^    unsigned int countDead;	\/* if 0, count deads to trigger reordering *\/$/;"	m	struct:DdManager
countStat	include/Util/ICFGStat.h	/^    void countStat(){$/;"	f	class:ICFGStat
cppUtil	include/Util/CPPUtil.h	/^namespace cppUtil {$/;"	n
cpts	include/MSSA/SVFGEdge.h	/^    PointsTo cpts;$/;"	m	class:IndirectSVFGEdge
cpts	include/MSSA/SVFGNode.h	/^    PointsTo cpts;$/;"	m	class:MRSVFGNode
cptsBegin	include/MemoryModel/ConditionalPT.h	/^    inline CondPtsConstIter cptsBegin() const {$/;"	f	class:CondPointsToSet
cptsBegin	include/MemoryModel/ConditionalPT.h	/^    inline CondPtsIter cptsBegin() {$/;"	f	class:CondPointsToSet
cptsEnd	include/MemoryModel/ConditionalPT.h	/^    inline CondPtsConstIter cptsEnd() const {$/;"	f	class:CondPointsToSet
cptsEnd	include/MemoryModel/ConditionalPT.h	/^    inline CondPtsIter cptsEnd() {$/;"	f	class:CondPointsToSet
cptsSet	include/MSSA/MemRegion.h	/^    const PointsTo cptsSet;$/;"	m	class:MemRegion
cptsToRepCPtsMap	include/MSSA/MemRegion.h	/^    PtsToRepPtsSetMap cptsToRepCPtsMap;$/;"	m	class:MRGenerator
createAndersenHCD	include/WPA/Andersen.h	/^    static AndersenHCD *createAndersenHCD(SVFModule svfModule) {$/;"	f	class:AndersenHCD
createAndersenHLCD	include/WPA/Andersen.h	/^    static AndersenHLCD *createAndersenHLCD(SVFModule svfModule) {$/;"	f	class:AndersenHLCD
createAndersenLCD	include/WPA/Andersen.h	/^    static AndersenLCD* createAndersenLCD(SVFModule svfModule) {$/;"	f	class:AndersenLCD
createAndersenSCD	include/WPA/AndersenSFR.h	/^    static AndersenSCD *createAndersenSCD(SVFModule svfModule) {$/;"	f	class:AndersenSCD
createAndersenSFR	include/WPA/AndersenSFR.h	/^    static AndersenSFR *createAndersenSFR(SVFModule svfModule) {$/;"	f	class:AndersenSFR
createAndersenWaveDiff	include/WPA/Andersen.h	/^    static AndersenWaveDiff* createAndersenWaveDiff(SVFModule svfModule) {$/;"	f	class:AndersenWaveDiff
createAndersenWaveDiffWithType	include/WPA/Andersen.h	/^    static AndersenWaveDiffWithType* createAndersenWaveDiffWithType(SVFModule svfModule) {$/;"	f	class:AndersenWaveDiffWithType
createBlkOrConstantObj	include/MemoryModel/MemModel.h	/^    inline void createBlkOrConstantObj(SymID symId) {$/;"	f	class:SymbolTableInfo
createDisjointMR	lib/MSSA/MemPartition.cpp	/^void IntraDisjointMRG::createDisjointMR(const Function* func, const PointsTo& cpts)$/;"	f	class:IntraDisjointMRG
createDistinctMR	lib/MSSA/MemPartition.cpp	/^void DistinctMRG::createDistinctMR(const Function* func, const PointsTo& pts)$/;"	f	class:DistinctMRG
createDummyObj	include/MemoryModel/MemModel.h	/^    inline const MemObj* createDummyObj(SymID symId, const Type* type) {$/;"	f	class:SymbolTableInfo
createFSWPA	include/WPA/FlowSensitive.h	/^    static FlowSensitive* createFSWPA(SVFModule svfModule) {$/;"	f	class:FlowSensitive
createMR	lib/MSSA/MemRegion.cpp	/^void MRGenerator::createMR(const Function* fun, const PointsTo& cpts) {$/;"	f	class:MRGenerator
createMUCHI	lib/MSSA/MemSSA.cpp	/^void MemSSA::createMUCHI(const Function& fun) {$/;"	f	class:MemSSA
createNewCond	include/Util/Conditions.h	/^    inline DdNode* createNewCond(unsigned i) {$/;"	f	class:BddCondManager
createNode	lib/MemoryModel/CHA.cpp	/^CHNode *CHGraph::createNode(const std::string className) {$/;"	f	class:CHGraph
createRefNode	lib/MemoryModel/OfflineConsG.cpp	/^bool OfflineConsG::createRefNode(NodeID nodeId) {$/;"	f	class:OfflineConsG
createResult	lib/CUDD/cuddPriority.c	/^createResult($/;"	f	file:
cross	lib/CUDD/cuddGenetic.c	/^static int cross;		\/* the number of crossovers to perform *\/$/;"	v	file:
cs	include/MSSA/SVFGNode.h	/^    CallSite cs;$/;"	m	class:ActualINSVFGNode
cs	include/MSSA/SVFGNode.h	/^    CallSite cs;$/;"	m	class:ActualOUTSVFGNode
cs	include/Util/ICFGNode.h	/^    CallSite cs;$/;"	m	class:CallBlockNode
cs	include/Util/ICFGNode.h	/^    CallSite cs;$/;"	m	class:RetBlockNode
cs	include/Util/VFGNode.h	/^    CallSite cs;$/;"	m	class:ActualParmVFGNode
cs	include/Util/VFGNode.h	/^    CallSite cs;$/;"	m	class:ActualRetVFGNode
csDoneSet	include/DisPatch/InterProcAnal.h	/^    set <uint64_t> ceDoneSet, csDoneSet;$/;"	m	class:InterProcAnal
csHasVFnsBasedonCHA	include/MemoryModel/CHA.h	/^	inline const bool csHasVFnsBasedonCHA(CallSite cs) const {$/;"	f	class:CHGraph
csHasVtblsBasedonCHA	include/MemoryModel/CHA.h	/^	inline const bool csHasVtblsBasedonCHA(CallSite cs) const {$/;"	f	class:CHGraph
csId	include/MSSA/SVFGEdge.h	/^    CallSiteID csId;$/;"	m	class:CallIndSVFGEdge
csId	include/MSSA/SVFGEdge.h	/^    CallSiteID csId;$/;"	m	class:RetIndSVFGEdge
csId	include/Util/ICFGEdge.h	/^    CallSiteID csId;$/;"	m	class:CallCFGEdge
csId	include/Util/ICFGEdge.h	/^    CallSiteID csId;$/;"	m	class:RetCFGEdge
csId	include/Util/PTACallGraph.h	/^    CallSiteID csId;$/;"	m	class:PTACallGraphEdge
csId	include/Util/VFGEdge.h	/^    CallSiteID csId;$/;"	m	class:CallDirSVFGEdge
csId	include/Util/VFGEdge.h	/^    CallSiteID csId;$/;"	m	class:RetDirSVFGEdge
csToCHAVFnsMap	include/MemoryModel/CHA.h	/^    CallSiteToVFunSetMap csToCHAVFnsMap;$/;"	m	class:CHGraph
csToCHAVtblsMap	include/MemoryModel/CHA.h	/^    CallSiteToVTableSetMap csToCHAVtblsMap;$/;"	m	class:CHGraph
csToCallSiteArgsPtsMap	include/MSSA/MemRegion.h	/^    CallSiteToNodeBSMap csToCallSiteArgsPtsMap;$/;"	m	class:MRGenerator
csToCallSiteRetPtsMap	include/MSSA/MemRegion.h	/^    CallSiteToNodeBSMap csToCallSiteRetPtsMap;$/;"	m	class:MRGenerator
csToClassesMap	include/MemoryModel/CHA.h	/^    CallSiteToCHNodesMap csToClassesMap;$/;"	m	class:CHGraph
csToIdMap	include/Util/PTACallGraph.h	/^    static CallSiteToIdMap csToIdMap;	\/\/\/< Map a pair of call instruction and callee to a callsite ID$/;"	m	class:PTACallGraph
csToIdMap	lib/Util/PTACallGraph.cpp	/^PTACallGraph::CallSiteToIdMap PTACallGraph::csToIdMap;$/;"	m	class:PTACallGraph	file:
csToModsMap	include/MSSA/MemRegion.h	/^    CallSiteToNodeBSMap csToModsMap;$/;"	m	class:MRGenerator
csToRefsMap	include/MSSA/MemRegion.h	/^    CallSiteToNodeBSMap csToRefsMap;$/;"	m	class:MRGenerator
csaddr2ce	lib/DisPatch/InterProcAnal.cpp	/^const Function *InterProcAnal::csaddr2ce(uint64_t csaddr){$/;"	f	class:InterProcAnal
csaddr2ceaddr	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, uint64_t> csaddr2ceaddr;$/;"	m	class:InterProcAnal
csaddr2craddr	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, uint64_t> csaddr2craddr;$/;"	m	class:InterProcAnal
csc	include/WPA/AndersenSFR.h	/^    CSC* csc;$/;"	m	class:AndersenSFR
ctrl	include/DisPatch/InitPIDObj.h	/^            string ctrl;$/;"	m	class:InitPIDObj::CtrlInfo
ctrl2finalcur	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, const Value *> ctrl2finalref, ctrl2finalerr, ctrl2finalcur, ctrl2finalout;$/;"	m	class:CtrlIdentifier
ctrl2finalcur2	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, const Value *> ctrl2finalref2, ctrl2finalerr2, ctrl2finalcur2, ctrl2finalout2; \/\/ for 2 dimension$/;"	m	class:CtrlIdentifier
ctrl2finalerr	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, const Value *> ctrl2finalref, ctrl2finalerr, ctrl2finalcur, ctrl2finalout;$/;"	m	class:CtrlIdentifier
ctrl2finalerr2	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, const Value *> ctrl2finalref2, ctrl2finalerr2, ctrl2finalcur2, ctrl2finalout2; \/\/ for 2 dimension$/;"	m	class:CtrlIdentifier
ctrl2finalout	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, const Value *> ctrl2finalref, ctrl2finalerr, ctrl2finalcur, ctrl2finalout;$/;"	m	class:CtrlIdentifier
ctrl2finalout2	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, const Value *> ctrl2finalref2, ctrl2finalerr2, ctrl2finalcur2, ctrl2finalout2; \/\/ for 2 dimension$/;"	m	class:CtrlIdentifier
ctrl2finalref	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, const Value *> ctrl2finalref, ctrl2finalerr, ctrl2finalcur, ctrl2finalout;$/;"	m	class:CtrlIdentifier
ctrl2finalref2	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, const Value *> ctrl2finalref2, ctrl2finalerr2, ctrl2finalcur2, ctrl2finalout2; \/\/ for 2 dimension$/;"	m	class:CtrlIdentifier
ctrl2intervmap	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, set<const Value *>> ctrl2intervmap;$/;"	m	class:CtrlIdentifier
ctrlVec	include/DisPatch/InitPIDObj.h	/^    vector <CtrlInfo> ctrlVec; $/;"	m	class:InitPIDObj
ctrlidx2varset	include/DisPatch/InitPIDObj.h	/^    map <unsigned, set <const Value *>> ctrlidx2varset;$/;"	m	class:InitPIDObj
ctrlinfo	include/DisPatch/CtrlIdentifier.h	/^    } ctrlinfo;$/;"	t	class:CtrlIdentifier	typeref:struct:CtrlIdentifier::_ctrlinfo
ctrlinfomap	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, InitPIDObj::CtrlInfo*> ctrlinfomap;$/;"	m	class:CtrlIdentifier
ctrlmapvec	include/DisPatch/InitPIDObj.h	/^    vector <map<string, set <const Value *>>> ctrlmapvec;$/;"	m	class:InitPIDObj
ctrls	include/DisPatch/InitPIDObj.h	/^            vector <string> ctrls;$/;"	m	class:InitPIDObj::AxisInfo
ctrlset	include/DisPatch/CtrlIdentifier.h	/^    set <ctrlinfo *> ctrlset;$/;"	m	class:CtrlIdentifier
ctrlvarset	include/DisPatch/InitPIDObj.h	/^    map <const Value *, set <const Value *>> ctrlvarset;$/;"	m	class:InitPIDObj
cube	include/CUDD/cuddInt.h	/^	    int			*cube;$/;"	m	struct:DdGen::__anon12::__anon13
cube	include/CUDD/cuddInt.h	/^	    int			*cube;$/;"	m	struct:DdGen::__anon12::__anon14
cubes	include/CUDD/cuddInt.h	/^	} cubes;$/;"	m	union:DdGen::__anon12	typeref:struct:DdGen::__anon12::__anon13
cuddAddApplyRecur	lib/CUDD/cuddAddApply.c	/^cuddAddApplyRecur($/;"	f
cuddAddBddDoPattern	lib/CUDD/cuddBridge.c	/^cuddAddBddDoPattern($/;"	f
cuddAddCmplRecur	lib/CUDD/cuddAddIte.c	/^cuddAddCmplRecur($/;"	f
cuddAddComposeRecur	lib/CUDD/cuddCompose.c	/^cuddAddComposeRecur($/;"	f
cuddAddConstrainRecur	lib/CUDD/cuddGenCof.c	/^cuddAddConstrainRecur($/;"	f
cuddAddExistAbstractRecur	lib/CUDD/cuddAddAbs.c	/^cuddAddExistAbstractRecur($/;"	f
cuddAddGeneralVectorComposeRecur	lib/CUDD/cuddCompose.c	/^cuddAddGeneralVectorComposeRecur($/;"	f	file:
cuddAddIteRecur	lib/CUDD/cuddAddIte.c	/^cuddAddIteRecur($/;"	f
cuddAddMonadicApplyRecur	lib/CUDD/cuddAddApply.c	/^cuddAddMonadicApplyRecur($/;"	f
cuddAddNegateRecur	lib/CUDD/cuddAddNeg.c	/^cuddAddNegateRecur($/;"	f
cuddAddNonSimComposeRecur	lib/CUDD/cuddCompose.c	/^cuddAddNonSimComposeRecur($/;"	f	file:
cuddAddOrAbstractRecur	lib/CUDD/cuddAddAbs.c	/^cuddAddOrAbstractRecur($/;"	f
cuddAddOuterSumRecur	lib/CUDD/cuddMatMult.c	/^cuddAddOuterSumRecur($/;"	f	file:
cuddAddPermuteRecur	lib/CUDD/cuddCompose.c	/^cuddAddPermuteRecur($/;"	f	file:
cuddAddRestrictRecur	lib/CUDD/cuddGenCof.c	/^cuddAddRestrictRecur($/;"	f
cuddAddRoundOffRecur	lib/CUDD/cuddAddNeg.c	/^cuddAddRoundOffRecur($/;"	f
cuddAddScalarInverseRecur	lib/CUDD/cuddAddInv.c	/^cuddAddScalarInverseRecur($/;"	f
cuddAddUnivAbstractRecur	lib/CUDD/cuddAddAbs.c	/^cuddAddUnivAbstractRecur($/;"	f
cuddAddVectorComposeRecur	lib/CUDD/cuddCompose.c	/^cuddAddVectorComposeRecur($/;"	f	file:
cuddAdjust	include/CUDD/cuddInt.h	930;"	d
cuddAdjust	include/CUDD/cuddInt.h	932;"	d
cuddAllocNode	lib/CUDD/cuddTable.c	/^cuddAllocNode($/;"	f
cuddAnnealing	lib/CUDD/cuddAnneal.c	/^cuddAnnealing($/;"	f
cuddApaCountMintermAux	lib/CUDD/cuddApa.c	/^cuddApaCountMintermAux($/;"	f	file:
cuddApaStCountfree	lib/CUDD/cuddApa.c	/^cuddApaStCountfree($/;"	f	file:
cuddBddAlignToZdd	lib/CUDD/cuddReorder.c	/^cuddBddAlignToZdd($/;"	f
cuddBddAndAbstractRecur	lib/CUDD/cuddAndAbs.c	/^cuddBddAndAbstractRecur($/;"	f
cuddBddAndRecur	lib/CUDD/cuddBddIte.c	/^cuddBddAndRecur($/;"	f
cuddBddBooleanDiffRecur	lib/CUDD/cuddBddAbs.c	/^cuddBddBooleanDiffRecur($/;"	f
cuddBddCharToVect	lib/CUDD/cuddGenCof.c	/^cuddBddCharToVect($/;"	f	file:
cuddBddClipAndAbsRecur	lib/CUDD/cuddClip.c	/^cuddBddClipAndAbsRecur($/;"	f	file:
cuddBddClippingAnd	lib/CUDD/cuddClip.c	/^cuddBddClippingAnd($/;"	f
cuddBddClippingAndAbstract	lib/CUDD/cuddClip.c	/^cuddBddClippingAndAbstract($/;"	f
cuddBddClippingAndRecur	lib/CUDD/cuddClip.c	/^cuddBddClippingAndRecur($/;"	f	file:
cuddBddClosestCube	lib/CUDD/cuddPriority.c	/^cuddBddClosestCube($/;"	f
cuddBddComposeRecur	lib/CUDD/cuddCompose.c	/^cuddBddComposeRecur($/;"	f
cuddBddConstrainDecomp	lib/CUDD/cuddGenCof.c	/^cuddBddConstrainDecomp($/;"	f	file:
cuddBddConstrainRecur	lib/CUDD/cuddGenCof.c	/^cuddBddConstrainRecur($/;"	f
cuddBddExistAbstractRecur	lib/CUDD/cuddBddAbs.c	/^cuddBddExistAbstractRecur($/;"	f
cuddBddIntersectRecur	lib/CUDD/cuddBddIte.c	/^cuddBddIntersectRecur($/;"	f
cuddBddIsop	lib/CUDD/cuddZddIsop.c	/^cuddBddIsop($/;"	f
cuddBddIteRecur	lib/CUDD/cuddBddIte.c	/^cuddBddIteRecur($/;"	f
cuddBddLICBuildResult	lib/CUDD/cuddGenCof.c	/^cuddBddLICBuildResult($/;"	f	file:
cuddBddLICMarkEdges	lib/CUDD/cuddGenCof.c	/^cuddBddLICMarkEdges($/;"	f	file:
cuddBddLICompaction	lib/CUDD/cuddGenCof.c	/^cuddBddLICompaction($/;"	f
cuddBddLiteralSetIntersectionRecur	lib/CUDD/cuddLiteral.c	/^cuddBddLiteralSetIntersectionRecur($/;"	f
cuddBddMakePrime	lib/CUDD/cuddSat.c	/^cuddBddMakePrime($/;"	f
cuddBddNPAndRecur	lib/CUDD/cuddGenCof.c	/^cuddBddNPAndRecur($/;"	f
cuddBddPermuteRecur	lib/CUDD/cuddCompose.c	/^cuddBddPermuteRecur($/;"	f	file:
cuddBddRestrictRecur	lib/CUDD/cuddGenCof.c	/^cuddBddRestrictRecur($/;"	f
cuddBddSqueeze	lib/CUDD/cuddGenCof.c	/^cuddBddSqueeze($/;"	f	file:
cuddBddTransfer	lib/CUDD/cuddBridge.c	/^cuddBddTransfer($/;"	f
cuddBddTransferRecur	lib/CUDD/cuddBridge.c	/^cuddBddTransferRecur($/;"	f	file:
cuddBddVarMapRecur	lib/CUDD/cuddCompose.c	/^cuddBddVarMapRecur($/;"	f	file:
cuddBddVectorComposeRecur	lib/CUDD/cuddCompose.c	/^cuddBddVectorComposeRecur($/;"	f	file:
cuddBddXorExistAbstractRecur	lib/CUDD/cuddBddAbs.c	/^cuddBddXorExistAbstractRecur($/;"	f
cuddBddXorRecur	lib/CUDD/cuddBddIte.c	/^cuddBddXorRecur($/;"	f
cuddBiasedUnderApprox	lib/CUDD/cuddApprox.c	/^cuddBiasedUnderApprox($/;"	f
cuddCProjectionRecur	lib/CUDD/cuddPriority.c	/^cuddCProjectionRecur($/;"	f
cuddCacheFlush	lib/CUDD/cuddCache.c	/^cuddCacheFlush($/;"	f
cuddCacheInsert	lib/CUDD/cuddCache.c	/^cuddCacheInsert($/;"	f
cuddCacheInsert1	lib/CUDD/cuddCache.c	/^cuddCacheInsert1($/;"	f
cuddCacheInsert2	lib/CUDD/cuddCache.c	/^cuddCacheInsert2($/;"	f
cuddCacheLookup	lib/CUDD/cuddCache.c	/^cuddCacheLookup($/;"	f
cuddCacheLookup1	lib/CUDD/cuddCache.c	/^cuddCacheLookup1($/;"	f
cuddCacheLookup1Zdd	lib/CUDD/cuddCache.c	/^cuddCacheLookup1Zdd($/;"	f
cuddCacheLookup2	lib/CUDD/cuddCache.c	/^cuddCacheLookup2($/;"	f
cuddCacheLookup2Zdd	lib/CUDD/cuddCache.c	/^cuddCacheLookup2Zdd($/;"	f
cuddCacheLookupZdd	lib/CUDD/cuddCache.c	/^cuddCacheLookupZdd($/;"	f
cuddCacheProfile	lib/CUDD/cuddCache.c	/^cuddCacheProfile($/;"	f
cuddCacheResize	lib/CUDD/cuddCache.c	/^cuddCacheResize($/;"	f
cuddCheckCollisionOrdering	lib/CUDD/cuddTable.c	/^cuddCheckCollisionOrdering($/;"	f	file:
cuddClean	include/CUDD/cuddInt.h	757;"	d
cuddClearDeathRow	lib/CUDD/cuddRef.c	/^cuddClearDeathRow($/;"	f
cuddCofactorRecur	lib/CUDD/cuddCof.c	/^cuddCofactorRecur($/;"	f
cuddCollectNodes	lib/CUDD/cuddUtil.c	/^cuddCollectNodes($/;"	f
cuddComputeFloorLog2	lib/CUDD/cuddCache.c	/^cuddComputeFloorLog2($/;"	f
cuddConjunctsAux	lib/CUDD/cuddDecomp.c	/^cuddConjunctsAux($/;"	f	file:
cuddConstantLookup	lib/CUDD/cuddCache.c	/^cuddConstantLookup($/;"	f
cuddDeallocMove	include/CUDD/cuddInt.h	537;"	d
cuddDeallocNode	include/CUDD/cuddInt.h	520;"	d
cuddDeref	include/CUDD/cuddInt.h	577;"	d
cuddDestroySubtables	lib/CUDD/cuddTable.c	/^cuddDestroySubtables($/;"	f
cuddDoRebalance	lib/CUDD/cuddTable.c	/^cuddDoRebalance($/;"	f	file:
cuddDynamicAllocNode	lib/CUDD/cuddReorder.c	/^cuddDynamicAllocNode($/;"	f
cuddE	include/CUDD/cuddInt.h	625;"	d
cuddEstimateCofactor	lib/CUDD/cuddUtil.c	/^cuddEstimateCofactor($/;"	f	file:
cuddEstimateCofactorSimple	lib/CUDD/cuddUtil.c	/^cuddEstimateCofactorSimple($/;"	f	file:
cuddExact	lib/CUDD/cuddExact.c	/^cuddExact($/;"	f
cuddFindParent	lib/CUDD/cuddTable.c	/^cuddFindParent($/;"	f	file:
cuddFreeTable	lib/CUDD/cuddTable.c	/^cuddFreeTable($/;"	f
cuddGa	lib/CUDD/cuddGenetic.c	/^cuddGa($/;"	f
cuddGarbageCollect	lib/CUDD/cuddTable.c	/^cuddGarbageCollect($/;"	f
cuddGetBranches	lib/CUDD/cuddCof.c	/^cuddGetBranches($/;"	f
cuddHashTableAlloc	lib/CUDD/cuddLCache.c	/^cuddHashTableAlloc($/;"	f	file:
cuddHashTableGenericInsert	lib/CUDD/cuddLCache.c	/^cuddHashTableGenericInsert($/;"	f
cuddHashTableGenericLookup	lib/CUDD/cuddLCache.c	/^cuddHashTableGenericLookup($/;"	f
cuddHashTableGenericQuit	lib/CUDD/cuddLCache.c	/^cuddHashTableGenericQuit($/;"	f
cuddHashTableInit	lib/CUDD/cuddLCache.c	/^cuddHashTableInit($/;"	f
cuddHashTableInsert	lib/CUDD/cuddLCache.c	/^cuddHashTableInsert($/;"	f
cuddHashTableInsert1	lib/CUDD/cuddLCache.c	/^cuddHashTableInsert1($/;"	f
cuddHashTableInsert2	lib/CUDD/cuddLCache.c	/^cuddHashTableInsert2($/;"	f
cuddHashTableInsert3	lib/CUDD/cuddLCache.c	/^cuddHashTableInsert3($/;"	f
cuddHashTableLookup	lib/CUDD/cuddLCache.c	/^cuddHashTableLookup($/;"	f
cuddHashTableLookup1	lib/CUDD/cuddLCache.c	/^cuddHashTableLookup1($/;"	f
cuddHashTableLookup2	lib/CUDD/cuddLCache.c	/^cuddHashTableLookup2($/;"	f
cuddHashTableLookup3	lib/CUDD/cuddLCache.c	/^cuddHashTableLookup3($/;"	f
cuddHashTableQuit	lib/CUDD/cuddLCache.c	/^cuddHashTableQuit($/;"	f
cuddHashTableResize	lib/CUDD/cuddLCache.c	/^cuddHashTableResize($/;"	f	file:
cuddHeapProfile	lib/CUDD/cuddCheck.c	/^cuddHeapProfile($/;"	f
cuddI	include/CUDD/cuddInt.h	659;"	d
cuddIZ	include/CUDD/cuddInt.h	677;"	d
cuddInitCache	lib/CUDD/cuddCache.c	/^cuddInitCache($/;"	f
cuddInitInteract	lib/CUDD/cuddInteract.c	/^cuddInitInteract($/;"	f
cuddInitLinear	lib/CUDD/cuddLinear.c	/^cuddInitLinear($/;"	f
cuddInitTable	lib/CUDD/cuddTable.c	/^cuddInitTable($/;"	f
cuddInsertSubtables	lib/CUDD/cuddTable.c	/^cuddInsertSubtables($/;"	f
cuddIsConstant	include/CUDD/cuddInt.h	593;"	d
cuddIsInDeathRow	lib/CUDD/cuddRef.c	/^cuddIsInDeathRow($/;"	f
cuddLevelQueueDequeue	lib/CUDD/cuddLevelQ.c	/^cuddLevelQueueDequeue($/;"	f
cuddLevelQueueEnqueue	lib/CUDD/cuddLevelQ.c	/^cuddLevelQueueEnqueue($/;"	f
cuddLevelQueueFirst	lib/CUDD/cuddLevelQ.c	/^cuddLevelQueueFirst($/;"	f
cuddLevelQueueInit	lib/CUDD/cuddLevelQ.c	/^cuddLevelQueueInit($/;"	f
cuddLevelQueueQuit	lib/CUDD/cuddLevelQ.c	/^cuddLevelQueueQuit($/;"	f
cuddLinearAndSifting	lib/CUDD/cuddLinear.c	/^cuddLinearAndSifting($/;"	f
cuddLinearInPlace	lib/CUDD/cuddLinear.c	/^cuddLinearInPlace($/;"	f
cuddLocalCacheAddToList	lib/CUDD/cuddLCache.c	/^cuddLocalCacheAddToList($/;"	f	file:
cuddLocalCacheClearAll	lib/CUDD/cuddLCache.c	/^cuddLocalCacheClearAll($/;"	f
cuddLocalCacheClearDead	lib/CUDD/cuddLCache.c	/^cuddLocalCacheClearDead($/;"	f
cuddLocalCacheInit	lib/CUDD/cuddLCache.c	/^cuddLocalCacheInit($/;"	f
cuddLocalCacheInsert	lib/CUDD/cuddLCache.c	/^cuddLocalCacheInsert($/;"	f
cuddLocalCacheLookup	lib/CUDD/cuddLCache.c	/^cuddLocalCacheLookup($/;"	f
cuddLocalCacheProfile	lib/CUDD/cuddLCache.c	/^cuddLocalCacheProfile($/;"	f
cuddLocalCacheQuit	lib/CUDD/cuddLCache.c	/^cuddLocalCacheQuit($/;"	f
cuddLocalCacheRemoveFromList	lib/CUDD/cuddLCache.c	/^cuddLocalCacheRemoveFromList($/;"	f	file:
cuddLocalCacheResize	lib/CUDD/cuddLCache.c	/^cuddLocalCacheResize($/;"	f	file:
cuddMakeBddFromZddCover	lib/CUDD/cuddZddIsop.c	/^cuddMakeBddFromZddCover($/;"	f
cuddMinHammingDistRecur	lib/CUDD/cuddPriority.c	/^cuddMinHammingDistRecur($/;"	f	file:
cuddNextHigh	lib/CUDD/cuddReorder.c	/^cuddNextHigh($/;"	f
cuddNextLow	lib/CUDD/cuddReorder.c	/^cuddNextLow($/;"	f
cuddNodeArray	lib/CUDD/cuddUtil.c	/^cuddNodeArray($/;"	f
cuddNodeArrayRecur	lib/CUDD/cuddUtil.c	/^cuddNodeArrayRecur($/;"	f	file:
cuddOrderedInsert	lib/CUDD/cuddTable.c	/^cuddOrderedInsert($/;"	f	file:
cuddOrderedThread	lib/CUDD/cuddTable.c	/^cuddOrderedThread($/;"	f	file:
cuddP	lib/CUDD/cuddUtil.c	/^cuddP($/;"	f
cuddPathPair	lib/CUDD/cuddSat.c	/^typedef struct cuddPathPair {$/;"	s	file:
cuddPathPair	lib/CUDD/cuddSat.c	/^} cuddPathPair;$/;"	t	typeref:struct:cuddPathPair	file:
cuddPrintNode	lib/CUDD/cuddCheck.c	/^cuddPrintNode($/;"	f
cuddPrintVarGroups	lib/CUDD/cuddCheck.c	/^cuddPrintVarGroups($/;"	f
cuddRand	lib/CUDD/cuddUtil.c	/^static	long cuddRand = 0;$/;"	v	file:
cuddRand2	lib/CUDD/cuddUtil.c	/^static	long cuddRand2;$/;"	v	file:
cuddReclaim	lib/CUDD/cuddRef.c	/^cuddReclaim($/;"	f
cuddReclaimZdd	lib/CUDD/cuddRef.c	/^cuddReclaimZdd($/;"	f
cuddRef	include/CUDD/cuddInt.h	557;"	d
cuddRehash	lib/CUDD/cuddTable.c	/^cuddRehash($/;"	f
cuddRemapUnderApprox	lib/CUDD/cuddApprox.c	/^cuddRemapUnderApprox($/;"	f
cuddResizeLinear	lib/CUDD/cuddLinear.c	/^cuddResizeLinear($/;"	f
cuddResizeTableZdd	lib/CUDD/cuddTable.c	/^cuddResizeTableZdd($/;"	f
cuddRotateLeft	lib/CUDD/cuddTable.c	/^cuddRotateLeft($/;"	f	file:
cuddRotateRight	lib/CUDD/cuddTable.c	/^cuddRotateRight($/;"	f	file:
cuddSatDec	include/CUDD/cuddInt.h	847;"	d
cuddSatDec	include/CUDD/cuddInt.h	849;"	d
cuddSatInc	include/CUDD/cuddInt.h	829;"	d
cuddSatInc	include/CUDD/cuddInt.h	831;"	d
cuddSetInteract	lib/CUDD/cuddInteract.c	/^cuddSetInteract($/;"	f
cuddShrinkDeathRow	lib/CUDD/cuddRef.c	/^cuddShrinkDeathRow($/;"	f
cuddShrinkSubtable	lib/CUDD/cuddTable.c	/^cuddShrinkSubtable($/;"	f
cuddSifting	lib/CUDD/cuddReorder.c	/^cuddSifting($/;"	f
cuddSlowTableGrowth	lib/CUDD/cuddTable.c	/^cuddSlowTableGrowth($/;"	f
cuddSolveEqnRecur	lib/CUDD/cuddSolve.c	/^cuddSolveEqnRecur($/;"	f
cuddSplitSetRecur	lib/CUDD/cuddSplit.c	/^cuddSplitSetRecur($/;"	f
cuddStCountfree	lib/CUDD/cuddUtil.c	/^cuddStCountfree($/;"	f
cuddSubsetHeavyBranch	lib/CUDD/cuddSubsetHB.c	/^cuddSubsetHeavyBranch($/;"	f
cuddSubsetShortPaths	lib/CUDD/cuddSubsetSP.c	/^cuddSubsetShortPaths($/;"	f
cuddSwapInPlace	lib/CUDD/cuddReorder.c	/^cuddSwapInPlace($/;"	f
cuddSwapping	lib/CUDD/cuddReorder.c	/^cuddSwapping($/;"	f
cuddSymmCheck	lib/CUDD/cuddSymmetry.c	/^cuddSymmCheck($/;"	f
cuddSymmSifting	lib/CUDD/cuddSymmetry.c	/^cuddSymmSifting($/;"	f
cuddSymmSiftingConv	lib/CUDD/cuddSymmetry.c	/^cuddSymmSiftingConv($/;"	f
cuddT	include/CUDD/cuddInt.h	609;"	d
cuddTestInteract	lib/CUDD/cuddInteract.c	/^cuddTestInteract($/;"	f
cuddTimesInDeathRow	lib/CUDD/cuddRef.c	/^cuddTimesInDeathRow($/;"	f
cuddTreeSifting	lib/CUDD/cuddGroup.c	/^cuddTreeSifting($/;"	f
cuddUnderApprox	lib/CUDD/cuddApprox.c	/^cuddUnderApprox($/;"	f
cuddUniqueConst	lib/CUDD/cuddTable.c	/^cuddUniqueConst($/;"	f
cuddUniqueInter	lib/CUDD/cuddTable.c	/^cuddUniqueInter($/;"	f
cuddUniqueInterIVO	lib/CUDD/cuddTable.c	/^cuddUniqueInterIVO($/;"	f
cuddUniqueInterZdd	lib/CUDD/cuddTable.c	/^cuddUniqueInterZdd($/;"	f
cuddUniqueLookup	lib/CUDD/cuddUtil.c	/^cuddUniqueLookup($/;"	f	file:
cuddUpdateInteractionMatrix	lib/CUDD/cuddLinear.c	/^cuddUpdateInteractionMatrix($/;"	f
cuddV	include/CUDD/cuddInt.h	641;"	d
cuddVerifySol	lib/CUDD/cuddSolve.c	/^cuddVerifySol($/;"	f
cuddWindowReorder	lib/CUDD/cuddWindow.c	/^cuddWindowReorder($/;"	f
cuddXorLinear	lib/CUDD/cuddLinear.c	/^cuddXorLinear($/;"	f	file:
cuddZddAlignToBdd	lib/CUDD/cuddZddReord.c	/^cuddZddAlignToBdd($/;"	f
cuddZddChange	lib/CUDD/cuddZddSetop.c	/^cuddZddChange($/;"	f
cuddZddChangeAux	lib/CUDD/cuddZddSetop.c	/^cuddZddChangeAux($/;"	f
cuddZddComplement	lib/CUDD/cuddZddFuncs.c	/^cuddZddComplement($/;"	f
cuddZddCountDoubleStep	lib/CUDD/cuddZddCount.c	/^cuddZddCountDoubleStep($/;"	f	file:
cuddZddCountStep	lib/CUDD/cuddZddCount.c	/^cuddZddCountStep($/;"	f	file:
cuddZddDagInt	lib/CUDD/cuddZddMisc.c	/^cuddZddDagInt($/;"	f	file:
cuddZddDiff	lib/CUDD/cuddZddSetop.c	/^cuddZddDiff($/;"	f
cuddZddDivide	lib/CUDD/cuddZddFuncs.c	/^cuddZddDivide($/;"	f
cuddZddDivideF	lib/CUDD/cuddZddFuncs.c	/^cuddZddDivideF($/;"	f
cuddZddFreeUniv	lib/CUDD/cuddInit.c	/^cuddZddFreeUniv($/;"	f
cuddZddGetCofactors2	lib/CUDD/cuddZddFuncs.c	/^cuddZddGetCofactors2($/;"	f
cuddZddGetCofactors3	lib/CUDD/cuddZddFuncs.c	/^cuddZddGetCofactors3($/;"	f
cuddZddGetNegVarIndex	lib/CUDD/cuddZddFuncs.c	/^cuddZddGetNegVarIndex($/;"	f
cuddZddGetNegVarLevel	lib/CUDD/cuddZddFuncs.c	/^cuddZddGetNegVarLevel($/;"	f
cuddZddGetNode	lib/CUDD/cuddTable.c	/^cuddZddGetNode($/;"	f
cuddZddGetNodeIVO	lib/CUDD/cuddTable.c	/^cuddZddGetNodeIVO($/;"	f
cuddZddGetPosVarIndex	lib/CUDD/cuddZddFuncs.c	/^cuddZddGetPosVarIndex($/;"	f
cuddZddGetPosVarLevel	lib/CUDD/cuddZddFuncs.c	/^cuddZddGetPosVarLevel($/;"	f
cuddZddInitUniv	lib/CUDD/cuddInit.c	/^cuddZddInitUniv($/;"	f
cuddZddIntersect	lib/CUDD/cuddZddSetop.c	/^cuddZddIntersect($/;"	f
cuddZddIsop	lib/CUDD/cuddZddIsop.c	/^cuddZddIsop($/;"	f
cuddZddIte	lib/CUDD/cuddZddSetop.c	/^cuddZddIte($/;"	f
cuddZddLinearAux	lib/CUDD/cuddZddLin.c	/^cuddZddLinearAux($/;"	f	file:
cuddZddLinearBackward	lib/CUDD/cuddZddLin.c	/^cuddZddLinearBackward($/;"	f	file:
cuddZddLinearDown	lib/CUDD/cuddZddLin.c	/^cuddZddLinearDown($/;"	f	file:
cuddZddLinearInPlace	lib/CUDD/cuddZddLin.c	/^cuddZddLinearInPlace($/;"	f	file:
cuddZddLinearSifting	lib/CUDD/cuddZddLin.c	/^cuddZddLinearSifting($/;"	f
cuddZddLinearUp	lib/CUDD/cuddZddLin.c	/^cuddZddLinearUp($/;"	f	file:
cuddZddNextHigh	lib/CUDD/cuddZddReord.c	/^cuddZddNextHigh($/;"	f
cuddZddNextLow	lib/CUDD/cuddZddReord.c	/^cuddZddNextLow($/;"	f
cuddZddP	lib/CUDD/cuddZddUtil.c	/^cuddZddP($/;"	f
cuddZddProduct	lib/CUDD/cuddZddFuncs.c	/^cuddZddProduct($/;"	f
cuddZddSifting	lib/CUDD/cuddZddReord.c	/^cuddZddSifting($/;"	f
cuddZddSiftingAux	lib/CUDD/cuddZddReord.c	/^cuddZddSiftingAux($/;"	f	file:
cuddZddSiftingBackward	lib/CUDD/cuddZddReord.c	/^cuddZddSiftingBackward($/;"	f	file:
cuddZddSiftingDown	lib/CUDD/cuddZddReord.c	/^cuddZddSiftingDown($/;"	f	file:
cuddZddSiftingUp	lib/CUDD/cuddZddReord.c	/^cuddZddSiftingUp($/;"	f	file:
cuddZddSubset0	lib/CUDD/cuddZddSetop.c	/^cuddZddSubset0($/;"	f
cuddZddSubset1	lib/CUDD/cuddZddSetop.c	/^cuddZddSubset1($/;"	f
cuddZddSwapInPlace	lib/CUDD/cuddZddReord.c	/^cuddZddSwapInPlace($/;"	f
cuddZddSwapping	lib/CUDD/cuddZddReord.c	/^cuddZddSwapping($/;"	f
cuddZddSymmCheck	lib/CUDD/cuddZddSymm.c	/^cuddZddSymmCheck($/;"	f
cuddZddSymmSifting	lib/CUDD/cuddZddSymm.c	/^cuddZddSymmSifting($/;"	f
cuddZddSymmSiftingAux	lib/CUDD/cuddZddSymm.c	/^cuddZddSymmSiftingAux($/;"	f	file:
cuddZddSymmSiftingBackward	lib/CUDD/cuddZddSymm.c	/^cuddZddSymmSiftingBackward($/;"	f	file:
cuddZddSymmSiftingConv	lib/CUDD/cuddZddSymm.c	/^cuddZddSymmSiftingConv($/;"	f
cuddZddSymmSiftingConvAux	lib/CUDD/cuddZddSymm.c	/^cuddZddSymmSiftingConvAux($/;"	f	file:
cuddZddSymmSifting_down	lib/CUDD/cuddZddSymm.c	/^cuddZddSymmSifting_down($/;"	f	file:
cuddZddSymmSifting_up	lib/CUDD/cuddZddSymm.c	/^cuddZddSymmSifting_up($/;"	f	file:
cuddZddSymmSummary	lib/CUDD/cuddZddSymm.c	/^cuddZddSymmSummary($/;"	f	file:
cuddZddTreeSifting	lib/CUDD/cuddZddGroup.c	/^cuddZddTreeSifting($/;"	f
cuddZddUnateProduct	lib/CUDD/cuddZddFuncs.c	/^cuddZddUnateProduct($/;"	f
cuddZddUndoMoves	lib/CUDD/cuddZddLin.c	/^cuddZddUndoMoves($/;"	f	file:
cuddZddUnion	lib/CUDD/cuddZddSetop.c	/^cuddZddUnion($/;"	f
cuddZddUniqueCompare	lib/CUDD/cuddZddReord.c	/^cuddZddUniqueCompare($/;"	f
cuddZddWeakDiv	lib/CUDD/cuddZddFuncs.c	/^cuddZddWeakDiv($/;"	f
cuddZddWeakDivF	lib/CUDD/cuddZddFuncs.c	/^cuddZddWeakDivF($/;"	f
cur	include/DisPatch/InitPIDObj.h	/^            string cur;$/;"	m	class:InitPIDObj::CtrlInfo
cur	include/Util/DPItem.h	/^    NodeID cur;$/;"	m	class:DPItem
cur2ctrlmap	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, ctrlinfo *> ref2ctrlmap, err2ctrlmap, cur2ctrlmap, mathout2ctrlmap;$/;"	m	class:CtrlIdentifier
curBB	include/MemoryModel/PAG.h	/^    const BasicBlock* curBB;	\/\/\/< Current basic block during PAG construction when visiting the module$/;"	m	class:PAG
curEvalVal	include/Util/PathCondAllocator.h	/^    const Value* curEvalVal;			\/\/\/< current llvm value to evaluate branch condition when computing guards$/;"	m	class:PathCondAllocator
curSCCID	include/WPA/WPAFSSolver.h	/^    NodeID curSCCID;	\/\/\/< index of current SCC.$/;"	m	class:WPASCCSolver
curVal	include/MemoryModel/PAG.h	/^    const Value* curVal;	\/\/\/< Current Value during PAG construction when visiting the module$/;"	m	class:PAG
curloc	include/Util/DPItem.h	/^    const LocCond* curloc;$/;"	m	class:StmtDPItem
curptr2vldr	lib/DisPatch/CtrlIdentifier.cpp	/^const Value *CtrlIdentifier::curptr2vldr(const Value *v, const Value *basev, ctrlinfo *ci){$/;"	f	class:CtrlIdentifier
currentLightNodePage	lib/CUDD/cuddSubsetHB.c	/^static	int		*currentLightNodePage; \/* pointer to the$/;"	v	file:
currentMintermPage	lib/CUDD/cuddSubsetHB.c	/^static	double		*currentMintermPage; \/* pointer to the current$/;"	v	file:
currentNodeDataPage	lib/CUDD/cuddSubsetHB.c	/^static	NodeData_t	*currentNodeDataPage; \/* pointer to the current$/;"	v	file:
currentNodeDistPage	lib/CUDD/cuddSubsetSP.c	/^    struct NodeDist *currentNodeDistPage; \/* current page *\/$/;"	m	struct:GlobalInfo	typeref:struct:GlobalInfo::NodeDist	file:
currentNodePage	lib/CUDD/cuddSubsetHB.c	/^static	int		*currentNodePage; \/* pointer to the current$/;"	v	file:
currentQueuePage	lib/CUDD/cuddSubsetSP.c	/^    DdNode      **currentQueuePage; \/* current page *\/$/;"	m	struct:GlobalInfo	file:
curs	include/DisPatch/CtrlIdentifier.h	/^        set <const Value *> curs;$/;"	m	struct:CtrlIdentifier::_ctrlinfo
cxt	include/Util/CxtStmt.h	/^    CallStrCxt cxt;$/;"	m	class:CxtProc
cxt	include/Util/CxtStmt.h	/^    CallStrCxt cxt;$/;"	m	class:CxtStmt
cxt	include/Util/CxtStmt.h	/^    CallStrCxt cxt;$/;"	m	class:CxtThread
cxtSize	include/Util/DPItem.h	/^    inline u32_t cxtSize() const {$/;"	f	class:ContextCond
cxtToStr	include/Util/CxtStmt.h	/^    inline std::string cxtToStr() const {$/;"	f	class:CxtProc
cxtToStr	include/Util/CxtStmt.h	/^    inline std::string cxtToStr() const {$/;"	f	class:CxtStmt
cxtToStr	include/Util/CxtStmt.h	/^    inline std::string cxtToStr() const {$/;"	f	class:CxtThread
cxts	include/Util/SVFModule.h	/^    LLVMContext *cxts;$/;"	m	class:LLVMModuleSet
d	include/DisPatch/InitPIDObj.h	/^            string d;$/;"	m	class:InitPIDObj::CtrlInfo
data	include/CUDD/cuddInt.h	/^    DdNode *data;		\/* already constructed DD *\/$/;"	m	struct:DdCache
data	include/Util/WorkList.h	/^        Data data;$/;"	m	class:List::ListNode
data_list	include/Util/WorkList.h	/^    DataDeque data_list;	\/\/\/< work list using std::vector.$/;"	m	class:FIFOWorkList
data_list	include/Util/WorkList.h	/^    DataVector data_list;	\/\/\/< work list using std::vector.$/;"	m	class:FILOWorkList
data_set	include/Util/WorkList.h	/^    DataSet data_set;	\/\/\/< store all data in the work list.$/;"	m	class:FIFOWorkList
data_set	include/Util/WorkList.h	/^    DataSet data_set;	\/\/\/< store all data in the work list.$/;"	m	class:FILOWorkList
dd	include/CUDD/dddmpInt.h	/^  char *dd;$/;"	m	struct:Dddmp_Hdr_s
ddAbs	include/CUDD/cuddInt.h	799;"	d
ddBddMaximallyExpand	lib/CUDD/cuddSat.c	/^ddBddMaximallyExpand($/;"	f	file:
ddBddShortestPathUnate	lib/CUDD/cuddSat.c	/^ddBddShortestPathUnate($/;"	f	file:
ddBddToAddRecur	lib/CUDD/cuddBridge.c	/^ddBddToAddRecur($/;"	f	file:
ddCHash	include/CUDD/cuddInt.h	713;"	d
ddCHash	include/CUDD/cuddInt.h	718;"	d
ddCHash2	include/CUDD/cuddInt.h	737;"	d
ddCHash2	include/CUDD/cuddInt.h	741;"	d
ddCheckPermuation	lib/CUDD/cuddReorder.c	/^ddCheckPermuation($/;"	f	file:
ddClearFlag	lib/CUDD/cuddUtil.c	/^ddClearFlag($/;"	f	file:
ddClearFlag	lib/Util/Conditions.cpp	/^void BddCondManager::ddClearFlag(DdNode * f) const {$/;"	f	class:BddCondManager
ddClearGlobal	lib/CUDD/cuddExact.c	/^ddClearGlobal($/;"	f	file:
ddClearGlobal	lib/CUDD/cuddInteract.c	/^ddClearGlobal($/;"	f	file:
ddClearLocal	lib/CUDD/cuddInteract.c	/^ddClearLocal($/;"	f	file:
ddClearVars	lib/CUDD/cuddUtil.c	/^ddClearVars($/;"	f	file:
ddCofMintermAux	lib/CUDD/cuddSign.c	/^ddCofMintermAux($/;"	f	file:
ddCountInternalMtrNodes	lib/CUDD/cuddGroup.c	/^ddCountInternalMtrNodes($/;"	f	file:
ddCountMintermAux	lib/CUDD/cuddUtil.c	/^ddCountMintermAux($/;"	f	file:
ddCountPathAux	lib/CUDD/cuddUtil.c	/^ddCountPathAux($/;"	f	file:
ddCountPathsToNonZero	lib/CUDD/cuddUtil.c	/^ddCountPathsToNonZero($/;"	f	file:
ddCountRoots	lib/CUDD/cuddExact.c	/^ddCountRoots($/;"	f	file:
ddCreateGroup	lib/CUDD/cuddGroup.c	/^ddCreateGroup($/;"	f	file:
ddDagInt	lib/CUDD/cuddUtil.c	/^ddDagInt($/;"	f	file:
ddDissolveGroup	lib/CUDD/cuddGroup.c	/^ddDissolveGroup($/;"	f	file:
ddDoDumpBlif	lib/CUDD/cuddExport.c	/^ddDoDumpBlif($/;"	f	file:
ddDoDumpDDcal	lib/CUDD/cuddExport.c	/^ddDoDumpDDcal($/;"	f	file:
ddDoDumpDaVinci	lib/CUDD/cuddExport.c	/^ddDoDumpDaVinci($/;"	f	file:
ddDoDumpFactoredForm	lib/CUDD/cuddExport.c	/^ddDoDumpFactoredForm($/;"	f	file:
ddEpdCountMintermAux	lib/CUDD/cuddUtil.c	/^ddEpdCountMintermAux($/;"	f	file:
ddEpdFree	lib/CUDD/cuddUtil.c	/^ddEpdFree($/;"	f	file:
ddEqualVal	include/CUDD/cuddInt.h	814;"	d
ddExchange	lib/CUDD/cuddAnneal.c	/^ddExchange($/;"	f	file:
ddExtSymmCheck	lib/CUDD/cuddGroup.c	/^ddExtSymmCheck($/;"	f	file:
ddFindEssentialRecur	lib/CUDD/cuddEssent.c	/^ddFindEssentialRecur($/;"	f	file:
ddFindNodeHiLo	lib/CUDD/cuddGroup.c	/^ddFindNodeHiLo($/;"	f	file:
ddFindSupport	lib/CUDD/cuddUtil.c	/^ddFindSupport($/;"	f	file:
ddFindTwoLiteralClausesRecur	lib/CUDD/cuddEssent.c	/^ddFindTwoLiteralClausesRecur($/;"	f	file:
ddFixLimits	lib/CUDD/cuddTable.c	/^ddFixLimits($/;"	f	file:
ddGetLargestCubeUnate	lib/CUDD/cuddSat.c	/^ddGetLargestCubeUnate($/;"	f	file:
ddGroupMove	lib/CUDD/cuddGroup.c	/^ddGroupMove($/;"	f	file:
ddGroupMoveBackward	lib/CUDD/cuddGroup.c	/^ddGroupMoveBackward($/;"	f	file:
ddGroupSifting	lib/CUDD/cuddGroup.c	/^ddGroupSifting($/;"	f	file:
ddGroupSiftingAux	lib/CUDD/cuddGroup.c	/^ddGroupSiftingAux($/;"	f	file:
ddGroupSiftingBackward	lib/CUDD/cuddGroup.c	/^ddGroupSiftingBackward($/;"	f	file:
ddGroupSiftingDown	lib/CUDD/cuddGroup.c	/^ddGroupSiftingDown($/;"	f	file:
ddGroupSiftingUp	lib/CUDD/cuddGroup.c	/^ddGroupSiftingUp($/;"	f	file:
ddHash	include/CUDD/cuddInt.h	692;"	d
ddHash	include/CUDD/cuddInt.h	696;"	d
ddIsIthAddVar	lib/CUDD/cuddCompose.c	/^ddIsIthAddVar($/;"	f	file:
ddIsIthAddVarPair	lib/CUDD/cuddCompose.c	/^ddIsIthAddVarPair($/;"	f	file:
ddIsVarHandled	lib/CUDD/cuddGroup.c	/^ddIsVarHandled($/;"	f	file:
ddJumpingAux	lib/CUDD/cuddAnneal.c	/^ddJumpingAux($/;"	f	file:
ddJumpingDown	lib/CUDD/cuddAnneal.c	/^ddJumpingDown($/;"	f	file:
ddJumpingUp	lib/CUDD/cuddAnneal.c	/^ddJumpingUp($/;"	f	file:
ddLCHash	lib/CUDD/cuddLCache.c	/^ddLCHash($/;"	f	file:
ddLCHash1	lib/CUDD/cuddLCache.c	121;"	d	file:
ddLCHash1	lib/CUDD/cuddLCache.c	124;"	d	file:
ddLCHash2	lib/CUDD/cuddLCache.c	141;"	d	file:
ddLCHash2	lib/CUDD/cuddLCache.c	145;"	d	file:
ddLCHash3	lib/CUDD/cuddLCache.c	161;"	d	file:
ddLeavesInt	lib/CUDD/cuddUtil.c	/^ddLeavesInt($/;"	f	file:
ddLinearAndSiftingAux	lib/CUDD/cuddLinear.c	/^ddLinearAndSiftingAux($/;"	f	file:
ddLinearAndSiftingBackward	lib/CUDD/cuddLinear.c	/^ddLinearAndSiftingBackward($/;"	f	file:
ddLinearAndSiftingDown	lib/CUDD/cuddLinear.c	/^ddLinearAndSiftingDown($/;"	f	file:
ddLinearAndSiftingUp	lib/CUDD/cuddLinear.c	/^ddLinearAndSiftingUp($/;"	f	file:
ddLinearUniqueCompare	lib/CUDD/cuddLinear.c	/^ddLinearUniqueCompare($/;"	f	file:
ddMax	include/CUDD/cuddInt.h	785;"	d
ddMergeGroups	lib/CUDD/cuddGroup.c	/^ddMergeGroups($/;"	f	file:
ddMin	include/CUDD/cuddInt.h	771;"	d
ddNoCheck	lib/CUDD/cuddGroup.c	/^ddNoCheck($/;"	f	file:
ddPatchTree	lib/CUDD/cuddTable.c	/^ddPatchTree($/;"	f	file:
ddPermuteWindow3	lib/CUDD/cuddWindow.c	/^ddPermuteWindow3($/;"	f	file:
ddPermuteWindow4	lib/CUDD/cuddWindow.c	/^ddPermuteWindow4($/;"	f	file:
ddPickArbitraryMinterms	lib/CUDD/cuddUtil.c	/^ddPickArbitraryMinterms($/;"	f	file:
ddPickRepresentativeCube	lib/CUDD/cuddUtil.c	/^ddPickRepresentativeCube($/;"	f	file:
ddPrintMintermAux	lib/CUDD/cuddUtil.c	/^ddPrintMintermAux($/;"	f	file:
ddRehashZdd	lib/CUDD/cuddTable.c	/^ddRehashZdd($/;"	f	file:
ddReorderChildren	lib/CUDD/cuddGroup.c	/^ddReorderChildren($/;"	f	file:
ddReorderPostprocess	lib/CUDD/cuddReorder.c	/^ddReorderPostprocess($/;"	f	file:
ddReorderPreprocess	lib/CUDD/cuddReorder.c	/^ddReorderPreprocess($/;"	f	file:
ddReportRefMess	lib/CUDD/cuddTable.c	/^ddReportRefMess($/;"	f	file:
ddResetVarHandled	lib/CUDD/cuddGroup.c	/^ddResetVarHandled($/;"	f	file:
ddResizeTable	lib/CUDD/cuddTable.c	/^ddResizeTable($/;"	f	file:
ddSecDiffCheck	lib/CUDD/cuddGroup.c	/^ddSecDiffCheck($/;"	f	file:
ddSetVarHandled	lib/CUDD/cuddGroup.c	/^ddSetVarHandled($/;"	f	file:
ddShuffle	lib/CUDD/cuddExact.c	/^ddShuffle($/;"	f	file:
ddShuffle	lib/CUDD/cuddReorder.c	/^ddShuffle($/;"	f	file:
ddSiftUp	lib/CUDD/cuddExact.c	/^ddSiftUp($/;"	f	file:
ddSiftUp	lib/CUDD/cuddReorder.c	/^ddSiftUp($/;"	f	file:
ddSiftingAux	lib/CUDD/cuddReorder.c	/^ddSiftingAux($/;"	f	file:
ddSiftingBackward	lib/CUDD/cuddReorder.c	/^ddSiftingBackward($/;"	f	file:
ddSiftingDown	lib/CUDD/cuddReorder.c	/^ddSiftingDown($/;"	f	file:
ddSiftingUp	lib/CUDD/cuddReorder.c	/^ddSiftingUp($/;"	f	file:
ddSuppInteract	lib/CUDD/cuddInteract.c	/^ddSuppInteract($/;"	f	file:
ddSupportStep	lib/CUDD/cuddUtil.c	/^ddSupportStep($/;"	f	file:
ddSwapAny	lib/CUDD/cuddReorder.c	/^ddSwapAny($/;"	f	file:
ddSymmGroupMove	lib/CUDD/cuddSymmetry.c	/^ddSymmGroupMove($/;"	f	file:
ddSymmGroupMoveBackward	lib/CUDD/cuddSymmetry.c	/^ddSymmGroupMoveBackward($/;"	f	file:
ddSymmSiftingAux	lib/CUDD/cuddSymmetry.c	/^ddSymmSiftingAux($/;"	f	file:
ddSymmSiftingBackward	lib/CUDD/cuddSymmetry.c	/^ddSymmSiftingBackward($/;"	f	file:
ddSymmSiftingConvAux	lib/CUDD/cuddSymmetry.c	/^ddSymmSiftingConvAux($/;"	f	file:
ddSymmSiftingDown	lib/CUDD/cuddSymmetry.c	/^ddSymmSiftingDown($/;"	f	file:
ddSymmSiftingUp	lib/CUDD/cuddSymmetry.c	/^ddSymmSiftingUp($/;"	f	file:
ddSymmSummary	lib/CUDD/cuddSymmetry.c	/^ddSymmSummary($/;"	f	file:
ddSymmUniqueCompare	lib/CUDD/cuddSymmetry.c	/^ddSymmUniqueCompare($/;"	f	file:
ddTotalNISwaps	lib/CUDD/cuddReorder.c	/^int	ddTotalNISwaps;$/;"	v
ddTotalNumberLinearTr	lib/CUDD/cuddLinear.c	/^static	int	ddTotalNumberLinearTr;$/;"	v	file:
ddTotalNumberSwapping	lib/CUDD/cuddReorder.c	/^int	ddTotalNumberSwapping;$/;"	v
ddTotalShuffles	lib/CUDD/cuddExact.c	/^static int ddTotalShuffles;$/;"	v	file:
ddTreeSiftingAux	lib/CUDD/cuddGroup.c	/^ddTreeSiftingAux($/;"	f	file:
ddType	include/CUDD/dddmpInt.h	/^  Dddmp_DecompType ddType;$/;"	m	struct:Dddmp_Hdr_s
ddUndoMoves	lib/CUDD/cuddLinear.c	/^ddUndoMoves($/;"	f	file:
ddUniqueCompare	lib/CUDD/cuddReorder.c	/^ddUniqueCompare($/;"	f	file:
ddUniqueCompareGroup	lib/CUDD/cuddGroup.c	/^ddUniqueCompareGroup($/;"	f	file:
ddUpdateInteract	lib/CUDD/cuddInteract.c	/^ddUpdateInteract($/;"	f	file:
ddUpdateMtrTree	lib/CUDD/cuddReorder.c	/^ddUpdateMtrTree($/;"	f	file:
ddVarGroupCheck	lib/CUDD/cuddGroup.c	/^ddVarGroupCheck($/;"	f	file:
ddWindow2	lib/CUDD/cuddWindow.c	/^ddWindow2($/;"	f	file:
ddWindow3	lib/CUDD/cuddWindow.c	/^ddWindow3($/;"	f	file:
ddWindow4	lib/CUDD/cuddWindow.c	/^ddWindow4($/;"	f	file:
ddWindowConv2	lib/CUDD/cuddWindow.c	/^ddWindowConv2($/;"	f	file:
ddWindowConv3	lib/CUDD/cuddWindow.c	/^ddWindowConv3($/;"	f	file:
ddWindowConv4	lib/CUDD/cuddWindow.c	/^ddWindowConv4($/;"	f	file:
dead	include/CUDD/cuddInt.h	/^    unsigned int dead;		\/* number of dead nodes in this table *\/$/;"	m	struct:DdSubtable
dead	include/CUDD/cuddInt.h	/^    unsigned int dead;		\/* total number of dead BDD and ADD nodes *\/$/;"	m	struct:DdManager
deadMask	include/CUDD/cuddInt.h	/^    unsigned deadMask;		\/* mask for circular index update *\/$/;"	m	struct:DdManager
deadZ	include/CUDD/cuddInt.h	/^    unsigned int deadZ;		\/* total number of dead ZDD nodes *\/$/;"	m	struct:DdManager
deathRow	include/CUDD/cuddInt.h	/^    DdNode **deathRow;		\/* queue for dereferencing *\/$/;"	m	struct:DdManager
deathRowDepth	include/CUDD/cuddInt.h	/^    int deathRowDepth;		\/* number of slots in the queue *\/$/;"	m	struct:DdManager
debugFindParent	lib/CUDD/cuddCheck.c	/^debugFindParent($/;"	f	file:
debug_asmprint	lib/DisPatch/DisPatch.cpp	/^void DisPatch::debug_asmprint(){$/;"	f	class:DisPatch
debug_instprint	lib/DisPatch/DisPatch.cpp	/^void DisPatch::debug_instprint(string fn) {$/;"	f	class:DisPatch
def	include/MSSA/MSSAMuChi.h	/^    MSSADef* def;$/;"	m	class:MRVer
defNodes	include/MSSA/SVFGOPT.h	/^    NodeBS defNodes;	\/\/\/< preserved def nodes of formal-in\/actual-out$/;"	m	class:SVFGOPT
demangle	lib/Util/CPPUtil.cpp	/^struct cppUtil::DemangledName cppUtil::demangle(const string name) {$/;"	f	class:cppUtil
destroy	include/MemoryModel/GenericGraph.h	/^    void destroy() {$/;"	f	class:GenericGraph
destroy	include/MemoryModel/PointerAnalysis.h	/^    inline void destroy() {$/;"	f	class:BVDataPTAImpl
destroy	include/MemoryModel/PointerAnalysis.h	/^    inline void destroy() {$/;"	f	class:CondPTAImpl
destroy	lib/MSSA/MemRegion.cpp	/^void MRGenerator::destroy() {$/;"	f	class:MRGenerator
destroy	lib/MSSA/MemSSA.cpp	/^void MemSSA::destroy() {$/;"	f	class:MemSSA
destroy	lib/MSSA/SVFG.cpp	/^void SVFG::destroy() {$/;"	f	class:SVFG
destroy	lib/MemoryModel/ConsG.cpp	/^void ConstraintGraph::destroy() {$/;"	f	class:ConstraintGraph
destroy	lib/MemoryModel/MemModel.cpp	/^void MemObj::destroy() {$/;"	f	class:MemObj
destroy	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::destroy() {$/;"	f	class:SymbolTableInfo
destroy	lib/MemoryModel/PAG.cpp	/^void PAG::destroy() {$/;"	f	class:PAG
destroy	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::destroy()$/;"	f	class:PointerAnalysis
destroy	lib/Util/ICFG.cpp	/^void ICFG::destroy() {$/;"	f	class:ICFG
destroy	lib/Util/PTACallGraph.cpp	/^void PTACallGraph::destroy() {$/;"	f	class:PTACallGraph
destroy	lib/Util/PathCondAllocator.cpp	/^void PathCondAllocator::destroy() {$/;"	f	class:PathCondAllocator
destroy	lib/Util/VFG.cpp	/^void VFG::destroy() {$/;"	f	class:VFG
df	include/MSSA/MemSSA.h	/^    DominanceFrontier* df;$/;"	m	class:MemSSA
dfInPtsMap	include/MemoryModel/PointsToDFDS.h	/^    DFPtsMap dfInPtsMap;	\/\/\/< Data-flow IN set$/;"	m	class:DFPTData
dfOutPtsMap	include/MemoryModel/PointsToDFDS.h	/^    DFPtsMap dfOutPtsMap;	\/\/\/< Data-flow OUT set$/;"	m	class:DFPTData
diffOpt	include/WPA/Andersen.h	/^    bool diffOpt;$/;"	m	class:Andersen
diffPtsMap	include/MemoryModel/PointsToDS.h	/^    PtsMap diffPtsMap;	\/\/\/< diff points-to to be propagated$/;"	m	class:DiffPTData
diffWave	include/WPA/Andersen.h	/^    static AndersenWaveDiff* diffWave; \/\/ static instance$/;"	m	class:AndersenWaveDiff
diffWaveWithType	include/WPA/Andersen.h	/^    static AndersenWaveDiffWithType* diffWaveWithType; \/\/ static instance$/;"	m	class:AndersenWaveDiffWithType
dirVFEdgeEnd	include/MSSA/SVFGStat.h	/^    void dirVFEdgeEnd() {$/;"	f	class:SVFGStat
dirVFEdgeStart	include/MSSA/SVFGStat.h	/^    void dirVFEdgeStart() {$/;"	f	class:SVFGStat
directCalls	include/Util/PTACallGraph.h	/^    CallInstSet directCalls;$/;"	m	class:PTACallGraphEdge
directCallsBegin	include/Util/PTACallGraph.h	/^    inline CallInstSet::iterator directCallsBegin() const {$/;"	f	class:PTACallGraphEdge
directCallsEnd	include/Util/PTACallGraph.h	/^    inline CallInstSet::iterator directCallsEnd() const {$/;"	f	class:PTACallGraphEdge
directEdgeSet	include/MemoryModel/ConsG.h	/^    ConstraintEdge::ConstraintEdgeSetTy directEdgeSet;$/;"	m	class:ConstraintGraph
directInEdgeBegin	include/MemoryModel/ConsGNode.h	/^    inline const_iterator directInEdgeBegin() const {$/;"	f	class:ConstraintNode
directInEdgeBegin	include/MemoryModel/ConsGNode.h	/^    inline iterator directInEdgeBegin() {$/;"	f	class:ConstraintNode
directInEdgeBegin	include/MemoryModel/GenericGraph.h	/^    virtual inline const_iterator directInEdgeBegin() const {$/;"	f	class:GenericNode
directInEdgeBegin	include/MemoryModel/GenericGraph.h	/^    virtual inline iterator directInEdgeBegin() {$/;"	f	class:GenericNode
directInEdgeEnd	include/MemoryModel/ConsGNode.h	/^    inline const_iterator directInEdgeEnd() const {$/;"	f	class:ConstraintNode
directInEdgeEnd	include/MemoryModel/ConsGNode.h	/^    inline iterator directInEdgeEnd() {$/;"	f	class:ConstraintNode
directInEdgeEnd	include/MemoryModel/GenericGraph.h	/^    virtual inline const_iterator directInEdgeEnd() const {$/;"	f	class:GenericNode
directInEdgeEnd	include/MemoryModel/GenericGraph.h	/^    virtual inline iterator directInEdgeEnd() {$/;"	f	class:GenericNode
directInEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy directInEdges;$/;"	m	class:ConstraintNode
directOutEdgeBegin	include/MemoryModel/ConsGNode.h	/^    inline const_iterator directOutEdgeBegin() const {$/;"	f	class:ConstraintNode
directOutEdgeBegin	include/MemoryModel/ConsGNode.h	/^    inline iterator directOutEdgeBegin() {$/;"	f	class:ConstraintNode
directOutEdgeBegin	include/MemoryModel/GenericGraph.h	/^    virtual inline const_iterator directOutEdgeBegin() const {$/;"	f	class:GenericNode
directOutEdgeBegin	include/MemoryModel/GenericGraph.h	/^    virtual inline iterator directOutEdgeBegin() {$/;"	f	class:GenericNode
directOutEdgeEnd	include/MemoryModel/ConsGNode.h	/^    inline const_iterator directOutEdgeEnd() const {$/;"	f	class:ConstraintNode
directOutEdgeEnd	include/MemoryModel/ConsGNode.h	/^    inline iterator directOutEdgeEnd() {$/;"	f	class:ConstraintNode
directOutEdgeEnd	include/MemoryModel/GenericGraph.h	/^    virtual inline const_iterator directOutEdgeEnd() const {$/;"	f	class:GenericNode
directOutEdgeEnd	include/MemoryModel/GenericGraph.h	/^    virtual inline iterator directOutEdgeEnd() {$/;"	f	class:GenericNode
directOutEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy directOutEdges;$/;"	m	class:ConstraintNode
directPropaTime	include/WPA/FlowSensitive.h	/^    double directPropaTime;	\/\/\/< time of points-to propagation of address-taken objects$/;"	m	class:FlowSensitive
direct_child_begin	include/MemoryModel/GenericGraph.h	/^    static inline ChildIteratorType direct_child_begin(const NodeType *N) {$/;"	f	struct:llvm::GraphTraits
direct_child_end	include/MemoryModel/GenericGraph.h	/^    static inline ChildIteratorType direct_child_end(const NodeType *N) {$/;"	f	struct:llvm::GraphTraits
disFunc	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::disFunc(uint64_t addr, uint64_t sz, string mode){$/;"	f	class:InterProcAnal
disPrint	include/DisPatch/InterProcAnal.h	/^    inline void disPrint(cs_insn &insn){$/;"	f	class:InterProcAnal
disablePrintStat	include/MemoryModel/PointerAnalysis.h	/^    inline void disablePrintStat() {$/;"	f	class:PointerAnalysis
distance	lib/CUDD/cuddDecomp.c	/^    int distance;$/;"	m	struct:NodeStat	file:
dl	include/MemoryModel/MemModel.h	/^    static DataLayout *dl;$/;"	m	class:SymbolTableInfo
do_hash	lib/CUDD/st.c	63;"	d	file:
doit	include/Util/Casting.h	/^  static bool doit(const From &Val) {$/;"	f	struct:SVFUtil::isa_impl_wrap
doit	include/Util/Casting.h	/^  static bool doit(const FromTy &Val) {$/;"	f	struct:SVFUtil::isa_impl_wrap
doit	include/Util/Casting.h	/^  static inline bool doit(const From &) { return true; }$/;"	f	struct:SVFUtil::isa_impl
doit	include/Util/Casting.h	/^  static inline bool doit(const From &Val) {$/;"	f	struct:SVFUtil::isa_impl
doit	include/Util/Casting.h	/^  static inline bool doit(const From &Val) {$/;"	f	struct:SVFUtil::isa_impl_cl
doit	include/Util/Casting.h	/^  static inline bool doit(const From *Val) {$/;"	f	struct:SVFUtil::isa_impl_cl
doit	include/Util/Casting.h	/^  static inline bool doit(const std::unique_ptr<From> &Val) {$/;"	f	struct:SVFUtil::isa_impl_cl
doit	include/Util/Casting.h	/^  static typename cast_retty<To, From>::ret_type doit(From &Val) {$/;"	f	struct:SVFUtil::cast_convert_val
doit	include/Util/Casting.h	/^  static typename cast_retty<To, FromTy>::ret_type doit(const FromTy &Val) {$/;"	f	struct:SVFUtil::cast_convert_val
dp2	lib/CUDD/cuddUtil.c	/^dp2($/;"	f	file:
dst	include/MemoryModel/GenericGraph.h	/^    NodeTy* dst;		\/\/\/< destination node$/;"	m	class:GenericEdge
dt	include/MSSA/MemSSA.h	/^    DominatorTree* dt;$/;"	m	class:MemSSA
dump	include/MSSA/MSSAMuChi.h	/^    virtual void dump() {$/;"	f	class:CallCHI
dump	include/MSSA/MSSAMuChi.h	/^    virtual void dump() {$/;"	f	class:CallMU
dump	include/MSSA/MSSAMuChi.h	/^    virtual void dump() {$/;"	f	class:EntryCHI
dump	include/MSSA/MSSAMuChi.h	/^    virtual void dump() {$/;"	f	class:LoadMU
dump	include/MSSA/MSSAMuChi.h	/^    virtual void dump() {$/;"	f	class:MSSACHI
dump	include/MSSA/MSSAMuChi.h	/^    virtual void dump() {$/;"	f	class:MSSADEF
dump	include/MSSA/MSSAMuChi.h	/^    virtual void dump() {$/;"	f	class:MSSAMU
dump	include/MSSA/MSSAMuChi.h	/^    virtual void dump() {$/;"	f	class:MSSAPHI
dump	include/MSSA/MSSAMuChi.h	/^    virtual void dump() {$/;"	f	class:RetMU
dump	include/MSSA/MSSAMuChi.h	/^    virtual void dump() {$/;"	f	class:StoreCHI
dump	include/MemoryModel/ConditionalPT.h	/^    inline void dump(raw_ostream & O) const {$/;"	f	class:CondPointsToSet
dump	include/MemoryModel/LocationSet.h	/^    void dump() const {$/;"	f	class:LocationSet
dump	include/MemoryModel/PTAType.h	/^    inline void dump() const {$/;"	f	class:PTAType
dump	include/Util/CxtStmt.h	/^    inline void dump() const {$/;"	f	class:CxtProc
dump	include/Util/CxtStmt.h	/^    inline void dump() const {$/;"	f	class:CxtStmt
dump	include/Util/CxtStmt.h	/^    inline void dump() const {$/;"	f	class:CxtThread
dump	include/Util/CxtStmt.h	/^    inline void dump() const {$/;"	f	class:CxtThreadProc
dump	include/Util/CxtStmt.h	/^    inline void dump() const {$/;"	f	class:CxtThreadStmt
dump	include/Util/DPItem.h	/^    inline void dump() const {$/;"	f	class:CxtStmtDPItem
dump	include/Util/DPItem.h	/^    inline void dump() const {$/;"	f	class:DPItem
dump	include/Util/DPItem.h	/^    inline void dump() const {$/;"	f	class:PathStmtDPItem
dump	include/Util/DPItem.h	/^    inline void dump() const {$/;"	f	class:StmtDPItem
dump	lib/MSSA/SVFG.cpp	/^void SVFG::dump(const std::string& file, bool simple) {$/;"	f	class:SVFG
dump	lib/MemoryModel/CHA.cpp	/^void CHGraph::dump(const std::string& filename) {$/;"	f	class:CHGraph
dump	lib/MemoryModel/ConsG.cpp	/^void ConstraintGraph::dump(std::string name) {$/;"	f	class:ConstraintGraph
dump	lib/MemoryModel/OfflineConsG.cpp	/^void OfflineConsG::dump(std::string name) {$/;"	f	class:OfflineConsG
dump	lib/MemoryModel/PAG.cpp	/^void PAG::dump(std::string name) {$/;"	f	class:PAG
dump	lib/Util/Conditions.cpp	/^void BddCondManager::dump(DdNode* lhs, raw_ostream & O) {$/;"	f	class:BddCondManager
dump	lib/Util/ICFG.cpp	/^void ICFG::dump(const std::string& file, bool simple) {$/;"	f	class:ICFG
dump	lib/Util/PTACallGraph.cpp	/^void PTACallGraph::dump(const std::string& filename) {$/;"	f	class:PTACallGraph
dump	lib/Util/VFG.cpp	/^void VFG::dump(const std::string& file, bool simple) {$/;"	f	class:VFG
dumpAliasSet	lib/Util/SVFUtil.cpp	/^void SVFUtil::dumpAliasSet(unsigned node, NodeBS bs) {$/;"	f	class:SVFUtil
dumpAllPts	include/MemoryModel/PointerAnalysis.h	/^    virtual void dumpAllPts() {}$/;"	f	class:PointerAnalysis
dumpAllPts	lib/MemoryModel/PointerAnalysis.cpp	/^void BVDataPTAImpl::dumpAllPts() {$/;"	f	class:BVDataPTAImpl
dumpAllTypes	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::dumpAllTypes()$/;"	f	class:PointerAnalysis
dumpCHAStats	lib/WPA/TypeAnalysis.cpp	/^void TypeAnalysis::dumpCHAStats() {$/;"	f	class:TypeAnalysis
dumpCPts	include/MemoryModel/PointerAnalysis.h	/^    virtual void dumpCPts() {$/;"	f	class:BVDataPTAImpl
dumpCPts	include/MemoryModel/PointerAnalysis.h	/^    virtual void dumpCPts() {$/;"	f	class:CondPTAImpl
dumpCPts	include/MemoryModel/PointerAnalysis.h	/^    virtual void dumpCPts() {}$/;"	f	class:PointerAnalysis
dumpCond	include/Util/PathCondAllocator.h	/^    inline std::string dumpCond(Condition* cond) const {$/;"	f	class:PathCondAllocator
dumpFunctions	lib/MemoryModel/ExternalPAG.cpp	/^void ExternalPAG::dumpFunctions(std::vector<std::string> functions) {$/;"	f	class:ExternalPAG
dumpGraph	lib/MemoryModel/PointerAnalysis.cpp	/^bool PointerAnalysis::dumpGraph() {$/;"	f	class:PointerAnalysis
dumpMSSA	lib/MSSA/MemSSA.cpp	/^void MemSSA::dumpMSSA(raw_ostream& Out) {$/;"	f	class:MemSSA
dumpModulesToFile	include/Util/SVFModule.h	/^    void dumpModulesToFile(const std::string suffix) const {$/;"	f	class:SVFModule
dumpModulesToFile	lib/Util/SVFModule.cpp	/^void LLVMModuleSet::dumpModulesToFile(const std::string suffix) {$/;"	f	class:LLVMModuleSet
dumpPTData	include/MemoryModel/PointsToDFDS.h	/^    virtual inline void dumpPTData() {$/;"	f	class:DFPTData
dumpPTData	include/MemoryModel/PointsToDS.h	/^    virtual inline void dumpPTData() {$/;"	f	class:PTData
dumpPointsToSet	lib/Util/SVFUtil.cpp	/^void SVFUtil::dumpPointsToSet(unsigned node, NodeBS bs) {$/;"	f	class:SVFUtil
dumpPts	include/MemoryModel/PointsToDFDS.h	/^    virtual inline void dumpPts(const PtsMap & ptsSet,raw_ostream & O = SVFUtil::outs()) const {$/;"	f	class:DFPTData
dumpPts	include/MemoryModel/PointsToDS.h	/^    virtual inline void dumpPts(const PtsMap & ptsSet,raw_ostream & O = SVFUtil::outs()) const {$/;"	f	class:PTData
dumpPts	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::dumpPts(NodeID ptr, const PointsTo& pts) {$/;"	f	class:PointerAnalysis
dumpSet	lib/Util/SVFUtil.cpp	/^void SVFUtil::dumpSet(NodeBS bs, raw_ostream & O) {$/;"	f	class:SVFUtil
dumpStat	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::dumpStat() {$/;"	f	class:PointerAnalysis
dumpStr	include/MSSA/MemRegion.h	/^    inline std::string dumpStr() const {$/;"	f	class:MemRegion
dumpStr	include/MemoryModel/ConditionalPT.h	/^    inline std::string dumpStr() const {$/;"	f	class:CondPointsToSet
dumpStr	lib/Util/Conditions.cpp	/^std::string BddCondManager::dumpStr(DdNode* lhs) const {$/;"	f	class:BddCondManager
dumpTopLevelPtsTo	include/MemoryModel/PointerAnalysis.h	/^    virtual void dumpTopLevelPtsTo() {}$/;"	f	class:PointerAnalysis
dumpTopLevelPtsTo	include/MemoryModel/PointerAnalysis.h	/^    void dumpTopLevelPtsTo() {$/;"	f	class:CondPTAImpl
dumpTopLevelPtsTo	lib/MemoryModel/PointerAnalysis.cpp	/^void BVDataPTAImpl::dumpTopLevelPtsTo() {$/;"	f	class:BVDataPTAImpl
dumpTopLevelPtsTo	lib/WPA/Andersen.cpp	/^void Andersen::dumpTopLevelPtsTo() {$/;"	f	class:Andersen
dumpTypes	include/MemoryModel/PTAType.h	/^    inline void dumpTypes() const {$/;"	f	class:TypeSet
dyn_cast	include/Util/Casting.h	/^    dyn_cast(const Y &Val) {$/;"	f	namespace:SVFUtil
dyn_cast	include/Util/Casting.h	/^LLVM_NODISCARD inline typename cast_retty<X, Y *>::ret_type dyn_cast(Y *Val) {$/;"	f	namespace:SVFUtil
dyn_cast	include/Util/Casting.h	/^LLVM_NODISCARD inline typename cast_retty<X, Y>::ret_type dyn_cast(Y &Val) {$/;"	f	namespace:SVFUtil
edata	lib/CUDD/cpu_stats.c	13;"	d	file:
edgeDereference	include/MemoryModel/GenericGraph.h	/^    static NodeType* edgeDereference(EdgeType* edge) {$/;"	f	struct:llvm::GraphTraits
edgeDereference	include/MemoryModel/GenericGraph.h	/^    static inline NodeType* edgeDereference(EdgeType* edge) {$/;"	f	struct:llvm::GraphTraits
edgeFlag	include/MemoryModel/GenericGraph.h	/^    GEdgeFlag edgeFlag;	\/\/\/< edge kind$/;"	m	class:GenericEdge
edgeId	include/MemoryModel/ConsGEdge.h	/^    EdgeID edgeId;$/;"	m	class:ConstraintEdge
edgeId	include/MemoryModel/PAGEdge.h	/^    EdgeID edgeId;					\/\/\/< Edge ID$/;"	m	class:PAGEdge
edgeIndex	include/MemoryModel/ConsG.h	/^    EdgeID edgeIndex;$/;"	m	class:ConstraintGraph
edgeNum	include/MemoryModel/GenericGraph.h	/^    u32_t edgeNum;		\/\/\/< total num of node$/;"	m	class:GenericGraph
edgeType	include/MemoryModel/CHA.h	/^    CHEDGETYPE edgeType;$/;"	m	class:CHEdge
edges	include/MemoryModel/ExternalPAG.h	/^    std::set<std::tuple<NodeID, NodeID, std::string, int>>edges;$/;"	m	class:ExternalPAG
edges	include/Util/DPItem.h	/^    EdgeSet edges;$/;"	m	class:VFPathCond
ei_pair	lib/Util/ExtAPI.cpp	/^struct ei_pair {$/;"	s	file:
ei_pair	lib/Util/ThreadAPI.cpp	/^struct ei_pair {$/;"	s	file:
ei_pairs	lib/Util/ExtAPI.cpp	/^static const ei_pair ei_pairs[]= {$/;"	v	file:
ei_pairs	lib/Util/ThreadAPI.cpp	/^static const ei_pair ei_pairs[]= {$/;"	v	file:
elder	include/CUDD/mtr.h	/^    struct MtrNode *elder;$/;"	m	struct:MtrNode	typeref:struct:MtrNode::MtrNode
elemNumStridePair	include/MemoryModel/LocationSet.h	/^    ElemNumStridePairVec elemNumStridePair;$/;"	m	class:FieldInfo
elemStridePairBegin	include/MemoryModel/LocationSet.h	/^    inline ElemNumStridePairVec::const_iterator elemStridePairBegin() const {$/;"	f	class:FieldInfo
elemStridePairEnd	include/MemoryModel/LocationSet.h	/^    inline ElemNumStridePairVec::const_iterator elemStridePairEnd() const {$/;"	f	class:FieldInfo
elemTy	include/MemoryModel/LocationSet.h	/^    const Type* elemTy;$/;"	m	class:FieldInfo
elements	include/MemoryModel/ConditionalPT.h	/^    ElementSet elements;$/;"	m	class:CondStdSet
empty	include/MemoryModel/ConditionalPT.h	/^    inline bool empty() const {$/;"	f	class:CondPointsToSet
empty	include/MemoryModel/ConditionalPT.h	/^    inline bool empty() const {$/;"	f	class:CondStdSet
empty	include/Util/SVFModule.h	/^    bool empty() const {$/;"	f	class:SVFModule
empty	include/Util/WorkList.h	/^    inline bool empty() const {$/;"	f	class:FIFOWorkList
empty	include/Util/WorkList.h	/^    inline bool empty() const {$/;"	f	class:FILOWorkList
empty	include/Util/WorkList.h	/^    inline bool empty() const {$/;"	f	class:List
empty	lib/CUDD/cuddZddLin.c	/^static  DdNode	*empty;$/;"	v	file:
empty	lib/CUDD/cuddZddReord.c	/^static  DdNode	*empty;$/;"	v	file:
empty	lib/CUDD/cuddZddSymm.c	/^static DdNode	*empty;$/;"	v	file:
emptyClauseSet	lib/CUDD/cuddEssent.c	/^emptyClauseSet(void)$/;"	f	file:
enableDiff	include/WPA/Andersen.h	/^    const bool enableDiff() const { return diffOpt; }$/;"	f	class:Andersen
end	include/MemoryModel/ConditionalPT.h	/^    inline iterator end() const {$/;"	f	class:CondPointsToSet
end	include/MemoryModel/ConditionalPT.h	/^    inline iterator end() const {$/;"	f	class:CondStdSet
end	include/MemoryModel/ConditionalPT.h	/^    inline iterator end() {$/;"	f	class:CondPointsToSet
end	include/MemoryModel/ConditionalPT.h	/^    inline iterator end() {$/;"	f	class:CondStdSet
end	include/MemoryModel/GenericGraph.h	/^    inline const_iterator end() const {$/;"	f	class:GenericGraph
end	include/MemoryModel/GenericGraph.h	/^    inline iterator end() {$/;"	f	class:GenericGraph
end	include/MemoryModel/PTAType.h	/^    inline const_iterator end() const {$/;"	f	class:TypeSet
end	include/MemoryModel/PTAType.h	/^    inline const_iterator end() const {$/;"	f	class:TypeSystem
end	include/MemoryModel/PTAType.h	/^    inline iterator end() {$/;"	f	class:TypeSet
end	include/MemoryModel/PTAType.h	/^    inline iterator end() {$/;"	f	class:TypeSystem
end	include/Util/DPItem.h	/^    inline const_iterator end() const {$/;"	f	class:ContextCond
end	include/Util/GEPTypeBridgeIterator.h	/^    static generic_bridge_gep_type_iterator end(ItTy It) {$/;"	f	class:llvm::generic_bridge_gep_type_iterator
end	include/Util/SVFModule.h	/^    const_iterator end() const {$/;"	f	class:LLVMModuleSet
end	include/Util/SVFModule.h	/^    const_iterator end() const {$/;"	f	class:SVFModule
end	include/Util/SVFModule.h	/^    iterator end() {$/;"	f	class:LLVMModuleSet
end	include/Util/SVFModule.h	/^    iterator end() {$/;"	f	class:SVFModule
end	lib/CUDD/cpu_stats.c	14;"	d	file:
endClk	include/Util/PTAStat.h	/^    virtual inline void endClk() {$/;"	f	class:PTAStat
endTime	include/Util/PTAStat.h	/^    double endTime;$/;"	m	class:PTAStat
endaddr	include/DisPatch/BinIRWrapper.h	/^        uint64_t endaddr;$/;"	m	class:FuncInfo
entry	include/CUDD/st.h	/^    st_table_entry *entry;$/;"	m	struct:st_generator
entry	lib/CUDD/cuddGroup.c	/^static	int	*entry;$/;"	v	file:
entry	lib/CUDD/cuddLinear.c	/^static	int	*entry;$/;"	v	file:
entry	lib/CUDD/cuddReorder.c	/^static	int	*entry;$/;"	v	file:
entry	lib/CUDD/cuddSymmetry.c	/^static	int	*entry;$/;"	v	file:
entry	lib/CUDD/cuddZddGroup.c	/^static	int	*entry;$/;"	v	file:
epsilon	include/CUDD/cuddInt.h	/^    CUDD_VALUE_TYPE epsilon;	\/* tolerance on comparisons *\/$/;"	m	struct:DdManager
equalGEdge	include/MemoryModel/GenericGraph.h	/^    } equalGEdge;$/;"	t	class:GenericEdge	typeref:struct:GenericEdge::__anon1
equalMemRegion	include/MSSA/MemRegion.h	/^    } equalMemRegion;$/;"	t	class:MemRegion	typeref:struct:MemRegion::__anon24
equalPointsTo	include/MSSA/MemRegion.h	/^    } equalPointsTo;$/;"	t	class:MemRegion	typeref:struct:MemRegion::__anon25
equalp	lib/CUDD/cuddEssent.c	/^equalp($/;"	f	file:
err	include/CUDD/cuddInt.h	/^    FILE *err;			\/* stderr for this manager *\/$/;"	m	struct:DdManager
err	include/DisPatch/InitPIDObj.h	/^            string err;$/;"	m	class:InitPIDObj::CtrlInfo
err2ctrlmap	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, ctrlinfo *> ref2ctrlmap, err2ctrlmap, cur2ctrlmap, mathout2ctrlmap;$/;"	m	class:CtrlIdentifier
err2refInnerConnMap	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, const Value *> err2refInnerConnMap, ref2errInnerConnMap;$/;"	m	class:CtrlIdentifier
errMsg	lib/Util/SVFUtil.cpp	/^std::string SVFUtil::errMsg(std::string msg) {$/;"	f	class:SVFUtil
errorCode	include/CUDD/cuddInt.h	/^    Cudd_ErrorType errorCode;	\/* info on last error *\/$/;"	m	struct:DdManager
errptr2vldr	lib/DisPatch/CtrlIdentifier.cpp	/^const Value *CtrlIdentifier::errptr2vldr(const Value *v, const Value *basev, ctrlinfo *ci){$/;"	f	class:CtrlIdentifier
errs	include/DisPatch/CtrlIdentifier.h	/^        set <const Value *> errs;$/;"	m	struct:CtrlIdentifier::_ctrlinfo
errs	include/Util/SVFUtil.h	/^inline raw_ostream &errs(){$/;"	f	namespace:SVFUtil
etext	lib/CUDD/cpu_stats.c	12;"	d	file:
evalMDTag	include/Util/Annotator.h	/^    inline bool evalMDTag(const Instruction *inst, const Value *val, std::string str,$/;"	f	class:Annotator
evaluateBranchCond	lib/Util/PathCondAllocator.cpp	/^PathCondAllocator::Condition* PathCondAllocator::evaluateBranchCond(const BasicBlock * bb, const BasicBlock *succ, const Value* val) {$/;"	f	class:PathCondAllocator
evaluateLoopExitBranch	lib/Util/PathCondAllocator.cpp	/^PathCondAllocator::Condition* PathCondAllocator::evaluateLoopExitBranch(const BasicBlock * bb, const BasicBlock *dst) {$/;"	f	class:PathCondAllocator
evaluateProgExit	lib/Util/PathCondAllocator.cpp	/^PathCondAllocator::Condition* PathCondAllocator::evaluateProgExit(const BranchInst* brInst, const BasicBlock *succ) {$/;"	f	class:PathCondAllocator
evaluateTestNullLikeExpr	lib/Util/PathCondAllocator.cpp	/^PathCondAllocator::Condition* PathCondAllocator::evaluateTestNullLikeExpr(const BranchInst* brInst, const BasicBlock *succ, const Value* val) {$/;"	f	class:PathCondAllocator
evenBotDist	lib/CUDD/cuddSubsetSP.c	/^    DdHalfWord evenBotDist;$/;"	m	struct:NodeDist	file:
evenTopDist	lib/CUDD/cuddSubsetSP.c	/^    DdHalfWord evenTopDist;$/;"	m	struct:NodeDist	file:
exactCondElem	include/Util/PathCondAllocator.h	/^    inline NodeBS exactCondElem(Condition* cond) {$/;"	f	class:PathCondAllocator
exemode	include/DisPatch/BinIRWrapper.h	/^        string exemode;$/;"	m	class:FuncInfo
expandFIObjs	include/MemoryModel/PointerAnalysis.h	/^    void expandFIObjs(const CPtSet& cpts, CPtSet& expandedCpts) {$/;"	f	class:CondPTAImpl
expandFIObjs	lib/MemoryModel/PointerAnalysis.cpp	/^void BVDataPTAImpl::expandFIObjs(const PointsTo& pts, PointsTo& expandedPts) {$/;"	f	class:BVDataPTAImpl
exponent	include/CUDD/epd.h	/^  int				exponent;$/;"	m	struct:EpDoubleStruct
exponent	include/CUDD/epd.h	/^  unsigned int exponent: 11;$/;"	m	struct:IeeeDoubleStruct
exponent	include/CUDD/epd.h	/^  unsigned int exponent: 11;$/;"	m	struct:IeeeNanStruct
extAPI	include/Util/ExtAPI.h	/^    static ExtAPI* extAPI;$/;"	m	class:ExtAPI
extCallTy	include/Util/SVFUtil.h	/^inline ExtAPI::extf_t extCallTy(const Function* fun) {$/;"	f	namespace:SVFUtil
extf_t	include/Util/ExtAPI.h	/^    enum extf_t {$/;"	g	class:ExtAPI
extsymm	lib/CUDD/cuddGroup.c	/^static  int     extsymm;$/;"	v	file:
extsymm	lib/CUDD/cuddZddGroup.c	/^static  int     extsymm;$/;"	v	file:
extsymmcalls	lib/CUDD/cuddGroup.c	/^static  int     extsymmcalls;$/;"	v	file:
extsymmcalls	lib/CUDD/cuddZddGroup.c	/^static  int     extsymmcalls;$/;"	v	file:
f	include/CUDD/cuddInt.h	/^    DD_HFP f; \/* function to be called *\/$/;"	m	struct:DdHook
f	include/CUDD/cuddInt.h	/^    DdNode *f,*g;		\/* DDs *\/$/;"	m	struct:DdCache
f	lib/CUDD/cuddBddCorr.c	/^    DdNode *f;$/;"	m	struct:hashEntry	file:
f	lib/CUDD/cuddGenCof.c	/^    DdNode *f;$/;"	m	struct:MarkCacheKey	file:
fail	include/CUDD/util.h	156;"	d
falseCond	include/Util/PathCondAllocator.h	/^    static inline Condition* falseCond() {$/;"	f	class:PathCondAllocator
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
ff	include/DisPatch/InitPIDObj.h	/^            string ff;$/;"	m	class:InitPIDObj::CtrlInfo
fieldExpand	lib/WPA/AndersenSFR.cpp	/^void AndersenSFR::fieldExpand(NodeSet& initials, Size_t offset, NodeBS& strides, PointsTo& expandPts) {$/;"	f	class:AndersenSFR
fieldIdx	include/MemoryModel/PAGNode.h	/^    u32_t fieldIdx;$/;"	m	class:GepValPN
fieldReps	include/WPA/AndersenSFR.h	/^    FieldReps fieldReps;$/;"	m	class:AndersenSFR
file	include/MemoryModel/PAGBuilderFromFile.h	/^    std::string file;$/;"	m	class:PAGBuilderFromFile
filename	include/DisPatch/InterProcAnal.h	/^    string filename, arch;$/;"	m	class:InterProcAnal
filterArgReg	lib/DisPatch/InterProcAnal.cpp	/^set<uint16_t> InterProcAnal::filterArgReg(set<uint16_t> regset){$/;"	f	class:InterProcAnal
filterCascadingTransition	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::filterCascadingTransition(const Function *func, map <const Value *, string> &var2role, map <string, set<const Value*>> &role2var){$/;"	f	class:CtrlIdentifier
filterRetReg	lib/DisPatch/InterProcAnal.cpp	/^set<uint16_t> InterProcAnal::filterRetReg(set<uint16_t> regset){$/;"	f	class:InterProcAnal
finalize	include/MemoryModel/PointerAnalysis.h	/^    virtual void finalize() {$/;"	f	class:CondPTAImpl
finalize	include/WPA/Andersen.h	/^    virtual inline void finalize() {$/;"	f	class:Andersen
finalize	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::finalize() {$/;"	f	class:PointerAnalysis
finalize	lib/WPA/FlowSensitive.cpp	/^void FlowSensitive::finalize()$/;"	f	class:FlowSensitive
finalize	lib/WPA/TypeAnalysis.cpp	/^void TypeAnalysis::finalize() {$/;"	f	class:TypeAnalysis
find	include/Util/SCC.h	/^    void find(NodeSet &candidates) {$/;"	f	class:SCCDetection
find	include/Util/SCC.h	/^    void find(void) {$/;"	f	class:SCCDetection
find	include/Util/WorkList.h	/^    inline bool find(Data data) const {$/;"	f	class:FIFOWorkList
find	include/Util/WorkList.h	/^    inline bool find(Data data) const {$/;"	f	class:FILOWorkList
find	include/Util/WorkList.h	/^    inline bool find(Data data) const {$/;"	f	class:List
find	lib/WPA/CSC.cpp	/^void CSC::find(NodeStack& candidates) {$/;"	f	class:CSC
findPAGNode	include/MemoryModel/PAG.h	/^    inline bool findPAGNode(NodeID id) const {$/;"	f	class:PAG
findShortestPath	lib/CUDD/cuddSubsetSP.c	/^    int findShortestPath;$/;"	m	struct:AssortedInfo	file:
findVarsAffectingCallee	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::findVarsAffectingCallee(const Function *crfunc, const Value *dv, $/;"	f	class:CtrlIdentifier
find_average_fitness	lib/CUDD/cuddGenetic.c	/^find_average_fitness(void)$/;"	f	file:
find_best	lib/CUDD/cuddGenetic.c	/^find_best(void)$/;"	f	file:
finfo	include/MemoryModel/MemModel.h	/^    std::vector<FieldInfo> finfo;$/;"	m	class:StInfo
first	include/CUDD/cuddInt.h	/^    void *first;$/;"	m	struct:DdLevelQueue
fixVarTree	lib/CUDD/cuddAPI.c	/^fixVarTree($/;"	f	file:
flags	include/CUDD/cuddInt.h	/^    unsigned int flags;$/;"	m	struct:Move
flags	include/CUDD/mtr.h	/^    MtrHalfWord flags;$/;"	m	struct:MtrNode
flags	include/MemoryModel/CHA.h	/^    size_t flags;$/;"	m	class:CHNode
flags	include/MemoryModel/MemModel.h	/^    Size_t flags;$/;"	m	class:ObjTypeInfo
fldIdx	include/MemoryModel/LocationSet.h	/^    Size_t fldIdx;	\/\/\/< offset relative to base$/;"	m	class:LocationSet
fldIdx	include/MemoryModel/LocationSet.h	/^    u32_t fldIdx;$/;"	m	class:FieldInfo
fldIdx2TypeMap	include/MemoryModel/MemModel.h	/^    std::map<u32_t, const llvm::Type*> fldIdx2TypeMap;$/;"	m	class:StInfo
fldIdxVec	include/MemoryModel/MemModel.h	/^    std::vector<u32_t> fldIdxVec;$/;"	m	class:StInfo
foffset	include/MemoryModel/MemModel.h	/^    std::vector<u32_t> foffset;$/;"	m	class:StInfo
forksite	include/Util/CxtStmt.h	/^    const CallInst* forksite;$/;"	m	class:CxtThread
forksites	include/Util/ThreadCallGraph.h	/^    CallSiteSet forksites; \/\/\/< all thread fork sites$/;"	m	class:ThreadCallGraph
forksitesBegin	include/Util/ThreadCallGraph.h	/^    inline CallSiteSet::iterator forksitesBegin() const {$/;"	f	class:ThreadCallGraph
forksitesEnd	include/Util/ThreadCallGraph.h	/^    inline CallSiteSet::iterator forksitesEnd() const {$/;"	f	class:ThreadCallGraph
formalInOfAddressTakenFunc	include/MSSA/SVFGOPT.h	/^    inline bool formalInOfAddressTakenFunc(const FormalINSVFGNode* fi) const {$/;"	f	class:SVFGOPT
formalOutOfAddressTakenFunc	include/MSSA/SVFGOPT.h	/^    inline bool formalOutOfAddressTakenFunc(const FormalOUTSVFGNode* fo) const {$/;"	f	class:SVFGOPT
formalOutToDefMap	include/MSSA/SVFGOPT.h	/^    NodeIDToNodeIDMap formalOutToDefMap;	\/\/\/< map formal-out to its def-site node$/;"	m	class:SVFGOPT
formalRet	include/Util/ICFGNode.h	/^    const FormalRetVFGNode *formalRet;$/;"	m	class:FunExitBlockNode
forwardProcess	include/Util/CFLSolver.h	/^    virtual void forwardProcess(const DPIm& item) {$/;"	f	class:CFLSolver
forwardSlice	include/MSSA/SVFGStat.h	/^    SVFGNodeSet forwardSlice;$/;"	m	class:SVFGStat
forwardTraverse	include/Util/CFLSolver.h	/^    virtual void forwardTraverse(DPIm& it) {$/;"	f	class:CFLSolver
forwardpropagate	include/Util/CFLSolver.h	/^    virtual void forwardpropagate(const DPIm& item, GEDGE* edge) {$/;"	f	class:CFLSolver
free	include/CUDD/mnemosyne.h	51;"	d
freeMatrix	lib/CUDD/cuddExact.c	/^freeMatrix($/;"	f	file:
freePathPair	lib/CUDD/cuddSat.c	/^freePathPair($/;"	f	file:
freelist	include/CUDD/cuddInt.h	/^    DdQueueItem *freelist;$/;"	m	struct:DdLevelQueue
fromFile	include/MemoryModel/PAG.h	/^    bool fromFile; \/\/\/< Whether the PAG is built according to user specified data from a txt file$/;"	m	class:PAG
fspta	include/WPA/FlowSensitive.h	/^    static FlowSensitive* fspta;$/;"	m	class:FlowSensitive
fspta	include/WPA/WPAStat.h	/^    FlowSensitive * fspta;$/;"	m	class:FlowSensitiveStat
fun	include/MSSA/MSSAMuChi.h	/^    const Function* fun;$/;"	m	class:EntryCHI
fun	include/MSSA/MSSAMuChi.h	/^    const Function* fun;$/;"	m	class:RetMU
fun	include/MSSA/SVFGNode.h	/^    const Function* fun;$/;"	m	class:InterMSSAPHISVFGNode
fun	include/Util/CxtStmt.h	/^    const Function* fun;$/;"	m	class:CxtProc
fun	include/Util/ICFGNode.h	/^    const Function *fun;$/;"	m	class:FunEntryBlockNode
fun	include/Util/ICFGNode.h	/^    const Function *fun;$/;"	m	class:FunExitBlockNode
fun	include/Util/PTACallGraph.h	/^    const Function* fun;$/;"	m	class:PTACallGraphNode
fun	include/Util/VFGNode.h	/^    const Function* fun;$/;"	m	class:FormalParmVFGNode
fun	include/Util/VFGNode.h	/^    const Function* fun;$/;"	m	class:FormalRetVFGNode
fun	include/Util/VFGNode.h	/^    const Function* fun;$/;"	m	class:InterPHIVFGNode
funArgsListMap	include/MemoryModel/PAG.h	/^    FunToArgsListMap funArgsListMap;	\/\/\/< Map a function to a list of all its formal parameters$/;"	m	class:PAG
funHasRet	include/MemoryModel/PAG.h	/^    inline bool funHasRet(const Function* func) const {$/;"	f	class:PAG
funPtrToCallSitesMap	include/MemoryModel/PAG.h	/^    FunPtrToCallSitesMap funPtrToCallSitesMap;	\/\/\/< Map a function pointer to the callsites where it is used$/;"	m	class:PAG
funRetMap	include/MemoryModel/PAG.h	/^    FunToRetMap funRetMap;	\/\/\/< Map a function to its unique function return PAGNodes$/;"	m	class:PAG
funToCallGraphNodeMap	include/Util/PTACallGraph.h	/^    FunToCallGraphNodeMap funToCallGraphNodeMap; \/\/\/< Call Graph node map$/;"	m	class:PTACallGraph
funToDTMap	include/Util/DataFlowUtil.h	/^    FunToDTMap funToDTMap;					\/\/\/< map a function to its dominator tree$/;"	m	class:PTACFInfoBuilder
funToEntryChiSetMap	include/MSSA/MemSSA.h	/^    FunToEntryChiSetMap funToEntryChiSetMap;$/;"	m	class:MemSSA
funToExitBBsMap	include/Util/PathCondAllocator.h	/^    FunToExitBBsMap funToExitBBsMap;		\/\/\/< map a function to all its basic blocks calling program exit$/;"	m	class:PathCondAllocator
funToFormalINMap	include/MSSA/SVFG.h	/^    FunctionToFormalINsMapTy funToFormalINMap;$/;"	m	class:SVFG
funToFormalOUTMap	include/MSSA/SVFG.h	/^    FunctionToFormalOUTsMapTy funToFormalOUTMap;$/;"	m	class:SVFG
funToLoopInfoMap	include/Util/DataFlowUtil.h	/^    FunToLoopInfoMap funToLoopInfoMap;		\/\/\/< map a function to its loop info$/;"	m	class:PTACFInfoBuilder
funToMRsMap	include/MSSA/MemRegion.h	/^    FunToMRsMap funToMRsMap;$/;"	m	class:MRGenerator
funToModsMap	include/MSSA/MemRegion.h	/^    FunToNodeBSMap funToModsMap;$/;"	m	class:MRGenerator
funToPDTMap	include/Util/DataFlowUtil.h	/^    FunToPostDTMap funToPDTMap;				\/\/\/< map a function to its post dominator tree$/;"	m	class:PTACFInfoBuilder
funToPointsToMap	include/MSSA/MemRegion.h	/^    FunToPointsToMap funToPointsToMap;$/;"	m	class:MRGenerator
funToRefsMap	include/MSSA/MemRegion.h	/^    FunToNodeBSMap funToRefsMap;$/;"	m	class:MRGenerator
funToReturnMuSetMap	include/MSSA/MemSSA.h	/^    FunToReturnMuSetMap funToReturnMuSetMap;$/;"	m	class:MemSSA
func	include/DisPatch/BinIRWrapper.h	/^        const Function *func;$/;"	m	class:FuncInfo
func	include/DisPatch/CtrlIdentifier.h	/^        const Function *func;$/;"	m	struct:CtrlIdentifier::_ctrlinfo
func	include/DisPatch/InitPIDObj.h	/^            const Function *func;$/;"	m	class:InitPIDObj::CtrlInfo
func2InstAddr2rRegSet	include/DisPatch/InterProcAnal.h	/^    map <const Function *, map<uint64_t, set<uint16_t>>> func2InstAddr2rRegSet;   \/\/ for exception cs arg$/;"	m	class:InterProcAnal
func2TaggedvarsetMap	include/DisPatch/CtrlIdentifier.h	/^    map <const Function *, set <const Value*>> func2TaggedvarsetMap;$/;"	m	class:CtrlIdentifier
func2arg2idxmap	include/DisPatch/UtilDef.h	/^    static map <const Function *, map <const Value *, unsigned>> func2arg2idxmap;$/;"	m	class:UtilDef
func2arg2idxmap	lib/DisPatch/UtilDef.cpp	/^map <const Function *, map <const Value *, unsigned>> UtilDef::func2arg2idxmap;$/;"	m	class:UtilDef	file:
func2cssetMap	include/DisPatch/BinIRWrapper.h	/^    static map <const Function *, set <const CallInst*>> func2cssetMap;$/;"	m	class:BinIRWrapper
func2cssetMap	lib/DisPatch/BinIRWrapper.cpp	/^map <const Function *, set <const CallInst*>> BinIRWrapper::func2cssetMap;$/;"	m	class:BinIRWrapper	file:
func2funcInfo	include/DisPatch/BinIRWrapper.h	/^    static map <const Function *, FuncInfo *> func2funcInfo;$/;"	m	class:BinIRWrapper
func2funcInfo	lib/DisPatch/BinIRWrapper.cpp	/^map <const Function *, FuncInfo *> BinIRWrapper::func2funcInfo;$/;"	m	class:BinIRWrapper	file:
func2idx2argmap	include/DisPatch/UtilDef.h	/^    static map <const Function *, map <unsigned, const Value *>> func2idx2argmap;$/;"	m	class:UtilDef
func2idx2argmap	lib/DisPatch/UtilDef.cpp	/^map <const Function *, map <unsigned, const Value *>> UtilDef::func2idx2argmap;$/;"	m	class:UtilDef	file:
func2idx2instmap	include/DisPatch/UtilDef.h	/^    static map <const Function *, map <unsigned, const Value *>> func2idx2instmap;$/;"	m	class:UtilDef
func2idx2instmap	lib/DisPatch/UtilDef.cpp	/^map <const Function *, map <unsigned, const Value *>> UtilDef::func2idx2instmap;$/;"	m	class:UtilDef	file:
func2inst2idxmap	include/DisPatch/UtilDef.h	/^    static map <const Function *, map <const Instruction *, unsigned>> func2inst2idxmap;$/;"	m	class:UtilDef
func2inst2idxmap	lib/DisPatch/UtilDef.cpp	/^map <const Function *, map <const Instruction *, unsigned>> UtilDef::func2inst2idxmap;$/;"	m	class:UtilDef	file:
func2insts	include/DisPatch/UtilDef.h	/^    vector<const Instruction*> func2insts(const Function *func){$/;"	f	class:UtilDef
func2instvec	include/DisPatch/UtilDef.h	/^    static map <const Function *, vector<const Instruction*>> func2instvec;$/;"	m	class:UtilDef
func2instvec	lib/DisPatch/UtilDef.cpp	/^map <const Function *, vector<const Instruction*>> UtilDef::func2instvec;$/;"	m	class:UtilDef	file:
func2lastCtrlVarIdx	include/DisPatch/CtrlIdentifier.h	/^    map <const Function *, unsigned> func2lastCtrlVarIdx;$/;"	m	class:CtrlIdentifier
func2name	include/DisPatch/UtilDef.h	/^    string inline func2name(const Function *func){$/;"	f	class:UtilDef
func2off2varset	include/DisPatch/UtilDef.h	/^    static map <const Function *, map <unsigned, set <const Value *>>> func2off2varset;    \/\/off = offsum$/;"	m	class:UtilDef
func2off2varset	lib/DisPatch/UtilDef.cpp	/^map <const Function *, map <unsigned, set <const Value *>>> UtilDef::func2off2varset;    \/\/off = offsum$/;"	m	class:UtilDef	file:
func2offsum2gepCompute	include/DisPatch/BinIRWrapper.h	/^    static map <const Function *, map <unsigned, const Value *>> func2offsum2gepCompute;$/;"	m	class:BinIRWrapper
func2offsum2gepCompute	lib/DisPatch/BinIRWrapper.cpp	/^map <const Function *, map <unsigned, const Value *>> BinIRWrapper::func2offsum2gepCompute;$/;"	m	class:BinIRWrapper	file:
func2offsums	include/DisPatch/UtilDef.h	/^    static map <const Function *, set <unsigned>> func2offsums;    \/\/off = offsum$/;"	m	class:UtilDef
func2offsums	lib/DisPatch/UtilDef.cpp	/^map <const Function *, set <unsigned>> UtilDef::func2offsums;    \/\/off = offsum$/;"	m	class:UtilDef	file:
func2sz	include/DisPatch/UtilDef.h	/^    unsigned func2sz(const Function *func){$/;"	f	class:UtilDef
func2szMap	include/DisPatch/UtilDef.h	/^    static map <const Function *, unsigned> func2szMap;$/;"	m	class:UtilDef
func2szMap	lib/DisPatch/UtilDef.cpp	/^map <const Function *, unsigned> UtilDef::func2szMap;$/;"	m	class:UtilDef	file:
func2var2offsum	include/DisPatch/UtilDef.h	/^    static map <const Function *, map <const Value *, unsigned>> func2var2offsum;$/;"	m	class:UtilDef
func2var2offsum	lib/DisPatch/UtilDef.cpp	/^map <const Function *, map <const Value *, unsigned>> UtilDef::func2var2offsum;$/;"	m	class:UtilDef	file:
func2var2offvec	include/DisPatch/UtilDef.h	/^    static map <const Function *, map <const Value *, vector <unsigned>>> func2var2offvec;$/;"	m	class:UtilDef
func2var2offvec	lib/DisPatch/UtilDef.cpp	/^map <const Function *, map <const Value *, vector <unsigned>>> UtilDef::func2var2offvec;$/;"	m	class:UtilDef	file:
funcAddr2InstAddr2rRegSet	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, map<uint64_t, set<uint16_t>>> funcAddr2InstAddr2rRegSet;   \/\/ for exception cs arg$/;"	m	class:InterProcAnal
funcName	include/Util/CPPUtil.h	/^    std::string funcName;$/;"	m	struct:cppUtil::DemangledName
funcToInterMap	include/MSSA/MemPartition.h	/^    FunToInterMap funcToInterMap;$/;"	m	class:IntraDisjointMRG
funcToPtsMap	include/MSSA/MemPartition.h	/^    FunToPtsMap funcToPtsMap;$/;"	m	class:IntraDisjointMRG
funcaddr2addrset	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, set <uint64_t>> funcaddr2addrset;$/;"	m	class:InterProcAnal
funcaddr2disas	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, vector <cs_insn>> funcaddr2disas;$/;"	m	class:InterProcAnal
funcaddr2retidx	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, int> funcaddr2retidx;$/;"	m	class:InterProcAnal
functionDoesNotRet	lib/Util/SVFUtil.cpp	/^bool SVFUtil::functionDoesNotRet (const Function * fun) {$/;"	f	class:SVFUtil
functionName	include/MemoryModel/ExternalPAG.h	/^    std::string functionName;$/;"	m	class:ExternalPAG
functionRef	lib/CUDD/cuddApprox.c	/^    int functionRef;		\/* references from within this function *\/$/;"	m	struct:NodeData	file:
functionToExternalPAGEntries	include/MemoryModel/ExternalPAG.h	/^        functionToExternalPAGEntries;$/;"	m	class:ExternalPAG
functionToExternalPAGEntries	lib/MemoryModel/ExternalPAG.cpp	/^    ExternalPAG::functionToExternalPAGEntries;$/;"	m	class:ExternalPAG	file:
functionToExternalPAGReturns	include/MemoryModel/ExternalPAG.h	/^    static std::map<const Function *, PAGNode *> functionToExternalPAGReturns;$/;"	m	class:ExternalPAG
functionToExternalPAGReturns	lib/MemoryModel/ExternalPAG.cpp	/^std::map<const Function *, PAGNode *> ExternalPAG::functionToExternalPAGReturns;$/;"	m	class:ExternalPAG	file:
g	include/CUDD/cuddInt.h	/^    DdNode *f,*g;		\/* DDs *\/$/;"	m	struct:DdCache
g	lib/CUDD/cuddBddCorr.c	/^    DdNode *g;$/;"	m	struct:hashEntry	file:
g	lib/CUDD/cuddDecomp.c	/^    DdNode *g;$/;"	m	struct:Conjuncts	file:
garbageCollections	include/CUDD/cuddInt.h	/^    int garbageCollections;	\/* number of garbage collections *\/$/;"	m	struct:DdManager
gatherInfo	lib/CUDD/cuddApprox.c	/^gatherInfo($/;"	f	file:
gatherInfoAux	lib/CUDD/cuddApprox.c	/^gatherInfoAux($/;"	f	file:
gcEnabled	include/CUDD/cuddInt.h	/^    int gcEnabled;		\/* gc is enabled *\/$/;"	m	struct:DdManager
gcFrac	include/CUDD/cuddInt.h	/^    double gcFrac;		\/* gc when this fraction is dead *\/$/;"	m	struct:DdManager
gcd	include/MemoryModel/LocationSet.h	/^    inline unsigned gcd (unsigned n1, unsigned n2) const {$/;"	f	class:LocationSet
gen	include/CUDD/cuddInt.h	/^    } gen;$/;"	m	struct:DdGen	typeref:union:DdGen::__anon12
generalNumMap	include/Util/PTAStat.h	/^    NUMStatMap generalNumMap;$/;"	m	class:PTAStat
generateMRs	lib/MSSA/MemRegion.cpp	/^void MRGenerator::generateMRs() {$/;"	f	class:MRGenerator
generic_bridge_gep_type_iterator	include/Util/GEPTypeBridgeIterator.h	/^    generic_bridge_gep_type_iterator() {}$/;"	f	class:llvm::generic_bridge_gep_type_iterator
generic_bridge_gep_type_iterator	include/Util/GEPTypeBridgeIterator.h	/^class generic_bridge_gep_type_iterator : public std::iterator<std::forward_iterator_tag, Type *, ptrdiff_t> {$/;"	c	namespace:llvm
gep2off	lib/DisPatch/BinIRWrapper.cpp	/^set <unsigned> BinIRWrapper::gep2off(set<const Value *> &geps){$/;"	f	class:BinIRWrapper
gep2off	lib/DisPatch/BinIRWrapper.cpp	/^unsigned BinIRWrapper::gep2off(const Value * v){$/;"	f	class:BinIRWrapper
gep2this	include/DisPatch/BinIRWrapper.h	/^    static map <const Value *, const Value *> gep2this;$/;"	m	class:BinIRWrapper
gep2this	lib/DisPatch/BinIRWrapper.cpp	/^map <const Value *, const Value *> BinIRWrapper::gep2this;$/;"	m	class:BinIRWrapper	file:
gepCompute2offsum	include/DisPatch/BinIRWrapper.h	/^    static map <const Value *, unsigned> gepCompute2offsum;$/;"	m	class:BinIRWrapper
gepCompute2offsum	lib/DisPatch/BinIRWrapper.cpp	/^map <const Value *, unsigned> BinIRWrapper::gepCompute2offsum;$/;"	m	class:BinIRWrapper	file:
gepHeuristicMapping	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::gepHeuristicMapping(vector <const Instruction*> &insts, const Function *func, unsigned idx){$/;"	f	class:BinIRWrapper
gepInEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy gepInEdges;$/;"	m	class:ConstraintNode
gepNodeNumIndex	lib/MemoryModel/PAGBuilderFromFile.cpp	/^static u32_t gepNodeNumIndex = 100000;$/;"	v	file:
gepOutEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy gepOutEdges;$/;"	m	class:ConstraintNode
gepValType	include/MemoryModel/PAGNode.h	/^    const Type *gepValType;$/;"	m	class:GepValPN
gep_type_iterator	include/Util/BasicTypes.h	/^typedef llvm::gep_type_iterator gep_type_iterator;$/;"	t
getAcc	include/DisPatch/InitPIDObj.h	/^            string getAcc(){ return getCtrl(2); }$/;"	f	class:InitPIDObj::AxisInfo
getActualINDef	include/MSSA/SVFGOPT.h	/^    inline NodeID getActualINDef(NodeID ai) const {$/;"	f	class:SVFGOPT
getActualINSVFGNodes	include/MSSA/SVFG.h	/^    inline ActualINSVFGNodeSet& getActualINSVFGNodes(CallSite cs) {$/;"	f	class:SVFG
getActualOUTSVFGNodes	include/MSSA/SVFG.h	/^    inline ActualOUTSVFGNodeSet& getActualOUTSVFGNodes(CallSite cs) {$/;"	f	class:SVFG
getActualParmAtForkSite	include/Util/SVFUtil.h	/^inline const Value* getActualParmAtForkSite(const CallSite cs) {$/;"	f	namespace:SVFUtil
getActualParmAtForkSite	include/Util/SVFUtil.h	/^inline const Value* getActualParmAtForkSite(const Instruction *inst) {$/;"	f	namespace:SVFUtil
getActualParmAtForkSite	include/Util/ThreadAPI.h	/^    inline const Value* getActualParmAtForkSite(CallSite cs) const {$/;"	f	class:ThreadAPI
getActualParmAtForkSite	include/Util/ThreadAPI.h	/^    inline const Value* getActualParmAtForkSite(const Instruction *inst) const {$/;"	f	class:ThreadAPI
getActualParmVFGNode	include/Util/VFG.h	/^    inline ActualParmVFGNode* getActualParmVFGNode(const PAGNode* aparm,CallSite cs) const {$/;"	f	class:VFG
getActualParms	include/Util/ICFGNode.h	/^    inline const ActualParmVFGNodeVec &getActualParms() const {$/;"	f	class:CallBlockNode
getActualRet	include/Util/ICFGNode.h	/^    inline const ActualRetVFGNode *getActualRet() const {$/;"	f	class:RetBlockNode
getActualRetVFGNode	include/Util/VFG.h	/^    inline ActualRetVFGNode* getActualRetVFGNode(const PAGNode* aret) const {$/;"	f	class:VFG
getAddrCGEdges	include/MemoryModel/ConsG.h	/^    inline ConstraintEdge::ConstraintEdgeSetTy& getAddrCGEdges() {$/;"	f	class:ConstraintGraph
getAddrInEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getAddrInEdges() const {$/;"	f	class:ConstraintNode
getAddrOutEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getAddrOutEdges() const {$/;"	f	class:ConstraintNode
getAdjustedAnalysisPointer	include/WPA/WPAPass.h	/^    virtual inline void* getAdjustedAnalysisPointer(AnalysisID id) {$/;"	f	class:WPAPass
getAliasMemRegions	include/MSSA/MemRegion.h	/^    virtual inline void getAliasMemRegions(MRSet& aliasMRs, const PointsTo& cpts, const Function* fun) {$/;"	f	class:MRGenerator
getAllCallSitesInvokingCallee	lib/Util/PTACallGraph.cpp	/^void PTACallGraph::getAllCallSitesInvokingCallee(const Function* callee, PTACallGraphEdge::CallInstSet& csSet) {$/;"	f	class:PTACallGraph
getAllFieldsObjNode	include/MemoryModel/ConsG.h	/^    inline NodeBS& getAllFieldsObjNode(NodeID id) {$/;"	f	class:ConstraintGraph
getAllFieldsObjNode	include/MemoryModel/PointerAnalysis.h	/^    inline const NodeBS& getAllFieldsObjNode(NodeID id) {$/;"	f	class:PointerAnalysis
getAllFieldsObjNode	lib/MemoryModel/PAG.cpp	/^NodeBS& PAG::getAllFieldsObjNode(NodeID id) {$/;"	f	class:PAG
getAllFieldsObjNode	lib/MemoryModel/PAG.cpp	/^NodeBS& PAG::getAllFieldsObjNode(const MemObj* obj) {$/;"	f	class:PAG
getAllValidPtrs	include/MemoryModel/PAG.h	/^    inline NodeSet& getAllValidPtrs() {$/;"	f	class:PAG
getAllValidPtrs	include/MemoryModel/PointerAnalysis.h	/^    inline NodeSet& getAllValidPtrs() {$/;"	f	class:PointerAnalysis
getAnalysisTy	include/MemoryModel/PointerAnalysis.h	/^    inline PTATY getAnalysisTy() const {$/;"	f	class:PointerAnalysis
getAnalysisUsage	include/Util/BreakConstantExpr.h	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:BreakConstantGEPs
getAnalysisUsage	include/Util/BreakConstantExpr.h	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:MergeFunctionRets
getAnalysisUsage	include/Util/DataFlowUtil.h	/^    virtual void getAnalysisUsage(AnalysisUsage &AU) const {$/;"	f	class:IteratedDominanceFrontier
getAnalysisUsage	include/WPA/WPAPass.h	/^    virtual inline void getAnalysisUsage(AnalysisUsage &au) const {$/;"	f	class:WPAPass
getArgFromFunc	include/DisPatch/UtilDef.h	/^    const Argument *getArgFromFunc(const Function *func, unsigned th){$/;"	f	class:UtilDef
getArgNo	lib/MemoryModel/ExternalPAG.cpp	/^int getArgNo(Function *function, const Value *arg) {$/;"	f
getArgNodes	include/MemoryModel/ExternalPAG.h	/^    std::map<int, NodeID> &getArgNodes() { return argNodes; }$/;"	f	class:ExternalPAG
getAxis	include/DisPatch/InitPIDObj.h	/^            string getAxis(){ return axis; }$/;"	f	class:InitPIDObj::AxisInfo
getBB	include/MemoryModel/PAGEdge.h	/^    inline const BasicBlock* getBB() const {$/;"	f	class:PAGEdge
getBB	include/Util/ICFGNode.h	/^    virtual const BasicBlock *getBB() const {$/;"	f	class:ICFGNode
getBB	include/Util/VFGNode.h	/^    virtual const BasicBlock* getBB() const {$/;"	f	class:VFGNode
getBBPhiNum	lib/MSSA/MemSSA.cpp	/^u32_t MemSSA::getBBPhiNum() const$/;"	f	class:MemSSA
getBBPredecessorNum	lib/Util/SVFUtil.cpp	/^u32_t SVFUtil::getBBPredecessorNum(const BasicBlock *BB) {$/;"	f	class:SVFUtil
getBBPredecessorPos	lib/Util/SVFUtil.cpp	/^u32_t SVFUtil::getBBPredecessorPos(const BasicBlock *bb, const BasicBlock *succbb) {$/;"	f	class:SVFUtil
getBBSuccessorNum	lib/Util/SVFUtil.cpp	/^u32_t SVFUtil::getBBSuccessorNum(const BasicBlock *BB) {$/;"	f	class:SVFUtil
getBBSuccessorPos	lib/Util/SVFUtil.cpp	/^u32_t SVFUtil::getBBSuccessorPos(const BasicBlock *BB, const BasicBlock *Succ) {$/;"	f	class:SVFUtil
getBBToPhiSetMap	include/MSSA/MemSSA.h	/^    inline BBToPhiSetMap& getBBToPhiSetMap() {$/;"	f	class:MemSSA
getBDDMemUsage	include/Util/Conditions.h	/^    inline u32_t getBDDMemUsage() {$/;"	f	class:BddCondManager
getBVPointsTo	include/MemoryModel/PointerAnalysis.h	/^    virtual inline PointsTo getBVPointsTo(const CPtSet& cpts) const {$/;"	f	class:CondPTAImpl
getBaseObj	include/MemoryModel/PAG.h	/^    inline const MemObj* getBaseObj(NodeID id) const {$/;"	f	class:PAG
getBaseObjNode	include/MemoryModel/ConsG.h	/^    inline NodeID getBaseObjNode(NodeID id) {$/;"	f	class:ConstraintGraph
getBaseObjNode	include/MemoryModel/PAG.h	/^    inline NodeID getBaseObjNode(NodeID id) const {$/;"	f	class:PAG
getBaseObjNode	include/MemoryModel/PointerAnalysis.h	/^    inline NodeID getBaseObjNode(NodeID id) {$/;"	f	class:PointerAnalysis
getBaseTypeAndFlattenedFields	lib/MemoryModel/MemModel.cpp	/^const Type *SymbolTableInfo::getBaseTypeAndFlattenedFields(const Value *V, std::vector<LocationSet> &fields) {$/;"	f	class:SymbolTableInfo
getBaseTypeAndFlattenedFields	lib/MemoryModel/PAGBuilder.cpp	/^const Type *PAGBuilder::getBaseTypeAndFlattenedFields(Value *V, std::vector<LocationSet> &fields) {$/;"	f	class:PAGBuilder
getBaseValNode	lib/MemoryModel/PAG.cpp	/^NodeID PAG::getBaseValNode(NodeID nodeId) {$/;"	f	class:PAG
getBasicBlock	include/MSSA/MSSAMuChi.h	/^    inline const BasicBlock* getBasicBlock() const {$/;"	f	class:CallCHI
getBasicBlock	include/MSSA/MSSAMuChi.h	/^    inline const BasicBlock* getBasicBlock() const {$/;"	f	class:CallMU
getBasicBlock	include/MSSA/MSSAMuChi.h	/^    inline const BasicBlock* getBasicBlock() const {$/;"	f	class:LoadMU
getBasicBlock	include/MSSA/MSSAMuChi.h	/^    inline const BasicBlock* getBasicBlock() const {$/;"	f	class:MSSAPHI
getBasicBlock	include/MSSA/MSSAMuChi.h	/^    inline const BasicBlock* getBasicBlock() const {$/;"	f	class:StoreCHI
getBddCondManager	include/Util/PathCondAllocator.h	/^    static BddCondManager* getBddCondManager() {$/;"	f	class:PathCondAllocator
getBeforeBrackets	lib/Util/CPPUtil.cpp	/^string cppUtil::getBeforeBrackets(const string name) {$/;"	f	class:cppUtil
getBeforeParenthesis	lib/Util/CPPUtil.cpp	/^static string getBeforeParenthesis(const string name) {$/;"	f	file:
getBinaryNodeMap	include/MemoryModel/PAG.h	/^    inline BinaryNodeMap& getBinaryNodeMap() {$/;"	f	class:PAG
getBinaryOPVFGNode	include/Util/VFG.h	/^    inline BinaryOPVFGNode* getBinaryOPVFGNode(const PAGNode* pagNode) const {$/;"	f	class:VFG
getBlackHoleNode	include/MemoryModel/ConsG.h	/^    inline NodeID getBlackHoleNode() {$/;"	f	class:ConstraintGraph
getBlackHoleNode	include/MemoryModel/PAG.h	/^    inline NodeID getBlackHoleNode() const {$/;"	f	class:PAG
getBlackHoleObj	include/MemoryModel/PAG.h	/^    inline const MemObj* getBlackHoleObj() const {$/;"	f	class:PAG
getBlkObj	include/MemoryModel/MemModel.h	/^    inline MemObj* getBlkObj() const {$/;"	f	class:SymbolTableInfo
getBlkPtr	include/MemoryModel/PAG.h	/^    inline NodeID getBlkPtr() const {$/;"	f	class:PAG
getBlockICFGNode	include/Util/ICFG.h	/^	inline ICFGNode* getBlockICFGNode(const Instruction* inst) {$/;"	f	class:ICFG
getBranchCond	lib/Util/PathCondAllocator.cpp	/^PathCondAllocator::Condition* PathCondAllocator::getBranchCond(const BasicBlock * bb, const BasicBlock *succ) const {$/;"	f	class:PathCondAllocator
getByteOffset	include/MemoryModel/LocationSet.h	/^    inline Size_t getByteOffset() const {$/;"	f	class:LocationSet
getCFCond	include/Util/PathCondAllocator.h	/^    inline Condition* getCFCond(const BasicBlock* bb) const {$/;"	f	class:PathCondAllocator
getCHGraph	include/MemoryModel/PointerAnalysis.h	/^    CHGraph *getCHGraph() const {$/;"	f	class:PointerAnalysis
getCHISet	include/MSSA/MemSSA.h	/^    inline CHISet& getCHISet(CallSite cs) {$/;"	f	class:MemSSA
getCHISet	include/MSSA/MemSSA.h	/^    inline CHISet& getCHISet(const StorePE* st) {$/;"	f	class:MemSSA
getCSClasses	lib/MemoryModel/CHA.cpp	/^const CHGraph::CHNodeSetTy& CHGraph::getCSClasses(CallSite cs) {$/;"	f	class:CHGraph
getCSVFsBasedonCHA	include/MemoryModel/CHA.h	/^	inline const VFunSet &getCSVFsBasedonCHA(CallSite cs) const {$/;"	f	class:CHGraph
getCSVtblsBasedonCHA	include/MemoryModel/CHA.h	/^	inline const VTableSet &getCSVtblsBasedonCHA(CallSite cs) const {$/;"	f	class:CHGraph
getCachePts	include/MemoryModel/PointsToDS.h	/^    inline Data& getCachePts(CacheKey& cache) {$/;"	f	class:DiffPTData
getCallCHI	include/MSSA/SVFGNode.h	/^    inline const MemSSA::CALLCHI* getCallCHI() const {$/;"	f	class:ActualOUTSVFGNode
getCallEdgeBegin	include/Util/PTACallGraph.h	/^    inline CallGraphEdgeSet::const_iterator getCallEdgeBegin(const Instruction* inst) const {$/;"	f	class:PTACallGraph
getCallEdgeEnd	include/Util/PTACallGraph.h	/^    inline CallGraphEdgeSet::const_iterator getCallEdgeEnd(const Instruction* inst) const {$/;"	f	class:PTACallGraph
getCallGraphNode	include/Util/PTACallGraph.h	/^    inline PTACallGraphNode* getCallGraphNode(NodeID id) const {$/;"	f	class:PTACallGraph
getCallGraphNode	include/Util/PTACallGraph.h	/^    inline PTACallGraphNode* getCallGraphNode(const Function* fun) const {$/;"	f	class:PTACallGraph
getCallGraphSCC	include/MemoryModel/PointerAnalysis.h	/^    inline CallGraphSCC* getCallGraphSCC() const {$/;"	f	class:PointerAnalysis
getCallGraphSCCRepNode	include/MemoryModel/PointerAnalysis.h	/^    inline NodeID getCallGraphSCCRepNode(NodeID id) const {$/;"	f	class:PointerAnalysis
getCallGraphSCCRevTopoOrder	lib/MSSA/MemRegion.cpp	/^void MRGenerator::getCallGraphSCCRevTopoOrder(WorkList& worklist) {$/;"	f	class:MRGenerator
getCallICFGNode	include/Util/ICFG.h	/^    inline CallBlockNode* getCallICFGNode(CallSite cs) {$/;"	f	class:ICFG
getCallInst	include/MemoryModel/PAGEdge.h	/^    inline const Instruction* getCallInst() const {$/;"	f	class:CallPE
getCallInst	include/MemoryModel/PAGEdge.h	/^    inline const Instruction* getCallInst() const {$/;"	f	class:RetPE
getCallInst	include/MemoryModel/PAGEdge.h	/^    inline const Instruction* getCallInst() const {$/;"	f	class:TDForkPE
getCallInst	include/MemoryModel/PAGEdge.h	/^    inline const Instruction* getCallInst() const {$/;"	f	class:TDJoinPE
getCallInstToCallGraphEdgesMap	include/Util/PTACallGraph.h	/^    inline const CallInstToCallGraphEdgesMap& getCallInstToCallGraphEdgesMap() const {$/;"	f	class:PTACallGraph
getCallMU	include/MSSA/SVFGNode.h	/^    inline const MemSSA::CALLMU* getCallMU() const {$/;"	f	class:ActualINSVFGNode
getCallSite	include/MSSA/MSSAMuChi.h	/^    inline CallSite getCallSite() const {$/;"	f	class:CallCHI
getCallSite	include/MSSA/MSSAMuChi.h	/^    inline CallSite getCallSite() const {$/;"	f	class:CallMU
getCallSite	include/MSSA/SVFGNode.h	/^    inline CallSite getCallSite() const {$/;"	f	class:ActualINSVFGNode
getCallSite	include/MSSA/SVFGNode.h	/^    inline CallSite getCallSite() const {$/;"	f	class:ActualOUTSVFGNode
getCallSite	include/MSSA/SVFGNode.h	/^    inline CallSite getCallSite() const {$/;"	f	class:InterMSSAPHISVFGNode
getCallSite	include/MemoryModel/PAGEdge.h	/^    inline CallSite getCallSite() const {$/;"	f	class:CallPE
getCallSite	include/MemoryModel/PAGEdge.h	/^    inline CallSite getCallSite() const {$/;"	f	class:RetPE
getCallSite	include/MemoryModel/PAGEdge.h	/^    inline CallSite getCallSite() const {$/;"	f	class:TDForkPE
getCallSite	include/MemoryModel/PAGEdge.h	/^    inline CallSite getCallSite() const {$/;"	f	class:TDJoinPE
getCallSite	include/Util/ICFG.h	/^    inline CallSite getCallSite(CallSiteID id) const {$/;"	f	class:ICFG
getCallSite	include/Util/ICFGNode.h	/^    inline CallSite getCallSite() const {$/;"	f	class:CallBlockNode
getCallSite	include/Util/ICFGNode.h	/^    inline CallSite getCallSite() const {$/;"	f	class:RetBlockNode
getCallSite	include/Util/PTACallGraph.h	/^    inline CallSite getCallSite(CallSiteID id) const {$/;"	f	class:PTACallGraph
getCallSite	include/Util/VFG.h	/^    inline CallSite getCallSite(CallSiteID id) const {$/;"	f	class:VFG
getCallSite	include/Util/VFGNode.h	/^    inline CallSite getCallSite() const {$/;"	f	class:ActualParmVFGNode
getCallSite	include/Util/VFGNode.h	/^    inline CallSite getCallSite() const {$/;"	f	class:ActualRetVFGNode
getCallSite	include/Util/VFGNode.h	/^    inline CallSite getCallSite() const {$/;"	f	class:InterPHIVFGNode
getCallSiteArgsList	include/MemoryModel/PAG.h	/^    inline const PAGNodeList& getCallSiteArgsList(const CallSite cs) const {$/;"	f	class:PAG
getCallSiteArgsMap	include/MemoryModel/PAG.h	/^    inline CSToArgsListMap& getCallSiteArgsMap() {$/;"	f	class:PAG
getCallSiteArgsPts	include/MSSA/MemRegion.h	/^    inline NodeBS& getCallSiteArgsPts(CallSite cs) {$/;"	f	class:MRGenerator
getCallSiteChiNum	lib/MSSA/MemSSA.cpp	/^u32_t MemSSA::getCallSiteChiNum() const$/;"	f	class:MemSSA
getCallSiteID	include/Util/ICFG.h	/^    inline CallSiteID getCallSiteID(CallSite cs, const Function* func) const {$/;"	f	class:ICFG
getCallSiteID	include/Util/PTACallGraph.h	/^	inline CallSiteID getCallSiteID() const {$/;"	f	class:PTACallGraphEdge
getCallSiteID	include/Util/PTACallGraph.h	/^    inline CallSiteID getCallSiteID(CallSite cs, const Function* callee) const {$/;"	f	class:PTACallGraph
getCallSiteID	include/Util/VFG.h	/^    inline CallSiteID getCallSiteID(CallSite cs, const Function* func) const {$/;"	f	class:VFG
getCallSiteId	include/MSSA/SVFGEdge.h	/^    inline CallSiteID getCallSiteId() const {$/;"	f	class:CallIndSVFGEdge
getCallSiteId	include/MSSA/SVFGEdge.h	/^    inline CallSiteID getCallSiteId() const {$/;"	f	class:RetIndSVFGEdge
getCallSiteId	include/Util/ICFGEdge.h	/^    inline CallSiteID getCallSiteId() const {$/;"	f	class:CallCFGEdge
getCallSiteId	include/Util/ICFGEdge.h	/^    inline CallSiteID getCallSiteId() const {$/;"	f	class:RetCFGEdge
getCallSiteId	include/Util/VFGEdge.h	/^    inline CallSiteID getCallSiteId() const {$/;"	f	class:CallDirSVFGEdge
getCallSiteId	include/Util/VFGEdge.h	/^    inline CallSiteID getCallSiteId() const {$/;"	f	class:RetDirSVFGEdge
getCallSiteModMRSet	include/MSSA/MemRegion.h	/^    inline MRSet& getCallSiteModMRSet(CallSite cs) {$/;"	f	class:MRGenerator
getCallSiteMuNum	lib/MSSA/MemSSA.cpp	/^u32_t MemSSA::getCallSiteMuNum() const$/;"	f	class:MemSSA
getCallSitePair	include/Util/PTACallGraph.h	/^    inline const CallSitePair& getCallSitePair(CallSiteID id) const {$/;"	f	class:PTACallGraph
getCallSiteRefMRSet	include/MSSA/MemRegion.h	/^    inline MRSet& getCallSiteRefMRSet(CallSite cs) {$/;"	f	class:MRGenerator
getCallSiteRet	include/MemoryModel/PAG.h	/^    inline const PAGNode* getCallSiteRet(const CallSite cs) const {$/;"	f	class:PAG
getCallSiteRetPts	include/MSSA/MemRegion.h	/^    inline NodeBS& getCallSiteRetPts(CallSite cs) {$/;"	f	class:MRGenerator
getCallSiteRets	include/MemoryModel/PAG.h	/^    inline CSToRetMap& getCallSiteRets() {$/;"	f	class:PAG
getCallSiteSet	include/MemoryModel/MemModel.h	/^    inline const CallSiteSet& getCallSiteSet() const {$/;"	f	class:SymbolTableInfo
getCallSiteSet	include/MemoryModel/PAG.h	/^    inline const CallSiteSet& getCallSiteSet() const {$/;"	f	class:PAG
getCallSiteToChiSetMap	include/MSSA/MemSSA.h	/^    inline CallSiteToCHISetMap& getCallSiteToChiSetMap() {$/;"	f	class:MemSSA
getCallSiteToMuSetMap	include/MSSA/MemSSA.h	/^    inline CallSiteToMUSetMap& getCallSiteToMuSetMap() {$/;"	f	class:MemSSA
getCallee	include/DisPatch/BinIRWrapper.h	/^    inline const Function* getCallee(const CallInst *ci){$/;"	f	class:BinIRWrapper
getCallee	include/DisPatch/BinIRWrapper.h	/^    inline const Function* getCallee(const Instruction *inst){$/;"	f	class:BinIRWrapper
getCallee	include/DisPatch/BinIRWrapper.h	/^    inline const Function* getCallee(const Value *instv){$/;"	f	class:BinIRWrapper
getCallee	include/DisPatch/UtilDef.h	/^    inline const Function *getCallee(const Instruction *inst){$/;"	f	class:UtilDef
getCallee	include/Util/SVFUtil.h	/^inline const Function* getCallee(const CallSite cs) {$/;"	f	namespace:SVFUtil
getCallee	include/Util/SVFUtil.h	/^inline const Function* getCallee(const Instruction *inst) {$/;"	f	namespace:SVFUtil
getCallee	lib/Util/ThreadAPI.cpp	/^const Function* ThreadAPI::getCallee(const CallSite cs) const {$/;"	f	class:ThreadAPI
getCallee	lib/Util/ThreadAPI.cpp	/^const Function* ThreadAPI::getCallee(const Instruction *inst) const {$/;"	f	class:ThreadAPI
getCalleeCSset	lib/DisPatch/InitPIDObj.cpp	/^set <const Instruction *> InitPIDObj::getCalleeCSset(const Function *callee){$/;"	f	class:InitPIDObj
getCalleeOfCallSite	include/Util/PTACallGraph.h	/^    inline const Function* getCalleeOfCallSite(CallSiteID id) const {$/;"	f	class:PTACallGraph
getCallerOfCallSite	include/Util/PTACallGraph.h	/^    inline const Function* getCallerOfCallSite(CallSiteID id) const {$/;"	f	class:PTACallGraph
getCandidates	include/WPA/WPAFSSolver.h	/^    inline const NodeBS& getCandidates() const {$/;"	f	class:WPAMinimumSolver
getClassNameFromType	lib/Util/CPPUtil.cpp	/^string cppUtil::getClassNameFromType(const Type *ty) {$/;"	f	class:cppUtil
getClassNameFromVtblObj	lib/Util/CPPUtil.cpp	/^string cppUtil::getClassNameFromVtblObj(const Value *value) {$/;"	f	class:cppUtil
getClassNameOfThisPtr	lib/Util/CPPUtil.cpp	/^string cppUtil::getClassNameOfThisPtr(CallSite cs) {$/;"	f	class:cppUtil
getClk	include/Util/PTAStat.h	/^    static inline double getClk() {$/;"	f	class:PTAStat
getCmpNodeMap	include/MemoryModel/PAG.h	/^    inline CmpNodeMap& getCmpNodeMap() {$/;"	f	class:PAG
getCmpVFGNode	include/Util/VFG.h	/^    inline CmpVFGNode* getCmpVFGNode(const PAGNode* pagNode) const {$/;"	f	class:VFG
getCompleteNodeLabel	lib/MSSA/SVFG.cpp	/^    static std::string getCompleteNodeLabel(NodeType *node, SVFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getCompleteNodeLabel	lib/Util/VFG.cpp	/^    static std::string getCompleteNodeLabel(NodeType *node, VFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getCond	include/MSSA/MSSAMuChi.h	/^    inline Cond getCond() const {$/;"	f	class:MSSACHI
getCond	include/MSSA/MSSAMuChi.h	/^    inline Cond getCond() const {$/;"	f	class:MSSAMU
getCond	include/MSSA/MSSAMuChi.h	/^    inline Cond getCond() const {$/;"	f	class:MSSAPHI
getCond	include/Util/Conditions.h	/^    inline DdNode* getCond(unsigned i) const {$/;"	f	class:BddCondManager
getCond	include/Util/DPItem.h	/^    inline ContextCond& getCond() {$/;"	f	class:CxtStmtDPItem
getCond	include/Util/DPItem.h	/^    inline VFPathCond& getCond() {$/;"	f	class:PathStmtDPItem
getCond	include/Util/DPItem.h	/^    inline const ContextCond& getCond() const {$/;"	f	class:CxtStmtDPItem
getCond	include/Util/DPItem.h	/^    inline const VFPathCond& getCond() const {$/;"	f	class:PathStmtDPItem
getCond	include/Util/PathCondAllocator.h	/^    inline Condition* getCond(u32_t i) const {$/;"	f	class:PathCondAllocator
getCondInst	include/Util/PathCondAllocator.h	/^    inline const Instruction* getCondInst(const Condition* cond) const {$/;"	f	class:PathCondAllocator
getCondNum	include/Util/PathCondAllocator.h	/^    static inline u32_t getCondNum() {$/;"	f	class:PathCondAllocator
getCondNumber	include/Util/Conditions.h	/^    inline u32_t getCondNumber() {$/;"	f	class:BddCondManager
getCondPointsTo	include/MemoryModel/PointerAnalysis.h	/^    virtual inline const CPtSet& getCondPointsTo(NodeID ptr) {$/;"	f	class:CondPTAImpl
getCondVar	include/Util/DPItem.h	/^    inline CxtVar getCondVar() const {$/;"	f	class:CxtStmtDPItem
getCondVar	include/Util/DPItem.h	/^    inline VFPathVar getCondVar() const {$/;"	f	class:PathStmtDPItem
getConstantNode	include/MemoryModel/PAG.h	/^    inline NodeID getConstantNode() const {$/;"	f	class:PAG
getConstantObj	include/MemoryModel/MemModel.h	/^    inline MemObj* getConstantObj() const {$/;"	f	class:SymbolTableInfo
getConstantObj	include/MemoryModel/PAG.h	/^    inline const MemObj* getConstantObj() const {$/;"	f	class:PAG
getConstraintGraph	include/WPA/Andersen.h	/^    ConstraintGraph* getConstraintGraph() {$/;"	f	class:Andersen
getConstraintNode	include/MemoryModel/ConsG.h	/^    inline ConstraintNode* getConstraintNode(NodeID id) const {$/;"	f	class:ConstraintGraph
getConstructorThisPtr	lib/Util/CPPUtil.cpp	/^const Argument *cppUtil::getConstructorThisPtr(const Function* fun) {$/;"	f	class:cppUtil
getContext	include/Util/CxtStmt.h	/^    inline const CallStrCxt& getContext() const {$/;"	f	class:CxtProc
getContext	include/Util/CxtStmt.h	/^    inline const CallStrCxt& getContext() const {$/;"	f	class:CxtStmt
getContext	include/Util/CxtStmt.h	/^    inline const CallStrCxt& getContext() const {$/;"	f	class:CxtThread
getContext	include/Util/SVFModule.h	/^    LLVMContext& getContext() const {$/;"	f	class:SVFModule
getContexts	include/Util/DPItem.h	/^    inline CallStrCxt& getContexts() {$/;"	f	class:ContextCond
getContexts	include/Util/DPItem.h	/^    inline const CallStrCxt& getContexts() const {$/;"	f	class:ContextCond
getContexts	include/Util/DPItem.h	/^    inline const ContextCond& getContexts() const {$/;"	f	class:CxtDPItem
getCopyInEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getCopyInEdges() const {$/;"	f	class:ConstraintNode
getCopyOutEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getCopyOutEdges() const {$/;"	f	class:ConstraintNode
getCtrl	include/DisPatch/InitPIDObj.h	/^            string getCtrl(int idx){ $/;"	f	class:InitPIDObj::AxisInfo
getCube	lib/CUDD/cuddSat.c	/^getCube($/;"	f	file:
getCurEvalVal	include/Util/PathCondAllocator.h	/^    inline const Value* getCurEvalVal() const {$/;"	f	class:PathCondAllocator
getCurNodeID	include/Util/DPItem.h	/^    inline NodeID getCurNodeID() const {$/;"	f	class:DPItem
getCurrentBB	include/MemoryModel/PAG.h	/^    inline const BasicBlock *getCurrentBB() const {$/;"	f	class:PAG
getCurrentValue	include/MemoryModel/PAG.h	/^    inline const Value *getCurrentValue() const {$/;"	f	class:PAG
getDF	include/MSSA/MemSSA.h	/^    DominanceFrontier* getDF(const Function& fn) {$/;"	f	class:MemSSA
getDFIn	include/MemoryModel/PointsToDFDS.h	/^    inline const DFPtsMap& getDFIn()  {$/;"	f	class:DFPTData
getDFInPtsMap	include/MemoryModel/PointsToDFDS.h	/^    inline const PtsMap& getDFInPtsMap(LocID loc)  {$/;"	f	class:DFPTData
getDFInPtsSet	include/MemoryModel/PointsToDFDS.h	/^    inline Data& getDFInPtsSet(LocID loc, const Key& var) {$/;"	f	class:DFPTData
getDFInPtsSet	include/WPA/FlowSensitive.h	/^    inline const PointsTo& getDFInPtsSet(const SVFGNode* stmt, const NodeID node) {$/;"	f	class:FlowSensitive
getDFInUpdatedVar	include/MemoryModel/PointsToDFDS.h	/^    inline const Data& getDFInUpdatedVar(LocID loc) {$/;"	f	class:IncDFPTData
getDFInputMap	include/WPA/FlowSensitive.h	/^    inline const DFInOutMap& getDFInputMap() const {$/;"	f	class:FlowSensitive
getDFOut	include/MemoryModel/PointsToDFDS.h	/^    inline const DFPtsMap& getDFOut()  {$/;"	f	class:DFPTData
getDFOutPtsMap	include/MemoryModel/PointsToDFDS.h	/^    inline const PtsMap& getDFOutPtsMap(LocID loc)  {$/;"	f	class:DFPTData
getDFOutPtsSet	include/MemoryModel/PointsToDFDS.h	/^    inline Data& getDFOutPtsSet(LocID loc, const Key& var) {$/;"	f	class:DFPTData
getDFOutPtsSet	include/WPA/FlowSensitive.h	/^    inline const PointsTo& getDFOutPtsSet(const SVFGNode* stmt, const NodeID node) {$/;"	f	class:FlowSensitive
getDFOutUpdatedVar	include/MemoryModel/PointsToDFDS.h	/^    inline const Data& getDFOutUpdatedVar(LocID loc) {$/;"	f	class:IncDFPTData
getDFOutputMap	include/WPA/FlowSensitive.h	/^    inline const DFInOutMap& getDFOutputMap() const {$/;"	f	class:FlowSensitive
getDFPTDataTy	include/MemoryModel/PointerAnalysis.h	/^    inline IncDFPTDataTy* getDFPTDataTy() const {$/;"	f	class:BVDataPTAImpl
getDT	include/MSSA/MemSSA.h	/^    DominatorTree* getDT(const Function& fn) {$/;"	f	class:MemSSA
getDT	include/Util/DataFlowUtil.h	/^    DominatorTree* getDT(const Function* f) {$/;"	f	class:PTACFInfoBuilder
getDT	include/Util/PathCondAllocator.h	/^    inline DominatorTree* getDT(const Function* fun) {$/;"	f	class:PathCondAllocator
getDataLayout	include/MemoryModel/MemModel.h	/^    inline static DataLayout* getDataLayout(Module* mod) {$/;"	f	class:SymbolTableInfo
getDeclaration	include/Util/SVFModule.h	/^    const FunctionSetType &getDeclaration(const Function *fun) const {$/;"	f	class:LLVMModuleSet
getDeclaration	include/Util/SVFModule.h	/^    const FunctionSetType &getDeclaration(const Function *fun) const {$/;"	f	class:SVFModule
getDef	include/MSSA/MSSAMuChi.h	/^    inline MSSADef* getDef() const {$/;"	f	class:MRVer
getDef	include/MSSA/SVFG.h	/^    inline NodeID getDef(const MRVer* mvar) const {$/;"	f	class:SVFG
getDef	include/MSSA/SVFG.h	/^    inline NodeID getDef(const PAGNode* pagNode) const {$/;"	f	class:SVFG
getDef	include/Util/VFG.h	/^    inline NodeID getDef(const PAGNode* pagNode) const {$/;"	f	class:VFG
getDefFunForMultipleModule	include/Util/SVFUtil.h	/^inline const Function* getDefFunForMultipleModule(const Function* fun) {$/;"	f	namespace:SVFUtil
getDefSVFGNode	include/MSSA/SVFG.h	/^    inline const SVFGNode* getDefSVFGNode(const PAGNode* pagNode) const {$/;"	f	class:SVFG
getDefVFGNode	include/Util/VFG.h	/^    inline const VFGNode* getDefVFGNode(const PAGNode* pagNode) const {$/;"	f	class:VFG
getDefinition	include/Util/SVFModule.h	/^    Function *getDefinition(const Function *fun) const {$/;"	f	class:LLVMModuleSet
getDefinition	include/Util/SVFModule.h	/^    Function *getDefinition(const Function *fun) const {$/;"	f	class:SVFModule
getDescendants	include/MemoryModel/CHA.h	/^	inline const CHNodeSetTy &getDescendants(const std::string className) {$/;"	f	class:CHGraph
getDiffPTDataTy	include/MemoryModel/PointerAnalysis.h	/^    inline DiffPTDataTy* getDiffPTDataTy() const {$/;"	f	class:BVDataPTAImpl
getDiffPts	include/MemoryModel/PointsToDS.h	/^    inline Data & getDiffPts(Key& var) {$/;"	f	class:DiffPTData
getDiffPts	include/WPA/Andersen.h	/^    virtual inline PointsTo& getDiffPts(NodeID id) {$/;"	f	class:Andersen
getDiffPts	include/WPA/Andersen.h	/^    virtual inline PointsTo& getDiffPts(NodeID id) {$/;"	f	class:AndersenWaveDiffWithType
getDirCallSitesInvokingCallee	lib/Util/PTACallGraph.cpp	/^void PTACallGraph::getDirCallSitesInvokingCallee(const Function* callee, PTACallGraphEdge::CallInstSet& csSet) {$/;"	f	class:PTACallGraph
getDirectCGEdges	include/MemoryModel/ConsG.h	/^    inline ConstraintEdge::ConstraintEdgeSetTy& getDirectCGEdges() {$/;"	f	class:ConstraintGraph
getDirectCalls	include/Util/PTACallGraph.h	/^	inline CallInstSet& getDirectCalls() {$/;"	f	class:PTACallGraphEdge
getDirectCalls	include/Util/PTACallGraph.h	/^    inline const CallInstSet& getDirectCalls() const {$/;"	f	class:PTACallGraphEdge
getDirectInEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getDirectInEdges() const {$/;"	f	class:ConstraintNode
getDirectOutEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getDirectOutEdges() const {$/;"	f	class:ConstraintNode
getDstID	include/MemoryModel/GenericGraph.h	/^    inline NodeID getDstID() const {$/;"	f	class:GenericEdge
getDstNode	include/MemoryModel/GenericGraph.h	/^    NodeType* getDstNode() const {$/;"	f	class:GenericEdge
getEdge	include/MemoryModel/ConsG.h	/^    inline ConstraintEdge* getEdge(ConstraintNode* src, ConstraintNode* dst, ConstraintEdge::ConstraintEdgeK kind) {$/;"	f	class:ConstraintGraph
getEdgeAttributes	lib/MSSA/SVFG.cpp	/^    static std::string getEdgeAttributes(NodeType *node, EdgeIter EI, SVFG *pag) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeAttributes	lib/MemoryModel/CHA.cpp	/^    static std::string getEdgeAttributes(CHNode *node, EdgeIter EI, CHGraph *CHGraph) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeAttributes	lib/MemoryModel/ConsG.cpp	/^    static std::string getEdgeAttributes(NodeType *node, EdgeIter EI, ConstraintGraph *pag) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeAttributes	lib/MemoryModel/OfflineConsG.cpp	/^        static std::string getEdgeAttributes(NodeType *node, EdgeIter EI, OfflineConsG *pag) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeAttributes	lib/MemoryModel/PAG.cpp	/^    static std::string getEdgeAttributes(PAGNode *node, EdgeIter EI, PAG *pag) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeAttributes	lib/Util/ICFG.cpp	/^    static std::string getEdgeAttributes(NodeType *node, EdgeIter EI, ICFG *pag) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeAttributes	lib/Util/PTACallGraph.cpp	/^    static std::string getEdgeAttributes(PTACallGraphNode *node, EdgeIter EI, PTACallGraph *PTACallGraph) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeAttributes	lib/Util/VFG.cpp	/^    static std::string getEdgeAttributes(NodeType *node, EdgeIter EI, VFG *vfg) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeID	include/MemoryModel/ConsGEdge.h	/^    inline EdgeID getEdgeID() const {$/;"	f	class:ConstraintEdge
getEdgeID	include/MemoryModel/PAGEdge.h	/^    inline EdgeID getEdgeID() const {$/;"	f	class:PAGEdge
getEdgeKind	include/MemoryModel/GenericGraph.h	/^    inline GEdgeKind getEdgeKind() const {$/;"	f	class:GenericEdge
getEdgeSet	include/MemoryModel/PAG.h	/^    inline PAGEdge::PAGEdgeSetTy& getEdgeSet(PAGEdge::PEDGEK kind) {$/;"	f	class:PAG
getEdgeSourceLabel	lib/MSSA/SVFG.cpp	/^    static std::string getEdgeSourceLabel(NodeType *node, EdgeIter EI) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeSourceLabel	lib/MemoryModel/ConsG.cpp	/^    static std::string getEdgeSourceLabel(NodeType *node, EdgeIter EI) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeSourceLabel	lib/MemoryModel/OfflineConsG.cpp	/^        static std::string getEdgeSourceLabel(NodeType *node, EdgeIter EI) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeSourceLabel	lib/MemoryModel/PAG.cpp	/^    static std::string getEdgeSourceLabel(PAGNode *node, EdgeIter EI) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeSourceLabel	lib/Util/ICFG.cpp	/^    static std::string getEdgeSourceLabel(NodeType *node, EdgeIter EI) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeSourceLabel	lib/Util/PTACallGraph.cpp	/^    static std::string getEdgeSourceLabel(NodeType *node, EdgeIter EI) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeSourceLabel	lib/Util/VFG.cpp	/^    static std::string getEdgeSourceLabel(NodeType *node, EdgeIter EI) {$/;"	f	struct:llvm::DOTGraphTraits
getEdgeType	include/MemoryModel/CHA.h	/^    CHEDGETYPE getEdgeType() const {$/;"	f	class:CHEdge
getEdges	include/MemoryModel/ExternalPAG.h	/^    std::set<std::tuple<NodeID, NodeID, std::string, int>> &getEdges() {$/;"	f	class:ExternalPAG
getElemNumStridePairVect	include/MemoryModel/LocationSet.h	/^    inline const ElemNumStridePairVec& getElemNumStridePairVect() const {$/;"	f	class:FieldInfo
getElementSet	include/MemoryModel/ConditionalPT.h	/^    inline const ElementSet& getElementSet() const {$/;"	f	class:CondStdSet
getEntryChi	include/MSSA/SVFGNode.h	/^    inline const MemSSA::ENTRYCHI* getEntryChi() const {$/;"	f	class:FormalINSVFGNode
getEntryNode	include/MemoryModel/GenericGraph.h	/^    static NodeType* getEntryNode(GenericGraphTy* pag) {$/;"	f	struct:llvm::GraphTraits
getEntryNode	include/MemoryModel/GenericGraph.h	/^    static NodeType* getEntryNode(NodeType* pagN) {$/;"	f	struct:llvm::GraphTraits
getEntryNode	include/MemoryModel/GenericGraph.h	/^    static inline NodeType* getEntryNode(Inverse<NodeType* > G) {$/;"	f	struct:llvm::GraphTraits
getEscapObjviaGlobals	lib/MSSA/MemRegion.cpp	/^void MRGenerator::getEscapObjviaGlobals(NodeBS& globs, const NodeBS& calleeModRef) {$/;"	f	class:MRGenerator
getEvalBrCond	include/Util/PathCondAllocator.h	/^    inline Condition* getEvalBrCond(const BasicBlock * bb, const BasicBlock *succ) {$/;"	f	class:PathCondAllocator
getExtAPI	include/Util/ExtAPI.h	/^    static ExtAPI* getExtAPI() {$/;"	f	class:ExtAPI
getFIObjNode	include/MemoryModel/ConsG.h	/^    inline NodeID getFIObjNode(NodeID id) {$/;"	f	class:ConstraintGraph
getFIObjNode	include/MemoryModel/PAG.h	/^    inline NodeID getFIObjNode(NodeID id) const {$/;"	f	class:PAG
getFIObjNode	include/MemoryModel/PAG.h	/^    inline NodeID getFIObjNode(const MemObj* obj) const {$/;"	f	class:PAG
getFIObjNode	include/MemoryModel/PointerAnalysis.h	/^    inline NodeID getFIObjNode(NodeID id) {$/;"	f	class:PointerAnalysis
getFalseCond	include/Util/Conditions.h	/^    inline DdNode* getFalseCond() const {$/;"	f	class:BddCondManager
getFalseCond	include/Util/PathCondAllocator.h	/^    inline Condition* getFalseCond() const {$/;"	f	class:PathCondAllocator
getFattenFieldIdxVec	include/MemoryModel/MemModel.h	/^    const inline std::vector<u32_t>& getFattenFieldIdxVec(const Type *T) {$/;"	f	class:SymbolTableInfo
getFattenFieldOffsetVec	include/MemoryModel/MemModel.h	/^    const inline std::vector<u32_t>& getFattenFieldOffsetVec(const Type *T) {$/;"	f	class:SymbolTableInfo
getFieldIdx	include/MemoryModel/PAGNode.h	/^    u32_t getFieldIdx() const {$/;"	f	class:GepValPN
getFieldIdxVec	include/MemoryModel/MemModel.h	/^	inline std::vector<u32_t>& getFieldIdxVec() {$/;"	f	class:StInfo
getFieldObjNodeNum	include/MemoryModel/PAG.h	/^    inline Size_t getFieldObjNodeNum() const {$/;"	f	class:PAG
getFieldOffsetVec	include/MemoryModel/MemModel.h	/^	inline std::vector<u32_t>& getFieldOffsetVec() {$/;"	f	class:StInfo
getFieldTypeWithByteOffset	include/MemoryModel/MemModel.h	/^	inline const llvm::Type* getFieldTypeWithByteOffset(u32_t offset) {$/;"	f	class:StInfo
getFieldTypeWithFldIdx	include/MemoryModel/MemModel.h	/^	inline const llvm::Type* getFieldTypeWithFldIdx(u32_t fldIdx) {$/;"	f	class:StInfo
getFieldValNodeNum	include/MemoryModel/PAG.h	/^    inline Size_t getFieldValNodeNum() const {$/;"	f	class:PAG
getFields	lib/MemoryModel/MemModel.cpp	/^u32_t SymbolTableInfo::getFields(std::vector<LocationSet>& fields, const Type* T, u32_t msz)$/;"	f	class:SymbolTableInfo
getFieldsAfterCollapse	lib/MemoryModel/PAG.cpp	/^NodeBS PAG::getFieldsAfterCollapse(NodeID id) {$/;"	f	class:PAG
getFileName	include/MemoryModel/PAGBuilderFromFile.h	/^    std::string getFileName() const {$/;"	f	class:PAGBuilderFromFile
getFlattenByteOffset	include/MemoryModel/LocationSet.h	/^    inline u32_t getFlattenByteOffset() const {$/;"	f	class:FieldInfo
getFlattenElemTy	include/MemoryModel/LocationSet.h	/^    inline const Type* getFlattenElemTy() const {$/;"	f	class:FieldInfo
getFlattenFieldInfoVec	include/MemoryModel/MemModel.h	/^	inline std::vector<FieldInfo>& getFlattenFieldInfoVec() {$/;"	f	class:StInfo
getFlattenFieldInfoVec	include/MemoryModel/MemModel.h	/^    const inline std::vector<FieldInfo>& getFlattenFieldInfoVec(const Type *T) {$/;"	f	class:SymbolTableInfo
getFlattenFldIdx	include/MemoryModel/LocationSet.h	/^    inline u32_t getFlattenFldIdx() const {$/;"	f	class:FieldInfo
getForkEdgeBegin	include/Util/ThreadCallGraph.h	/^    inline ForkEdgeSet::const_iterator getForkEdgeBegin(const Instruction* inst) const {$/;"	f	class:ThreadCallGraph
getForkEdgeEnd	include/Util/ThreadCallGraph.h	/^    inline ForkEdgeSet::const_iterator getForkEdgeEnd(const Instruction* inst) const {$/;"	f	class:ThreadCallGraph
getForkedFun	include/Util/SVFUtil.h	/^inline const Value* getForkedFun(const CallSite cs) {$/;"	f	namespace:SVFUtil
getForkedFun	include/Util/SVFUtil.h	/^inline const Value* getForkedFun(const Instruction *inst) {$/;"	f	namespace:SVFUtil
getForkedFun	include/Util/ThreadAPI.h	/^    inline const Value* getForkedFun(CallSite cs) const {$/;"	f	class:ThreadAPI
getForkedFun	include/Util/ThreadAPI.h	/^    inline const Value* getForkedFun(const Instruction *inst) const {$/;"	f	class:ThreadAPI
getForkedThread	include/Util/ThreadAPI.h	/^    inline const Value* getForkedThread(CallSite cs) const {$/;"	f	class:ThreadAPI
getForkedThread	include/Util/ThreadAPI.h	/^    inline const Value* getForkedThread(const Instruction *inst) const {$/;"	f	class:ThreadAPI
getFormalINSVFGNodes	include/MSSA/SVFG.h	/^    inline FormalINSVFGNodeSet& getFormalINSVFGNodes(const Function* fun) {$/;"	f	class:SVFG
getFormalOUTDef	include/MSSA/SVFGOPT.h	/^    inline NodeID getFormalOUTDef(NodeID fo) const {$/;"	f	class:SVFGOPT
getFormalOUTSVFGNodes	include/MSSA/SVFG.h	/^    inline FormalOUTSVFGNodeSet& getFormalOUTSVFGNodes(const Function* fun) {$/;"	f	class:SVFG
getFormalParmVFGNode	include/Util/VFG.h	/^    inline FormalParmVFGNode* getFormalParmVFGNode(const PAGNode* fparm) const {$/;"	f	class:VFG
getFormalParms	include/Util/ICFGNode.h	/^    inline const FormalParmVFGNodeVec &getFormalParms() const {$/;"	f	class:FunEntryBlockNode
getFormalRet	include/Util/ICFGNode.h	/^    inline const FormalRetVFGNode *getFormalRet() const {$/;"	f	class:FunExitBlockNode
getFormalRetVFGNode	include/Util/VFG.h	/^    inline FormalRetVFGNode* getFormalRetVFGNode(const PAGNode* fret) const {$/;"	f	class:VFG
getFun	include/MSSA/SVFGNode.h	/^    inline const Function* getFun() const {$/;"	f	class:FormalINSVFGNode
getFun	include/MSSA/SVFGNode.h	/^    inline const Function* getFun() const {$/;"	f	class:FormalOUTSVFGNode
getFun	include/MSSA/SVFGNode.h	/^    inline const Function* getFun() const {$/;"	f	class:InterMSSAPHISVFGNode
getFun	include/Util/ICFGNode.h	/^    inline const Function *getFun() const {$/;"	f	class:FunEntryBlockNode
getFun	include/Util/ICFGNode.h	/^    inline const Function *getFun() const {$/;"	f	class:FunExitBlockNode
getFun	include/Util/VFGNode.h	/^    inline const Function* getFun() const {$/;"	f	class:FormalParmVFGNode
getFun	include/Util/VFGNode.h	/^    inline const Function* getFun() const {$/;"	f	class:FormalRetVFGNode
getFun	include/Util/VFGNode.h	/^    inline const Function* getFun() const {$/;"	f	class:InterPHIVFGNode
getFun	include/Util/VFGNode.h	/^    virtual const Function* getFun() const {$/;"	f	class:VFGNode
getFunArgsList	include/MemoryModel/PAG.h	/^    inline const PAGNodeList& getFunArgsList(const Function * func) const {$/;"	f	class:PAG
getFunArgsMap	include/MemoryModel/PAG.h	/^    inline FunToArgsListMap& getFunArgsMap() {$/;"	f	class:PAG
getFunEntryChiNum	lib/MSSA/MemSSA.cpp	/^u32_t MemSSA::getFunEntryChiNum() const$/;"	f	class:MemSSA
getFunEntryICFGNode	include/Util/ICFG.h	/^    inline FunEntryBlockNode* getFunEntryICFGNode(const Function* fun) {$/;"	f	class:ICFG
getFunExitBB	include/Util/SVFUtil.h	/^inline const BasicBlock* getFunExitBB(const Function* fun) {$/;"	f	namespace:SVFUtil
getFunExitICFGNode	include/Util/ICFG.h	/^	inline FunExitBlockNode* getFunExitICFGNode(const Function* fun) {$/;"	f	class:ICFG
getFunMRSet	include/MSSA/MemRegion.h	/^    inline MRSet& getFunMRSet(const Function* fun) {$/;"	f	class:MRGenerator
getFunNameOfVCallSite	lib/Util/CPPUtil.cpp	/^string cppUtil::getFunNameOfVCallSite(CallSite cs) {$/;"	f	class:cppUtil
getFunPtr	include/MemoryModel/PAG.h	/^    inline NodeID getFunPtr(const CallSite cs) const {$/;"	f	class:PAG
getFunPtr	include/MemoryModel/PointerAnalysis.h	/^    inline NodeID getFunPtr(const CallSite& cs) const {$/;"	f	class:PointerAnalysis
getFunReachableBBs	lib/Util/SVFUtil.cpp	/^void SVFUtil::getFunReachableBBs (const Function * fun, DominatorTree* dt, std::vector<const BasicBlock*> &reachableBBs) {$/;"	f	class:SVFUtil
getFunRet	include/MemoryModel/PAG.h	/^    inline const PAGNode* getFunRet(const Function * func) const {$/;"	f	class:PAG
getFunRetMuNum	lib/MSSA/MemSSA.cpp	/^u32_t MemSSA::getFunRetMuNum() const$/;"	f	class:MemSSA
getFunRets	include/MemoryModel/PAG.h	/^    inline FunToRetMap& getFunRets() {$/;"	f	class:PAG
getFunToEntryChiSetMap	include/MSSA/MemSSA.h	/^    inline FunToEntryChiSetMap& getFunToEntryChiSetMap() {$/;"	f	class:MemSSA
getFunToPointsToList	include/MSSA/MemRegion.h	/^    inline FunToPointsToMap& getFunToPointsToList() {$/;"	f	class:MRGenerator
getFunToRetMuSetMap	include/MSSA/MemSSA.h	/^    inline FunToReturnMuSetMap& getFunToRetMuSetMap() {$/;"	f	class:MemSSA
getFuncEntryChiSet	include/MSSA/MemSSA.h	/^    inline CHISet& getFuncEntryChiSet(const Function * fun) {$/;"	f	class:MemSSA
getFunction	include/MSSA/MSSAMuChi.h	/^    inline const Function* getFunction() const {$/;"	f	class:EntryCHI
getFunction	include/MSSA/MSSAMuChi.h	/^    inline const Function* getFunction() const {$/;"	f	class:RetMU
getFunction	include/MSSA/MemRegion.h	/^    const Function* getFunction(const PAGEdge* pagEdge) const {$/;"	f	class:MRGenerator
getFunction	include/MemoryModel/PAGNode.h	/^    virtual inline const Function* getFunction() const {$/;"	f	class:PAGNode
getFunction	include/Util/PTACallGraph.h	/^    inline const Function* getFunction() const {$/;"	f	class:PTACallGraphNode
getFunction	include/Util/SVFModule.h	/^    inline Function* getFunction(StringRef name) const {$/;"	f	class:SVFModule
getFunctionName	include/MemoryModel/ExternalPAG.h	/^    std::string getFunctionName() const { return functionName; }$/;"	f	class:ExternalPAG
getGNode	include/MemoryModel/GenericGraph.h	/^    inline NodeType* getGNode(NodeID id) const {$/;"	f	class:GenericGraph
getGepInEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getGepInEdges() const {$/;"	f	class:ConstraintNode
getGepObjNode	include/MemoryModel/ConsG.h	/^    inline NodeID getGepObjNode(NodeID id, const LocationSet& ls) {$/;"	f	class:ConstraintGraph
getGepObjNode	include/MemoryModel/PointerAnalysis.h	/^    inline NodeID getGepObjNode(NodeID id, const LocationSet& ls) {$/;"	f	class:PointerAnalysis
getGepObjNode	lib/MemoryModel/PAG.cpp	/^NodeID PAG::getGepObjNode(NodeID id, const LocationSet& ls) {$/;"	f	class:PAG
getGepObjNode	lib/MemoryModel/PAG.cpp	/^NodeID PAG::getGepObjNode(const MemObj* obj, const LocationSet& ls) {$/;"	f	class:PAG
getGepOutEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getGepOutEdges() const {$/;"	f	class:ConstraintNode
getGepValNode	lib/MemoryModel/PAG.cpp	/^NodeID PAG::getGepValNode(const Value* val, const LocationSet& ls, const Type *baseType, u32_t fieldidx) {$/;"	f	class:PAG
getGlobalPAGEdgeSet	include/MemoryModel/PAG.h	/^    inline PAGEdgeSet& getGlobalPAGEdgeSet() {$/;"	f	class:PAG
getGlobalRep	include/MemoryModel/MemModel.h	/^    inline const Value* getGlobalRep(const Value* val) const{$/;"	f	class:SymbolTableInfo
getGlobalRep	include/Util/SVFModule.h	/^    GlobalVariable *getGlobalRep(const GlobalVariable *val) const {$/;"	f	class:LLVMModuleSet
getGlobalRep	include/Util/SVFModule.h	/^    GlobalVariable *getGlobalRep(const GlobalVariable *val) const {$/;"	f	class:SVFModule
getGlobalVFGNodes	include/Util/VFG.h	/^    inline GlobalVFGNodeSet& getGlobalVFGNodes() {$/;"	f	class:VFG
getGlobalVarField	lib/MemoryModel/PAGBuilder.cpp	/^NodeID PAGBuilder::getGlobalVarField(const GlobalVariable *gvar, u32_t offset) {$/;"	f	class:PAGBuilder
getGraphEdge	lib/Util/PTACallGraph.cpp	/^PTACallGraphEdge* PTACallGraph::getGraphEdge(PTACallGraphNode* src, PTACallGraphNode* dst,PTACallGraphEdge::CEDGEK kind, CallSiteID csId) {$/;"	f	class:PTACallGraph
getGraphName	include/MemoryModel/PAG.h	/^    inline std::string getGraphName() const {$/;"	f	class:PAG
getGraphName	lib/MSSA/SVFG.cpp	/^    static std::string getGraphName(SVFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	lib/MemoryModel/CHA.cpp	/^    static std::string getGraphName(CHGraph *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	lib/MemoryModel/ConsG.cpp	/^    static std::string getGraphName(ConstraintGraph *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	lib/MemoryModel/OfflineConsG.cpp	/^        static std::string getGraphName(OfflineConsG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	lib/MemoryModel/PAG.cpp	/^    static std::string getGraphName(PAG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	lib/Util/ICFG.cpp	/^    static std::string getGraphName(ICFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	lib/Util/PTACallGraph.cpp	/^    static std::string getGraphName(PTACallGraph *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getGraphName	lib/Util/VFG.cpp	/^    static std::string getGraphName(VFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getHeapAllocHoldingArgPosition	include/Util/SVFUtil.h	/^inline int getHeapAllocHoldingArgPosition(const CallSite cs) {$/;"	f	namespace:SVFUtil
getHeapAllocHoldingArgPosition	include/Util/SVFUtil.h	/^inline int getHeapAllocHoldingArgPosition(const Function *fun) {$/;"	f	namespace:SVFUtil
getHeapAllocHoldingArgPosition	include/Util/SVFUtil.h	/^inline int getHeapAllocHoldingArgPosition(const Instruction *inst) {$/;"	f	namespace:SVFUtil
getICFGEdge	lib/Util/ICFG.cpp	/^ICFGEdge* ICFG::getICFGEdge(const ICFGNode* src, const ICFGNode* dst, ICFGEdge::ICFGEdgeK kind) {$/;"	f	class:ICFG
getICFGNode	include/Util/ICFG.h	/^    inline ICFGNode* getICFGNode(NodeID id) const {$/;"	f	class:ICFG
getIDFSet	include/Util/DataFlowUtil.h	/^    iterator getIDFSet(BasicBlock *B) {$/;"	f	class:IteratedDominanceFrontier
getId	include/MemoryModel/GenericGraph.h	/^    inline NodeID getId() const {$/;"	f	class:GenericNode
getInEdges	include/MemoryModel/GenericGraph.h	/^    inline const GEdgeSetTy& getInEdges() const {$/;"	f	class:GenericNode
getInOff	lib/DisPatch/CtrlIdentifier.cpp	/^int CtrlIdentifier::getInOff(ctrlinfo *ci){ $/;"	f	class:CtrlIdentifier
getInOff_IdxedIncreasingOrder	lib/DisPatch/CtrlIdentifier.cpp	/^int CtrlIdentifier::getInOff_IdxedIncreasingOrder(ctrlinfo *ci, int idx){ $/;"	f	class:CtrlIdentifier
getIncomingEdges	include/MemoryModel/PAGNode.h	/^    inline PAGEdge::PAGEdgeSetTy& getIncomingEdges(PAGEdge::PEDGEK kind) {$/;"	f	class:PAGNode
getIncomingEdgesBegin	include/MemoryModel/PAGNode.h	/^    inline PAGEdge::PAGEdgeSetTy::iterator getIncomingEdgesBegin(PAGEdge::PEDGEK kind) const {$/;"	f	class:PAGNode
getIncomingEdgesEnd	include/MemoryModel/PAGNode.h	/^    inline PAGEdge::PAGEdgeSetTy::iterator getIncomingEdgesEnd(PAGEdge::PEDGEK kind) const {$/;"	f	class:PAGNode
getIndCSCallees	include/MemoryModel/PointerAnalysis.h	/^    inline const FunctionSet& getIndCSCallees(CallInst* csInst) const {$/;"	f	class:PointerAnalysis
getIndCSCallees	include/MemoryModel/PointerAnalysis.h	/^    inline const FunctionSet& getIndCSCallees(CallSite cs) const {$/;"	f	class:PointerAnalysis
getIndCSCallees	include/Util/PTACallGraph.h	/^    inline const FunctionSet& getIndCSCallees(CallInst* csInst) const {$/;"	f	class:PTACallGraph
getIndCSCallees	include/Util/PTACallGraph.h	/^    inline const FunctionSet& getIndCSCallees(CallSite cs) const {$/;"	f	class:PTACallGraph
getIndCallMap	include/MemoryModel/PointerAnalysis.h	/^    inline CallEdgeMap& getIndCallMap() {$/;"	f	class:PointerAnalysis
getIndCallMap	include/Util/PTACallGraph.h	/^    inline CallEdgeMap& getIndCallMap() {$/;"	f	class:PTACallGraph
getIndCallSites	include/MemoryModel/PAG.h	/^    inline const CallSiteSet& getIndCallSites(NodeID funPtr) const {$/;"	f	class:PAG
getIndCallSitesInvokingCallee	lib/Util/PTACallGraph.cpp	/^void PTACallGraph::getIndCallSitesInvokingCallee(const Function* callee, PTACallGraphEdge::CallInstSet& csSet) {$/;"	f	class:PTACallGraph
getIndexedType	include/Util/GEPTypeBridgeIterator.h	/^    Type *getIndexedType() const {$/;"	f	class:llvm::generic_bridge_gep_type_iterator
getIndirectCalls	include/Util/PTACallGraph.h	/^    inline CallInstSet& getIndirectCalls() {$/;"	f	class:PTACallGraphEdge
getIndirectCalls	include/Util/PTACallGraph.h	/^    inline const CallInstSet& getIndirectCalls() const {$/;"	f	class:PTACallGraphEdge
getIndirectCallsites	include/MemoryModel/ConsG.h	/^    inline const PAG::CallSiteToFunPtrMap& getIndirectCallsites() const {$/;"	f	class:ConstraintGraph
getIndirectCallsites	include/MemoryModel/PAG.h	/^    inline const CallSiteToFunPtrMap& getIndirectCallsites() const {$/;"	f	class:PAG
getIndirectCallsites	include/MemoryModel/PointerAnalysis.h	/^    inline const CallSiteToFunPtrMap& getIndirectCallsites() const {$/;"	f	class:PointerAnalysis
getInst	include/MemoryModel/PAGEdge.h	/^    inline const Instruction* getInst() const {$/;"	f	class:PAGEdge
getInst	include/Util/ICFGNode.h	/^    inline const Instruction *getInst() const {$/;"	f	class:IntraBlockNode
getInst	include/Util/VFGNode.h	/^    inline const Instruction* getInst() const {$/;"	f	class:StmtVFGNode
getInstPAGEdgeList	include/MemoryModel/PAG.h	/^    inline PAGEdgeList& getInstPAGEdgeList(const Instruction* inst) {$/;"	f	class:PAG
getInstPTAPAGEdgeList	include/MemoryModel/PAG.h	/^    inline PAGEdgeList& getInstPTAPAGEdgeList(const Instruction* inst) {$/;"	f	class:PAG
getInstances	include/MemoryModel/CHA.h	/^	inline const CHNodeSetTy &getInstances(const std::string className) {$/;"	f	class:CHGraph
getInstancesAndDescendants	lib/MemoryModel/CHA.cpp	/^const CHGraph::CHNodeSetTy& CHGraph::getInstancesAndDescendants(const string className) {$/;"	f	class:CHGraph
getInterBlockICFGNode	lib/Util/ICFG.cpp	/^InterBlockNode* ICFG::getInterBlockICFGNode(const Instruction* inst){$/;"	f	class:ICFG
getInterVFEdgeAtIndCSFromAInToFIn	include/MSSA/SVFG.h	/^    virtual inline void getInterVFEdgeAtIndCSFromAInToFIn(ActualINSVFGNode* actualIn, const Function* callee, SVFGEdgeSetTy& edges) {$/;"	f	class:SVFG
getInterVFEdgeAtIndCSFromAPToFP	include/MSSA/SVFG.h	/^    virtual inline void getInterVFEdgeAtIndCSFromAPToFP(const PAGNode* cs_arg, const PAGNode* fun_arg, CallSite cs, CallSiteID csId, SVFGEdgeSetTy& edges) {$/;"	f	class:SVFG
getInterVFEdgeAtIndCSFromFOutToAOut	include/MSSA/SVFG.h	/^    virtual inline void getInterVFEdgeAtIndCSFromFOutToAOut(ActualOUTSVFGNode* actualOut, const Function* callee, SVFGEdgeSetTy& edges) {$/;"	f	class:SVFG
getInterVFEdgeAtIndCSFromFRToAR	include/MSSA/SVFG.h	/^    virtual inline void getInterVFEdgeAtIndCSFromFRToAR(const PAGNode* fun_ret, const PAGNode* cs_ret, CallSiteID csId, SVFGEdgeSetTy& edges) {$/;"	f	class:SVFG
getInterVFEdgesForIndirectCallSite	lib/MSSA/SVFG.cpp	/^void SVFG::getInterVFEdgesForIndirectCallSite(const CallSite cs, const Function* callee, SVFGEdgeSetTy& edges)$/;"	f	class:SVFG
getIntersList	include/MSSA/MemPartition.h	/^    inline PointsToList& getIntersList(const Function* func) {$/;"	f	class:IntraDisjointMRG
getIntraBlockICFGNode	lib/Util/ICFG.cpp	/^IntraBlockNode* ICFG::getIntraBlockICFGNode(const Instruction* inst) {$/;"	f	class:ICFG
getIntraPAGEdge	include/MemoryModel/PAG.h	/^    inline PAGEdge* getIntraPAGEdge(NodeID src, NodeID dst, PAGEdge::PEDGEK kind) {$/;"	f	class:PAG
getIntraPAGEdge	include/MemoryModel/PAG.h	/^    inline PAGEdge* getIntraPAGEdge(PAGNode* src, PAGNode* dst, PAGEdge::PEDGEK kind) {$/;"	f	class:PAG
getIntraPHIVFGNode	include/Util/VFG.h	/^	inline IntraPHIVFGNode* getIntraPHIVFGNode(const PAGNode* pagNode) const {$/;"	f	class:VFG
getJoinEdgeBegin	include/Util/ThreadCallGraph.h	/^    inline JoinEdgeSet::const_iterator getJoinEdgeBegin(const Instruction* inst) const {$/;"	f	class:ThreadCallGraph
getJoinEdgeEnd	include/Util/ThreadCallGraph.h	/^    inline JoinEdgeSet::const_iterator getJoinEdgeEnd(const Instruction* inst) const {$/;"	f	class:ThreadCallGraph
getJoinSites	include/Util/ThreadCallGraph.h	/^    inline void getJoinSites(const PTACallGraphNode* routine, InstSet& csSet) {$/;"	f	class:ThreadCallGraph
getJoinedThread	include/Util/ThreadAPI.h	/^    inline const Value* getJoinedThread(CallSite cs) const {$/;"	f	class:ThreadAPI
getJoinedThread	include/Util/ThreadAPI.h	/^    inline const Value* getJoinedThread(const Instruction *inst) const {$/;"	f	class:ThreadAPI
getKind	include/Util/PTACallGraph.h	/^    inline CGEK getKind() const {$/;"	f	class:PTACallGraph
getKind	include/Util/VFG.h	/^    inline VFGK getKind() const {$/;"	f	class:VFG
getLHSTopLevPtr	lib/Util/VFG.cpp	/^const PAGNode* VFG::getLHSTopLevPtr(const VFGNode* node) const {$/;"	f	class:VFG
getLLVMCallSite	include/Util/SVFUtil.h	/^inline CallSite getLLVMCallSite(const Instruction* inst) {$/;"	f	namespace:SVFUtil
getLLVMCallSite	lib/Util/ThreadAPI.cpp	/^const CallSite ThreadAPI::getLLVMCallSite(const Instruction *inst) const {$/;"	f	class:ThreadAPI
getLLVMFunction	include/Util/SVFUtil.h	/^inline const Function* getLLVMFunction(const Value* val) {$/;"	f	namespace:SVFUtil
getLLVMModuleSet	include/Util/SVFModule.h	/^    static inline LLVMModuleSet *getLLVMModuleSet() {$/;"	f	class:SVFModule
getLLVMType	include/MemoryModel/PTAType.h	/^    inline const Type *getLLVMType() const {$/;"	f	class:PTAType
getLargest	lib/CUDD/cuddSat.c	/^getLargest($/;"	f	file:
getLevelKeys	lib/CUDD/cuddExact.c	/^getLevelKeys($/;"	f	file:
getLoadCGEdges	include/MemoryModel/ConsG.h	/^    inline ConstraintEdge::ConstraintEdgeSetTy& getLoadCGEdges() {$/;"	f	class:ConstraintGraph
getLoadInEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getLoadInEdges() const {$/;"	f	class:ConstraintNode
getLoadInst	include/MSSA/MSSAMuChi.h	/^    inline const LoadPE* getLoadInst() const {$/;"	f	class:LoadMU
getLoadMRSet	include/MSSA/MemRegion.h	/^    inline MRSet& getLoadMRSet(const LoadPE* load) {$/;"	f	class:MRGenerator
getLoadMuNum	lib/MSSA/MemSSA.cpp	/^u32_t MemSSA::getLoadMuNum() const$/;"	f	class:MemSSA
getLoadOutEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getLoadOutEdges() const {$/;"	f	class:ConstraintNode
getLoadToMUSetMap	include/MSSA/MemSSA.h	/^    inline LoadToMUSetMap& getLoadToMUSetMap() {$/;"	f	class:MemSSA
getLoc	include/Util/DPItem.h	/^    inline const LocCond* getLoc() const {$/;"	f	class:StmtDPItem
getLocationSet	include/MemoryModel/ConsGEdge.h	/^    inline const LocationSet& getLocationSet() const {$/;"	f	class:NormalGepCGEdge
getLocationSet	include/MemoryModel/PAGEdge.h	/^    inline const LocationSet& getLocationSet() const {$/;"	f	class:NormalGepPE
getLocationSet	include/MemoryModel/PAGNode.h	/^    inline const LocationSet& getLocationSet() const {$/;"	f	class:GepObjPN
getLocationSetFromBaseNode	lib/MemoryModel/PAG.cpp	/^LocationSet PAG::getLocationSetFromBaseNode(NodeID nodeId) {$/;"	f	class:PAG
getLockVal	include/Util/ThreadAPI.h	/^    inline const Value* getLockVal(CallSite cs) const {$/;"	f	class:ThreadAPI
getLockVal	include/Util/ThreadAPI.h	/^    inline const Value* getLockVal(const Instruction *inst) const {$/;"	f	class:ThreadAPI
getLoopInfo	include/Util/DataFlowUtil.h	/^    PTALoopInfo* getLoopInfo(const Function* f) {$/;"	f	class:PTACFInfoBuilder
getLoopInfo	include/Util/PathCondAllocator.h	/^    PTALoopInfo* getLoopInfo(const Function* f) {$/;"	f	class:PathCondAllocator
getMR	include/MSSA/MSSAMuChi.h	/^    inline const MemRegion* getMR() const {$/;"	f	class:MRVer
getMR	include/MSSA/MSSAMuChi.h	/^    inline const MemRegion* getMR() const {$/;"	f	class:MSSADEF
getMR	include/MSSA/MSSAMuChi.h	/^    inline const MemRegion* getMR() const {$/;"	f	class:MSSAMU
getMR	lib/MSSA/MemRegion.cpp	/^const MemRegion* MRGenerator::getMR(const PointsTo& cpts) const {$/;"	f	class:MRGenerator
getMRGenerator	include/MSSA/MemSSA.h	/^    inline MRGenerator* getMRGenerator() {$/;"	f	class:MemSSA
getMRID	include/MSSA/MemRegion.h	/^    inline MRID getMRID() const {$/;"	f	class:MemRegion
getMRNum	include/MSSA/MemRegion.h	/^    inline Size_t getMRNum() const {$/;"	f	class:MRGenerator
getMRSet	include/MSSA/MemRegion.h	/^    MRSet& getMRSet() {$/;"	f	class:MRGenerator
getMRVer	include/MSSA/SVFGEdge.h	/^    inline MRVerSet& getMRVer() {$/;"	f	class:IndirectSVFGEdge
getMRsForCallSiteRef	include/MSSA/MemRegion.h	/^    virtual inline void getMRsForCallSiteRef(MRSet& aliasMRs, const PointsTo& cpts, const Function* fun) {$/;"	f	class:MRGenerator
getMRsForCallSiteRef	lib/MSSA/MemPartition.cpp	/^void DistinctMRG::getMRsForCallSiteRef(MRSet& aliasMRs, const PointsTo& cpts, const Function* fun)$/;"	f	class:DistinctMRG
getMRsForCallSiteRef	lib/MSSA/MemPartition.cpp	/^void IntraDisjointMRG::getMRsForCallSiteRef(MRSet& aliasMRs, const PointsTo& cpts, const Function* fun)$/;"	f	class:IntraDisjointMRG
getMRsForLoad	include/MSSA/MemPartition.h	/^    virtual inline void getMRsForLoad(MRSet& aliasMRs, const PointsTo& cpts,$/;"	f	class:InterDisjointMRG
getMRsForLoad	include/MSSA/MemPartition.h	/^    virtual inline void getMRsForLoad(MRSet& aliasMRs, const PointsTo& cpts,$/;"	f	class:IntraDisjointMRG
getMRsForLoad	include/MSSA/MemRegion.h	/^    virtual inline void getMRsForLoad(MRSet& aliasMRs, const PointsTo& cpts, const Function* fun) {$/;"	f	class:MRGenerator
getMRsForLoad	lib/MSSA/MemPartition.cpp	/^void DistinctMRG::getMRsForLoad(MRSet& mrs, const PointsTo& pts, const Function* fun)$/;"	f	class:DistinctMRG
getMRsForLoadFromInterList	lib/MSSA/MemPartition.cpp	/^void IntraDisjointMRG::getMRsForLoadFromInterList(MRSet& mrs, const PointsTo& cpts, const PointsToList& inters)$/;"	f	class:IntraDisjointMRG
getMSSA	include/MSSA/SVFG.h	/^    inline MemSSA* getMSSA() const {$/;"	f	class:SVFG
getMUSet	include/MSSA/MemSSA.h	/^    inline MUSet& getMUSet(CallSite cs) {$/;"	f	class:MemSSA
getMUSet	include/MSSA/MemSSA.h	/^    inline MUSet& getMUSet(const LoadPE* ld) {$/;"	f	class:MemSSA
getMainLLVMModule	include/Util/SVFModule.h	/^    Module *getMainLLVMModule() const {$/;"	f	class:SVFModule
getMatrix	lib/CUDD/cuddExact.c	/^getMatrix($/;"	f	file:
getMaxBinomial	lib/CUDD/cuddExact.c	/^getMaxBinomial($/;"	f	file:
getMaxBudget	include/Util/DPItem.h	/^    static inline u32_t getMaxBudget() {$/;"	f	class:DPItem
getMaxFieldLimit	include/MemoryModel/MemModel.h	/^    static inline u32_t getMaxFieldLimit() {$/;"	f	class:SymbolTableInfo
getMaxFieldOffsetLimit	include/MemoryModel/MemModel.h	/^    inline Size_t getMaxFieldOffsetLimit() const {$/;"	f	class:MemObj
getMaxFieldOffsetLimit	include/MemoryModel/MemModel.h	/^    inline u32_t getMaxFieldOffsetLimit() {$/;"	f	class:ObjTypeInfo
getMaxLiveCondNumber	include/Util/Conditions.h	/^    inline u32_t getMaxLiveCondNumber() {$/;"	f	class:BddCondManager
getMaxLiveCondNumber	include/Util/PathCondAllocator.h	/^    static inline u32_t getMaxLiveCondNumber() {$/;"	f	class:PathCondAllocator
getMaxPathLen	include/Util/DPItem.h	/^    inline u32_t getMaxPathLen() const {$/;"	f	class:VFPathCond
getMaxStructSize	include/MemoryModel/MemModel.h	/^    inline u32_t getMaxStructSize() const {$/;"	f	class:SymbolTableInfo
getMemObj	include/MemoryModel/PAGNode.h	/^    const MemObj* getMemObj() const {$/;"	f	class:ObjPN
getMemUsage	include/Util/PathCondAllocator.h	/^    static inline u32_t getMemUsage() {$/;"	f	class:PathCondAllocator
getMemoryUsageKB	lib/Util/SVFUtil.cpp	/^bool SVFUtil::getMemoryUsageKB(u32_t* vmrss_kb, u32_t* vmsize_kb)$/;"	f	class:SVFUtil
getModRefInfo	include/WPA/WPAPass.h	/^    virtual inline ModRefInfo getModRefInfo(const CallInst* callInst, const MemoryLocation& Loc) {$/;"	f	class:WPAPass
getModRefInfo	lib/MSSA/MemRegion.cpp	/^ModRefInfo MRGenerator::getModRefInfo(CallSite cs) {$/;"	f	class:MRGenerator
getModRefInfo	lib/MSSA/MemRegion.cpp	/^ModRefInfo MRGenerator::getModRefInfo(CallSite cs, const Value* V) {$/;"	f	class:MRGenerator
getModRefInfo	lib/MSSA/MemRegion.cpp	/^ModRefInfo MRGenerator::getModRefInfo(CallSite cs1, CallSite cs2) {$/;"	f	class:MRGenerator
getModRefInfo	lib/WPA/WPAPass.cpp	/^ModRefInfo WPAPass::getModRefInfo(const CallInst* callInst) {$/;"	f	class:WPAPass
getModRefInfo	lib/WPA/WPAPass.cpp	/^ModRefInfo WPAPass::getModRefInfo(const CallInst* callInst, const Value* V) {$/;"	f	class:WPAPass
getModRefInfo	lib/WPA/WPAPass.cpp	/^ModRefInfo WPAPass::getModRefInfo(const CallInst* callInst1, const CallInst* callInst2) {$/;"	f	class:WPAPass
getModSideEffectOfCallSite	include/MSSA/MemRegion.h	/^    inline const NodeBS& getModSideEffectOfCallSite(CallSite cs) {$/;"	f	class:MRGenerator
getModSideEffectOfFunction	include/MSSA/MemRegion.h	/^    inline const NodeBS& getModSideEffectOfFunction(const Function* fun) {$/;"	f	class:MRGenerator
getModelConstants	include/MemoryModel/MemModel.h	/^    bool getModelConstants() const {$/;"	f	class:SymbolTableInfo
getModule	include/MemoryModel/MemModel.h	/^    inline SVFModule getModule() {$/;"	f	class:SymbolTableInfo
getModule	include/MemoryModel/PAG.h	/^    inline SVFModule getModule() {$/;"	f	class:PAG
getModule	include/MemoryModel/PointerAnalysis.h	/^    inline SVFModule getModule() const {$/;"	f	class:PointerAnalysis
getModule	include/Util/PTACallGraph.h	/^    inline SVFModule getModule() {$/;"	f	class:PTACallGraph
getModule	include/Util/SVFModule.h	/^    Module *getModule(u32_t idx) const {$/;"	f	class:LLVMModuleSet
getModule	include/Util/SVFModule.h	/^    Module *getModule(u32_t idx) const {$/;"	f	class:SVFModule
getModuleIdentifier	include/Util/SVFModule.h	/^	const std::string& getModuleIdentifier() const {$/;"	f	class:SVFModule
getModuleNum	include/Util/SVFModule.h	/^    u32_t getModuleNum() const {$/;"	f	class:LLVMModuleSet
getModuleNum	include/Util/SVFModule.h	/^    u32_t getModuleNum() const {$/;"	f	class:SVFModule
getModuleRef	include/Util/SVFModule.h	/^    Module &getModuleRef(u32_t idx) const {$/;"	f	class:LLVMModuleSet
getModuleRef	include/Util/SVFModule.h	/^    Module &getModuleRef(u32_t idx) const {$/;"	f	class:SVFModule
getModulusOffset	lib/MemoryModel/LocMemModel.cpp	/^LocationSet LocSymTableInfo::getModulusOffset(const MemObj* obj, const LocationSet& ls) {$/;"	f	class:LocSymTableInfo
getModulusOffset	lib/MemoryModel/MemModel.cpp	/^LocationSet SymbolTableInfo::getModulusOffset(const MemObj* obj, const LocationSet& ls) {$/;"	f	class:SymbolTableInfo
getName	include/MemoryModel/CHA.h	/^    std::string getName() const {$/;"	f	class:CHNode
getNextCollapseNode	include/MemoryModel/ConsG.h	/^    inline NodeID getNextCollapseNode() {$/;"	f	class:ConstraintGraph
getNextInsts	lib/Util/SVFUtil.cpp	/^void SVFUtil::getNextInsts(const Instruction* curInst, std::vector<const Instruction*>& instList) {$/;"	f	class:SVFUtil
getNode	include/MemoryModel/GenericGraph.h	/^    static NodeType* getNode(GenericGraphTy *G, NodeID id) {$/;"	f	struct:llvm::GraphTraits
getNode	include/Util/CFLSolver.h	/^    inline GNODE* getNode(NodeID id) const {$/;"	f	class:CFLSolver
getNode	lib/MemoryModel/CHA.cpp	/^CHNode *CHGraph::getNode(const string name) const {$/;"	f	class:CHGraph
getNodeAttributes	lib/MSSA/SVFG.cpp	/^    static std::string getNodeAttributes(NodeType *node, SVFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeAttributes	lib/MemoryModel/CHA.cpp	/^    static std::string getNodeAttributes(CHNode *node, CHGraph *CHGraph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeAttributes	lib/MemoryModel/ConsG.cpp	/^    static std::string getNodeAttributes(NodeType *n, ConstraintGraph *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeAttributes	lib/MemoryModel/OfflineConsG.cpp	/^        static std::string getNodeAttributes(NodeType *n, OfflineConsG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeAttributes	lib/MemoryModel/PAG.cpp	/^    static std::string getNodeAttributes(PAGNode *node, PAG *pag) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeAttributes	lib/Util/ICFG.cpp	/^    static std::string getNodeAttributes(NodeType *node, ICFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeAttributes	lib/Util/PTACallGraph.cpp	/^    static std::string getNodeAttributes(PTACallGraphNode *node, PTACallGraph *PTACallGraph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeAttributes	lib/Util/VFG.cpp	/^    static std::string getNodeAttributes(NodeType *node, VFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeID	include/MemoryModel/GenericGraph.h	/^    static inline unsigned getNodeID(NodeType* N) {$/;"	f	struct:llvm::GraphTraits
getNodeID	include/MemoryModel/GenericGraph.h	/^    static inline unsigned getNodeID(const NodeType* N) {$/;"	f	struct:llvm::GraphTraits
getNodeIDFromItem	include/Util/CFLSolver.h	/^    virtual inline NodeID getNodeIDFromItem(const DPIm& item) const {$/;"	f	class:CFLSolver
getNodeKind	include/MemoryModel/GenericGraph.h	/^    inline GNodeK getNodeKind() const {$/;"	f	class:GenericNode
getNodeLabel	lib/MSSA/SVFG.cpp	/^    std::string getNodeLabel(NodeType *node, SVFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	lib/MemoryModel/CHA.cpp	/^    static std::string getNodeLabel(CHNode *node, CHGraph *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	lib/MemoryModel/ConsG.cpp	/^    static std::string getNodeLabel(NodeType *n, ConstraintGraph *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	lib/MemoryModel/OfflineConsG.cpp	/^        static std::string getNodeLabel(NodeType *n, OfflineConsG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	lib/MemoryModel/PAG.cpp	/^    static std::string getNodeLabel(PAGNode *node, PAG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	lib/Util/ICFG.cpp	/^    std::string getNodeLabel(NodeType *node, ICFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	lib/Util/PTACallGraph.cpp	/^    static std::string getNodeLabel(PTACallGraphNode *node, PTACallGraph *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeLabel	lib/Util/VFG.cpp	/^    std::string getNodeLabel(NodeType *node, VFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getNodeNumAfterPAGBuild	include/MemoryModel/PAG.h	/^    inline u32_t getNodeNumAfterPAGBuild() const {$/;"	f	class:PAG
getNorRep	include/MemoryModel/OfflineConsG.h	/^    inline NodeID getNorRep(NodeID nor) const {$/;"	f	class:OfflineConsG
getNullPtr	include/MemoryModel/PAG.h	/^    inline NodeID getNullPtr() const {$/;"	f	class:PAG
getNumCtrls	include/DisPatch/InitPIDObj.h	/^            int getNumCtrls(){ return ctrls.size(); }$/;"	f	class:InitPIDObj::AxisInfo
getNumOfForksite	include/Util/ThreadCallGraph.h	/^    inline u32_t getNumOfForksite() const {$/;"	f	class:ThreadCallGraph
getNumOfJoinsite	include/Util/ThreadCallGraph.h	/^    inline u32_t getNumOfJoinsite() const {$/;"	f	class:ThreadCallGraph
getNumOfParForSite	include/Util/ThreadCallGraph.h	/^    inline u32_t getNumOfParForSite() const {$/;"	f	class:ThreadCallGraph
getNumOfResolvedIndCallEdge	include/MemoryModel/PointerAnalysis.h	/^    inline Size_t getNumOfResolvedIndCallEdge() const {$/;"	f	class:PointerAnalysis
getNumOfResolvedIndCallEdge	include/Util/PTACallGraph.h	/^    inline Size_t getNumOfResolvedIndCallEdge() const {$/;"	f	class:PTACallGraph
getNumStridePair	include/MemoryModel/LocationSet.h	/^    inline const ElemNumStridePairVec& getNumStridePair() const {$/;"	f	class:LocationSet
getOCGRep	include/MemoryModel/OfflineConsG.h	/^    inline NodeID getOCGRep(NodeID node) const {$/;"	f	class:OfflineConsG
getOCGRepMap	include/MemoryModel/OfflineConsG.h	/^    inline const NodeToRepMap& getOCGRepMap () const {$/;"	f	class:OfflineConsG
getObj	include/MemoryModel/MemModel.h	/^    inline MemObj* getObj(SymID id) const {$/;"	f	class:SymbolTableInfo
getObjSize	lib/MemoryModel/LocMemModel.cpp	/^u32_t LocObjTypeInfo::getObjSize(const Value* val) {$/;"	f	class:LocObjTypeInfo
getObjSize	lib/MemoryModel/MemModel.cpp	/^u32_t ObjTypeInfo::getObjSize(const Value* val) {$/;"	f	class:ObjTypeInfo
getObjSym	include/MemoryModel/MemModel.h	/^    inline SymID getObjSym(const Value *val) const {$/;"	f	class:SymbolTableInfo
getObject	include/MemoryModel/PAG.h	/^    inline const MemObj*getObject(NodeID id) const {$/;"	f	class:PAG
getObject	include/MemoryModel/PAG.h	/^    inline const MemObj*getObject(const ObjPN* node) const {$/;"	f	class:PAG
getObjectNode	include/MemoryModel/PAG.h	/^    inline NodeID getObjectNode(const MemObj *mem) {$/;"	f	class:PAG
getObjectNode	include/MemoryModel/PAG.h	/^    inline NodeID getObjectNode(const Value *V) {$/;"	f	class:PAG
getObjectNode	include/MemoryModel/PAGBuilder.h	/^    inline NodeID getObjectNode(const Value *V) {$/;"	f	class:PAGBuilder
getObjectNodeNum	include/MemoryModel/PAG.h	/^    inline Size_t getObjectNodeNum() const {$/;"	f	class:PAG
getObjectNodes	include/MemoryModel/ExternalPAG.h	/^    std::set<NodeID> &getObjectNodes() { return objectNodes; }$/;"	f	class:ExternalPAG
getOfflineRep	include/WPA/Andersen.h	/^    inline NodeID getOfflineRep(NodeID nodeId) {$/;"	f	class:AndersenHCD
getOffset	include/MemoryModel/ConsGEdge.h	/^    inline const u32_t getOffset() const {$/;"	f	class:NormalGepCGEdge
getOffset	include/MemoryModel/LocationSet.h	/^    inline Size_t getOffset() const {$/;"	f	class:LocationSet
getOffset	include/MemoryModel/PAGEdge.h	/^    inline u32_t getOffset() const {$/;"	f	class:NormalGepPE
getOffset	include/MemoryModel/PAGNode.h	/^    inline u32_t getOffset() const {$/;"	f	class:GepValPN
getOpIncomingBB	include/Util/VFGNode.h	/^    inline const BasicBlock* getOpIncomingBB(u32_t pos) const {$/;"	f	class:IntraPHIVFGNode
getOpVer	include/MSSA/MSSAMuChi.h	/^    inline MRVer* getOpVer() const {$/;"	f	class:MSSACHI
getOpVer	include/MSSA/MSSAMuChi.h	/^    inline const MRVer* getOpVer(u32_t pos) const {$/;"	f	class:MSSAPHI
getOpVer	include/MSSA/SVFGNode.h	/^    inline const MRVer* getOpVer(u32_t pos) const {$/;"	f	class:MSSAPHISVFGNode
getOpVer	include/Util/VFGNode.h	/^    inline const PAGNode* getOpVer(u32_t pos) const {$/;"	f	class:BinaryOPVFGNode
getOpVer	include/Util/VFGNode.h	/^    inline const PAGNode* getOpVer(u32_t pos) const {$/;"	f	class:CmpVFGNode
getOpVer	include/Util/VFGNode.h	/^    inline const PAGNode* getOpVer(u32_t pos) const {$/;"	f	class:PHIVFGNode
getOpVerNum	include/MSSA/MSSAMuChi.h	/^    inline u32_t getOpVerNum() const {$/;"	f	class:MSSAPHI
getOpVerNum	include/MSSA/SVFGNode.h	/^    inline u32_t getOpVerNum() const {$/;"	f	class:MSSAPHISVFGNode
getOpVerNum	include/Util/VFGNode.h	/^    inline u32_t getOpVerNum() const {$/;"	f	class:BinaryOPVFGNode
getOpVerNum	include/Util/VFGNode.h	/^    inline u32_t getOpVerNum() const {$/;"	f	class:CmpVFGNode
getOpVerNum	include/Util/VFGNode.h	/^    inline u32_t getOpVerNum() const {$/;"	f	class:PHIVFGNode
getOperand	include/Util/GEPTypeBridgeIterator.h	/^    Value *getOperand() const {$/;"	f	class:llvm::generic_bridge_gep_type_iterator
getOrigSubTypeWithByteOffset	include/MemoryModel/MemModel.h	/^	const inline Type* getOrigSubTypeWithByteOffset(const Type* baseType, u32_t byteOffset) {$/;"	f	class:SymbolTableInfo
getOrigSubTypeWithFldInx	include/MemoryModel/MemModel.h	/^	const inline Type* getOrigSubTypeWithFldInx(const Type* baseType, u32_t field_idx) {$/;"	f	class:SymbolTableInfo
getOutEdges	include/MemoryModel/GenericGraph.h	/^    inline const GEdgeSetTy& getOutEdges() const {$/;"	f	class:GenericNode
getOutgoingEdges	include/MemoryModel/PAGNode.h	/^    inline PAGEdge::PAGEdgeSetTy& getOutgoingEdges(PAGEdge::PEDGEK kind) {$/;"	f	class:PAGNode
getOutgoingEdgesBegin	include/MemoryModel/PAGNode.h	/^    inline PAGEdge::PAGEdgeSetTy::iterator getOutgoingEdgesBegin(PAGEdge::PEDGEK kind) const {$/;"	f	class:PAGNode
getOutgoingEdgesEnd	include/MemoryModel/PAGNode.h	/^    inline PAGEdge::PAGEdgeSetTy::iterator getOutgoingEdgesEnd(PAGEdge::PEDGEK kind) const {$/;"	f	class:PAGNode
getPAG	include/MSSA/MemSSA.h	/^    inline PAG* getPAG() {$/;"	f	class:MemSSA
getPAG	include/MemoryModel/PAG.h	/^    static inline PAG* getPAG(bool buildFromFile = false) {$/;"	f	class:PAG
getPAG	include/MemoryModel/PAGBuilder.h	/^    PAG* getPAG() const {$/;"	f	class:PAGBuilder
getPAG	include/MemoryModel/PAGBuilderFromFile.h	/^    PAG* getPAG() const {$/;"	f	class:PAGBuilderFromFile
getPAG	include/MemoryModel/PointerAnalysis.h	/^    inline PAG* getPAG() const {$/;"	f	class:PointerAnalysis
getPAG	include/Util/ICFG.h	/^    inline PAG* getPAG() {$/;"	f	class:ICFG
getPAG	include/Util/VFG.h	/^    inline PAG* getPAG() {$/;"	f	class:VFG
getPAGDstNode	include/Util/VFGNode.h	/^    inline PAGNode* getPAGDstNode() const {$/;"	f	class:StmtVFGNode
getPAGDstNodeID	include/Util/VFGNode.h	/^    inline NodeID getPAGDstNodeID() const {$/;"	f	class:StmtVFGNode
getPAGEdge	include/Util/VFGNode.h	/^    inline const PAGEdge* getPAGEdge() const {$/;"	f	class:StmtVFGNode
getPAGEdgeNum	include/MemoryModel/PAG.h	/^    inline Size_t getPAGEdgeNum() const {$/;"	f	class:PAG
getPAGEdgeSet	include/MemoryModel/ConsG.h	/^    PAGEdge::PAGEdgeSetTy& getPAGEdgeSet(PAGEdge::PEDGEK kind){$/;"	f	class:ConstraintGraph
getPAGEdgeSet	include/Util/VFG.h	/^    virtual inline PAGEdge::PAGEdgeSetTy& getPAGEdgeSet(PAGEdge::PEDGEK kind){$/;"	f	class:VFG
getPAGEdgesFromInst	include/MSSA/MemRegion.h	/^    inline PAGEdgeList& getPAGEdgesFromInst(const Instruction* inst) {$/;"	f	class:MRGenerator
getPAGNode	include/MemoryModel/PAG.h	/^    inline PAGNode* getPAGNode(NodeID id) const {$/;"	f	class:PAG
getPAGNode	include/Util/VFGNode.h	/^    const PAGNode* getPAGNode() const {$/;"	f	class:NullPtrVFGNode
getPAGNodeNum	include/MemoryModel/PAG.h	/^    inline Size_t getPAGNodeNum() const {$/;"	f	class:PAG
getPAGSrcNode	include/Util/VFGNode.h	/^    inline PAGNode* getPAGSrcNode() const {$/;"	f	class:StmtVFGNode
getPAGSrcNodeID	include/Util/VFGNode.h	/^    inline NodeID getPAGSrcNodeID() const {$/;"	f	class:StmtVFGNode
getPHIComplementCond	lib/Util/PathCondAllocator.cpp	/^PathCondAllocator::Condition* PathCondAllocator::getPHIComplementCond(const BasicBlock* BB1, const BasicBlock* BB2, const BasicBlock* BB0) {$/;"	f	class:PathCondAllocator
getPHISet	include/MSSA/MemSSA.h	/^    inline PHISet& getPHISet(const BasicBlock* bb) {$/;"	f	class:MemSSA
getPTA	include/MSSA/MemSSA.h	/^    inline BVDataPTAImpl* getPTA() const {$/;"	f	class:MemSSA
getPTACallGraph	include/MemoryModel/PointerAnalysis.h	/^    inline PTACallGraph* getPTACallGraph() const {$/;"	f	class:PointerAnalysis
getPTAEdgeSet	include/MemoryModel/PAG.h	/^    inline PAGEdge::PAGEdgeSetTy& getPTAEdgeSet(PAGEdge::PEDGEK kind) {$/;"	f	class:PAG
getPTDTY	include/MemoryModel/PointsToDS.h	/^    inline PTDataTY getPTDTY() const {$/;"	f	class:PTData
getPTDataTy	include/MemoryModel/PointerAnalysis.h	/^    inline PTDataTy* getPTDataTy() const {$/;"	f	class:BVDataPTAImpl
getPTDataTy	include/MemoryModel/PointerAnalysis.h	/^    inline PTDataTy* getPTDataTy() const {$/;"	f	class:CondPTAImpl
getParam	include/Util/VFGNode.h	/^    inline const PAGNode* getParam() const {$/;"	f	class:ActualParmVFGNode
getParam	include/Util/VFGNode.h	/^    inline const PAGNode* getParam() const {$/;"	f	class:FormalParmVFGNode
getPassName	include/DisPatch/DisPatch.h	/^    virtual StringRef getPassName() const {$/;"	f	class:DisPatch
getPassName	include/Util/BreakConstantExpr.h	/^    StringRef getPassName() const {$/;"	f	class:BreakConstantGEPs
getPassName	include/Util/BreakConstantExpr.h	/^    StringRef getPassName() const {$/;"	f	class:MergeFunctionRets
getPassName	include/WPA/WPAPass.h	/^    virtual inline StringRef getPassName() const {$/;"	f	class:WPAPass
getPath	lib/CUDD/cuddSat.c	/^getPath($/;"	f	file:
getPaths	include/Util/DPItem.h	/^    inline PathCond* getPaths() const {$/;"	f	class:VFPathCond
getPhiNodeMap	include/MemoryModel/PAG.h	/^    inline PHINodeMap& getPhiNodeMap() {$/;"	f	class:PAG
getPointsTo	include/MSSA/MemRegion.h	/^    inline const PointsTo &getPointsTo() const {$/;"	f	class:MemRegion
getPointsTo	include/MSSA/SVFGEdge.h	/^    inline const PointsTo& getPointsTo() const {$/;"	f	class:IndirectSVFGEdge
getPointsTo	include/MSSA/SVFGNode.h	/^    inline const PointsTo& getPointsTo() const {$/;"	f	class:MRSVFGNode
getPointsToList	include/MSSA/MemRegion.h	/^    inline PointsToList& getPointsToList(const Function* fun) {$/;"	f	class:MRGenerator
getPos	include/DisPatch/InitPIDObj.h	/^            string getPos(){ return getCtrl(0); }$/;"	f	class:InitPIDObj::AxisInfo
getPostDT	include/Util/DataFlowUtil.h	/^    PostDominatorTree* getPostDT(const Function* f) {$/;"	f	class:PTACFInfoBuilder
getPostDT	include/Util/PathCondAllocator.h	/^    inline PostDominatorTree* getPostDT(const Function* fun) {$/;"	f	class:PathCondAllocator
getPrevInsts	lib/Util/SVFUtil.cpp	/^void SVFUtil::getPrevInsts(const Instruction* curInst, std::vector<const Instruction*>& instList) {$/;"	f	class:SVFUtil
getProc	include/Util/CxtStmt.h	/^    inline const Function* getProc() const {$/;"	f	class:CxtProc
getProgEntryFunction	include/Util/SVFUtil.h	/^inline const Function* getProgEntryFunction(SVFModule svfModule) {$/;"	f	namespace:SVFUtil
getPropaPts	include/MemoryModel/PointsToDS.h	/^    inline Data & getPropaPts(Key& var) {$/;"	f	class:DiffPTData
getPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline CPtSet& getPts(CVar id) {$/;"	f	class:CondPTAImpl
getPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline PointsTo& getPts(NodeID id) {$/;"	f	class:BVDataPTAImpl
getPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline PointsTo& getPts(NodeID ptr) {$/;"	f	class:CondPTAImpl
getPts	include/MemoryModel/PointsToDS.h	/^    inline Data& getPts(const Key& var) {$/;"	f	class:PTData
getPts	include/WPA/Andersen.h	/^    virtual inline PointsTo& getPts(NodeID id) {$/;"	f	class:Andersen
getPtsMap	include/MemoryModel/PointsToDS.h	/^    inline const PtsMap& getPtsMap() const {$/;"	f	class:PTData
getPtsSubSetMap	include/MSSA/MemPartition.h	/^    inline PtsToSubPtsMap& getPtsSubSetMap(const Function* func) {$/;"	f	class:IntraDisjointMRG
getPtsSubSetMap	include/MSSA/MemPartition.h	/^    inline const PtsToSubPtsMap& getPtsSubSetMap(const Function* func) const {$/;"	f	class:IntraDisjointMRG
getRef	include/MemoryModel/OfflineConsG.h	/^    inline NodeID getRef(NodeID node) const {$/;"	f	class:OfflineConsG
getRefSideEffectOfCallSite	include/MSSA/MemRegion.h	/^    inline const NodeBS& getRefSideEffectOfCallSite(CallSite cs) {$/;"	f	class:MRGenerator
getRefSideEffectOfFunction	include/MSSA/MemRegion.h	/^    inline const NodeBS& getRefSideEffectOfFunction(const Function* fun) {$/;"	f	class:MRGenerator
getRefTypeOfHeapAllocOrStatic	include/Util/SVFUtil.h	/^inline const PointerType *getRefTypeOfHeapAllocOrStatic(const CallSite cs) {$/;"	f	namespace:SVFUtil
getRefTypeOfHeapAllocOrStatic	include/Util/SVFUtil.h	/^inline const PointerType *getRefTypeOfHeapAllocOrStatic(const Instruction *inst) {$/;"	f	namespace:SVFUtil
getRefVal	include/MemoryModel/MemModel.h	/^    inline const Value *getRefVal() const {$/;"	f	class:MemObj
getRegionSize	include/MSSA/MemRegion.h	/^    inline u32_t getRegionSize() const {$/;"	f	class:MemRegion
getRepNodes	include/Util/SCC.h	/^    inline const NodeBS &getRepNodes() const {$/;"	f	class:SCCDetection
getRepPointsTo	include/MSSA/MemRegion.h	/^    inline const PointsTo& getRepPointsTo(const PointsTo& cpts) const {$/;"	f	class:MRGenerator
getRes	include/MSSA/SVFGNode.h	/^    inline const MemSSA::MDEF* getRes() const {$/;"	f	class:MSSAPHISVFGNode
getRes	include/Util/VFGNode.h	/^    inline const PAGNode* getRes() const {$/;"	f	class:BinaryOPVFGNode
getRes	include/Util/VFGNode.h	/^    inline const PAGNode* getRes() const {$/;"	f	class:CmpVFGNode
getRes	include/Util/VFGNode.h	/^    inline const PAGNode* getRes() const {$/;"	f	class:PHIVFGNode
getResVer	include/MSSA/MSSAMuChi.h	/^    inline MRVer* getResVer() const {$/;"	f	class:MSSADEF
getRet	include/Util/VFGNode.h	/^    inline const PAGNode* getRet() const {$/;"	f	class:FormalRetVFGNode
getRetICFGNode	include/Util/ICFG.h	/^    inline RetBlockNode* getRetICFGNode(CallSite cs) {$/;"	f	class:ICFG
getRetMU	include/MSSA/SVFGNode.h	/^    inline const MemSSA::RETMU* getRetMU() const {$/;"	f	class:FormalOUTSVFGNode
getRetParmAtJoinedSite	include/Util/ThreadAPI.h	/^    inline const Value* getRetParmAtJoinedSite(CallSite cs) const {$/;"	f	class:ThreadAPI
getRetParmAtJoinedSite	include/Util/ThreadAPI.h	/^    inline const Value* getRetParmAtJoinedSite(const Instruction *inst) const {$/;"	f	class:ThreadAPI
getRetSym	include/MemoryModel/MemModel.h	/^    inline SymID getRetSym(const Function *val) const {$/;"	f	class:SymbolTableInfo
getReturnMuSet	include/MSSA/MemSSA.h	/^    inline MUSet& getReturnMuSet(const Function * fun) {$/;"	f	class:MemSSA
getReturnNode	include/MemoryModel/ConsG.h	/^    inline NodeID getReturnNode(const Function* value) const {$/;"	f	class:ConstraintGraph
getReturnNode	include/MemoryModel/ExternalPAG.h	/^    NodeID getReturnNode() const { return returnNode; }$/;"	f	class:ExternalPAG
getReturnNode	include/MemoryModel/PAG.h	/^    inline NodeID getReturnNode(const Function *func) const {$/;"	f	class:PAG
getReturnNode	include/MemoryModel/PAGBuilder.h	/^    inline NodeID getReturnNode(const Function *func) {$/;"	f	class:PAGBuilder
getRev	include/Util/VFGNode.h	/^    inline const PAGNode* getRev() const {$/;"	f	class:ActualRetVFGNode
getRevPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline CPtSet& getRevPts(CVar nodeId) {$/;"	f	class:CondPTAImpl
getRevPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline PointsTo& getRevPts(NodeID nodeId) {$/;"	f	class:BVDataPTAImpl
getRevPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline PointsTo& getRevPts(NodeID obj) {$/;"	f	class:CondPTAImpl
getRevPts	include/MemoryModel/PointsToDS.h	/^    inline Data& getRevPts(const Key& var) {$/;"	f	class:PTData
getSCCDetector	include/WPA/WPASolver.h	/^    inline SCC* getSCCDetector() const {$/;"	f	class:WPASolver
getSCCRep	lib/MSSA/SVFGStat.cpp	/^NodeID SVFGStat::getSCCRep(SVFGSCC* scc, NodeID id) const {$/;"	f	class:SVFGStat
getSSAVersion	include/MSSA/MSSAMuChi.h	/^    inline VERSION getSSAVersion() const {$/;"	f	class:MRVer
getSVFG	include/MSSA/SVFGBuilder.h	/^    inline SVFG* getSVFG() const {$/;"	f	class:SVFGBuilder
getSVFG	include/WPA/FlowSensitive.h	/^    inline SVFG* getSVFG() const {$/;"	f	class:FlowSensitive
getSVFGEdge	include/MSSA/SVFG.h	/^	inline SVFGEdge* getSVFGEdge(const SVFGNode* src, const SVFGNode* dst, SVFGEdge::VFGEdgeK kind) {$/;"	f	class:SVFG
getSVFGNode	include/MSSA/SVFG.h	/^    inline SVFGNode* getSVFGNode(NodeID id) const {$/;"	f	class:SVFG
getSVFModule	include/Util/PTACallGraph.h	/^    inline SVFModule getSVFModule() {$/;"	f	class:PTACallGraph
getShortest	lib/CUDD/cuddSat.c	/^getShortest($/;"	f	file:
getSimpleNodeLabel	lib/MSSA/SVFG.cpp	/^    static std::string getSimpleNodeLabel(NodeType *node, SVFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getSimpleNodeLabel	lib/Util/ICFG.cpp	/^    static std::string getSimpleNodeLabel(NodeType *node, ICFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getSimpleNodeLabel	lib/Util/VFG.cpp	/^    static std::string getSimpleNodeLabel(NodeType *node, VFG *graph) {$/;"	f	struct:llvm::DOTGraphTraits
getSimplifiedValue	include/Util/Casting.h	/^  static RetType getSimplifiedValue(const From& Val) {$/;"	f	struct:SVFUtil::simplify_type
getSimplifiedValue	include/Util/Casting.h	/^  static SimpleType &getSimplifiedValue(From &Val) { return Val; }$/;"	f	struct:SVFUtil::simplify_type
getSoftDataLimit	lib/CUDD/datalimit.c	/^getSoftDataLimit(void)$/;"	f
getSourceLoc	lib/Util/SVFUtil.cpp	/^std::string SVFUtil::getSourceLoc(const Value* val) {$/;"	f	class:SVFUtil
getSourceLocOfFunction	lib/Util/SVFUtil.cpp	/^std::string SVFUtil::getSourceLocOfFunction(const Function *F)$/;"	f	class:SVFUtil
getSrcID	include/MemoryModel/GenericGraph.h	/^    inline NodeID getSrcID() const {$/;"	f	class:GenericEdge
getSrcNode	include/MemoryModel/GenericGraph.h	/^    NodeType* getSrcNode() const {$/;"	f	class:GenericEdge
getStat	include/MSSA/SVFG.h	/^    inline SVFGStat* getStat() const {$/;"	f	class:SVFG
getStat	include/MemoryModel/PointerAnalysis.h	/^    inline PTAStat* getStat() const {$/;"	f	class:PointerAnalysis
getStat	include/Util/ICFG.h	/^    inline ICFGStat* getStat() const {$/;"	f	class:ICFG
getStmt	include/Util/CxtStmt.h	/^    inline const Instruction* getStmt() const {$/;"	f	class:CxtStmt
getStmtVFGNode	include/Util/VFG.h	/^	inline StmtVFGNode* getStmtVFGNode(const PAGEdge* pagEdge) const {$/;"	f	class:VFG
getStoreCGEdges	include/MemoryModel/ConsG.h	/^    inline ConstraintEdge::ConstraintEdgeSetTy& getStoreCGEdges() {$/;"	f	class:ConstraintGraph
getStoreChiNum	lib/MSSA/MemSSA.cpp	/^u32_t MemSSA::getStoreChiNum() const$/;"	f	class:MemSSA
getStoreInEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getStoreInEdges() const {$/;"	f	class:ConstraintNode
getStoreInst	include/MSSA/MSSAMuChi.h	/^    inline const StorePE* getStoreInst() const {$/;"	f	class:StoreCHI
getStoreMRSet	include/MSSA/MemRegion.h	/^    inline MRSet& getStoreMRSet(const StorePE* store) {$/;"	f	class:MRGenerator
getStoreOutEdges	include/MemoryModel/ConsGNode.h	/^    inline const ConstraintEdge::ConstraintEdgeSetTy& getStoreOutEdges() const {$/;"	f	class:ConstraintNode
getStoreToChiSetMap	include/MSSA/MemSSA.h	/^    inline StoreToChiSetMap& getStoreToChiSetMap() {$/;"	f	class:MemSSA
getStructInfo	include/MemoryModel/MemModel.h	/^    inline StInfo* getStructInfo(const Type *T) {$/;"	f	class:SymbolTableInfo
getStructInfoIter	include/MemoryModel/MemModel.h	/^    TypeToFieldInfoMap::iterator getStructInfoIter(const Type *T) {$/;"	f	class:SymbolTableInfo
getSymId	include/MemoryModel/MemModel.h	/^    inline SymID getSymId() const {$/;"	f	class:MemObj
getTaskDataAtHareParForSite	include/Util/SVFUtil.h	/^inline const Value* getTaskDataAtHareParForSite(const CallSite cs) {$/;"	f	namespace:SVFUtil
getTaskDataAtHareParForSite	include/Util/SVFUtil.h	/^inline const Value* getTaskDataAtHareParForSite(const Instruction *inst) {$/;"	f	namespace:SVFUtil
getTaskDataAtHareParForSite	include/Util/ThreadAPI.h	/^    inline const Value* getTaskDataAtHareParForSite(CallSite cs) const {$/;"	f	class:ThreadAPI
getTaskDataAtHareParForSite	include/Util/ThreadAPI.h	/^    inline const Value* getTaskDataAtHareParForSite(const Instruction *inst) const {$/;"	f	class:ThreadAPI
getTaskFuncAtHareParForSite	include/Util/SVFUtil.h	/^inline const Value* getTaskFuncAtHareParForSite(const CallSite cs) {$/;"	f	namespace:SVFUtil
getTaskFuncAtHareParForSite	include/Util/SVFUtil.h	/^inline const Value* getTaskFuncAtHareParForSite(const Instruction *inst) {$/;"	f	namespace:SVFUtil
getTaskFuncAtHareParForSite	include/Util/ThreadAPI.h	/^    inline const Value* getTaskFuncAtHareParForSite(CallSite cs) const {$/;"	f	class:ThreadAPI
getTaskFuncAtHareParForSite	include/Util/ThreadAPI.h	/^    inline const Value* getTaskFuncAtHareParForSite(const Instruction *inst) const {$/;"	f	class:ThreadAPI
getThread	include/Util/CxtStmt.h	/^    inline const CallInst* getThread() const {$/;"	f	class:CxtThread
getThreadAPI	include/Util/ThreadAPI.h	/^    static ThreadAPI* getThreadAPI() {$/;"	f	class:ThreadAPI
getThreadAPI	include/Util/ThreadCallGraph.h	/^    inline ThreadAPI* getThreadAPI() const {$/;"	f	class:ThreadCallGraph
getTid	include/Util/CxtStmt.h	/^    inline NodeID getTid() const {$/;"	f	class:CxtThreadProc
getTid	include/Util/CxtStmt.h	/^    inline NodeID getTid() const {$/;"	f	class:CxtThreadStmt
getTopStackVer	include/MSSA/MemSSA.h	/^    inline MRVer* getTopStackVer(const MemRegion* mr) {$/;"	f	class:MemSSA
getTotalCallSiteNumber	include/Util/PTACallGraph.h	/^    inline u32_t getTotalCallSiteNumber() const {$/;"	f	class:PTACallGraph
getTotalEdgeNum	include/MemoryModel/GenericGraph.h	/^    inline u32_t getTotalEdgeNum() const {$/;"	f	class:GenericGraph
getTotalNodeNum	include/MemoryModel/GenericGraph.h	/^    inline u32_t getTotalNodeNum() const {$/;"	f	class:GenericGraph
getTotalSymNum	include/MemoryModel/MemModel.h	/^    inline Size_t getTotalSymNum() const {$/;"	f	class:SymbolTableInfo
getTrueCond	include/Util/Conditions.h	/^    inline DdNode* getTrueCond() const {$/;"	f	class:BddCondManager
getTrueCond	include/Util/PathCondAllocator.h	/^    inline Condition* getTrueCond() const {$/;"	f	class:PathCondAllocator
getType	include/MSSA/MSSAMuChi.h	/^    inline DEFTYPE getType() const {$/;"	f	class:MSSADEF
getType	include/MSSA/MSSAMuChi.h	/^    inline MUTYPE getType() const {$/;"	f	class:MSSAMU
getType	include/MemoryModel/MemModel.h	/^    inline const Type* getType() const{$/;"	f	class:ObjTypeInfo
getType	include/MemoryModel/PAGNode.h	/^	inline const Type* getType() const {$/;"	f	class:GepValPN
getType	include/MemoryModel/PAGNode.h	/^	inline virtual const llvm::Type* getType() const {$/;"	f	class:GepObjPN
getType	include/MemoryModel/PAGNode.h	/^    inline virtual const Type* getType() const{$/;"	f	class:PAGNode
getType	include/MemoryModel/PAGNode.h	/^    inline virtual const llvm::Type* getType() const{$/;"	f	class:ObjPN
getType	include/Util/ThreadAPI.h	/^    inline TD_TYPE getType(const Function* F) const {$/;"	f	class:ThreadAPI
getType	lib/MemoryModel/MemModel.cpp	/^const Type* MemObj::getType() const {$/;"	f	class:MemObj
getTypeOfHeapAlloc	lib/Util/SVFUtil.cpp	/^const Type* SVFUtil::getTypeOfHeapAlloc(const Instruction *inst){$/;"	f	class:SVFUtil
getTypeSet	include/MemoryModel/PTAType.h	/^    inline const TypeSet *getTypeSet(NodeID var) const {$/;"	f	class:TypeSystem
getTypeSizeInBytes	lib/MemoryModel/MemModel.cpp	/^u32_t SymbolTableInfo::getTypeSizeInBytes(const StructType *sty, u32_t field_idx){$/;"	f	class:SymbolTableInfo
getTypeSizeInBytes	lib/MemoryModel/MemModel.cpp	/^u32_t SymbolTableInfo::getTypeSizeInBytes(const Type* type) {$/;"	f	class:SymbolTableInfo
getTypeSystem	include/MemoryModel/PointerAnalysis.h	/^    const TypeSystem *getTypeSystem() const {$/;"	f	class:PointerAnalysis
getUnifyExit	include/Util/BreakConstantExpr.h	/^    inline UnifyFunctionExitNodes* getUnifyExit(const Function& fn) {$/;"	f	class:MergeFunctionRets
getVCallIdx	lib/Util/CPPUtil.cpp	/^u64_t cppUtil::getVCallIdx(CallSite cs) {$/;"	f	class:cppUtil
getVCallThisPtr	lib/Util/CPPUtil.cpp	/^const Value *cppUtil::getVCallThisPtr(CallSite cs) {$/;"	f	class:cppUtil
getVCallVtblPtr	lib/Util/CPPUtil.cpp	/^const Value *cppUtil::getVCallVtblPtr(CallSite cs) {$/;"	f	class:cppUtil
getVFEdges	include/Util/DPItem.h	/^    inline const EdgeSet& getVFEdges() const {$/;"	f	class:VFPathCond
getVFG	include/Util/ICFG.h	/^	inline VFG* getVFG() const{$/;"	f	class:ICFG
getVFGEdge	lib/Util/VFG.cpp	/^VFGEdge* VFG::getVFGEdge(const VFGNode* src, const VFGNode* dst, VFGEdge::VFGEdgeK kind) {$/;"	f	class:VFG
getVFGNode	include/Util/VFG.h	/^    inline VFGNode* getVFGNode(NodeID id) const {$/;"	f	class:VFG
getVFGNodes	include/Util/ICFGNode.h	/^    inline StmtOrPHIVFGNodeVec &getVFGNodes() {$/;"	f	class:IntraBlockNode
getVFnsFromCHA	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::getVFnsFromCHA(CallSite cs, VFunSet &vfns) {$/;"	f	class:PointerAnalysis
getVFnsFromPts	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::getVFnsFromPts(CallSite cs, const PointsTo &target, VFunSet &vfns) {$/;"	f	class:PointerAnalysis
getVFnsFromVtbls	lib/MemoryModel/CHA.cpp	/^void CHGraph::getVFnsFromVtbls(CallSite cs, VTableSet &vtbls, VFunSet &virtualFunctions) const {$/;"	f	class:CHGraph
getVTable	include/MemoryModel/CHA.h	/^    const GlobalValue *getVTable() const {$/;"	f	class:CHNode
getValSym	include/MemoryModel/MemModel.h	/^    SymID getValSym(const Value *val) {$/;"	f	class:SymbolTableInfo
getValue	include/MemoryModel/PAGEdge.h	/^    inline const Value* getValue() const {$/;"	f	class:PAGEdge
getValue	include/MemoryModel/PAGNode.h	/^    inline const Value* getValue() const {$/;"	f	class:PAGNode
getValueName	include/MemoryModel/PAGNode.h	/^    const std::string getValueName() const {$/;"	f	class:RetPN
getValueName	include/MemoryModel/PAGNode.h	/^    inline const std::string getValueName() const {$/;"	f	class:DummyObjPN
getValueName	include/MemoryModel/PAGNode.h	/^    inline const std::string getValueName() const {$/;"	f	class:DummyValPN
getValueName	include/MemoryModel/PAGNode.h	/^    inline const std::string getValueName() const {$/;"	f	class:FIObjPN
getValueName	include/MemoryModel/PAGNode.h	/^    inline const std::string getValueName() const {$/;"	f	class:GepObjPN
getValueName	include/MemoryModel/PAGNode.h	/^    inline const std::string getValueName() const {$/;"	f	class:GepValPN
getValueName	include/MemoryModel/PAGNode.h	/^    inline const std::string getValueName() const {$/;"	f	class:ValPN
getValueName	include/MemoryModel/PAGNode.h	/^    inline const std::string getValueName() const {$/;"	f	class:VarArgPN
getValueName	include/MemoryModel/PAGNode.h	/^    virtual const std::string getValueName() const {$/;"	f	class:ObjPN
getValueNode	include/MemoryModel/ConsG.h	/^    inline NodeID getValueNode(const Value* value) const {$/;"	f	class:ConstraintGraph
getValueNode	include/MemoryModel/PAG.h	/^    inline NodeID getValueNode(const Value *V) {$/;"	f	class:PAG
getValueNode	include/MemoryModel/PAGBuilder.h	/^    NodeID getValueNode(const Value *V) {$/;"	f	class:PAGBuilder
getValueNodeNum	include/MemoryModel/PAG.h	/^    inline Size_t getValueNodeNum() const {$/;"	f	class:PAG
getValueNodes	include/MemoryModel/ExternalPAG.h	/^    std::set<NodeID> &getValueNodes() { return valueNodes; }$/;"	f	class:ExternalPAG
getVarargNode	include/MemoryModel/ConsG.h	/^    inline NodeID getVarargNode(const Function* value) const {$/;"	f	class:ConstraintGraph
getVarargNode	include/MemoryModel/PAG.h	/^    inline NodeID getVarargNode(const Function *func) const {$/;"	f	class:PAG
getVarargNode	include/MemoryModel/PAGBuilder.h	/^    inline NodeID getVarargNode(const Function *func) {$/;"	f	class:PAGBuilder
getVarargSym	include/MemoryModel/MemModel.h	/^    inline SymID getVarargSym(const Function *val) const {$/;"	f	class:SymbolTableInfo
getVarsForType	include/MemoryModel/PTAType.h	/^    inline NodeBS &getVarsForType(const PTAType &type) {$/;"	f	class:TypeSystem
getVel	include/DisPatch/InitPIDObj.h	/^            string getVel(){ return getCtrl(1); }$/;"	f	class:InitPIDObj::AxisInfo
getVer	include/MSSA/MSSAMuChi.h	/^    inline MRVer* getVer() const {$/;"	f	class:MSSAMU
getVirtualFunctionBasedonID	include/MemoryModel/CHA.h	/^	inline const Function *getVirtualFunctionBasedonID(s32_t id) const {$/;"	f	class:CHGraph
getVirtualFunctionID	include/MemoryModel/CHA.h	/^    inline s32_t getVirtualFunctionID(const Function *vfn) const {$/;"	f	class:CHGraph
getVirtualFunctionVectors	include/MemoryModel/CHA.h	/^    const std::vector<FuncVector> &getVirtualFunctionVectors() const {$/;"	f	class:CHNode
getVirtualFunctions	lib/MemoryModel/CHA.cpp	/^void CHNode::getVirtualFunctions(u32_t idx, FuncVector &virtualFunctions) const {$/;"	f	class:CHNode
get_alloc_arg_pos	include/Util/ExtAPI.h	/^    int get_alloc_arg_pos(const Function *F) const {$/;"	f	class:ExtAPI
get_cond	include/MemoryModel/ConditionalPT.h	/^    inline const Cond& get_cond() const {$/;"	f	class:CondVar
get_id	include/MemoryModel/ConditionalPT.h	/^    inline NodeID get_id() const {$/;"	f	class:CondVar
get_type	include/Util/ExtAPI.h	/^    extf_t get_type(const Function *F) const {$/;"	f	class:ExtAPI
getcurcscefunc	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::getcurcscefunc(const Value *v, set<const Function*> &fset){$/;"	f	class:CtrlIdentifier
getcurcscefunc	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::getcurcscefunc(set<const Value *> vset, set<const Function*> &fset){$/;"	f	class:CtrlIdentifier
giset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
giset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::giset;$/;"	m	class:BinIRWrapper	file:
globPAGEdgesSet	include/MemoryModel/PAG.h	/^    PAGEdgeSet globPAGEdgesSet;	\/\/\/< Global PAGEdges without control flow information$/;"	m	class:PAG
globalSvfg	include/MSSA/SVFGBuilder.h	/^    static SVFG* globalSvfg;$/;"	m	class:SVFGBuilder
globalSvfg	lib/MSSA/SVFGBuilder.cpp	/^SVFG* SVFGBuilder::globalSvfg = NULL;$/;"	m	class:SVFGBuilder	file:
globalVFGNodes	include/Util/VFG.h	/^    GlobalVFGNodeSet globalVFGNodes;	\/\/\/< set of global store VFG nodes$/;"	m	class:VFG
global_begin	include/Util/SVFModule.h	/^    const_global_iterator global_begin() const {$/;"	f	class:LLVMModuleSet
global_begin	include/Util/SVFModule.h	/^    const_global_iterator global_begin() const {$/;"	f	class:SVFModule
global_begin	include/Util/SVFModule.h	/^    global_iterator global_begin() {$/;"	f	class:LLVMModuleSet
global_begin	include/Util/SVFModule.h	/^    global_iterator global_begin() {$/;"	f	class:SVFModule
global_end	include/Util/SVFModule.h	/^    const_global_iterator global_end() const {$/;"	f	class:LLVMModuleSet
global_end	include/Util/SVFModule.h	/^    const_global_iterator global_end() const {$/;"	f	class:SVFModule
global_end	include/Util/SVFModule.h	/^    global_iterator global_end() {$/;"	f	class:LLVMModuleSet
global_end	include/Util/SVFModule.h	/^    global_iterator global_end() {$/;"	f	class:SVFModule
global_iterator	include/Util/SVFModule.h	/^    typedef GlobalSetType::iterator global_iterator;$/;"	t	class:LLVMModuleSet
global_iterator	include/Util/SVFModule.h	/^    typedef GlobalSetType::iterator global_iterator;$/;"	t	class:SVFModule
graph	include/MSSA/SVFGStat.h	/^    SVFG* graph;$/;"	m	class:SVFGStat
graph	include/Util/CFLSolver.h	/^    const inline GraphType graph() const {$/;"	f	class:CFLSolver
graph	include/Util/SCC.h	/^    const inline GraphType & graph() {$/;"	f	class:SCCDetection
graph	include/WPA/WPASolver.h	/^    const inline GraphType graph() {$/;"	f	class:WPASolver
graphSize	include/MemoryModel/GenericGraph.h	/^    static unsigned graphSize(GenericGraphTy* G) {$/;"	f	struct:llvm::GraphTraits
groundtruth	include/DisPatch/CtrlIdentifier.h	/^        string groundtruth; $/;"	m	struct:CtrlIdentifier::_ctrlinfo
groupcheck	include/CUDD/cuddInt.h	/^    Cudd_AggregationType groupcheck; \/* used during group sifting *\/$/;"	m	struct:DdManager
grow_factor	include/CUDD/st.h	/^    double grow_factor;$/;"	m	struct:st_table
grow_stack	lib/CUDD/restart.c	/^grow_stack() $/;"	f	file:
gt	include/DisPatch/InitPIDObj.h	/^            string gt;$/;"	m	class:InitPIDObj::CtrlInfo
h	include/CUDD/cuddInt.h	/^    ptruint h;			\/* either operator or DD *\/$/;"	m	struct:DdCache
h	lib/CUDD/cuddDecomp.c	/^    DdNode *h;$/;"	m	struct:Conjuncts	file:
hack	lib/CUDD/cuddTable.c	/^typedef union hack {$/;"	u	file:
hack	lib/CUDD/cuddTable.c	/^} hack;$/;"	t	typeref:union:hack	file:
handle	include/CUDD/cuddInt.h	/^    lsHandle handle;		\/* where it is in network BDD list *\/$/;"	m	struct:DdManager
handle	include/DisPatch/InterProcAnal.h	/^    csh handle;$/;"	m	class:InterProcAnal
handleActualParm	lib/Util/ICFG.cpp	/^void ICFG::handleActualParm(CallBlockNode* callBlockNode){$/;"	f	class:ICFG
handleActualRet	lib/Util/ICFG.cpp	/^void ICFG::handleActualRet(RetBlockNode* retBlockNode){$/;"	f	class:ICFG
handleBlackHole	lib/MemoryModel/PAG.cpp	/^void PAG::handleBlackHole(bool b) {$/;"	f	class:PAG
handleCE	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::handleCE(const Value *val) {$/;"	f	class:SymbolTableInfo
handleCallsiteModRef	lib/MSSA/MemRegion.cpp	/^bool MRGenerator::handleCallsiteModRef(NodeBS& mod, NodeBS& ref, CallSite cs, const Function* callee){$/;"	f	class:MRGenerator
handleCopyGep	include/WPA/Andersen.h	/^    void handleCopyGep(ConstraintNode* node) {AndersenLCD::handleCopyGep(node);}$/;"	f	class:AndersenHLCD
handleCopyGep	lib/WPA/Andersen.cpp	/^void Andersen::handleCopyGep(ConstraintNode* node) {$/;"	f	class:Andersen
handleCopyGep	lib/WPA/AndersenLCD.cpp	/^void AndersenLCD::handleCopyGep(ConstraintNode* node) {$/;"	f	class:AndersenLCD
handleCopyGep	lib/WPA/AndersenSCD.cpp	/^void AndersenSCD::handleCopyGep(ConstraintNode* node) {$/;"	f	class:AndersenSCD
handleCopyGep	lib/WPA/AndersenWaveDiff.cpp	/^void AndersenWaveDiff::handleCopyGep(ConstraintNode* node) {$/;"	f	class:AndersenWaveDiff
handleDirectCall	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::handleDirectCall(CallSite cs, const Function *F) {$/;"	f	class:PAGBuilder
handleExtCall	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::handleExtCall(CallSite cs, const Function *callee) {$/;"	f	class:PAGBuilder
handleFormalParm	lib/Util/ICFG.cpp	/^void ICFG::handleFormalParm(FunEntryBlockNode* funEntryBlockNode){$/;"	f	class:ICFG
handleFormalRet	lib/Util/ICFG.cpp	/^void ICFG::handleFormalRet(FunExitBlockNode* funExitBlockNode){$/;"	f	class:ICFG
handleGlobalCE	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::handleGlobalCE(const GlobalVariable *G) {$/;"	f	class:SymbolTableInfo
handleGlobalInitializerCE	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::handleGlobalInitializerCE(const Constant *C,$/;"	f	class:SymbolTableInfo
handleIndCall	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::handleIndCall(CallSite cs) {$/;"	f	class:PAGBuilder
handleInterBlock	lib/Util/ICFG.cpp	/^void ICFG::handleInterBlock(InterBlockNode* interICFGNode){$/;"	f	class:ICFG
handleInterValueFlow	lib/MSSA/SVFGOPT.cpp	/^void SVFGOPT::handleInterValueFlow()$/;"	f	class:SVFGOPT
handleIntraBlock	lib/Util/ICFG.cpp	/^void ICFG::handleIntraBlock(IntraBlockNode* intraICFGNode){$/;"	f	class:ICFG
handleIntraValueFlow	lib/MSSA/SVFGOPT.cpp	/^void SVFGOPT::handleIntraValueFlow()$/;"	f	class:SVFGOPT
handleLoad	lib/WPA/AndersenWaveDiff.cpp	/^bool AndersenWaveDiff::handleLoad(NodeID nodeId, const ConstraintEdge* edge)$/;"	f	class:AndersenWaveDiff
handleLoadStore	lib/WPA/Andersen.cpp	/^void Andersen::handleLoadStore(ConstraintNode *node) {$/;"	f	class:Andersen
handleLoadStore	lib/WPA/AndersenSCD.cpp	/^void AndersenSCD::handleLoadStore(ConstraintNode* node) {$/;"	f	class:AndersenSCD
handleStore	lib/WPA/AndersenWaveDiff.cpp	/^bool AndersenWaveDiff::handleStore(NodeID nodeId, const ConstraintEdge* edge)$/;"	f	class:AndersenWaveDiff
handle_sigquit	lib/CUDD/restart.c	/^handle_sigquit(int sig, int code, struct sigcontext *scp)$/;"	f	file:
handledOffMap	include/DisPatch/CtrlIdentifier.h	/^    map <const Instruction *, set <unsigned>> handledOffMap; \/\/e.g., ExtractElementInst, %9 = extractelement <2 x float> %8, 'i32 0'$/;"	m	class:CtrlIdentifier
hasARCtrlStructFromTop	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::hasARCtrlStructFromTop(ctrlinfo *ci){  \/\/ if transition logic can determine it$/;"	f	class:CtrlIdentifier
hasActualINSVFGNodes	include/MSSA/SVFG.h	/^    inline bool hasActualINSVFGNodes(CallSite cs) const {$/;"	f	class:SVFG
hasActualOUTSVFGNodes	include/MSSA/SVFG.h	/^    inline bool hasActualOUTSVFGNodes(CallSite cs) const {$/;"	f	class:SVFG
hasBlackHoleConstObjAddrAsDef	include/Util/VFG.h	/^    inline bool hasBlackHoleConstObjAddrAsDef(const PAGNode* pagNode) const {$/;"	f	class:VFG
hasCHI	include/MSSA/MemSSA.h	/^    inline bool hasCHI(CallSite cs) const {$/;"	f	class:MemSSA
hasCHI	include/MSSA/MemSSA.h	/^    inline bool hasCHI(const PAGEdge* inst) const {$/;"	f	class:MemSSA
hasCPtsList	include/MSSA/MemRegion.h	/^    inline bool hasCPtsList(const Function* fun) const {$/;"	f	class:MRGenerator
hasCallGraphEdge	include/Util/PTACallGraph.h	/^    inline bool hasCallGraphEdge(const Instruction* inst) const {$/;"	f	class:PTACallGraph
hasCallSiteArgsMap	include/MemoryModel/PAG.h	/^    inline bool hasCallSiteArgsMap(const CallSite cs) const {$/;"	f	class:PAG
hasCallSiteChi	include/MSSA/SVFG.h	/^    inline bool hasCallSiteChi(CallSite cs) const {$/;"	f	class:SVFG
hasCallSiteID	include/Util/PTACallGraph.h	/^    inline bool hasCallSiteID(CallSite cs, const Function* callee) const {$/;"	f	class:PTACallGraph
hasCallSiteMu	include/MSSA/SVFG.h	/^    inline bool hasCallSiteMu(CallSite cs) const {$/;"	f	class:SVFG
hasConstantGEP	lib/Util/BreakConstantExpr.cpp	/^hasConstantGEP (Value * V) {$/;"	f	file:
hasConstraintNode	include/MemoryModel/ConsG.h	/^    inline bool hasConstraintNode(NodeID id) const {$/;"	f	class:ConstraintGraph
hasCtrlStructFromBot	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::hasCtrlStructFromBot(ctrlinfo *ci, string target){$/;"	f	class:CtrlIdentifier
hasCtrlStructFromTop	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::hasCtrlStructFromTop(ctrlinfo *ci, string target){$/;"	f	class:CtrlIdentifier
hasDFInSet	include/MemoryModel/PointsToDFDS.h	/^    inline bool hasDFInSet(LocID loc) const {$/;"	f	class:DFPTData
hasDFInSet	include/MemoryModel/PointsToDFDS.h	/^    inline bool hasDFInSet(LocID loc,const Key& var) const {$/;"	f	class:DFPTData
hasDFOutSet	include/MemoryModel/PointsToDFDS.h	/^    inline bool hasDFOutSet(LocID loc) const {$/;"	f	class:DFPTData
hasDFOutSet	include/MemoryModel/PointsToDFDS.h	/^    inline bool hasDFOutSet(LocID loc,const Key& var) const {$/;"	f	class:DFPTData
hasDRCheckFlag	include/Util/Annotator.h	/^    inline bool hasDRCheckFlag(Instruction *inst) const {$/;"	f	class:Annotator
hasDRCheckFlag	include/Util/Annotator.h	/^    inline bool hasDRCheckFlag(const Instruction *inst) const {$/;"	f	class:Annotator
hasDRNotCheckFlag	include/Util/Annotator.h	/^    inline bool hasDRNotCheckFlag(Instruction *inst) const {$/;"	f	class:Annotator
hasDRNotCheckFlag	include/Util/Annotator.h	/^    inline bool hasDRNotCheckFlag(const Instruction *inst) const {$/;"	f	class:Annotator
hasDeclaration	include/Util/SVFModule.h	/^    bool hasDeclaration(const Function *fun) const {$/;"	f	class:LLVMModuleSet
hasDeclaration	include/Util/SVFModule.h	/^    bool hasDeclaration(const Function *fun) const {$/;"	f	class:SVFModule
hasDef	include/MSSA/SVFG.h	/^    inline bool hasDef(const PAGNode* pagNode) const {$/;"	f	class:SVFG
hasDef	include/Util/VFG.h	/^    inline bool hasDef(const PAGNode* pagNode) const {$/;"	f	class:VFG
hasDefinition	include/Util/SVFModule.h	/^    bool hasDefinition(const Function *fun) const {$/;"	f	class:LLVMModuleSet
hasDefinition	include/Util/SVFModule.h	/^    bool hasDefinition(const Function *fun) const {$/;"	f	class:SVFModule
hasEdge	include/MemoryModel/ConsG.h	/^    inline bool hasEdge(ConstraintNode* src, ConstraintNode* dst, ConstraintEdge::ConstraintEdgeK kind) {$/;"	f	class:ConstraintGraph
hasEdge	lib/MemoryModel/CHA.cpp	/^static bool hasEdge(const CHNode *src, const CHNode *dst,$/;"	f	file:
hasExternalPAG	lib/MemoryModel/ExternalPAG.cpp	/^bool ExternalPAG::hasExternalPAG(const Function *function) {$/;"	f	class:ExternalPAG
hasFlag	include/MemoryModel/CHA.h	/^    inline bool hasFlag(CLASSATTR mask) const {$/;"	f	class:CHNode
hasFlag	include/MemoryModel/MemModel.h	/^    inline bool hasFlag(MEMTYPE mask) {$/;"	f	class:ObjTypeInfo
hasFormalINSVFGNodes	include/MSSA/SVFG.h	/^    inline bool hasFormalINSVFGNodes(const Function* fun) const {$/;"	f	class:SVFG
hasFormalOUTSVFGNodes	include/MSSA/SVFG.h	/^    inline bool hasFormalOUTSVFGNodes(const Function* fun) const {$/;"	f	class:SVFG
hasFunArgsMap	include/MemoryModel/PAG.h	/^    inline bool hasFunArgsMap(const Function* func) const {$/;"	f	class:PAG
hasFuncEntryChi	include/MSSA/MemSSA.h	/^    inline bool hasFuncEntryChi(Function * fun) const {$/;"	f	class:MemSSA
hasFuncEntryChi	include/MSSA/SVFG.h	/^    inline bool hasFuncEntryChi(const Function * func) const {$/;"	f	class:SVFG
hasFuncRetMu	include/MSSA/SVFG.h	/^    inline bool hasFuncRetMu(const Function * func) const {$/;"	f	class:SVFG
hasGNode	include/MemoryModel/GenericGraph.h	/^    inline bool hasGNode(NodeID id) const {$/;"	f	class:GenericGraph
hasGlobalRep	include/Util/SVFModule.h	/^    bool hasGlobalRep(const GlobalVariable *val) const {$/;"	f	class:LLVMModuleSet
hasGlobalRep	include/Util/SVFModule.h	/^    bool hasGlobalRep(const GlobalVariable *val) const {$/;"	f	class:SVFModule
hasGraphEdge	lib/Util/PTACallGraph.cpp	/^PTACallGraphEdge* PTACallGraph::hasGraphEdge(PTACallGraphNode* src, PTACallGraphNode* dst,PTACallGraphEdge::CEDGEK kind, CallSiteID csId) const {$/;"	f	class:PTACallGraph
hasICFGNode	include/Util/ICFG.h	/^    inline bool hasICFGNode(NodeID id) const {$/;"	f	class:ICFG
hasIncomingEdge	include/MemoryModel/GenericGraph.h	/^    inline EdgeType* hasIncomingEdge(EdgeType* edge) const {$/;"	f	class:GenericNode
hasIncomingEdge	include/MemoryModel/GenericGraph.h	/^    inline bool hasIncomingEdge() const {$/;"	f	class:GenericNode
hasIncomingEdge	include/Util/DPItem.h	/^    inline bool hasIncomingEdge(NodeID node) const {$/;"	f	class:VFPathCond
hasIncomingEdges	include/MemoryModel/PAGNode.h	/^    inline bool hasIncomingEdges(PAGEdge::PEDGEK kind) const {$/;"	f	class:PAGNode
hasIncomingVariantGepEdge	include/MemoryModel/PAGNode.h	/^    inline bool hasIncomingVariantGepEdge() const {$/;"	f	class:PAGNode
hasIndCSCallees	include/MemoryModel/PointerAnalysis.h	/^    inline bool hasIndCSCallees(CallSite cs) const {$/;"	f	class:PointerAnalysis
hasIndCSCallees	include/Util/PTACallGraph.h	/^    inline bool hasIndCSCallees(CallSite cs) const {$/;"	f	class:PTACallGraph
hasInterEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::hasInterEdge(PAGNode* src, PAGNode* dst, PAGEdge::PEDGEK kind, const Instruction* callInst) {$/;"	f	class:PAG
hasInterICFGEdge	lib/Util/ICFG.cpp	/^ICFGEdge* ICFG::hasInterICFGEdge(ICFGNode* src, ICFGNode* dst, ICFGEdge::ICFGEdgeK kind,CallSiteID csId) {$/;"	f	class:ICFG
hasInterVFGEdge	lib/Util/VFG.cpp	/^VFGEdge* VFG::hasInterVFGEdge(VFGNode* src, VFGNode* dst, VFGEdge::VFGEdgeK kind,CallSiteID csId) {$/;"	f	class:VFG
hasIntraEdge	lib/MemoryModel/PAG.cpp	/^bool PAG::hasIntraEdge(PAGNode* src, PAGNode* dst, PAGEdge::PEDGEK kind) {$/;"	f	class:PAG
hasIntraICFGEdge	lib/Util/ICFG.cpp	/^ICFGEdge* ICFG::hasIntraICFGEdge(ICFGNode* src, ICFGNode* dst, ICFGEdge::ICFGEdgeK kind) {$/;"	f	class:ICFG
hasIntraVFGEdge	lib/Util/VFG.cpp	/^VFGEdge* VFG::hasIntraVFGEdge(VFGNode* src, VFGNode* dst, VFGEdge::VFGEdgeK kind) {$/;"	f	class:VFG
hasLCDCandidate	include/WPA/Andersen.h	/^    inline bool hasLCDCandidate () const {$/;"	f	class:AndersenLCD
hasMU	include/MSSA/MemSSA.h	/^    inline bool hasMU(CallSite cs) const {$/;"	f	class:MemSSA
hasMU	include/MSSA/MemSSA.h	/^    inline bool hasMU(const PAGEdge* inst) const {$/;"	f	class:MemSSA
hasModMRSet	include/MSSA/MemRegion.h	/^    inline bool hasModMRSet(CallSite cs) {$/;"	f	class:MRGenerator
hasModSideEffectOfCallSite	include/MSSA/MemRegion.h	/^    inline bool hasModSideEffectOfCallSite(CallSite cs) {$/;"	f	class:MRGenerator
hasNodesToBeCollapsed	include/MemoryModel/ConsG.h	/^    inline bool hasNodesToBeCollapsed() const {$/;"	f	class:ConstraintGraph
hasNorRep	include/MemoryModel/OfflineConsG.h	/^    inline bool hasNorRep(NodeID nor) const {$/;"	f	class:OfflineConsG
hasOCGRep	include/MemoryModel/OfflineConsG.h	/^    inline bool hasOCGRep(NodeID node) const {$/;"	f	class:OfflineConsG
hasOffCtrl	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::hasOffCtrl(ctrlinfo* ci, int off, set <ctrlinfo*> &ctrlset){   \/\/off could be 4 -4 and so on$/;"	f	class:CtrlIdentifier
hasOfflineRep	include/WPA/Andersen.h	/^    inline bool hasOfflineRep(NodeID nodeId) const {$/;"	f	class:AndersenHCD
hasOutgoingEdge	include/MemoryModel/GenericGraph.h	/^    inline EdgeType* hasOutgoingEdge(EdgeType* edge) const {$/;"	f	class:GenericNode
hasOutgoingEdge	include/MemoryModel/GenericGraph.h	/^    inline bool hasOutgoingEdge() const {$/;"	f	class:GenericNode
hasOutgoingEdge	include/Util/DPItem.h	/^    inline bool hasOutgoingEdge(NodeID node) const {$/;"	f	class:VFPathCond
hasOutgoingEdges	include/MemoryModel/PAGNode.h	/^    inline bool hasOutgoingEdges(PAGEdge::PEDGEK kind) const {$/;"	f	class:PAGNode
hasPAGEdgeList	include/MSSA/MemRegion.h	/^    inline bool hasPAGEdgeList(const Instruction* inst) {$/;"	f	class:MRGenerator
hasPAGEdgeList	include/MemoryModel/PAG.h	/^    inline bool hasPAGEdgeList(const Instruction* inst) const {$/;"	f	class:PAG
hasPHISet	include/MSSA/MemSSA.h	/^    inline bool hasPHISet(const BasicBlock* bb) const {$/;"	f	class:MemSSA
hasPTAPAGEdgeList	include/MemoryModel/PAG.h	/^    inline bool hasPTAPAGEdgeList(const Instruction* inst) const {$/;"	f	class:PAG
hasPointsTo	include/MemoryModel/ConditionalPT.h	/^    inline bool hasPointsTo(Cond cond) const {$/;"	f	class:CondPointsToSet
hasPtrObj	include/MemoryModel/MemModel.h	/^    inline bool hasPtrObj() const {$/;"	f	class:MemObj
hasPtrObj	include/MemoryModel/MemModel.h	/^    inline bool hasPtrObj() {$/;"	f	class:ObjTypeInfo
hasRef	include/MemoryModel/OfflineConsG.h	/^    inline bool hasRef(NodeID node) const {$/;"	f	class:OfflineConsG
hasRefMRSet	include/MSSA/MemRegion.h	/^    inline bool hasRefMRSet(CallSite cs) {$/;"	f	class:MRGenerator
hasRefSideEffectOfCallSite	include/MSSA/MemRegion.h	/^    inline bool hasRefSideEffectOfCallSite(CallSite cs) {$/;"	f	class:MRGenerator
hasReturn	include/MemoryModel/ExternalPAG.h	/^    bool hasReturn;$/;"	m	class:ExternalPAG
hasReturnMu	include/MSSA/MemSSA.h	/^    inline bool hasReturnMu(Function * fun) const {$/;"	f	class:MemSSA
hasReturnNode	include/MemoryModel/ExternalPAG.h	/^    bool hasReturnNode() const { return hasReturn; }$/;"	f	class:ExternalPAG
hasSBSinkFlag	include/Util/Annotator.h	/^    inline bool hasSBSinkFlag(Instruction *inst) const {$/;"	f	class:Annotator
hasSBSourceFlag	include/Util/Annotator.h	/^    inline bool hasSBSourceFlag(Instruction *inst) const {$/;"	f	class:Annotator
hasSVFGNode	include/MSSA/SVFG.h	/^    inline bool hasSVFGNode(NodeID id) const {$/;"	f	class:SVFG
hasThreadForkEdge	include/Util/ThreadCallGraph.h	/^    inline bool hasThreadForkEdge(const Instruction* inst) const {$/;"	f	class:ThreadCallGraph
hasThreadICFGEdge	lib/Util/ICFG.cpp	/^ICFGEdge* ICFG::hasThreadICFGEdge(ICFGNode* src, ICFGNode* dst, ICFGEdge::ICFGEdgeK kind) {$/;"	f	class:ICFG
hasThreadJoinEdge	include/Util/ThreadCallGraph.h	/^    inline ThreadJoinEdge* hasThreadJoinEdge(const Instruction* call, PTACallGraphNode* joinFunNode, PTACallGraphNode* threadRoutineFunNode, CallSiteID csId) const {$/;"	f	class:ThreadCallGraph
hasThreadJoinEdge	include/Util/ThreadCallGraph.h	/^    inline bool hasThreadJoinEdge(const Instruction* inst) const {$/;"	f	class:ThreadCallGraph
hasThreadVFGEdge	lib/Util/VFG.cpp	/^VFGEdge* VFG::hasThreadVFGEdge(VFGNode* src, VFGNode* dst, VFGEdge::VFGEdgeK kind) {$/;"	f	class:VFG
hasTypeSet	include/MemoryModel/PTAType.h	/^    inline bool hasTypeSet(NodeID var) const {$/;"	f	class:TypeSystem
hasVFEdge	include/Util/DPItem.h	/^    inline bool hasVFEdge(NodeID from, NodeID to) const {$/;"	f	class:VFPathCond
hasVFGNode	include/Util/VFG.h	/^    inline bool hasVFGNode(NodeID id) const {$/;"	f	class:VFG
hasValSym	include/MemoryModel/MemModel.h	/^    inline bool hasValSym(const Value* val) {$/;"	f	class:SymbolTableInfo
hasValue	include/MemoryModel/PAGNode.h	/^    inline bool hasValue() const {$/;"	f	class:PAGNode
hasValueNode	include/MemoryModel/PAG.h	/^    inline bool hasValueNode(const Value* V) {$/;"	f	class:PAG
hasVarsForType	include/MemoryModel/PTAType.h	/^    inline bool hasVarsForType(const PTAType &type) const {$/;"	f	class:TypeSystem
hasXCtrlStructFromBot	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::hasXCtrlStructFromBot(ctrlinfo *ci){   \/\/ if transition logic can determine it$/;"	f	class:CtrlIdentifier
hasXYCtrlStructFromBot	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::hasXYCtrlStructFromBot(ctrlinfo *ci){   \/\/ if transition logic can determine it$/;"	f	class:CtrlIdentifier
has_static	include/Util/ExtAPI.h	/^    bool has_static(const Function *F) const {$/;"	f	class:ExtAPI
has_static2	include/Util/ExtAPI.h	/^    bool has_static2(const Function *F) const {$/;"	f	class:ExtAPI
hash	include/CUDD/st.h	/^    int (*hash)(char *, int);$/;"	m	struct:st_table
hashDelete	lib/CUDD/cuddLevelQ.c	/^hashDelete($/;"	f	file:
hashEntry	lib/CUDD/cuddBddCorr.c	/^typedef struct hashEntry {$/;"	s	file:
hashInsert	lib/CUDD/cuddLevelQ.c	/^hashInsert($/;"	f	file:
hashLookup	lib/CUDD/cuddLevelQ.c	/^hashLookup($/;"	f	file:
hashResize	lib/CUDD/cuddLevelQ.c	/^hashResize($/;"	f	file:
hcdAndersen	include/WPA/Andersen.h	/^    static AndersenHCD* hcdAndersen;$/;"	m	class:AndersenHCD
head	include/Util/WorkList.h	/^    Node* head;$/;"	m	class:List
heapAllocatorViaIndCall	lib/WPA/Andersen.cpp	/^void Andersen::heapAllocatorViaIndCall(CallSite cs, NodePairSet &cpySrcNodes) {$/;"	f	class:Andersen
heuriargset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
heuriargset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::heuriargset;$/;"	m	class:BinIRWrapper	file:
hits	include/CUDD/cuddInt.h	/^    double hits;$/;"	m	struct:DdLocalCache
hits	lib/CUDD/cuddSubsetSP.c	/^    int         hits;$/;"	m	struct:GlobalInfo	file:
hlcdAndersen	include/WPA/Andersen.h	/^    static AndersenHLCD* hlcdAndersen;$/;"	m	class:AndersenHLCD
hooks	include/CUDD/cuddInt.h	/^    char *hooks;		\/* application-specific field (used by vis) *\/$/;"	m	struct:DdManager
i	include/DisPatch/InitPIDObj.h	/^            string i;$/;"	m	class:InitPIDObj::CtrlInfo
icfg	include/MemoryModel/PointerAnalysis.h	/^    ICFG* icfg;$/;"	m	class:PointerAnalysis
icfg	include/Util/ICFGStat.h	/^    ICFG *icfg;$/;"	m	class:ICFGStat
id	include/MemoryModel/GenericGraph.h	/^    NodeID id;		\/\/\/< Node ID$/;"	m	class:GenericNode
idToCSMap	include/Util/PTACallGraph.h	/^    static IdToCallSiteMap idToCSMap;	\/\/\/< Map a callsite ID to a pair of call instruction and callee$/;"	m	class:PTACallGraph
idToCSMap	lib/Util/PTACallGraph.cpp	/^PTACallGraph::IdToCallSiteMap PTACallGraph::idToCSMap;$/;"	m	class:PTACallGraph	file:
idToObjMap	include/MemoryModel/MemModel.h	/^    inline IDToMemMapTy& idToObjMap() {$/;"	f	class:SymbolTableInfo
ids	include/CUDD/dddmpInt.h	/^  int *ids;$/;"	m	struct:Dddmp_Hdr_s
idx2arg	include/DisPatch/UtilDef.h	/^    const Value* idx2arg(const Function *func, unsigned idx){$/;"	f	class:UtilDef
idx2inst	include/DisPatch/UtilDef.h	/^    const Instruction* idx2inst(const Function *func, unsigned idx){$/;"	f	class:UtilDef
impactN	lib/CUDD/cuddApprox.c	/^    double impactN;$/;"	m	struct:GlobalQueueItem	file:
impactP	lib/CUDD/cuddApprox.c	/^    double impactP;$/;"	m	struct:GlobalQueueItem	file:
impliedp	lib/CUDD/cuddEssent.c	/^impliedp($/;"	f	file:
in	include/DisPatch/CtrlIdentifier.h	/^        const Value * in;    \/\/to is not usually a stored variable. If that is necessary, find alias  \/\/ originally from$/;"	m	struct:CtrlIdentifier::_ctrlinfo
inBackwardSlice	include/MSSA/SVFGStat.h	/^    inline bool inBackwardSlice(const SVFGNode* node) const {$/;"	f	class:SVFGStat
inConn	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, ctrlinfo *> outConn, inConn;  $/;"	m	class:CtrlIdentifier
inForwardSlice	include/MSSA/SVFGStat.h	/^    inline bool inForwardSlice(const SVFGNode* node) const {$/;"	f	class:SVFGStat
inSCC	include/Util/SCC.h	/^        inline bool inSCC(void)   const {$/;"	f	class:SCCDetection::GNodeSCCInfo
inSCC	include/Util/SCC.h	/^        inline void inSCC(bool v)       {$/;"	f	class:SCCDetection::GNodeSCCInfo
inSCC	include/Util/SCC.h	/^    inline bool inSCC(NodeID n)    {$/;"	f	class:SCCDetection
inSameCallGraphSCC	include/MemoryModel/PointerAnalysis.h	/^    inline bool inSameCallGraphSCC(const Function* fun1,const Function* fun2) {$/;"	f	class:PointerAnalysis
inTrans	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, set <ctrlinfo *> > outTrans, inTrans;$/;"	m	class:CtrlIdentifier
inUpdatedVarMap	include/MemoryModel/PointsToDFDS.h	/^    UpdatedVarMap inUpdatedVarMap;$/;"	m	class:IncDFPTData
incEdgeNum	include/MemoryModel/GenericGraph.h	/^    inline void incEdgeNum() {$/;"	f	class:GenericGraph
incNodeNum	include/MemoryModel/GenericGraph.h	/^    inline void incNodeNum() {$/;"	f	class:GenericGraph
incomingAddrEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy& incomingAddrEdges() {$/;"	f	class:ConstraintNode
incomingAddrsBegin	include/MemoryModel/ConsGNode.h	/^    inline const_iterator incomingAddrsBegin() const {$/;"	f	class:ConstraintNode
incomingAddrsEnd	include/MemoryModel/ConsGNode.h	/^    inline const_iterator incomingAddrsEnd() const {$/;"	f	class:ConstraintNode
incomingLoadsBegin	include/MemoryModel/ConsGNode.h	/^    inline const_iterator incomingLoadsBegin() const {$/;"	f	class:ConstraintNode
incomingLoadsEnd	include/MemoryModel/ConsGNode.h	/^    inline const_iterator incomingLoadsEnd() const {$/;"	f	class:ConstraintNode
incomingStoresBegin	include/MemoryModel/ConsGNode.h	/^    inline const_iterator incomingStoresBegin() const {$/;"	f	class:ConstraintNode
incomingStoresEnd	include/MemoryModel/ConsGNode.h	/^    inline const_iterator incomingStoresEnd() const {$/;"	f	class:ConstraintNode
increaseIfNotReachUpperBound	lib/MemoryModel/LocationSet.cpp	/^bool LocationSet::increaseIfNotReachUpperBound(std::vector<NodeID>& indices,$/;"	f	class:LocationSet
increaseStackSize	lib/Util/SVFUtil.cpp	/^void SVFUtil::increaseStackSize()$/;"	f	class:SVFUtil
incycle	include/Util/CxtStmt.h	/^    bool incycle;$/;"	m	class:CxtThread
indCallSiteToFunPtrMap	include/MemoryModel/PAG.h	/^    CallSiteToFunPtrMap indCallSiteToFunPtrMap; \/\/\/< Map an indirect callsite to its function pointer$/;"	m	class:PAG
indVFEdgeEnd	include/MSSA/SVFGStat.h	/^    void indVFEdgeEnd() {$/;"	f	class:SVFGStat
indVFEdgeStart	include/MSSA/SVFGStat.h	/^    void indVFEdgeStart() {$/;"	f	class:SVFGStat
indce2csaddr	include/DisPatch/BinIRWrapper.h	/^    static map <const Function *, uint64_t> indce2csaddr;$/;"	m	class:BinIRWrapper
indce2csaddr	lib/DisPatch/BinIRWrapper.cpp	/^map <const Function *, uint64_t> BinIRWrapper::indce2csaddr;$/;"	m	class:BinIRWrapper	file:
indcsaddr2ce	include/DisPatch/BinIRWrapper.h	/^    static map <uint64_t, const Function *> indcsaddr2ce;$/;"	m	class:BinIRWrapper
indcsaddr2ce	lib/DisPatch/BinIRWrapper.cpp	/^map <uint64_t, const Function *> BinIRWrapper::indcsaddr2ce;$/;"	m	class:BinIRWrapper	file:
index	include/CUDD/cudd.h	/^    DdHalfWord index;$/;"	m	struct:DdNode
index	include/CUDD/mtr.h	/^    MtrHalfWord index;$/;"	m	struct:MtrNode
index	include/CUDD/st.h	/^    int index;$/;"	m	struct:st_generator
index	lib/CUDD/cuddApprox.c	/^    int index;			\/* index of the current node *\/$/;"	m	struct:ApproxInfo	file:
indexCompare	lib/CUDD/cuddUtil.c	/^indexCompare($/;"	f	file:
indexRegs	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::indexRegs(vector <const Value *> &rvec, set <const Value *> &rset, vector <const Instruction *> &instvec){$/;"	f	class:BinIRWrapper
indexToDDNodeMap	include/Util/Conditions.h	/^    IndexToDDNodeMap indexToDDNodeMap;$/;"	m	class:BddCondManager
indirectCallMap	include/Util/PTACallGraph.h	/^    CallEdgeMap indirectCallMap;$/;"	m	class:PTACallGraph
indirectCalls	include/Util/PTACallGraph.h	/^    CallInstSet indirectCalls;$/;"	m	class:PTACallGraphEdge
indirectCallsBegin	include/Util/PTACallGraph.h	/^    inline CallInstSet::iterator indirectCallsBegin() const {$/;"	f	class:PTACallGraphEdge
indirectCallsEnd	include/Util/PTACallGraph.h	/^    inline CallInstSet::iterator indirectCallsEnd() const {$/;"	f	class:PTACallGraphEdge
indirectPropaTime	include/WPA/FlowSensitive.h	/^    double indirectPropaTime; \/\/\/< time of points-to propagation of top-level pointers$/;"	m	class:FlowSensitive
inferMissingEndAddr	lib/DisPatch/BinIRWrapper.cpp	/^uint64_t BinIRWrapper::inferMissingEndAddr(const Function *func){$/;"	f	class:BinIRWrapper
inferMissingExemode	lib/DisPatch/BinIRWrapper.cpp	/^string BinIRWrapper::inferMissingExemode(const Function *func){$/;"	f	class:BinIRWrapper
info	include/Util/ExtAPI.h	/^    llvm::StringMap<extf_t> info;$/;"	m	class:ExtAPI
info_arch	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
init	include/DisPatch/BinIRWrapper.h	/^    static bool init;$/;"	m	class:BinIRWrapper
init	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::init = false;$/;"	m	class:BinIRWrapper	file:
init	lib/MemoryModel/MemModel.cpp	/^void MemObj::init(const Type* type) {$/;"	f	class:MemObj
init	lib/MemoryModel/MemModel.cpp	/^void MemObj::init(const Value *val) {$/;"	f	class:MemObj
init	lib/MemoryModel/MemModel.cpp	/^void ObjTypeInfo::init(const Value* val) {$/;"	f	class:ObjTypeInfo
init	lib/Util/ExtAPI.cpp	/^void ExtAPI::init() {$/;"	f	class:ExtAPI
init	lib/Util/ThreadAPI.cpp	/^void ThreadAPI::init() {$/;"	f	class:ThreadAPI
initBackwardDstPoint	lib/DisPatch/InitPIDObj.cpp	/^const Value* InitPIDObj::initBackwardDstPoint(const Value *sv, int dist, const Function *func){$/;"	f	class:InitPIDObj
initCallerSetMap	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::initCallerSetMap(SVFModule &m){$/;"	f	class:BinIRWrapper
initDstPoint	lib/DisPatch/CtrlIdentifier.cpp	/^unsigned CtrlIdentifier::initDstPoint(const Value *dv, unsigned di, const Function *func){$/;"	f	class:CtrlIdentifier
initForwardSrcPoint	lib/DisPatch/InitPIDObj.cpp	/^const Value* InitPIDObj::initForwardSrcPoint(const Value *sv, int dist, const Function *func){$/;"	f	class:InitPIDObj
initSlots	include/CUDD/cuddInt.h	/^    unsigned int initSlots;	\/* initial size of a subtable *\/$/;"	m	struct:DdManager
initSrcPoint	lib/DisPatch/CtrlIdentifier.cpp	/^unsigned CtrlIdentifier::initSrcPoint(const Value *sv, unsigned si, unsigned di, const Function *func){$/;"	f	class:CtrlIdentifier
initSymmInfo	lib/CUDD/cuddExact.c	/^initSymmInfo($/;"	f	file:
initWorklist	include/WPA/Andersen.h	/^    virtual void initWorklist() {}$/;"	f	class:Andersen
initWorklist	include/WPA/WPASolver.h	/^    virtual inline void initWorklist() {$/;"	f	class:WPASolver
initalNode	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::initalNode() {$/;"	f	class:PAGBuilder
initcv2cvaddr	include/DisPatch/InitPIDObj.h	/^    map <const Value *, uint64_t> initcv2cvaddr;$/;"	m	class:InitPIDObj
initialWorkList	include/MSSA/SVFGOPT.h	/^    inline void initialWorkList() {$/;"	f	class:SVFGOPT
initialise	lib/MemoryModel/ExternalPAG.cpp	/^void ExternalPAG::initialise(SVFModule svfModule) {$/;"	f	class:ExternalPAG
initialiseCandidatePointers	include/MemoryModel/PAG.h	/^    inline void initialiseCandidatePointers() {$/;"	f	class:PAG
initialize	include/WPA/Andersen.h	/^    void initialize(SVFModule svfModule) {AndersenHCD::initialize(svfModule);}$/;"	f	class:AndersenHLCD
initialize	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::initialize(SVFModule svfModule) {$/;"	f	class:PointerAnalysis
initialize	lib/Util/SVFModule.cpp	/^void LLVMModuleSet::initialize() {$/;"	f	class:LLVMModuleSet
initialize	lib/WPA/Andersen.cpp	/^void Andersen::initialize(SVFModule svfModule) {$/;"	f	class:Andersen
initialize	lib/WPA/AndersenHCD.cpp	/^void AndersenHCD::initialize(SVFModule svfModule) {$/;"	f	class:AndersenHCD
initialize	lib/WPA/AndersenSFR.cpp	/^void AndersenSFR::initialize(SVFModule svfModule) {$/;"	f	class:AndersenSFR
initialize	lib/WPA/FlowSensitive.cpp	/^void FlowSensitive::initialize(SVFModule svfModule) {$/;"	f	class:FlowSensitive
initialize	lib/WPA/TypeAnalysis.cpp	/^void TypeAnalysis::initialize(SVFModule svfModule) {$/;"	f	class:TypeAnalysis
inloop	include/Util/CxtStmt.h	/^    bool inloop;$/;"	m	class:CxtThread
inloop	include/Util/DataFlowUtil.h	/^    bool inloop;$/;"	m	class:PTASCEV
innerDepFromErr2Ref	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::innerDepFromErr2Ref(const Value *sv, const Value *dv, unsigned si, unsigned di, const Function *func){$/;"	f	class:CtrlIdentifier
innerVarDependencyTagging	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::innerVarDependencyTagging(){$/;"	f	class:CtrlIdentifier
inoff2ctrl	include/DisPatch/CtrlIdentifier.h	/^    map <int, ctrlinfo *> inoff2ctrl;$/;"	m	class:CtrlIdentifier
insertPHI	lib/MSSA/MemSSA.cpp	/^void MemSSA::insertPHI(const Function& fun) {$/;"	f	class:MemSSA
inst	include/MSSA/MSSAMuChi.h	/^    const LoadPE* inst;$/;"	m	class:LoadMU
inst	include/MSSA/MSSAMuChi.h	/^    const StorePE* inst;$/;"	m	class:StoreCHI
inst	include/MemoryModel/PAGEdge.h	/^    const Instruction* inst;		\/\/\/ the callsite instruction return to$/;"	m	class:RetPE
inst	include/MemoryModel/PAGEdge.h	/^    const Instruction* inst;		\/\/\/ the callsite instruction return to$/;"	m	class:TDJoinPE
inst	include/MemoryModel/PAGEdge.h	/^    const Instruction* inst;		\/\/\/< llvm instruction at the fork site$/;"	m	class:TDForkPE
inst	include/MemoryModel/PAGEdge.h	/^    const Instruction* inst;		\/\/\/< llvm instruction for this call$/;"	m	class:CallPE
inst	include/Util/CxtStmt.h	/^    const Instruction* inst;$/;"	m	class:CxtStmt
inst	include/Util/ICFGNode.h	/^    const Instruction *inst;$/;"	m	class:IntraBlockNode
inst2LabelMap	include/MemoryModel/PAGEdge.h	/^    static Inst2LabelMap inst2LabelMap; \/\/\/< Call site Instruction to label map$/;"	m	class:PAGEdge
inst2LabelMap	lib/MemoryModel/PAG.cpp	/^PAGEdge::Inst2LabelMap PAGEdge::inst2LabelMap;$/;"	m	class:PAGEdge	file:
inst2PAGEdgesMap	include/MemoryModel/PAG.h	/^    Inst2PAGEdgesMap inst2PAGEdgesMap;	\/\/\/< Map a instruction to its PAGEdges$/;"	m	class:PAG
inst2PTAPAGEdgesMap	include/MemoryModel/PAG.h	/^    Inst2PAGEdgesMap inst2PTAPAGEdgesMap;	\/\/\/< Map a instruction to its PointerAnalysis related PAGEdges$/;"	m	class:PAG
inst2addr	include/DisPatch/BinIRWrapper.h	/^    uint64_t inst2addr(const Instruction *inst){$/;"	f	class:BinIRWrapper
inst2addr	include/DisPatch/BinIRWrapper.h	/^    uint64_t inst2addr(const Value *v){$/;"	f	class:BinIRWrapper
inst2func	include/DisPatch/UtilDef.h	/^    inline const Function* inst2func(const Instruction *inst){$/;"	f	class:UtilDef
inst2idx	include/DisPatch/UtilDef.h	/^    unsigned inst2idx(const Function *func, const Instruction *inst){$/;"	f	class:UtilDef
inst2idx	include/DisPatch/UtilDef.h	/^    unsigned inst2idx(const Function *func, const Value *v){        \/\/only instruction acceptable$/;"	f	class:UtilDef
inst2idx	include/DisPatch/UtilDef.h	/^    unsigned inst2idx(const Instruction *inst){$/;"	f	class:UtilDef
inst2idx	include/DisPatch/UtilDef.h	/^    unsigned inst2idx(const Value *v){  \/\/only instruction acceptable$/;"	f	class:UtilDef
inst2instaddr	include/DisPatch/BinIRWrapper.h	/^    static map <const Instruction *, uint64_t> inst2instaddr;$/;"	m	class:BinIRWrapper
inst2instaddr	lib/DisPatch/BinIRWrapper.cpp	/^map <const Instruction *, uint64_t> BinIRWrapper::inst2instaddr;$/;"	m	class:BinIRWrapper	file:
inst2str	include/DisPatch/UtilDef.h	/^    inline string inst2str(Instruction *inst){$/;"	f	class:UtilDef
inst2str	include/DisPatch/UtilDef.h	/^    inline string inst2str(const ConstantInt *ci){$/;"	f	class:UtilDef
inst2str	include/DisPatch/UtilDef.h	/^    inline string inst2str(const Instruction *inst){$/;"	f	class:UtilDef
inst2str	include/DisPatch/UtilDef.h	/^   inline string inst2str(const Value *val){$/;"	f	class:UtilDef
instIdxer	include/DisPatch/UtilDef.h	/^    void instIdxer(const Function *func){$/;"	f	class:UtilDef
inst_iterator	include/Util/BasicTypes.h	/^typedef llvm::inst_iterator inst_iterator;$/;"	t
instaddr2instvec	include/DisPatch/BinIRWrapper.h	/^    static map <uint64_t, vector <const Instruction *>> instaddr2instvec;$/;"	m	class:BinIRWrapper
instaddr2instvec	lib/DisPatch/BinIRWrapper.cpp	/^map <uint64_t, vector<const Instruction *>> BinIRWrapper::instaddr2instvec;$/;"	m	class:BinIRWrapper	file:
insts2maxidx	include/DisPatch/UtilDef.h	/^    unsigned insts2maxidx(const Function *func, set <const Value *> vset){$/;"	f	class:UtilDef
int322fp	include/DisPatch/BinIRWrapper.h	/^    inline float int322fp( uint32_t floatingToIntValue){$/;"	f	class:BinIRWrapper
int642fp	include/DisPatch/BinIRWrapper.h	/^    inline float int642fp(uint64_t floatingToIntValue){$/;"	f	class:BinIRWrapper
interAnalysis	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::interAnalysis(const Instruction *cs){$/;"	f	class:InterProcAnal
interAnalysisDoneSet	include/DisPatch/InterProcAnal.h	/^    set <const Instruction *> interAnalysisDoneSet;$/;"	m	class:InterProcAnal
interact	include/CUDD/cuddInt.h	/^    long *interact;		\/* interacting variable matrix *\/$/;"	m	struct:DdManager
interpreter	lib/DisPatch/InitPIDObj.cpp	/^void InitPIDObj::interpreter(){$/;"	f	class:InitPIDObj
inters	include/MSSA/MemPartition.h	/^    PointsToList inters;$/;"	m	class:InterDisjointMRG
intersect	include/MemoryModel/PTAType.h	/^    inline bool intersect(const TypeSet *typeset) const {$/;"	f	class:TypeSet
intersectWithComplement	include/MemoryModel/ConditionalPT.h	/^    void intersectWithComplement(const CondPointsToSet<Cond>& cpts1) {$/;"	f	class:CondPointsToSet
intersectWithComplement	include/MemoryModel/ConditionalPT.h	/^    void intersectWithComplement(const CondPointsToSet<Cond>& cpts1, const CondPointsToSet<Cond>& cpts2)$/;"	f	class:CondPointsToSet
intersects	include/MemoryModel/ConditionalPT.h	/^    bool intersects(const CondPointsToSet<Cond>* rhs) const {$/;"	f	class:CondPointsToSet
intersects	include/MemoryModel/ConditionalPT.h	/^    bool intersects(const CondStdSet<Element>& rhs) const {$/;"	f	class:CondStdSet
intersects	include/MemoryModel/LocationSet.h	/^    inline bool intersects(const LocationSet& RHS) const {$/;"	f	class:LocationSet
inv_child_iterator	include/Util/CFLSolver.h	/^    typedef typename InvGTraits::ChildIteratorType inv_child_iterator;$/;"	t	class:CFLSolver
invperm	include/CUDD/cuddInt.h	/^    int *invperm;		\/* current inv. var. perm. (level to index) *\/$/;"	m	struct:DdManager
invpermZ	include/CUDD/cuddInt.h	/^    int *invpermZ;		\/* for ZDD *\/$/;"	m	struct:DdManager
ipa	include/DisPatch/CtrlIdentifier.h	/^    InterProcAnal *ipa;$/;"	m	class:CtrlIdentifier
ipa	include/DisPatch/InitPIDObj.h	/^    InterProcAnal *ipa;$/;"	m	class:InitPIDObj
ipainit	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::ipainit(){$/;"	f	class:InterProcAnal
is180	include/DisPatch/CtrlIdentifier.h	/^    bool is180(double v){$/;"	f	class:CtrlIdentifier
isATPointer	include/MemoryModel/PAGNode.h	/^    bool isATPointer;	\/\/\/ address-taken pointer$/;"	m	class:PAGNode
isAccP	include/DisPatch/InitPIDObj.h	/^            bool isAccP(){$/;"	f	class:InitPIDObj::AxisInfo
isAccPI	include/DisPatch/InitPIDObj.h	/^            bool isAccPI(){$/;"	f	class:InitPIDObj::AxisInfo
isAccPID	include/DisPatch/InitPIDObj.h	/^            bool isAccPID(){$/;"	f	class:InitPIDObj::AxisInfo
isAccPIDFF	include/DisPatch/InitPIDObj.h	/^            bool isAccPIDFF(){$/;"	f	class:InitPIDObj::AxisInfo
isActualOUTPHI	include/MSSA/SVFGNode.h	/^    inline bool isActualOUTPHI() const {$/;"	f	class:InterMSSAPHISVFGNode
isActualRetPHI	include/Util/VFGNode.h	/^    inline bool isActualRetPHI() const {$/;"	f	class:InterPHIVFGNode
isAddressTakenPtr	include/MemoryModel/PAGNode.h	/^    inline bool isAddressTakenPtr() const {$/;"	f	class:PAGNode
isAliasedMR	include/MSSA/MemRegion.h	/^    virtual inline bool isAliasedMR(const PointsTo& cpts, const MemRegion* mr) {$/;"	f	class:MRGenerator
isAnAllocationWraper	include/Util/SVFUtil.h	/^inline bool isAnAllocationWraper(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isArray	include/MemoryModel/MemModel.h	/^    inline bool isArray() const {$/;"	f	class:MemObj
isArray	include/MemoryModel/MemModel.h	/^    inline bool isArray() {$/;"	f	class:ObjTypeInfo
isArrayMemObj	include/MemoryModel/PointerAnalysis.h	/^    inline bool isArrayMemObj(NodeID id) const {$/;"	f	class:PointerAnalysis
isBBCallsProgExit	lib/Util/PathCondAllocator.cpp	/^bool PathCondAllocator::isBBCallsProgExit(const BasicBlock* bb) {$/;"	f	class:PathCondAllocator
isBackwardPropaInst	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::isBackwardPropaInst(set <const Value *> svset, set <const Value *> &doneset, const Value *dv, const Function *func, unsigned minidx, unsigned maxidx){$/;"	f	class:CtrlIdentifier
isBarrierWaitCall	include/Util/SVFUtil.h	/^inline bool isBarrierWaitCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isBarrierWaitCall	include/Util/SVFUtil.h	/^inline bool isBarrierWaitCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isBinOpInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isBinOpInst(const Value *instv){$/;"	f	class:BinIRWrapper
isBinaryConstantExpr	include/Util/SVFUtil.h	/^inline const ConstantExpr *isBinaryConstantExpr(const Value *val) {$/;"	f	namespace:SVFUtil
isBinaryEdge	include/Util/ICFG.h	/^    inline bool isBinaryEdge(const PAGEdge* copy) const {$/;"	f	class:ICFG
isBinaryNode	include/MemoryModel/PAG.h	/^    inline bool isBinaryNode(const PAGNode* node) const {$/;"	f	class:PAG
isBitCastInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isBitCastInst(const Value *instv){$/;"	f	class:BinIRWrapper
isBlackHoleObj	lib/MemoryModel/MemModel.cpp	/^bool MemObj::isBlackHoleObj() const {$/;"	f	class:MemObj
isBlackholeSym	lib/MemoryModel/MemModel.cpp	/^bool SymbolTableInfo::isBlackholeSym(const Value *val) {$/;"	f	class:SymbolTableInfo
isBlkObj	include/MemoryModel/MemModel.h	/^    static inline bool isBlkObj(NodeID id) {$/;"	f	class:SymbolTableInfo
isBlkObj	include/MemoryModel/PAG.h	/^    inline bool isBlkObj(NodeID id) const {$/;"	f	class:PAG
isBlkObjOrConstantObj	include/MemoryModel/ConsG.h	/^    inline bool isBlkObjOrConstantObj(NodeID id) {$/;"	f	class:ConstraintGraph
isBlkObjOrConstantObj	include/MemoryModel/MemModel.h	/^    static inline bool isBlkObjOrConstantObj(NodeID id) {$/;"	f	class:SymbolTableInfo
isBlkObjOrConstantObj	include/MemoryModel/PAG.h	/^    inline bool isBlkObjOrConstantObj(NodeID id) const {$/;"	f	class:PAG
isBlkObjOrConstantObj	include/MemoryModel/PointerAnalysis.h	/^    inline bool isBlkObjOrConstantObj(NodeID ptd) const {$/;"	f	class:PointerAnalysis
isBlkPtr	include/MemoryModel/MemModel.h	/^    static inline bool isBlkPtr(NodeID id) {$/;"	f	class:SymbolTableInfo
isBlkPtr	include/MemoryModel/PAG.h	/^    inline bool isBlkPtr(NodeID id) const {$/;"	f	class:PAG
isBuiltFromFile	include/MemoryModel/PAG.h	/^    inline bool isBuiltFromFile() {$/;"	f	class:PAG
isCFGEdge	include/Util/ICFGEdge.h	/^    inline bool isCFGEdge() const {$/;"	f	class:ICFGEdge
isCSRetVar	lib/DisPatch/InterProcAnal.cpp	/^bool InterProcAnal::isCSRetVar(const Function *func, const Value *v){$/;"	f	class:InterProcAnal
isCV	include/DisPatch/InitPIDObj.h	/^    inline bool isCV(const Value *v){$/;"	f	class:InitPIDObj
isCV	include/DisPatch/InitPIDObj.h	/^    inline bool isCV(const Value *v, string key){$/;"	f	class:InitPIDObj
isCallBranch	lib/DisPatch/InterProcAnal.cpp	/^bool InterProcAnal::isCallBranch(cs_insn &inst, uint64_t addrmin, uint64_t addrmax){$/;"	f	class:InterProcAnal
isCallCFGEdge	include/Util/ICFGEdge.h	/^    inline bool isCallCFGEdge() const {$/;"	f	class:ICFGEdge
isCallDirectVFGEdge	include/Util/VFGEdge.h	/^    inline bool isCallDirectVFGEdge() const {$/;"	f	class:VFGEdge
isCallIndirectVFGEdge	include/Util/VFGEdge.h	/^    inline bool isCallIndirectVFGEdge() const {$/;"	f	class:VFGEdge
isCallInst	include/DisPatch/UtilDef.h	/^    virtual bool isCallInst(const Value *inst){\/\/const Instruction *inst){  $/;"	f	class:UtilDef
isCallInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isCallInst(const Value *instv){$/;"	f	class:BinIRWrapper
isCallSite	include/Util/SVFUtil.h	/^inline bool isCallSite(const Instruction* inst) {$/;"	f	namespace:SVFUtil
isCallSiteRetSVFGNode	lib/MSSA/SVFG.cpp	/^Instruction* SVFG::isCallSiteRetSVFGNode(const SVFGNode* node) const {$/;"	f	class:SVFG
isCallVFGEdge	include/Util/VFGEdge.h	/^    inline bool isCallVFGEdge() const {$/;"	f	class:VFGEdge
isCastConstantExpr	include/Util/SVFUtil.h	/^inline const ConstantExpr *isCastConstantExpr(const Value *val) {$/;"	f	namespace:SVFUtil
isCastInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isCastInst(const Value *instv){$/;"	f	class:BinIRWrapper
isCmpConstantExpr	include/Util/SVFUtil.h	/^inline const ConstantExpr *isCmpConstantExpr(const Value *val) {$/;"	f	namespace:SVFUtil
isCmpEdge	include/Util/ICFG.h	/^    inline bool isCmpEdge(const PAGEdge* copy) const {$/;"	f	class:ICFG
isCmpNode	include/MemoryModel/PAG.h	/^    inline bool isCmpNode(const PAGNode* node) const {$/;"	f	class:PAG
isConcreteCxt	include/Util/DPItem.h	/^    inline bool isConcreteCxt() const {$/;"	f	class:ContextCond
isConnectingTwoCallSites	lib/MSSA/SVFGOPT.cpp	/^bool SVFGOPT::isConnectingTwoCallSites(const SVFGNode* node) const {$/;"	f	class:SVFGOPT
isConstArray	include/MemoryModel/MemModel.h	/^    inline bool isConstArray() const {$/;"	f	class:MemObj
isConstArray	include/MemoryModel/MemModel.h	/^    inline bool isConstArray() {$/;"	f	class:ObjTypeInfo
isConstStruct	include/MemoryModel/MemModel.h	/^    inline bool isConstStruct() const {$/;"	f	class:MemObj
isConstStruct	include/MemoryModel/MemModel.h	/^    inline bool isConstStruct() {$/;"	f	class:ObjTypeInfo
isConstant	include/MemoryModel/MemModel.h	/^    inline bool isConstant() const {$/;"	f	class:MemObj
isConstant	include/MemoryModel/MemModel.h	/^    inline bool isConstant() {$/;"	f	class:ObjTypeInfo
isConstantData	include/MemoryModel/PAGNode.h	/^	inline bool isConstantData() const {$/;"	f	class:PAGNode
isConstantObj	include/MemoryModel/MemModel.h	/^    static inline bool isConstantObj(NodeID id) {$/;"	f	class:SymbolTableInfo
isConstantObj	include/MemoryModel/PAG.h	/^	inline bool isConstantObj(NodeID id) const {$/;"	f	class:PAG
isConstantObjSym	lib/MemoryModel/MemModel.cpp	/^bool SymbolTableInfo::isConstantObjSym(const Value *val) {$/;"	f	class:SymbolTableInfo
isConstantOffset	include/MemoryModel/LocationSet.h	/^    inline bool isConstantOffset() const {$/;"	f	class:LocationSet
isConstructor	lib/Util/CPPUtil.cpp	/^bool cppUtil::isConstructor(const Function *F) {$/;"	f	class:cppUtil
isCtrlP	include/DisPatch/InitPIDObj.h	/^            bool isCtrlP(int idx){ $/;"	f	class:InitPIDObj::AxisInfo
isCtrlPI	include/DisPatch/InitPIDObj.h	/^            bool isCtrlPI(int idx){ $/;"	f	class:InitPIDObj::AxisInfo
isCtrlPID	include/DisPatch/InitPIDObj.h	/^            bool isCtrlPID(int idx){ $/;"	f	class:InitPIDObj::AxisInfo
isCtrlPIDFF	include/DisPatch/InitPIDObj.h	/^            bool isCtrlPIDFF(int idx){ $/;"	f	class:InitPIDObj::AxisInfo
isDeadFunction	lib/Util/SVFUtil.cpp	/^bool SVFUtil::isDeadFunction (const Function * fun) {$/;"	f	class:SVFUtil
isDeallocExtCall	include/Util/SVFUtil.h	/^inline bool isDeallocExtCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isDeallocExtCall	include/Util/SVFUtil.h	/^inline bool isDeallocExtCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isDeallocExtFun	include/Util/SVFUtil.h	/^inline bool isDeallocExtFun(const Function *fun) {$/;"	f	namespace:SVFUtil
isDefOfAInFOut	include/MSSA/SVFGOPT.h	/^    inline bool isDefOfAInFOut(const SVFGNode* node) {$/;"	f	class:SVFGOPT
isDestructor	lib/Util/CPPUtil.cpp	/^bool cppUtil::isDestructor(const Function *F) {$/;"	f	class:cppUtil
isDirectCallBranch	lib/DisPatch/InterProcAnal.cpp	/^bool InterProcAnal::isDirectCallBranch(cs_insn &inst, uint64_t addrmin, uint64_t addrmax){$/;"	f	class:InterProcAnal
isDirectCallEdge	include/Util/PTACallGraph.h	/^	inline bool isDirectCallEdge() const {$/;"	f	class:PTACallGraphEdge
isDirectVFGEdge	include/Util/VFGEdge.h	/^    inline bool isDirectVFGEdge() const {$/;"	f	class:VFGEdge
isEQCmp	lib/Util/PathCondAllocator.cpp	/^bool PathCondAllocator::isEQCmp(const CmpInst* cmp) const {$/;"	f	class:PathCondAllocator
isExtCall	include/Util/SVFUtil.h	/^inline bool isExtCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isExtCall	include/Util/SVFUtil.h	/^inline bool isExtCall(const Function* fun) {$/;"	f	namespace:SVFUtil
isExtCall	include/Util/SVFUtil.h	/^inline bool isExtCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isFIObjNode	include/MemoryModel/PointerAnalysis.h	/^    inline bool isFIObjNode(NodeID id) const {$/;"	f	class:PointerAnalysis
isFieldInsensitive	include/MemoryModel/MemModel.h	/^    inline bool isFieldInsensitive() const {$/;"	f	class:MemObj
isFieldInsensitive	include/MemoryModel/PointerAnalysis.h	/^    inline bool isFieldInsensitive(NodeID id) const {$/;"	f	class:PointerAnalysis
isFieldInsensitiveObj	include/MemoryModel/ConsG.h	/^    inline bool isFieldInsensitiveObj(NodeID id) const {$/;"	f	class:ConstraintGraph
isForIdenticalController	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::isForIdenticalController(const Value *sv, const Value *dv){$/;"	f	class:CtrlIdentifier
isForksite	include/Util/ThreadCallGraph.h	/^    inline bool isForksite(const Instruction* csInst) {$/;"	f	class:ThreadCallGraph
isFormalINPHI	include/MSSA/SVFGNode.h	/^    inline bool isFormalINPHI() const {$/;"	f	class:InterMSSAPHISVFGNode
isFormalParmPHI	include/Util/VFGNode.h	/^    inline bool isFormalParmPHI() const {$/;"	f	class:InterPHIVFGNode
isFromIntraSameThis	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isFromIntraSameThis(const Value *v1 , const Value *v2){$/;"	f	class:BinIRWrapper
isFunEntrySVFGNode	lib/MSSA/SVFG.cpp	/^const Function* SVFG::isFunEntrySVFGNode(const SVFGNode* node) const {$/;"	f	class:SVFG
isFunEntryVFGNode	lib/Util/VFG.cpp	/^const Function* VFG::isFunEntryVFGNode(const VFGNode* node) const {$/;"	f	class:VFG
isFunPtr	include/MemoryModel/PAG.h	/^    inline bool isFunPtr(NodeID id) const {$/;"	f	class:PAG
isFunction	include/MemoryModel/MemModel.h	/^    inline bool isFunction() const {$/;"	f	class:MemObj
isFunction	include/MemoryModel/MemModel.h	/^    inline bool isFunction() {$/;"	f	class:ObjTypeInfo
isG	include/DisPatch/CtrlIdentifier.h	/^    bool isG(double v){$/;"	f	class:CtrlIdentifier
isGepConstantExpr	include/Util/SVFUtil.h	/^inline const ConstantExpr *isGepConstantExpr(const Value *val) {$/;"	f	namespace:SVFUtil
isGepFromMainThis	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isGepFromMainThis(const Value *instv){$/;"	f	class:BinIRWrapper
isGepInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isGepInst(const Value *instv){$/;"	f	class:BinIRWrapper
isGlobalObj	include/MemoryModel/MemModel.h	/^    inline bool isGlobalObj() const {$/;"	f	class:MemObj
isGlobalObj	include/MemoryModel/MemModel.h	/^    inline bool isGlobalObj() {$/;"	f	class:ObjTypeInfo
isHareParFor	include/Util/ThreadAPI.h	/^    inline bool isHareParFor(CallSite cs) const {$/;"	f	class:ThreadAPI
isHareParFor	include/Util/ThreadAPI.h	/^    inline bool isHareParFor(const Instruction *inst) const {$/;"	f	class:ThreadAPI
isHareParForCall	include/Util/SVFUtil.h	/^inline bool isHareParForCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isHareParForCall	include/Util/SVFUtil.h	/^inline bool isHareParForCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isHeap	include/MemoryModel/MemModel.h	/^    inline bool isHeap() const {$/;"	f	class:MemObj
isHeap	include/MemoryModel/MemModel.h	/^    inline bool isHeap() {$/;"	f	class:ObjTypeInfo
isHeapAllocExtCall	include/Util/SVFUtil.h	/^inline bool isHeapAllocExtCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isHeapAllocExtCall	include/Util/SVFUtil.h	/^inline bool isHeapAllocExtCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isHeapAllocExtCallViaArg	include/Util/SVFUtil.h	/^inline bool isHeapAllocExtCallViaArg(const CallSite cs) {$/;"	f	namespace:SVFUtil
isHeapAllocExtCallViaArg	include/Util/SVFUtil.h	/^inline bool isHeapAllocExtCallViaArg(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isHeapAllocExtCallViaRet	include/Util/SVFUtil.h	/^inline bool isHeapAllocExtCallViaRet(const CallSite cs) {$/;"	f	namespace:SVFUtil
isHeapAllocExtCallViaRet	include/Util/SVFUtil.h	/^inline bool isHeapAllocExtCallViaRet(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isHeapAllocExtFunViaArg	include/Util/SVFUtil.h	/^inline bool isHeapAllocExtFunViaArg(const Function *fun) {$/;"	f	namespace:SVFUtil
isHeapAllocExtFunViaRet	include/Util/SVFUtil.h	/^inline bool isHeapAllocExtFunViaRet(const Function *fun) {$/;"	f	namespace:SVFUtil
isHeapAllocOrStaticExtCall	include/Util/SVFUtil.h	/^inline bool isHeapAllocOrStaticExtCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isHeapAllocOrStaticExtCall	include/Util/SVFUtil.h	/^inline bool isHeapAllocOrStaticExtCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isHeapMemObj	include/MemoryModel/PointerAnalysis.h	/^    inline bool isHeapMemObj(NodeID id) const {$/;"	f	class:PointerAnalysis
isHeuriArg	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isHeuriArg(const Value *instv){$/;"	f	class:BinIRWrapper
isHeuristicGep	include/DisPatch/BinIRWrapper.h	/^    static bool isHeuristicGep; \/\/ 1 = true \/ -1 = false \/ 0 = not determined$/;"	m	class:BinIRWrapper
isHeuristicGep	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isHeuristicGep = 0; \/\/ 1 = true \/ -1 = false \/ 0 = not determined$/;"	m	class:BinIRWrapper	file:
isHeursticGepMode	include/DisPatch/BinIRWrapper.h	/^    bool isHeursticGepMode(){$/;"	f	class:BinIRWrapper
isHexStr	include/DisPatch/BinIRWrapper.h	/^    bool inline isHexStr(string str){$/;"	f	class:BinIRWrapper
isIRFile	lib/Util/SVFUtil.cpp	/^bool SVFUtil::isIRFile(const std::string &filename) {$/;"	f	class:SVFUtil
isInCurrentSCC	include/WPA/WPAFSSolver.h	/^    inline bool isInCurrentSCC(NodeID node) {$/;"	f	class:WPASCCSolver
isInCycle	include/Util/SCC.h	/^    inline bool isInCycle(NodeID n) const {$/;"	f	class:SCCDetection
isInRecursion	include/MemoryModel/PointerAnalysis.h	/^    inline bool isInRecursion(const Function* fun) const {$/;"	f	class:PointerAnalysis
isInSCC	include/Util/SCC.h	/^    inline bool isInSCC(NodeID n)    {$/;"	f	class:SCCDetection
isInWorklist	include/Util/CFLSolver.h	/^    inline bool isInWorklist(DPIm& item) {$/;"	f	class:CFLSolver
isInWorklist	include/WPA/WPASolver.h	/^    inline bool isInWorklist(NodeID id) {$/;"	f	class:WPASolver
isIncycle	include/Util/CxtStmt.h	/^    inline bool isIncycle() const {$/;"	f	class:CxtThread
isIndirectCall	include/DisPatch/UtilDef.h	/^    virtual bool isIndirectCall(const Instruction *inst){$/;"	f	class:UtilDef
isIndirectCallBranch	lib/DisPatch/InterProcAnal.cpp	/^bool InterProcAnal::isIndirectCallBranch(cs_insn &inst){$/;"	f	class:InterProcAnal
isIndirectCallEdge	include/Util/PTACallGraph.h	/^	inline bool isIndirectCallEdge() const {$/;"	f	class:PTACallGraphEdge
isIndirectCallSites	include/MemoryModel/PAG.h	/^    inline bool isIndirectCallSites(const CallSite cs) const {$/;"	f	class:PAG
isIndirectEdge	include/MemoryModel/ConsGNode.h	/^    inline bool isIndirectEdge(ConstraintEdge::ConstraintEdgeK kind) {$/;"	f	class:ConstraintNode
isIndirectVFGEdge	include/Util/VFGEdge.h	/^    inline bool isIndirectVFGEdge() const {$/;"	f	class:VFGEdge
isInloop	include/Util/CxtStmt.h	/^    inline bool isInloop() const {$/;"	f	class:CxtThread
isInstrinsicDbgInst	lib/Util/SVFUtil.cpp	/^bool SVFUtil::isInstrinsicDbgInst(const Instruction* inst) {$/;"	f	class:SVFUtil
isInt2PtrConstantExpr	include/Util/SVFUtil.h	/^inline const ConstantExpr *isInt2PtrConstantExpr(const Value *val) {$/;"	f	namespace:SVFUtil
isInterPassingReg	lib/DisPatch/InterProcAnal.cpp	/^bool InterProcAnal::isInterPassingReg(uint16_t ri){$/;"	f	class:InterProcAnal
isInterestedPAGNode	include/Util/VFG.h	/^    virtual inline bool isInterestedPAGNode(const PAGNode* node) const{$/;"	f	class:VFG
isIntraAliasGep	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isIntraAliasGep(const Value *v1 , const Value *v2, const Function *func){$/;"	f	class:BinIRWrapper
isIntraCFGEdge	include/Util/ICFGEdge.h	/^    inline bool isIntraCFGEdge() const {$/;"	f	class:ICFGEdge
isIntraVFGEdge	include/Util/VFGEdge.h	/^    inline bool isIntraVFGEdge() const {$/;"	f	class:VFGEdge
isIntrinsicDbgFun	include/Util/SVFUtil.h	/^inline bool isIntrinsicDbgFun(const Function* fun) {$/;"	f	namespace:SVFUtil
isJmpBranch	lib/DisPatch/InterProcAnal.cpp	/^bool InterProcAnal::isJmpBranch(cs_insn &inst, uint64_t addrmin, uint64_t addrmax){$/;"	f	class:InterProcAnal
isJoinsite	include/Util/ThreadCallGraph.h	/^    inline bool isJoinsite(const Instruction* csInst) {$/;"	f	class:ThreadCallGraph
isLoadInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isLoadInst(const Value *instv){$/;"	f	class:BinIRWrapper
isLoadVtblInst	lib/Util/CPPUtil.cpp	/^bool cppUtil::isLoadVtblInst(const LoadInst *loadInst) {$/;"	f	class:cppUtil
isLocalVarInRecursiveFun	lib/MemoryModel/PointerAnalysis.cpp	/^bool PointerAnalysis::isLocalVarInRecursiveFun(NodeID id) const$/;"	f	class:PointerAnalysis
isLockAquireCall	include/Util/SVFUtil.h	/^inline bool isLockAquireCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isLockAquireCall	include/Util/SVFUtil.h	/^inline bool isLockAquireCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isLockReleaseCall	include/Util/SVFUtil.h	/^inline bool isLockReleaseCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isLockReleaseCall	include/Util/SVFUtil.h	/^inline bool isLockReleaseCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isMetEdge	include/WPA/Andersen.h	/^    bool isMetEdge (ConstraintEdge* edge) const {$/;"	f	class:AndersenLCD
isMultiInheritance	include/MemoryModel/CHA.h	/^    inline bool isMultiInheritance() const {$/;"	f	class:CHNode
isNECmp	lib/Util/PathCondAllocator.cpp	/^bool PathCondAllocator::isNECmp(const CmpInst* cmp) const {$/;"	f	class:PathCondAllocator
isNoCallerFunction	include/Util/SVFUtil.h	/^inline bool isNoCallerFunction (const Function * fun) {$/;"	f	namespace:SVFUtil
isNonInstricCallSite	include/Util/SVFUtil.h	/^inline bool isNonInstricCallSite(const Instruction* inst) {$/;"	f	namespace:SVFUtil
isNonLocalObject	lib/MSSA/MemRegion.cpp	/^bool MRGenerator::isNonLocalObject(NodeID id, const Function* curFun) const {$/;"	f	class:MRGenerator
isNonPointerObj	include/MemoryModel/PAG.h	/^    inline bool isNonPointerObj(NodeID id) const {$/;"	f	class:PAG
isNonPointerObj	include/MemoryModel/PointerAnalysis.h	/^    inline bool isNonPointerObj(NodeID ptd) const {$/;"	f	class:PointerAnalysis
isNonPtrFieldObj	include/MemoryModel/MemModel.h	/^    inline bool isNonPtrFieldObj(const LocationSet& ls) const {$/;"	f	class:MemObj
isNonPtrFieldObj	lib/MemoryModel/MemModel.cpp	/^bool ObjTypeInfo::isNonPtrFieldObj(const LocationSet& ls)$/;"	f	class:ObjTypeInfo
isNormalReg	lib/DisPatch/InterProcAnal.cpp	/^bool InterProcAnal::isNormalReg(uint16_t ri){$/;"	f	class:InterProcAnal
isNullPtr	include/MemoryModel/MemModel.h	/^    static inline bool isNullPtr(NodeID id) {$/;"	f	class:SymbolTableInfo
isNullPtr	include/MemoryModel/PAG.h	/^    inline bool isNullPtr(NodeID id) const {$/;"	f	class:PAG
isNullPtrSym	lib/MemoryModel/MemModel.cpp	/^bool SymbolTableInfo::isNullPtrSym(const Value *val) {$/;"	f	class:SymbolTableInfo
isObject	lib/Util/SVFUtil.cpp	/^bool SVFUtil::isObject(const Value * ref) {$/;"	f	class:SVFUtil
isOperOverload	lib/Util/CPPUtil.cpp	/^static bool isOperOverload(const string name) {$/;"	f	file:
isPI	include/DisPatch/CtrlIdentifier.h	/^    bool isPI(double v){$/;"	f	class:CtrlIdentifier
isPTAEdge	lib/MemoryModel/PAG.cpp	/^bool PAGEdge::isPTAEdge() const {$/;"	f	class:PAGEdge
isPTANode	include/Util/VFGNode.h	/^    inline bool isPTANode() const{$/;"	f	class:ArgumentVFGNode
isPTANode	include/Util/VFGNode.h	/^    inline bool isPTANode() const{$/;"	f	class:NullPtrVFGNode
isPTANode	include/Util/VFGNode.h	/^    inline bool isPTANode() const{$/;"	f	class:PHIVFGNode
isPTANode	include/Util/VFGNode.h	/^    inline bool isPTANode() const{$/;"	f	class:StmtVFGNode
isPWCNode	include/MemoryModel/ConsG.h	/^    inline bool isPWCNode(NodeID nodeId) {$/;"	f	class:ConstraintGraph
isPWCNode	include/MemoryModel/ConsGNode.h	/^    inline bool isPWCNode() const {$/;"	f	class:ConstraintNode
isParForSite	include/Util/ThreadCallGraph.h	/^    inline bool isParForSite(const Instruction* csInst) {$/;"	f	class:ThreadCallGraph
isPhiCopyEdge	include/Util/ICFG.h	/^    inline bool isPhiCopyEdge(const PAGEdge* copy) const {$/;"	f	class:ICFG
isPhiCopyEdge	include/Util/VFG.h	/^    inline bool isPhiCopyEdge(const PAGEdge* copy) const {$/;"	f	class:VFG
isPhiInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isPhiInst(const Value *instv){$/;"	f	class:BinIRWrapper
isPhiNode	include/MemoryModel/PAG.h	/^    inline bool isPhiNode(const PAGNode* node) const {$/;"	f	class:PAG
isPointer	include/MemoryModel/PAGNode.h	/^    virtual inline bool isPointer() const {$/;"	f	class:PAGNode
isPosP	include/DisPatch/InitPIDObj.h	/^            bool isPosP(){$/;"	f	class:InitPIDObj::AxisInfo
isPosPI	include/DisPatch/InitPIDObj.h	/^            bool isPosPI(){$/;"	f	class:InitPIDObj::AxisInfo
isPosPID	include/DisPatch/InitPIDObj.h	/^            bool isPosPID(){$/;"	f	class:InitPIDObj::AxisInfo
isPosPIDFF	include/DisPatch/InitPIDObj.h	/^            bool isPosPIDFF(){$/;"	f	class:InitPIDObj::AxisInfo
isProcFP	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isProcFP(const Value *instv){$/;"	f	class:BinIRWrapper
isProgEntryFunction	include/Util/SVFUtil.h	/^inline bool isProgEntryFunction (const Function * fun) {$/;"	f	namespace:SVFUtil
isProgExitCall	include/Util/SVFUtil.h	/^inline bool isProgExitCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isProgExitCall	include/Util/SVFUtil.h	/^inline bool isProgExitCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isProgExitFunction	include/Util/SVFUtil.h	/^inline bool isProgExitFunction (const Function * fun) {$/;"	f	namespace:SVFUtil
isPtr2IntConstantExpr	include/Util/SVFUtil.h	/^inline const ConstantExpr *isPtr2IntConstantExpr(const Value *val) {$/;"	f	namespace:SVFUtil
isPtrCastInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isPtrCastInst(const Value *instv){$/;"	f	class:BinIRWrapper
isPtrInDeadFunction	lib/Util/SVFUtil.cpp	/^bool SVFUtil::isPtrInDeadFunction (const Value * value) {$/;"	f	class:SVFUtil
isPtrOnlySVFG	include/Util/VFG.h	/^    inline bool isPtrOnlySVFG() const {$/;"	f	class:VFG
isPureAbstract	include/MemoryModel/CHA.h	/^    inline bool isPureAbstract() const {$/;"	f	class:CHNode
isReachableFromProgEntry	lib/Util/PTACallGraph.cpp	/^bool PTACallGraphNode::isReachableFromProgEntry() const$/;"	f	class:PTACallGraphNode
isReallocExtCall	include/Util/SVFUtil.h	/^inline bool isReallocExtCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isReallocExtCall	include/Util/SVFUtil.h	/^inline bool isReallocExtCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isReallocExtFun	include/Util/SVFUtil.h	/^inline bool isReallocExtFun(const Function *fun) {$/;"	f	namespace:SVFUtil
isRegPropaInst	lib/DisPatch/InterProcAnal.cpp	/^bool InterProcAnal::isRegPropaInst(cs_insn &inst){$/;"	f	class:InterProcAnal
isRetAffectedByReadAlias	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isRetAffectedByReadAlias(const Function *cefunc, unsigned ceAliasOff, const Value *v){$/;"	f	class:BinIRWrapper
isRetCFGEdge	include/Util/ICFGEdge.h	/^    inline bool isRetCFGEdge() const {$/;"	f	class:ICFGEdge
isRetDirectVFGEdge	include/Util/VFGEdge.h	/^    inline bool isRetDirectVFGEdge() const {$/;"	f	class:VFGEdge
isRetIndirectVFGEdge	include/Util/VFGEdge.h	/^    inline bool isRetIndirectVFGEdge() const {$/;"	f	class:VFGEdge
isRetVFGEdge	include/Util/VFGEdge.h	/^    inline bool isRetVFGEdge() const {$/;"	f	class:VFGEdge
isReturn	include/Util/SVFUtil.h	/^inline bool isReturn(const Instruction* inst) {$/;"	f	namespace:SVFUtil
isSameReg	lib/DisPatch/InterProcAnal.cpp	/^bool InterProcAnal::isSameReg(uint64_t csaddr, const Value *v1, const Value *v2){$/;"	f	class:InterProcAnal
isSameThisPtrInConstructor	lib/Util/CPPUtil.cpp	/^bool cppUtil::isSameThisPtrInConstructor(const Argument* thisPtr1, const Value* thisPtr2) {$/;"	f	class:cppUtil
isSameVar	include/MemoryModel/PointerAnalysis.h	/^    bool isSameVar(const CVar& var1, const CVar& var2) const {$/;"	f	class:CondPTAImpl
isSelectConstantExpr	include/Util/SVFUtil.h	/^inline const ConstantExpr *isSelectConstantExpr(const Value *val) {$/;"	f	namespace:SVFUtil
isSemanticFunc	include/DisPatch/InitPIDObj.h	/^    inline bool isSemanticFunc(string role, const Function *func){$/;"	f	class:InitPIDObj
isSingleFieldObj	include/MemoryModel/ConsG.h	/^    inline bool isSingleFieldObj(NodeID id) const {$/;"	f	class:ConstraintGraph
isSink	include/MSSA/SVFGStat.h	/^    inline bool isSink(const SVFGNode* node) const {$/;"	f	class:SVFGStat
isSource	include/MSSA/SVFGStat.h	/^    inline bool isSource(const SVFGNode* node) const {$/;"	f	class:SVFGStat
isSpuriousVFEdgeAtIndCallSite	include/MSSA/SVFGBuilder.h	/^    inline bool isSpuriousVFEdgeAtIndCallSite(const SVFGEdge* edge) {$/;"	f	class:SVFGBuilder
isStack	include/MemoryModel/MemModel.h	/^    inline bool isStack() const {$/;"	f	class:MemObj
isStack	include/MemoryModel/MemModel.h	/^    inline bool isStack() {$/;"	f	class:ObjTypeInfo
isStaticExtCall	include/Util/SVFUtil.h	/^inline bool isStaticExtCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isStaticExtCall	include/Util/SVFUtil.h	/^inline bool isStaticExtCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isStaticExtFun	include/Util/SVFUtil.h	/^inline bool isStaticExtFun(const Function *fun) {$/;"	f	namespace:SVFUtil
isStaticObj	include/MemoryModel/MemModel.h	/^    inline bool isStaticObj() const {$/;"	f	class:MemObj
isStaticObj	include/MemoryModel/MemModel.h	/^    inline bool isStaticObj() {$/;"	f	class:ObjTypeInfo
isStoreInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isStoreInst(const Value *instv){$/;"	f	class:BinIRWrapper
isStrongUpdate	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::isStrongUpdate(const SVFGNode* node, NodeID& singleton) {$/;"	f	class:FlowSensitive
isStruct	include/MemoryModel/MemModel.h	/^    inline bool isStruct() const {$/;"	f	class:MemObj
isStruct	include/MemoryModel/MemModel.h	/^    inline bool isStruct() {$/;"	f	class:ObjTypeInfo
isSubset	include/MemoryModel/ConditionalPT.h	/^    inline bool isSubset(const CondPointsToSet<Cond>& rhs) const {$/;"	f	class:CondPointsToSet
isTDAcquire	include/Util/ThreadAPI.h	/^    inline bool isTDAcquire(CallSite cs) const {$/;"	f	class:ThreadAPI
isTDAcquire	include/Util/ThreadAPI.h	/^    inline bool isTDAcquire(const Instruction *inst) const {$/;"	f	class:ThreadAPI
isTDBarWait	include/Util/ThreadAPI.h	/^    inline bool isTDBarWait(CallSite cs) const {$/;"	f	class:ThreadAPI
isTDBarWait	include/Util/ThreadAPI.h	/^    inline bool isTDBarWait(const Instruction *inst) const {$/;"	f	class:ThreadAPI
isTDExit	include/Util/ThreadAPI.h	/^    inline bool isTDExit(CallSite cs) const {$/;"	f	class:ThreadAPI
isTDExit	include/Util/ThreadAPI.h	/^    inline bool isTDExit(const Instruction *inst) const {$/;"	f	class:ThreadAPI
isTDFork	include/Util/ThreadAPI.h	/^    inline bool isTDFork(CallSite cs) const {$/;"	f	class:ThreadAPI
isTDFork	include/Util/ThreadAPI.h	/^    inline bool isTDFork(const Instruction *inst) const {$/;"	f	class:ThreadAPI
isTDJoin	include/Util/ThreadAPI.h	/^    inline bool isTDJoin(CallSite cs) const {$/;"	f	class:ThreadAPI
isTDJoin	include/Util/ThreadAPI.h	/^    inline bool isTDJoin(const Instruction *inst) const {$/;"	f	class:ThreadAPI
isTDRelease	include/Util/ThreadAPI.h	/^    inline bool isTDRelease(CallSite cs) const {$/;"	f	class:ThreadAPI
isTDRelease	include/Util/ThreadAPI.h	/^    inline bool isTDRelease(const Instruction *inst) const {$/;"	f	class:ThreadAPI
isTLPointer	include/MemoryModel/PAGNode.h	/^    bool isTLPointer;	\/\/\/ top-level pointer$/;"	m	class:PAGNode
isTargetHeapAccessRead	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isTargetHeapAccessRead(const Value *curv, const Value *initv, unsigned targetoff){$/;"	f	class:BinIRWrapper
isTemplate	include/MemoryModel/CHA.h	/^    inline bool isTemplate() const {$/;"	f	class:CHNode
isTestContainsNullAndTheValue	lib/Util/PathCondAllocator.cpp	/^bool PathCondAllocator::isTestContainsNullAndTheValue(const CmpInst* cmp, const Value* val) const {$/;"	f	class:PathCondAllocator
isTestNotNullExpr	lib/Util/PathCondAllocator.cpp	/^bool PathCondAllocator::isTestNotNullExpr(const Value* test,const Value* val) const {$/;"	f	class:PathCondAllocator
isTestNullExpr	lib/Util/PathCondAllocator.cpp	/^bool PathCondAllocator::isTestNullExpr(const Value* test,const Value* val) const {$/;"	f	class:PathCondAllocator
isThreadExitCall	include/Util/SVFUtil.h	/^inline bool isThreadExitCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isThreadExitCall	include/Util/SVFUtil.h	/^inline bool isThreadExitCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isThreadForkCall	include/Util/SVFUtil.h	/^inline bool isThreadForkCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isThreadForkCall	include/Util/SVFUtil.h	/^inline bool isThreadForkCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isThreadJoinCall	include/Util/SVFUtil.h	/^inline bool isThreadJoinCall(const CallSite cs) {$/;"	f	namespace:SVFUtil
isThreadJoinCall	include/Util/SVFUtil.h	/^inline bool isThreadJoinCall(const Instruction *inst) {$/;"	f	namespace:SVFUtil
isThreadMHPIndirectVFGEdge	include/Util/VFGEdge.h	/^    inline bool isThreadMHPIndirectVFGEdge() const {$/;"	f	class:VFGEdge
isTopLevelPtr	include/MemoryModel/PAGNode.h	/^    inline bool isTopLevelPtr() const {$/;"	f	class:PAGNode
isTruncConstantExpr	include/Util/SVFUtil.h	/^inline const ConstantExpr *isTruncConstantExpr(const Value *val) {$/;"	f	namespace:SVFUtil
isUpdatedByCallee	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::isUpdatedByCallee(const Function *func, const Value *dv){$/;"	f	class:CtrlIdentifier
isValVtbl	lib/Util/CPPUtil.cpp	/^bool cppUtil::isValVtbl(const Value *val) {$/;"	f	class:cppUtil
isValidPointer	lib/MemoryModel/PAG.cpp	/^bool PAG::isValidPointer(NodeID nodeId) const {$/;"	f	class:PAG
isValidTopLevelPtr	include/MemoryModel/PAG.h	/^    bool isValidTopLevelPtr(const PAGNode* node) {$/;"	f	class:PAG
isVarArray	include/MemoryModel/MemModel.h	/^    inline bool isVarArray() const {$/;"	f	class:MemObj
isVarArray	include/MemoryModel/MemModel.h	/^    inline bool isVarArray() {$/;"	f	class:ObjTypeInfo
isVarStruct	include/MemoryModel/MemModel.h	/^    inline bool isVarStruct() const {$/;"	f	class:MemObj
isVarStruct	include/MemoryModel/MemModel.h	/^    inline bool isVarStruct() {$/;"	f	class:ObjTypeInfo
isVelP	include/DisPatch/InitPIDObj.h	/^            bool isVelP(){$/;"	f	class:InitPIDObj::AxisInfo
isVelPI	include/DisPatch/InitPIDObj.h	/^            bool isVelPI(){$/;"	f	class:InitPIDObj::AxisInfo
isVelPID	include/DisPatch/InitPIDObj.h	/^            bool isVelPID(){$/;"	f	class:InitPIDObj::AxisInfo
isVelPIDFF	include/DisPatch/InitPIDObj.h	/^            bool isVelPIDFF(){$/;"	f	class:InitPIDObj::AxisInfo
isVirtualCallSite	lib/Util/CPPUtil.cpp	/^bool cppUtil::isVirtualCallSite(CallSite cs) {$/;"	f	class:cppUtil
isVisited	include/WPA/CSC.h	/^    bool isVisited(NodeID nId) {$/;"	f	class:CSC
isVldrInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isVldrInst(const Value *instv){$/;"	f	class:BinIRWrapper
isVmovInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isVmovInst(const Value *instv){$/;"	f	class:BinIRWrapper
isVstrInst	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isVstrInst(const Value *instv){$/;"	f	class:BinIRWrapper
isWorklistEmpty	include/Util/CFLSolver.h	/^    inline bool isWorklistEmpty() {$/;"	f	class:CFLSolver
isWorklistEmpty	include/WPA/WPASolver.h	/^    inline bool isWorklistEmpty() {$/;"	f	class:WPASolver
isWriteGivenHeap	lib/DisPatch/BinIRWrapper.cpp	/^bool BinIRWrapper::isWriteGivenHeap(const Function *func, set <unsigned> &offSet){$/;"	f	class:BinIRWrapper
isZeroOffsettedGepCGEdge	include/MemoryModel/ConsG.h	/^    inline bool isZeroOffsettedGepCGEdge(ConstraintEdge *edge) const {$/;"	f	class:ConstraintGraph
is_alloc	include/Util/ExtAPI.h	/^    bool is_alloc(const Function *F) const {$/;"	f	class:ExtAPI
is_arg_alloc	include/Util/ExtAPI.h	/^    bool is_arg_alloc(const Function *F) const {$/;"	f	class:ExtAPI
is_dealloc	include/Util/ExtAPI.h	/^    bool is_dealloc(const Function *F) const {$/;"	f	class:ExtAPI
is_ext	include/Util/ExtAPI.h	/^    bool is_ext(const Function *F) {$/;"	f	class:ExtAPI
is_noop	include/Util/ExtAPI.h	/^    bool is_noop(const Function *F) const {$/;"	f	class:ExtAPI
is_realloc	include/Util/ExtAPI.h	/^    bool is_realloc(const Function *F) const {$/;"	f	class:ExtAPI
is_simple_type	include/Util/Casting.h	/^template <class X> struct is_simple_type {$/;"	s	namespace:SVFUtil
isa	include/Util/Casting.h	/^template <class X, class Y> LLVM_NODISCARD inline bool isa(const Y &Val) {$/;"	f	namespace:SVFUtil
isaMergedNode	include/WPA/Andersen.h	/^    inline bool isaMergedNode(NodeID node) const {$/;"	f	class:AndersenHCD
isaRef	include/MemoryModel/OfflineConsG.h	/^    inline bool isaRef(NodeID node) const {$/;"	f	class:OfflineConsG
isa_impl	include/Util/Casting.h	/^struct isa_impl {$/;"	s	namespace:SVFUtil
isa_impl	include/Util/Casting.h	/^struct isa_impl<$/;"	s	namespace:SVFUtil
isa_impl_cl	include/Util/Casting.h	/^struct isa_impl_cl<To, const std::unique_ptr<From>> {$/;"	s	namespace:SVFUtil
isa_impl_cl	include/Util/Casting.h	/^template <typename To, typename From> struct isa_impl_cl {$/;"	s	namespace:SVFUtil
isa_impl_cl	include/Util/Casting.h	/^template <typename To, typename From> struct isa_impl_cl<To, From*> {$/;"	s	namespace:SVFUtil
isa_impl_cl	include/Util/Casting.h	/^template <typename To, typename From> struct isa_impl_cl<To, From*const> {$/;"	s	namespace:SVFUtil
isa_impl_cl	include/Util/Casting.h	/^template <typename To, typename From> struct isa_impl_cl<To, const From*> {$/;"	s	namespace:SVFUtil
isa_impl_cl	include/Util/Casting.h	/^template <typename To, typename From> struct isa_impl_cl<To, const From*const> {$/;"	s	namespace:SVFUtil
isa_impl_cl	include/Util/Casting.h	/^template <typename To, typename From> struct isa_impl_cl<To, const From> {$/;"	s	namespace:SVFUtil
isa_impl_wrap	include/Util/Casting.h	/^struct isa_impl_wrap {$/;"	s	namespace:SVFUtil
isa_impl_wrap	include/Util/Casting.h	/^struct isa_impl_wrap<To, FromTy, FromTy> {$/;"	s	namespace:SVFUtil
isdirectEdge	include/MemoryModel/ConsGNode.h	/^    inline bool isdirectEdge(ConstraintEdge::ConstraintEdgeK kind) {$/;"	f	class:ConstraintNode
isext_cache	include/Util/ExtAPI.h	/^    std::map<const Function*, bool> isext_cache;$/;"	m	class:ExtAPI
isolated	include/CUDD/cuddInt.h	/^    int isolated;		\/* isolated projection functions *\/$/;"	m	struct:DdManager
item	include/CUDD/cuddInt.h	/^    DdLocalCacheItem *item;$/;"	m	struct:DdLocalCache
itemsize	include/CUDD/cuddInt.h	/^    int itemsize;$/;"	m	struct:DdLevelQueue
itemsize	include/CUDD/cuddInt.h	/^    unsigned int itemsize;$/;"	m	struct:DdHashTable
itemsize	include/CUDD/cuddInt.h	/^    unsigned int itemsize;$/;"	m	struct:DdLocalCache
iterationForPrintStat	include/WPA/WPASolver.h	/^    u32_t iterationForPrintStat;$/;"	m	class:WPASolver
iterator	include/MemoryModel/ConditionalPT.h	/^    typedef CondPtsSetIterator iterator;$/;"	t	class:CondPointsToSet
iterator	include/MemoryModel/ConditionalPT.h	/^    typedef typename std::set<Element>::iterator iterator;$/;"	t	class:CondStdSet
iterator	include/MemoryModel/ConsGNode.h	/^    typedef ConstraintEdge::ConstraintEdgeSetTy::iterator iterator;$/;"	t	class:ConstraintNode
iterator	include/MemoryModel/GenericGraph.h	/^    typedef typename GEdgeSetTy::iterator iterator;$/;"	t	class:GenericNode
iterator	include/MemoryModel/GenericGraph.h	/^    typedef typename IDToNodeMapTy::iterator iterator;$/;"	t	class:GenericGraph
iterator	include/MemoryModel/PTAType.h	/^    typedef TypeSetTy::iterator iterator;$/;"	t	class:TypeSet
iterator	include/MemoryModel/PTAType.h	/^    typedef typename VarToTypeSetMapTy::iterator iterator;$/;"	t	class:TypeSystem
iterator	include/MemoryModel/PointsToDS.h	/^    typedef typename Data::iterator iterator;$/;"	t	class:PTData
iterator	include/Util/ICFG.h	/^    typedef ICFGNodeIDToNodeMapTy::iterator iterator;$/;"	t	class:ICFG
iterator	include/Util/ICFGNode.h	/^    typedef ICFGEdge::ICFGEdgeSetTy::iterator iterator;$/;"	t	class:ICFGNode
iterator	include/Util/ICFGNode.h	/^    typedef StmtOrPHIVFGNodeVec::iterator iterator;$/;"	t	class:IntraBlockNode
iterator	include/Util/PTACallGraph.h	/^    typedef PTACallGraphEdge::CallGraphEdgeSet::iterator iterator;$/;"	t	class:PTACallGraphNode
iterator	include/Util/SVFModule.h	/^    typedef FunctionSetType::iterator iterator;$/;"	t	class:LLVMModuleSet
iterator	include/Util/SVFModule.h	/^    typedef FunctionSetType::iterator iterator;$/;"	t	class:SVFModule
iterator	include/Util/VFG.h	/^    typedef VFGNodeIDToNodeMapTy::iterator iterator;$/;"	t	class:VFG
iterator	include/Util/VFGNode.h	/^    typedef VFGEdge::VFGEdgeSetTy::iterator iterator;$/;"	t	class:VFGNode
iterator	include/WPA/CSC.h	/^    typedef typename IdToIdMap::iterator iterator;$/;"	t	class:CSC
iton	include/CUDD/cuddInt.h	/^    array_t *iton;		\/* maps ids in ddNode to node_t *\/$/;"	m	struct:DdManager
joinsites	include/Util/ThreadCallGraph.h	/^    CallSiteSet joinsites; \/\/\/< all thread fork sites$/;"	m	class:ThreadCallGraph
joinsitesBegin	include/Util/ThreadCallGraph.h	/^    inline CallSiteSet::iterator joinsitesBegin() const {$/;"	f	class:ThreadCallGraph
joinsitesEnd	include/Util/ThreadCallGraph.h	/^    inline CallSiteSet::iterator joinsitesEnd() const {$/;"	f	class:ThreadCallGraph
kDistinctMemPar	lib/MSSA/MemSSA.cpp	/^static std::string kDistinctMemPar = "distinct";$/;"	v	file:
kInterDisjointMemPar	lib/MSSA/MemSSA.cpp	/^static std::string kInterDisjointMemPar = "inter-disjoint";$/;"	v	file:
kIntraDisjointMemPar	lib/MSSA/MemSSA.cpp	/^static std::string kIntraDisjointMemPar = "intra-disjoint";$/;"	v	file:
keepActualOutFormalIn	include/MSSA/SVFGOPT.h	/^    bool keepActualOutFormalIn;$/;"	m	class:SVFGOPT
keepAllSelfCycle	include/MSSA/SVFGOPT.h	/^    bool keepAllSelfCycle;$/;"	m	class:SVFGOPT
keepContextSelfCycle	include/MSSA/SVFGOPT.h	/^    bool keepContextSelfCycle;$/;"	m	class:SVFGOPT
key	include/CUDD/cuddInt.h	/^    DdNode *key[1];$/;"	m	struct:DdHashItem
key	include/CUDD/cuddInt.h	/^    DdNode *key[1];$/;"	m	struct:DdLocalCacheItem
key	include/CUDD/cuddInt.h	/^    void *key;$/;"	m	struct:DdQueueItem
key	include/CUDD/st.h	/^    char *key;$/;"	m	struct:st_table_entry
keys	include/CUDD/cuddInt.h	/^    unsigned int keys;		\/* number of nodes stored in this table *\/$/;"	m	struct:DdSubtable
keys	include/CUDD/cuddInt.h	/^    unsigned int keys;		\/* total number of BDD and ADD nodes *\/$/;"	m	struct:DdManager
keysZ	include/CUDD/cuddInt.h	/^    unsigned int keysZ;		\/* total number of ZDD nodes *\/$/;"	m	struct:DdManager
keysize	include/CUDD/cuddInt.h	/^    unsigned int keysize;$/;"	m	struct:DdHashTable
keysize	include/CUDD/cuddInt.h	/^    unsigned int keysize;$/;"	m	struct:DdLocalCache
kids	include/CUDD/cudd.h	/^	DdChildren kids;	\/* for internal nodes *\/$/;"	m	union:DdNode::__anon23
kind	include/Util/PTACallGraph.h	/^    CGEK kind;$/;"	m	class:PTACallGraph
kind	include/Util/VFG.h	/^    VFGK kind;$/;"	m	class:VFG
large	lib/CUDD/cuddGenetic.c	/^static int large;		\/* stores the index of the population with$/;"	v	file:
largest	lib/CUDD/cuddGenetic.c	/^largest(void)$/;"	f	file:
last	include/CUDD/cuddInt.h	/^    DdQueueItem **last;$/;"	m	struct:DdLevelQueue
lastTimeG	lib/CUDD/cuddDecomp.c	/^long lastTimeG;$/;"	v
lcdAndersen	include/WPA/Andersen.h	/^    static AndersenLCD* lcdAndersen;$/;"	m	class:AndersenLCD
lcdCandidates	include/WPA/Andersen.h	/^    NodeSet lcdCandidates;$/;"	m	class:AndersenLCD
levels	include/CUDD/cuddInt.h	/^    int levels;$/;"	m	struct:DdLevelQueue
lightChildNodesPointer	lib/CUDD/cuddSubsetHB.c	/^    int *lightChildNodesPointer;$/;"	m	struct:NodeData	file:
lightNodePages	lib/CUDD/cuddSubsetHB.c	/^static	int		**lightNodePages; \/* pointers to the pages *\/$/;"	v	file:
linear	include/CUDD/cuddInt.h	/^    long *linear;		\/* linear transform matrix *\/$/;"	m	struct:DdManager
linearSize	include/CUDD/cuddInt.h	/^    int linearSize;		\/* number of rows and columns of linear *\/$/;"	m	struct:DdManager
liset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
liset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::liset;$/;"	m	class:BinIRWrapper	file:
llvm	include/MSSA/SVFG.h	/^namespace llvm {$/;"	n
llvm	include/MemoryModel/CHA.h	/^namespace llvm {$/;"	n
llvm	include/MemoryModel/ConsG.h	/^namespace llvm {$/;"	n
llvm	include/MemoryModel/GenericGraph.h	/^namespace llvm {$/;"	n
llvm	include/MemoryModel/OfflineConsG.h	/^namespace llvm {$/;"	n
llvm	include/MemoryModel/PAG.h	/^namespace llvm {$/;"	n
llvm	include/Util/GEPTypeBridgeIterator.h	/^namespace llvm {$/;"	n
llvm	include/Util/GraphPrinter.h	/^namespace llvm {$/;"	n
llvm	include/Util/ICFG.h	/^namespace llvm {$/;"	n
llvm	include/Util/PTACallGraph.h	/^namespace llvm {$/;"	n
llvm	include/Util/VFG.h	/^namespace llvm {$/;"	n
llvm	lib/MSSA/SVFG.cpp	/^namespace llvm {$/;"	n	file:
llvm	lib/MemoryModel/CHA.cpp	/^namespace llvm {$/;"	n	file:
llvm	lib/MemoryModel/ConsG.cpp	/^namespace llvm {$/;"	n	file:
llvm	lib/MemoryModel/OfflineConsG.cpp	/^namespace llvm {$/;"	n	file:
llvm	lib/MemoryModel/PAG.cpp	/^namespace llvm {$/;"	n	file:
llvm	lib/Util/ICFG.cpp	/^namespace llvm {$/;"	n	file:
llvm	lib/Util/PTACallGraph.cpp	/^namespace llvm {$/;"	n	file:
llvm	lib/Util/VFG.cpp	/^namespace llvm {$/;"	n	file:
llvmModuleSet	include/Util/SVFModule.h	/^    static LLVMModuleSet *llvmModuleSet;$/;"	m	class:SVFModule
llvmModuleSet	lib/Util/SVFModule.cpp	/^LLVMModuleSet *SVFModule::llvmModuleSet = NULL;$/;"	m	class:SVFModule	file:
load2MuSetMap	include/MSSA/MemSSA.h	/^    LoadToMUSetMap load2MuSetMap;$/;"	m	class:MemSSA
loadInEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy loadInEdges; \/\/\/< all incoming load edge of this node$/;"	m	class:ConstraintNode
loadModules	lib/Util/SVFModule.cpp	/^void LLVMModuleSet::loadModules(const std::vector<std::string> &moduleNameVec) {$/;"	f	class:LLVMModuleSet
loadOutEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy loadOutEdges; \/\/\/< all outgoing load edge of this node$/;"	m	class:ConstraintNode
loadTime	include/WPA/FlowSensitive.h	/^    double loadTime;	\/\/\/< time of load edges$/;"	m	class:FlowSensitive
loadsToMRsMap	include/MSSA/MemRegion.h	/^    LoadsToMRsMap loadsToMRsMap;$/;"	m	class:MRGenerator
loadsToPointsToMap	include/MSSA/MemRegion.h	/^    LoadsToPointsToMap loadsToPointsToMap;$/;"	m	class:MRGenerator
localCaches	include/CUDD/cuddInt.h	/^    DdLocalCache *localCaches;	\/* local caches currently in existence *\/$/;"	m	struct:DdManager
localRef	lib/CUDD/cuddApprox.c	/^    int localRef;$/;"	m	struct:LocalQueueItem	file:
localRef	lib/CUDD/cuddDecomp.c	/^    int localRef;$/;"	m	struct:NodeStat	file:
localVarInRecursion	include/Util/PTAStat.h	/^    NodeBS localVarInRecursion;$/;"	m	class:PTAStat
local_order	include/CUDD/cuddInt.h	/^    st_table *local_order;	\/* for local BDDs *\/$/;"	m	struct:DdManager
lookUps	include/CUDD/cuddInt.h	/^    double lookUps;$/;"	m	struct:DdLocalCache
looseUpTo	include/CUDD/cuddInt.h	/^    unsigned int looseUpTo;	\/* slow growth beyond this limit *\/$/;"	m	struct:DdManager
low	include/CUDD/mtr.h	/^    MtrHalfWord low;$/;"	m	struct:MtrNode
lqHash	lib/CUDD/cuddLevelQ.c	123;"	d	file:
lqHash	lib/CUDD/cuddLevelQ.c	126;"	d	file:
ls	include/MemoryModel/ConsGEdge.h	/^    LocationSet ls;	\/\/\/< location set of the gep edge$/;"	m	class:NormalGepCGEdge
ls	include/MemoryModel/PAGEdge.h	/^    LocationSet ls;	\/\/\/< location set of the gep edge$/;"	m	class:NormalGepPE
ls	include/MemoryModel/PAGNode.h	/^    LocationSet ls;	\/\/ LocationSet$/;"	m	class:GepValPN
ls	include/MemoryModel/PAGNode.h	/^    LocationSet ls;$/;"	m	class:GepObjPN
mInheritanceVFunLabel	lib/Util/CPPUtil.cpp	/^const string mInheritanceVFunLabel = "non-virtual thunk to ";$/;"	v
m_bdd_mgr	include/Util/Conditions.h	/^    DdManager *m_bdd_mgr;$/;"	m	class:BddCondManager
m_cond	include/MemoryModel/ConditionalPT.h	/^    Cond	m_cond;$/;"	m	class:CondVar
m_id	include/MemoryModel/ConditionalPT.h	/^    NodeID	m_id;$/;"	m	class:CondVar
main	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	tools/DisPatch/dispatch.cpp	/^int main(int argc, char ** argv) {$/;"	f
mainThisset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> mainThisset;$/;"	m	class:BinIRWrapper
mainThisset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::mainThisset;$/;"	m	class:BinIRWrapper	file:
makeEdgeFlagWithCallInst	include/MemoryModel/PAGEdge.h	/^    static inline GEdgeFlag makeEdgeFlagWithCallInst(GEdgeKind k, const Instruction* cs) {$/;"	f	class:PAGEdge
makeEdgeFlagWithInvokeID	include/Util/ICFGEdge.h	/^    static inline GEdgeFlag makeEdgeFlagWithInvokeID(GEdgeKind k, CallSiteID cs) {$/;"	f	class:ICFGEdge
makeEdgeFlagWithInvokeID	include/Util/PTACallGraph.h	/^    static inline GEdgeFlag makeEdgeFlagWithInvokeID(GEdgeKind k, CallSiteID cs) {$/;"	f	class:PTACallGraphEdge
makeEdgeFlagWithInvokeID	include/Util/VFGEdge.h	/^    static inline GEdgeFlag makeEdgeFlagWithInvokeID(GEdgeKind k, CallSiteID cs) {$/;"	f	class:VFGEdge
makeEdgeFlagWithStoreInst	include/MemoryModel/PAGEdge.h	/^    static inline GEdgeFlag makeEdgeFlagWithStoreInst(GEdgeKind k, const Value* store) {$/;"	f	class:PAGEdge
make_random	lib/CUDD/cuddGenetic.c	/^make_random($/;"	f	file:
mall_t	include/CUDD/mnemosyne.h	/^typedef	char	*mall_t;$/;"	t
mall_t	include/CUDD/mnemosyne.h	/^typedef	void	*mall_t;$/;"	t
malloc	include/CUDD/mnemosyne.h	48;"	d
manager	include/CUDD/cuddInt.h	/^    DdManager	*manager;$/;"	m	struct:DdGen
manager	include/CUDD/cuddInt.h	/^    DdManager *manager;$/;"	m	struct:DdHashTable
manager	include/CUDD/cuddInt.h	/^    DdManager *manager;$/;"	m	struct:DdLocalCache
mantissa0	include/CUDD/epd.h	/^  unsigned int mantissa0: 19;$/;"	m	struct:IeeeNanStruct
mantissa0	include/CUDD/epd.h	/^  unsigned int mantissa0: 20;$/;"	m	struct:IeeeDoubleStruct
mantissa1	include/CUDD/epd.h	/^  unsigned int mantissa1: 32;$/;"	m	struct:IeeeDoubleStruct
mantissa1	include/CUDD/epd.h	/^  unsigned int mantissa1: 32;$/;"	m	struct:IeeeNanStruct
map	include/CUDD/cuddInt.h	/^    int *map;			\/* variable map for fast swap *\/$/;"	m	struct:DdManager
mapAlias	lib/DisPatch/AliasFinder.cpp	/^void AliasFinder::mapAlias(string varstr){$/;"	f	class:AliasFinder
mapBinIndcs2ce	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::mapBinIndcs2ce(uint64_t csaddr, const Function *cefunc){$/;"	f	class:BinIRWrapper
mapBinIndcs2ce	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::mapBinIndcs2ce(uint64_t csaddr, uint64_t ceaddr){$/;"	f	class:BinIRWrapper
mapInst2Regs	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::mapInst2Regs(set <uint64_t> &addrset){$/;"	f	class:BinIRWrapper
mapInterPass	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::mapInterPass(uint64_t csaddr, uint64_t ceaddr, uint64_t craddr){$/;"	f	class:InterProcAnal
mapOneRegBackward	lib/DisPatch/InterProcAnal.cpp	/^const Value * InterProcAnal::mapOneRegBackward(uint16_t ri, const Function *func, vector <cs_insn> &targetinsts, int maxdepth){$/;"	f	class:InterProcAnal
mapOneRegForward	lib/DisPatch/InterProcAnal.cpp	/^const Value * InterProcAnal::mapOneRegForward(uint16_t ri, const Function *func, vector <cs_insn> &targetinsts, int maxdepth){$/;"	f	class:InterProcAnal
mapRegCeReadInsts	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::mapRegCeReadInsts(uint64_t ceaddr, map <uint16_t, vector<cs_insn>> &regReadInsts){$/;"	f	class:InterProcAnal
mapRegCeRetWriteInsts	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::mapRegCeRetWriteInsts(uint64_t csaddr, uint64_t craddr, uint64_t ceaddr, map <uint16_t, vector<cs_insn>> &regRetWriteInsts){$/;"	f	class:InterProcAnal
mapRegCsArgWriteInsts	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::mapRegCsArgWriteInsts(uint64_t csaddr, uint64_t craddr, uint64_t ceaddr, map <uint16_t, vector<cs_insn>> &regArgWriteInsts){$/;"	f	class:InterProcAnal
mapRegCsRetReadInsts	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::mapRegCsRetReadInsts(uint64_t csaddr, uint64_t craddr, uint64_t ceaddr, map <uint16_t, vector<cs_insn>> &regRetReadInsts){$/;"	f	class:InterProcAnal
markForRelease	include/Util/Conditions.h	/^    inline void markForRelease(DdNode* cond) {$/;"	f	class:BddCondManager
markForRelease	include/Util/PathCondAllocator.h	/^    inline void markForRelease(Condition* cond) {$/;"	f	class:PathCondAllocator
markValidVFEdge	include/MSSA/SVFGBuilder.h	/^    inline void markValidVFEdge(SVFGEdgeSet& edges) {$/;"	f	class:SVFGBuilder
matchArgs	include/MemoryModel/PointerAnalysis.h	/^    inline bool matchArgs(CallSite cs, const Function* callee) {$/;"	f	class:PointerAnalysis
matchContext	include/Util/DPItem.h	/^    bool matchContext(NodeID cxt) {$/;"	f	class:PathStmtDPItem
matchContext	include/Util/DPItem.h	/^    inline bool matchContext(NodeID cxt) {$/;"	f	class:CxtStmtDPItem
matchContext	include/Util/DPItem.h	/^    inline virtual bool matchContext(NodeID ctx) {$/;"	f	class:ContextCond
matchContext	include/Util/DPItem.h	/^    inline virtual bool matchContext(NodeID cxt) {$/;"	f	class:CxtDPItem
matchType	include/WPA/Andersen.h	/^    virtual bool matchType(NodeID ptrid, NodeID objid, const NormalGepCGEdge *normalGepEdge) {$/;"	f	class:Andersen
matchType	lib/WPA/AndersenWaveDiffWithType.cpp	/^bool AndersenWaveDiffWithType::matchType(NodeID ptrid, NodeID objid, const NormalGepCGEdge *normalGepEdge) {$/;"	f	class:AndersenWaveDiffWithType
matchkeywd	lib/CUDD/dddmpLoad.c	57;"	d	file:
matchkeywd	lib/CUDD/dddmpLoadCnf.c	54;"	d	file:
mathout2ctrlmap	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, ctrlinfo *> ref2ctrlmap, err2ctrlmap, cur2ctrlmap, mathout2ctrlmap;$/;"	m	class:CtrlIdentifier
mathouts	include/DisPatch/CtrlIdentifier.h	/^        set <const Value *> mathouts;$/;"	m	struct:CtrlIdentifier::_ctrlinfo
max	lib/CUDD/cuddApprox.c	/^    double max;			\/* max number of minterms *\/$/;"	m	struct:ApproxInfo	file:
max	lib/CUDD/cuddSubsetHB.c	/^static  double		max; \/* to store the 2^n value of the number$/;"	v	file:
maxCacheHard	include/CUDD/cuddInt.h	/^    unsigned int maxCacheHard;	\/* hard limit for cache size *\/$/;"	m	struct:DdManager
maxFieldLimit	include/MemoryModel/MemModel.h	/^    static u32_t maxFieldLimit;$/;"	m	class:SymbolTableInfo
maxFieldLimit	lib/MemoryModel/MemModel.cpp	/^u32_t SymbolTableInfo::maxFieldLimit = 0;$/;"	m	class:SymbolTableInfo	file:
maxGrowth	include/CUDD/cuddInt.h	/^    double maxGrowth;		\/* maximum growth during reordering *\/$/;"	m	struct:DdManager
maxGrowthAlt	include/CUDD/cuddInt.h	/^    double maxGrowthAlt;	\/* alternate maximum growth for reordering *\/$/;"	m	struct:DdManager
maxInDegree	include/MSSA/SVFGStat.h	/^    unsigned maxInDegree;	\/\/\/< max in degrees of SVFG nodes.$/;"	m	class:SVFGStat
maxIndInDegree	include/MSSA/SVFGStat.h	/^    int maxIndInDegree;	\/\/\/< max indirect in degrees of SVFG nodes.$/;"	m	class:SVFGStat
maxIndOutDegree	include/MSSA/SVFGStat.h	/^    int maxIndOutDegree;	\/\/\/< max indirect out degrees of SVFG nodes.$/;"	m	class:SVFGStat
maxKeys	include/CUDD/cuddInt.h	/^    unsigned int maxKeys;	\/* slots * DD_MAX_SUBTABLE_DENSITY *\/$/;"	m	struct:DdSubtable
maxLive	include/CUDD/cuddInt.h	/^    unsigned int maxLive;	\/* maximum number of live nodes *\/$/;"	m	struct:DdManager
maxNodeDataPages	lib/CUDD/cuddSubsetHB.c	/^static  int             maxNodeDataPages; \/* number of page pointers *\/$/;"	v	file:
maxNodeDistPages	lib/CUDD/cuddSubsetSP.c	/^    int		maxNodeDistPages; \/* number of page pointers *\/$/;"	m	struct:GlobalInfo	file:
maxOffsetLimit	include/MemoryModel/MemModel.h	/^    u32_t maxOffsetLimit;$/;"	m	class:ObjTypeInfo
maxOutDegree	include/MSSA/SVFGStat.h	/^    unsigned maxOutDegree;	\/\/\/< max out degrees of SVFG nodes.$/;"	m	class:SVFGStat
maxPages	lib/CUDD/cuddSubsetHB.c	/^static  int             maxPages; \/* number of page pointers *\/$/;"	v	file:
maxQueuePages	lib/CUDD/cuddSubsetSP.c	/^    int		maxQueuePages; \/* number of page pointers *\/$/;"	m	struct:GlobalInfo	file:
maxReorderings	include/CUDD/cuddInt.h	/^    unsigned int maxReorderings;\/* maximum number of calls to Cudd_ReduceHeap *\/$/;"	m	struct:DdManager
maxSCCSize	include/WPA/FlowSensitive.h	/^    Size_t maxSCCSize;$/;"	m	class:FlowSensitive
maxSize	include/CUDD/cuddInt.h	/^    int maxSize;		\/* max number of subtables before resizing *\/$/;"	m	struct:DdManager
maxSizeZ	include/CUDD/cuddInt.h	/^    int maxSizeZ;		\/* for ZDD *\/$/;"	m	struct:DdManager
maxStSize	include/MemoryModel/MemModel.h	/^    u32_t maxStSize;$/;"	m	class:SymbolTableInfo
maxStruct	include/MemoryModel/MemModel.h	/^    const Type* maxStruct;$/;"	m	class:SymbolTableInfo
max_density	include/CUDD/st.h	/^    int max_density;$/;"	m	struct:st_table
maxcallercxt	include/DisPatch/CtrlIdentifier.h	/^    unsigned maxcallercxt;$/;"	m	class:CtrlIdentifier
maxcallercxt	include/DisPatch/InitPIDObj.h	/^    unsigned maxcallercxt;$/;"	m	class:InitPIDObj
maxdist	include/DisPatch/CtrlIdentifier.h	/^    unsigned maxdist;$/;"	m	class:CtrlIdentifier
maxdist	include/DisPatch/InitPIDObj.h	/^    unsigned maxdist;$/;"	m	class:InitPIDObj
maximumBudget	include/Util/DPItem.h	/^    static u64_t maximumBudget;$/;"	m	class:DPItem
maximumCxt	include/Util/DPItem.h	/^    static u32_t maximumCxt;$/;"	m	class:ContextCond
maximumCxt	lib/Util/PathCondAllocator.cpp	/^u32_t ContextCond::maximumCxt = 0;$/;"	m	class:ContextCond	file:
maximumCxtLen	include/Util/DPItem.h	/^    static u32_t maximumCxtLen;$/;"	m	class:ContextCond
maximumCxtLen	lib/Util/PathCondAllocator.cpp	/^u32_t ContextCond::maximumCxtLen = 0;$/;"	m	class:ContextCond	file:
maximumPath	include/Util/DPItem.h	/^    static u32_t maximumPath;$/;"	m	class:VFPathCond
maximumPath	lib/Util/PathCondAllocator.cpp	/^u32_t VFPathCond::maximumPath = 0;$/;"	m	class:VFPathCond	file:
maximumPathLen	include/Util/DPItem.h	/^    static u32_t maximumPathLen;$/;"	m	class:VFPathCond
maximumPathLen	lib/Util/PathCondAllocator.cpp	/^u32_t VFPathCond::maximumPathLen = 0;$/;"	m	class:VFPathCond	file:
maxmem	include/CUDD/cuddInt.h	/^    unsigned long maxmem;	\/* target maximum memory *\/$/;"	m	struct:DdManager
maxmemhard	include/CUDD/cuddInt.h	/^    unsigned long maxmemhard;	\/* hard limit for maximum memory *\/$/;"	m	struct:DdManager
maxpath	lib/CUDD/cuddSubsetSP.c	/^    unsigned int maxpath;$/;"	m	struct:AssortedInfo	file:
maxpathTable	lib/CUDD/cuddSubsetSP.c	/^    st_table *maxpathTable;$/;"	m	struct:AssortedInfo	file:
maxsize	include/CUDD/cuddInt.h	/^    int maxsize;$/;"	m	struct:DdLevelQueue
maxsize	include/CUDD/cuddInt.h	/^    unsigned int maxsize;$/;"	m	struct:DdHashTable
maxslots	include/CUDD/cuddInt.h	/^    unsigned int maxslots;$/;"	m	struct:DdLocalCache
mem	include/MemoryModel/PAGNode.h	/^    const MemObj* mem;	\/\/\/< memory object$/;"	m	class:ObjPN
memOut	lib/CUDD/cuddSubsetHB.c	/^static int memOut;$/;"	v	file:
memRegSet	include/MSSA/MemRegion.h	/^    MRSet memRegSet;$/;"	m	class:MRGenerator
memSSA	include/WPA/FlowSensitive.h	/^    SVFGBuilder memSSA;$/;"	m	class:FlowSensitive
memToFieldsMap	include/MemoryModel/PAG.h	/^    MemObjToFieldsMap memToFieldsMap;	\/\/\/< Map a mem object id to all its fields$/;"	m	class:PAG
memcpy	lib/CUDD/stub.c	/^memcpy(s1, s2, n)$/;"	f
memoryList	include/CUDD/cuddInt.h	/^    DdHashItem **memoryList;$/;"	m	struct:DdHashTable
memoryList	include/CUDD/cuddInt.h	/^    DdNode **memoryList;	\/* memory manager for symbol table *\/$/;"	m	struct:DdManager
memset	lib/CUDD/stub.c	/^memset(s, c, n)$/;"	f
memused	include/CUDD/cuddInt.h	/^    unsigned long memused;	\/* total memory allocated for the manager *\/$/;"	m	struct:DdManager
mergeNodeAndPts	lib/WPA/AndersenHCD.cpp	/^void AndersenHCD::mergeNodeAndPts(NodeID node, NodeID rep) {$/;"	f	class:AndersenHCD
mergeNodeToRep	lib/WPA/Andersen.cpp	/^void Andersen::mergeNodeToRep(NodeID nodeId,NodeID newRepId) {$/;"	f	class:Andersen
mergeNodeToRep	lib/WPA/AndersenWaveDiff.cpp	/^void AndersenWaveDiff::mergeNodeToRep(NodeID nodeId,NodeID newRepId) {$/;"	f	class:AndersenWaveDiff
mergePWC	include/WPA/Andersen.h	/^    const bool mergePWC() const { return pwcOpt; }$/;"	f	class:Andersen
mergeSCC	lib/WPA/AndersenHCD.cpp	/^void AndersenHCD::mergeSCC(NodeID nodeId) {$/;"	f	class:AndersenHCD
mergeSCC	lib/WPA/AndersenHLCD.cpp	/^void AndersenHLCD::mergeSCC(NodeID nodeId) {$/;"	f	class:AndersenHLCD
mergeSCC	lib/WPA/AndersenLCD.cpp	/^void AndersenLCD::mergeSCC() {$/;"	f	class:AndersenLCD
mergeSccCycle	lib/WPA/Andersen.cpp	/^void Andersen::mergeSccCycle()$/;"	f	class:Andersen
mergeSccNodes	lib/WPA/Andersen.cpp	/^void Andersen::mergeSccNodes(NodeID repNodeId, const NodeBS& subNodes)$/;"	f	class:Andersen
mergeSrcToTgt	include/WPA/Andersen.h	/^    bool mergeSrcToTgt(NodeID nodeId, NodeID newRepId) { return AndersenLCD::mergeSrcToTgt(nodeId, newRepId);}$/;"	f	class:AndersenHLCD
mergeSrcToTgt	lib/WPA/Andersen.cpp	/^bool Andersen::mergeSrcToTgt(NodeID nodeId, NodeID newRepId){$/;"	f	class:Andersen
mergeSrcToTgt	lib/WPA/AndersenLCD.cpp	/^bool AndersenLCD::mergeSrcToTgt(NodeID nodeId, NodeID newRepId){$/;"	f	class:AndersenLCD
mergeSrcToTgt	lib/WPA/AndersenSFR.cpp	/^bool AndersenSFR::mergeSrcToTgt(NodeID nodeId, NodeID newRepId) {$/;"	f	class:AndersenSFR
mergeTypeOfNodes	lib/WPA/AndersenWaveDiffWithType.cpp	/^void AndersenWaveDiffWithType::mergeTypeOfNodes(const NodeBS &nodes) {$/;"	f	class:AndersenWaveDiffWithType
mergedNodes	include/WPA/Andersen.h	/^    NodeSet mergedNodes;$/;"	m	class:AndersenHCD
metEdges	include/WPA/Andersen.h	/^    EdgeSet metEdges;$/;"	m	class:AndersenLCD
minDead	include/CUDD/cuddInt.h	/^    unsigned int minDead;	\/* do not GC if fewer than these dead *\/$/;"	m	struct:DdManager
minHit	include/CUDD/cuddInt.h	/^    double minHit;		\/* hit percentage above which to resize *\/$/;"	m	struct:DdManager
minHit	include/CUDD/cuddInt.h	/^    double minHit;$/;"	m	struct:DdLocalCache
mintermPages	lib/CUDD/cuddSubsetHB.c	/^static	double		**mintermPages;	\/* pointers to the pages *\/$/;"	v	file:
mintermPointer	lib/CUDD/cuddSubsetHB.c	/^    double *mintermPointer;$/;"	m	struct:NodeData	file:
minterms	lib/CUDD/cuddApprox.c	/^    double minterms;		\/* how many minterms are left *\/$/;"	m	struct:ApproxInfo	file:
mintermsFromUniverse	lib/CUDD/cuddSplit.c	/^mintermsFromUniverse($/;"	f	file:
mintermsN	lib/CUDD/cuddApprox.c	/^    double mintermsN;		\/* minterms for the complemented node *\/$/;"	m	struct:NodeData	file:
mintermsP	lib/CUDD/cuddApprox.c	/^    double mintermsP;		\/* minterms for the regular node *\/$/;"	m	struct:NodeData	file:
minusinfinity	include/CUDD/cuddInt.h	/^    DdNode *minusinfinity;	\/* minus infinity *\/$/;"	m	struct:DdManager
mod	include/MemoryModel/MemModel.h	/^    SVFModule mod;$/;"	m	class:SymbolTableInfo
modRefAnalysis	lib/MSSA/MemRegion.cpp	/^void MRGenerator::modRefAnalysis(PTACallGraphNode* callGraphNode, WorkList& worklist) {$/;"	f	class:MRGenerator
mode	include/CUDD/dddmpInt.h	/^  char mode;$/;"	m	struct:Dddmp_Hdr_s
mode	include/DisPatch/InterProcAnal.h	/^        cs_mode mode;$/;"	m	struct:InterProcAnal::platform
modelConstants	include/MemoryModel/MemModel.h	/^    bool modelConstants;$/;"	m	class:SymbolTableInfo
module	include/DisPatch/AliasFinder.h	/^    SVFModule module;$/;"	m	class:AliasFinder
module	include/DisPatch/CtrlIdentifier.h	/^    SVFModule module;$/;"	m	class:CtrlIdentifier
module	include/DisPatch/DisPatch.h	/^    SVFModule module;$/;"	m	class:DisPatch
module	include/DisPatch/InitPIDObj.h	/^    SVFModule module;$/;"	m	class:InitPIDObj
module	include/DisPatch/InterProcAnal.h	/^    SVFModule module;$/;"	m	class:InterProcAnal
moduleName	include/Util/PTAStat.h	/^    std::string moduleName;$/;"	m	class:PTAStat
moduleNum	include/Util/SVFModule.h	/^    u32_t moduleNum;$/;"	m	class:LLVMModuleSet
modulePass	include/DisPatch/DisPatch.h	/^    static ModulePass* modulePass;$/;"	m	class:DisPatch
modulePass	lib/DisPatch/DisPatch.cpp	/^ModulePass* DisPatch::modulePass = NULL;$/;"	m	class:DisPatch	file:
modules	include/Util/SVFModule.h	/^    std::unique_ptr<Module> *modules;$/;"	m	class:LLVMModuleSet
moveEdgesToRepNode	include/MemoryModel/ConsG.h	/^    inline bool moveEdgesToRepNode(ConstraintNode*node, ConstraintNode* rep ) {$/;"	f	class:ConstraintGraph
moveInEdgesToRepNode	lib/MemoryModel/ConsG.cpp	/^bool ConstraintGraph::moveInEdgesToRepNode(ConstraintNode* node, ConstraintNode* rep ) {$/;"	f	class:ConstraintGraph
moveOutEdgesToRepNode	lib/MemoryModel/ConsG.cpp	/^bool ConstraintGraph::moveOutEdgesToRepNode(ConstraintNode*node, ConstraintNode* rep ) {$/;"	f	class:ConstraintGraph
mr	include/MSSA/MSSAMuChi.h	/^    const MemRegion* mr;$/;"	m	class:MRVer
mr	include/MSSA/MSSAMuChi.h	/^    const MemRegion* mr;$/;"	m	class:MSSADEF
mr	include/MSSA/MSSAMuChi.h	/^    const MemRegion* mr;$/;"	m	class:MSSAMU
mr2CounterMap	include/MSSA/MemSSA.h	/^    MemRegToCounterMap mr2CounterMap;$/;"	m	class:MemSSA
mr2VerStackMap	include/MSSA/MemSSA.h	/^    MemRegToVerStackMap mr2VerStackMap;$/;"	m	class:MemSSA
mrGen	include/MSSA/MemSSA.h	/^    MRGenerator* mrGen;$/;"	m	class:MemSSA
mrs	include/MSSA/SVFGEdge.h	/^    MRVerSet mrs;$/;"	m	class:IndirectSVFGEdge
mssa	include/MSSA/SVFG.h	/^    MemSSA* mssa;$/;"	m	class:SVFG
mssa	include/MSSA/SVFGStat.h	/^    MemSSA* mssa;$/;"	m	class:MemSSAStat
mtrShiftHL	lib/CUDD/mtrGroup.c	/^mtrShiftHL($/;"	f	file:
mu	include/MSSA/SVFGNode.h	/^    const MemSSA::CALLMU* mu;$/;"	m	class:ActualINSVFGNode
mu	include/MSSA/SVFGNode.h	/^    const MemSSA::RETMU* mu;$/;"	m	class:FormalOUTSVFGNode
mustAlias	include/MemoryModel/PointerAnalysis.h	/^    inline bool mustAlias(const CVar& var1, const CVar& var2) {$/;"	f	class:CondPTAImpl
n	lib/Util/ExtAPI.cpp	/^    const char *n;$/;"	m	struct:ei_pair	file:
n	lib/Util/ThreadAPI.cpp	/^    const char *n;$/;"	m	struct:ei_pair	file:
nAddedCnfVar	include/CUDD/dddmpInt.h	/^  int nAddedCnfVar;$/;"	m	struct:Dddmp_Hdr_s
nClausesCnf	include/CUDD/dddmpInt.h	/^  int nClausesCnf;  $/;"	m	struct:Dddmp_Hdr_s
nRoots	include/CUDD/dddmpInt.h	/^  int nRoots;$/;"	m	struct:Dddmp_Hdr_s
nVars	include/CUDD/dddmpInt.h	/^  int nVars;$/;"	m	struct:Dddmp_Hdr_s
nVarsCnf	include/CUDD/dddmpInt.h	/^  int nVarsCnf;$/;"	m	struct:Dddmp_Hdr_s
nan	include/CUDD/epd.h	/^  struct IeeeNanStruct		nan;$/;"	m	union:EpTypeUnion	typeref:struct:EpTypeUnion::IeeeNanStruct
neg	lib/CUDD/cuddSat.c	/^    int	neg;$/;"	m	struct:cuddPathPair	file:
network	include/CUDD/cuddInt.h	/^    network_t *network;$/;"	m	struct:DdManager
newCond	include/Util/PathCondAllocator.h	/^    inline Condition* newCond(const Instruction* inst) {$/;"	f	class:PathCondAllocator
newExpand	include/MemoryModel/ConsGNode.h	/^    bool newExpand;$/;"	m	class:ConstraintNode
newSSAName	lib/MSSA/MemSSA.cpp	/^MRVer* MemSSA::newSSAName(const MemRegion* mr, MSSADEF* def) {$/;"	f	class:MemSSA
new_file_name	lib/CUDD/restart.c	/^static char *new_file_name;$/;"	v	file:
next	include/CUDD/cudd.h	/^    DdNode *next;		\/* next pointer for unique table *\/$/;"	m	struct:DdNode
next	include/CUDD/cuddInt.h	/^    struct DdHashItem *next;$/;"	m	struct:DdHashItem	typeref:struct:DdHashItem::DdHashItem
next	include/CUDD/cuddInt.h	/^    struct DdHook *next;	\/* next element in the list *\/$/;"	m	struct:DdHook	typeref:struct:DdHook::DdHook
next	include/CUDD/cuddInt.h	/^    struct DdLocalCache *next;$/;"	m	struct:DdLocalCache	typeref:struct:DdLocalCache::DdLocalCache
next	include/CUDD/cuddInt.h	/^    struct DdQueueItem *next;$/;"	m	struct:DdQueueItem	typeref:struct:DdQueueItem::DdQueueItem
next	include/CUDD/cuddInt.h	/^    struct Move *next;$/;"	m	struct:Move	typeref:struct:Move::Move
next	include/CUDD/cuddInt.h	/^    unsigned int next;		\/* index of next variable in group *\/$/;"	m	struct:DdSubtable
next	include/CUDD/st.h	/^    st_table_entry *next;$/;"	m	struct:st_table_entry
next	include/Util/WorkList.h	/^        ListNode* next;$/;"	m	class:List::ListNode
next	lib/CUDD/cuddApprox.c	/^    struct GlobalQueueItem *next;$/;"	m	struct:GlobalQueueItem	typeref:struct:GlobalQueueItem::GlobalQueueItem	file:
next	lib/CUDD/cuddApprox.c	/^    struct LocalQueueItem *next;$/;"	m	struct:LocalQueueItem	typeref:struct:LocalQueueItem::LocalQueueItem	file:
next	lib/CUDD/cuddEssent.c	/^    struct TlClause *next;$/;"	m	struct:TlClause	typeref:struct:TlClause::TlClause	file:
nextDead	include/CUDD/cuddInt.h	/^    int nextDead;		\/* index in the queue *\/$/;"	m	struct:DdManager
nextDyn	include/CUDD/cuddInt.h	/^    unsigned int nextDyn;	\/* reorder if this size is reached *\/$/;"	m	struct:DdManager
nextFree	include/CUDD/cuddInt.h	/^    DdHashItem *nextFree;$/;"	m	struct:DdHashTable
nextFree	include/CUDD/cuddInt.h	/^    DdNode *nextFree;		\/* list of free nodes *\/$/;"	m	struct:DdManager
nextSample	include/CUDD/cuddInt.h	/^    double nextSample;		\/* when to write next line of stats *\/$/;"	m	struct:DdManager
nnodes	include/CUDD/dddmpInt.h	/^  int nnodes;$/;"	m	struct:Dddmp_Hdr_s
no_struct_alloc	include/Util/ExtAPI.h	/^    bool no_struct_alloc(const Function *F) const {$/;"	f	class:ExtAPI
node	include/CUDD/cuddInt.h	/^    DdNode	*node;$/;"	m	struct:DdGen
node	include/Util/VFGNode.h	/^    const PAGNode* node;$/;"	m	class:NullPtrVFGNode
node	lib/CUDD/cuddApprox.c	/^    DdNode *node;$/;"	m	struct:GlobalQueueItem	file:
node	lib/CUDD/cuddApprox.c	/^    DdNode *node;$/;"	m	struct:LocalQueueItem	file:
nodeDataPage	lib/CUDD/cuddSubsetHB.c	/^static	int		nodeDataPage; \/* index to next element *\/$/;"	v	file:
nodeDataPageIndex	lib/CUDD/cuddSubsetHB.c	/^static	int		nodeDataPageIndex; \/* index to next element *\/$/;"	v	file:
nodeDataPageSize	lib/CUDD/cuddSubsetHB.c	/^static	int		nodeDataPageSize = DEFAULT_NODE_DATA_PAGE_SIZE;$/;"	v	file:
nodeDataPages	lib/CUDD/cuddSubsetHB.c	/^static	NodeData_t	**nodeDataPages; \/* index to current page *\/$/;"	v	file:
nodeDistPage	lib/CUDD/cuddSubsetSP.c	/^    int		nodeDistPage; \/* index to current page *\/$/;"	m	struct:GlobalInfo	file:
nodeDistPageIndex	lib/CUDD/cuddSubsetSP.c	/^    int		nodeDistPageIndex; \/* index to next element *\/$/;"	m	struct:GlobalInfo	file:
nodeDistPageSize	lib/CUDD/cuddSubsetSP.c	/^    int		nodeDistPageSize; \/* page size *\/$/;"	m	struct:GlobalInfo	file:
nodeDistPages	lib/CUDD/cuddSubsetSP.c	/^    struct NodeDist **nodeDistPages; \/* pointers to the pages *\/$/;"	m	struct:GlobalInfo	typeref:struct:GlobalInfo::NodeDist	file:
nodeInCycle	lib/MSSA/SVFGStat.cpp	/^NodeID SVFGStat::nodeInCycle(SVFGSCC* scc, NodeID id) const {$/;"	f	class:SVFGStat
nodeKind	include/MemoryModel/GenericGraph.h	/^    GNodeK nodeKind;	\/\/\/< Node kind$/;"	m	class:GenericNode
nodeNum	include/MemoryModel/GenericGraph.h	/^    u32_t nodeNum;		\/\/\/< total num of edge$/;"	m	class:GenericGraph
nodeNumAfterPAGBuild	include/MemoryModel/PAG.h	/^    NodeID nodeNumAfterPAGBuild; \/\/ initial node number after building PAG, excluding later added nodes, e.g., gepobj nodes$/;"	m	class:PAG
nodePages	lib/CUDD/cuddSubsetHB.c	/^static	int		**nodePages; \/* pointers to the pages *\/$/;"	v	file:
nodeSet	include/Util/WorkList.h	/^    DataSet nodeSet;$/;"	m	class:List
nodeStack	include/WPA/WPAFSSolver.h	/^    NodeStack nodeStack;	\/\/\/< stack used for processing nodes.$/;"	m	class:WPAFSSolver
nodeToRefMap	include/MemoryModel/OfflineConsG.h	/^    NodeToRepMap nodeToRefMap;  \/\/ a --> *a$/;"	m	class:OfflineConsG
nodeToRepMap	include/MemoryModel/ConsG.h	/^    NodeToRepMap nodeToRepMap;$/;"	m	class:ConstraintGraph
nodeToSubsMap	include/MemoryModel/ConsG.h	/^    NodeToSubsMap nodeToSubsMap;$/;"	m	class:ConstraintGraph
node_iterator	include/Util/CFLSolver.h	/^    typedef typename GTraits::nodes_iterator node_iterator;$/;"	t	class:CFLSolver
node_iterator	include/Util/SCC.h	/^    typedef typename GTraits::nodes_iterator node_iterator;$/;"	t	class:SCCDetection
nodelist	include/CUDD/cuddInt.h	/^    DdNode **nodelist;		\/* hash table *\/$/;"	m	struct:DdSubtable
nodes	include/CUDD/cuddInt.h	/^	} nodes;$/;"	m	union:DdGen::__anon12	typeref:struct:DdGen::__anon12::__anon15
nodesDropped	include/CUDD/cuddInt.h	/^    double nodesDropped;	\/* number of nodes killed by dereferencing *\/$/;"	m	struct:DdManager
nodesFreed	include/CUDD/cuddInt.h	/^    double nodesFreed;		\/* number of nodes returned to the free list *\/$/;"	m	struct:DdManager
nodesPointer	lib/CUDD/cuddSubsetHB.c	/^    int *nodesPointer;$/;"	m	struct:NodeData	file:
nodesToBeCollapsed	include/MemoryModel/ConsG.h	/^    WorkList nodesToBeCollapsed;$/;"	m	class:ConstraintGraph
nodes_begin	include/MemoryModel/GenericGraph.h	/^    static nodes_iterator nodes_begin(GenericGraphTy *G) {$/;"	f	struct:llvm::GraphTraits
nodes_end	include/MemoryModel/GenericGraph.h	/^    static nodes_iterator nodes_end(GenericGraphTy *G) {$/;"	f	struct:llvm::GraphTraits
nodes_iterator	include/MemoryModel/GenericGraph.h	/^    typedef mapped_iterator<typename GenericGraphTy::iterator, DerefVal> nodes_iterator;$/;"	t	struct:llvm::GraphTraits
norToRepMap	include/MemoryModel/OfflineConsG.h	/^    NodeToRepMap norToRepMap;   \/\/ for each *a construct a --> rep, i.e., mapping a node of to a rep node for online constraint solving$/;"	m	class:OfflineConsG
normalized	include/MemoryModel/PointerAnalysis.h	/^    bool normalized;$/;"	m	class:CondPTAImpl
nsuppvars	include/CUDD/dddmpInt.h	/^  int nsuppvars;$/;"	m	struct:Dddmp_Hdr_s
nullPtrSymID	include/MemoryModel/MemModel.h	/^    inline SymID nullPtrSymID() const {$/;"	f	class:SymbolTableInfo
numBuckets	include/CUDD/cuddInt.h	/^    int numBuckets;$/;"	m	struct:DdLevelQueue
numBuckets	include/CUDD/cuddInt.h	/^    unsigned int numBuckets;$/;"	m	struct:DdHashTable
numCalls	lib/CUDD/cuddSubsetSP.c	/^    int         numCalls;$/;"	m	struct:GlobalInfo	file:
numElement	include/MemoryModel/ConditionalPT.h	/^    inline unsigned numElement() const {$/;"	f	class:CondPointsToSet
numOfActualIn	include/MSSA/SVFGStat.h	/^    int numOfActualIn;	\/\/\/< number of actual in svfg nodes.$/;"	m	class:SVFGStat
numOfActualOut	include/MSSA/SVFGStat.h	/^    int numOfActualOut;	\/\/\/< number of actual out svfg nodes.$/;"	m	class:SVFGStat
numOfActualParam	include/MSSA/SVFGStat.h	/^    int numOfActualParam;$/;"	m	class:SVFGStat
numOfActualRet	include/MSSA/SVFGStat.h	/^    int numOfActualRet;$/;"	m	class:SVFGStat
numOfAddr	include/MSSA/SVFGStat.h	/^    int numOfAddr;$/;"	m	class:SVFGStat
numOfCallEdges	include/Util/ICFGStat.h	/^    int numOfCallEdges;$/;"	m	class:ICFGStat
numOfCallNodes	include/Util/ICFGStat.h	/^    int numOfCallNodes;$/;"	m	class:ICFGStat
numOfCopy	include/MSSA/SVFGStat.h	/^    int numOfCopy;$/;"	m	class:SVFGStat
numOfEdges	include/Util/ICFGStat.h	/^    int numOfEdges;$/;"	m	class:ICFGStat
numOfEntryNodes	include/Util/ICFGStat.h	/^    int numOfEntryNodes;$/;"	m	class:ICFGStat
numOfExitNodes	include/Util/ICFGStat.h	/^    int numOfExitNodes;$/;"	m	class:ICFGStat
numOfFieldExpand	include/WPA/Andersen.h	/^    static Size_t numOfFieldExpand;$/;"	m	class:Andersen
numOfFieldExpand	lib/WPA/Andersen.cpp	/^Size_t Andersen::numOfFieldExpand = 0;$/;"	m	class:Andersen	file:
numOfFormalIn	include/MSSA/SVFGStat.h	/^    int numOfFormalIn;	\/\/\/< number of formal in svfg nodes.$/;"	m	class:SVFGStat
numOfFormalOut	include/MSSA/SVFGStat.h	/^    int numOfFormalOut;	\/\/\/< number of formal out svfg nodes.$/;"	m	class:SVFGStat
numOfFormalParam	include/MSSA/SVFGStat.h	/^    int numOfFormalParam;$/;"	m	class:SVFGStat
numOfFormalRet	include/MSSA/SVFGStat.h	/^    int numOfFormalRet;$/;"	m	class:SVFGStat
numOfGep	include/MSSA/SVFGStat.h	/^    int numOfGep;$/;"	m	class:SVFGStat
numOfIntraEdges	include/Util/ICFGStat.h	/^    int numOfIntraEdges;$/;"	m	class:ICFGStat
numOfIntraNodes	include/Util/ICFGStat.h	/^    int numOfIntraNodes;$/;"	m	class:ICFGStat
numOfIteration	include/WPA/WPASolver.h	/^    u32_t numOfIteration;$/;"	m	class:WPASolver
numOfLoad	include/MSSA/SVFGStat.h	/^    int numOfLoad;	\/\/\/< number of load svfg nodes.$/;"	m	class:SVFGStat
numOfMSSAPhi	include/MSSA/SVFGStat.h	/^    int numOfMSSAPhi;	\/\/\/< number of mssa phi svfg nodes.$/;"	m	class:SVFGStat
numOfNodes	include/MSSA/SVFGStat.h	/^    int numOfNodes;	\/\/\/< number of svfg nodes.$/;"	m	class:SVFGStat
numOfNodes	include/Util/ICFGStat.h	/^    int numOfNodes;$/;"	m	class:ICFGStat
numOfNodesInSCC	include/WPA/FlowSensitive.h	/^    Size_t numOfNodesInSCC;$/;"	m	class:FlowSensitive
numOfPhi	include/MSSA/SVFGStat.h	/^    int numOfPhi;$/;"	m	class:SVFGStat
numOfProcessedActualParam	include/WPA/FlowSensitive.h	/^    Size_t numOfProcessedActualParam;	\/\/\/ Number of processed actual param node$/;"	m	class:FlowSensitive
numOfProcessedAddr	include/WPA/Andersen.h	/^    static Size_t numOfProcessedAddr;	\/\/\/ Number of processed Addr edge$/;"	m	class:Andersen
numOfProcessedAddr	include/WPA/FlowSensitive.h	/^    Size_t numOfProcessedAddr;	\/\/\/ Number of processed Addr node$/;"	m	class:FlowSensitive
numOfProcessedCopy	include/WPA/Andersen.h	/^    static Size_t numOfProcessedCopy;	\/\/\/ Number of processed Copy edge$/;"	m	class:Andersen
numOfProcessedCopy	include/WPA/FlowSensitive.h	/^    Size_t numOfProcessedCopy;	\/\/\/ Number of processed Copy node$/;"	m	class:FlowSensitive
numOfProcessedCopy	lib/WPA/Andersen.cpp	/^Size_t Andersen::numOfProcessedCopy = 0;$/;"	m	class:Andersen	file:
numOfProcessedFormalRet	include/WPA/FlowSensitive.h	/^    Size_t numOfProcessedFormalRet;	\/\/\/ Number of processed formal ret node$/;"	m	class:FlowSensitive
numOfProcessedGep	include/WPA/Andersen.h	/^    static Size_t numOfProcessedGep;	\/\/\/ Number of processed Gep edge$/;"	m	class:Andersen
numOfProcessedGep	include/WPA/FlowSensitive.h	/^    Size_t numOfProcessedGep;	\/\/\/ Number of processed Gep node$/;"	m	class:FlowSensitive
numOfProcessedGep	lib/WPA/Andersen.cpp	/^Size_t Andersen::numOfProcessedGep = 0;$/;"	m	class:Andersen	file:
numOfProcessedLoad	include/WPA/Andersen.h	/^    static Size_t numOfProcessedLoad;	\/\/\/ Number of processed Load edge$/;"	m	class:Andersen
numOfProcessedLoad	include/WPA/FlowSensitive.h	/^    Size_t numOfProcessedLoad;	\/\/\/ Number of processed Load node$/;"	m	class:FlowSensitive
numOfProcessedLoad	lib/WPA/Andersen.cpp	/^Size_t Andersen::numOfProcessedLoad = 0;$/;"	m	class:Andersen	file:
numOfProcessedMSSANode	include/WPA/FlowSensitive.h	/^    Size_t numOfProcessedMSSANode;	\/\/\/ Number of processed mssa node$/;"	m	class:FlowSensitive
numOfProcessedPhi	include/WPA/FlowSensitive.h	/^    Size_t numOfProcessedPhi;	\/\/\/ Number of processed Phi node$/;"	m	class:FlowSensitive
numOfProcessedStore	include/WPA/Andersen.h	/^    static Size_t numOfProcessedStore;	\/\/\/ Number of processed Store edge$/;"	m	class:Andersen
numOfProcessedStore	include/WPA/FlowSensitive.h	/^    Size_t numOfProcessedStore;	\/\/\/ Number of processed Store node$/;"	m	class:FlowSensitive
numOfProcessedStore	lib/WPA/Andersen.cpp	/^Size_t Andersen::numOfProcessedStore = 0;$/;"	m	class:Andersen	file:
numOfResolvedIndCallEdge	include/Util/PTACallGraph.h	/^    Size_t numOfResolvedIndCallEdge;$/;"	m	class:PTACallGraph
numOfRetEdges	include/Util/ICFGStat.h	/^    int numOfRetEdges;$/;"	m	class:ICFGStat
numOfRetNodes	include/Util/ICFGStat.h	/^    int numOfRetNodes;$/;"	m	class:ICFGStat
numOfSCC	include/WPA/FlowSensitive.h	/^    Size_t numOfSCC;$/;"	m	class:FlowSensitive
numOfSCCDetection	include/WPA/Andersen.h	/^    static Size_t numOfSCCDetection;$/;"	m	class:Andersen
numOfSCCDetection	lib/WPA/Andersen.cpp	/^Size_t Andersen::numOfSCCDetection = 0;$/;"	m	class:Andersen	file:
numOfSfrs	include/WPA/Andersen.h	/^    static Size_t numOfSfrs;$/;"	m	class:Andersen
numOfSfrs	lib/WPA/Andersen.cpp	/^Size_t Andersen::numOfSfrs = 0;$/;"	m	class:Andersen	file:
numOfStore	include/MSSA/SVFGStat.h	/^    int numOfStore;	\/\/\/< number of store svfg nodes.$/;"	m	class:SVFGStat
numStridePair	include/MemoryModel/LocationSet.h	/^    ElemNumStridePairVec numStridePair;	\/\/\/< element number and stride pair$/;"	m	class:LocationSet
num_bins	include/CUDD/st.h	/^    int num_bins;$/;"	m	struct:st_table
num_calls	lib/CUDD/cuddBddCorr.c	/^static	int	num_calls;$/;"	v	file:
num_calls	lib/CUDD/cuddSign.c	/^static int num_calls;	\/* should equal 2n-1 (n is the # of nodes) *\/$/;"	v	file:
num_calls	lib/CUDD/cuddSubsetHB.c	/^static	int		num_calls;$/;"	v	file:
num_entries	include/CUDD/st.h	/^    int num_entries;$/;"	m	struct:st_table
numbbPred	include/DisPatch/UtilDef.h	/^    unsigned numbbPred(const BasicBlock *bb){$/;"	f	class:UtilDef
numbbSucc	include/DisPatch/UtilDef.h	/^    unsigned numbbSucc(const BasicBlock *bb){$/;"	f	class:UtilDef
numberXovers	include/CUDD/cuddInt.h	/^    int	numberXovers;		\/* number of crossovers for GA *\/$/;"	m	struct:DdManager
numvars	lib/CUDD/cuddGenetic.c	/^static int numvars;		\/* the number of input variables in the ckt. *\/$/;"	v	file:
nvars	include/CUDD/cuddInt.h	/^    int nvars;			\/* variables used so far *\/$/;"	m	struct:DdManager
oCG	include/WPA/Andersen.h	/^    OfflineConsG* oCG;$/;"	m	class:AndersenHCD
objMap	include/MemoryModel/MemModel.h	/^    IDToMemMapTy		objMap;		\/\/\/< map a memory sym id to its obj$/;"	m	class:SymbolTableInfo
objSymMap	include/MemoryModel/MemModel.h	/^    ValueToIDMapTy objSymMap;	\/\/\/< map a obj reference to its sym id$/;"	m	class:SymbolTableInfo
objSyms	include/MemoryModel/MemModel.h	/^    inline ValueToIDMapTy& objSyms() {$/;"	f	class:SymbolTableInfo
objToBVRevPtsMap	include/MemoryModel/PointerAnalysis.h	/^    PtrToBVPtsMap objToBVRevPtsMap;$/;"	m	class:CondPTAImpl
objectNodes	include/MemoryModel/ExternalPAG.h	/^    std::set<NodeID> objectNodes;$/;"	m	class:ExternalPAG
oddBotDist	lib/CUDD/cuddSubsetSP.c	/^    DdHalfWord oddBotDist;$/;"	m	struct:NodeDist	file:
oddTopDist	lib/CUDD/cuddSubsetSP.c	/^    DdHalfWord oddTopDist;$/;"	m	struct:NodeDist	file:
off2refctrl	lib/DisPatch/CtrlIdentifier.cpp	/^CtrlIdentifier::ctrlinfo * CtrlIdentifier::off2refctrl(unsigned off){$/;"	f	class:CtrlIdentifier
off2varset	include/DisPatch/UtilDef.h	/^    static map <unsigned, set <const Value *>> off2varset;    \/\/off = offsum$/;"	m	class:UtilDef
off2varset	lib/DisPatch/UtilDef.cpp	/^map <unsigned, set <const Value *>> UtilDef::off2varset;$/;"	m	class:UtilDef	file:
offset2TypeMap	include/MemoryModel/MemModel.h	/^    std::map<u32_t, const llvm::Type*> offset2TypeMap;$/;"	m	class:StInfo
offsetMapping	include/DisPatch/UtilDef.h	/^    void offsetMapping(const Value *v){$/;"	f	class:UtilDef
offsetMapping	include/DisPatch/UtilDef.h	/^    void offsetMapping(map <const Value *, set <const Value *>> &var2varset){$/;"	f	class:UtilDef
offsetMapping	include/DisPatch/UtilDef.h	/^    void offsetMapping(set <const Value *> &varset){$/;"	f	class:UtilDef
offsetMappingHeuri	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::offsetMappingHeuri(unsigned off, const Value *gi){$/;"	f	class:BinIRWrapper
old_file_name	lib/CUDD/restart.c	/^static char *old_file_name;$/;"	v	file:
onTheFlyCallGraphSolve	lib/MemoryModel/PointerAnalysis.cpp	/^void BVDataPTAImpl::onTheFlyCallGraphSolve(const CallSiteToFunPtrMap& callsites, CallEdgeMap& newEdges) {$/;"	f	class:BVDataPTAImpl
one	include/CUDD/cuddInt.h	/^    DdNode *one;		\/* constant 1 *\/$/;"	m	struct:DdManager
one	lib/CUDD/cuddApprox.c	/^    DdNode *one;		\/* one constant *\/$/;"	m	struct:ApproxInfo	file:
one	lib/CUDD/cuddDecomp.c	/^static	DdNode	*one, *zero;$/;"	v	file:
one	lib/CUDD/cuddSat.c	/^static	DdNode	*one, *zero;$/;"	v	file:
one	lib/CUDD/cuddSubsetHB.c	/^static	DdNode	        *zero, *one; \/* constant functions *\/$/;"	v	file:
oneliteralp	lib/CUDD/cuddEssent.c	/^oneliteralp($/;"	f	file:
opIncomingBBs	include/Util/VFGNode.h	/^    OPIncomingBBs opIncomingBBs;$/;"	m	class:IntraPHIVFGNode
opVer	include/MSSA/MSSAMuChi.h	/^    MRVer* opVer;$/;"	m	class:MSSACHI
opVerBegin	include/MSSA/MSSAMuChi.h	/^    inline OPVers::const_iterator opVerBegin() const {$/;"	f	class:MSSAPHI
opVerBegin	include/MSSA/SVFGNode.h	/^    inline OPVers::const_iterator opVerBegin() const {$/;"	f	class:MSSAPHISVFGNode
opVerBegin	include/Util/VFGNode.h	/^    inline OPVers::const_iterator opVerBegin() const {$/;"	f	class:BinaryOPVFGNode
opVerBegin	include/Util/VFGNode.h	/^    inline OPVers::const_iterator opVerBegin() const {$/;"	f	class:CmpVFGNode
opVerBegin	include/Util/VFGNode.h	/^    inline OPVers::const_iterator opVerBegin() const {$/;"	f	class:PHIVFGNode
opVerEnd	include/MSSA/MSSAMuChi.h	/^    inline OPVers::const_iterator opVerEnd() const {$/;"	f	class:MSSAPHI
opVerEnd	include/MSSA/SVFGNode.h	/^    inline OPVers::const_iterator opVerEnd() const {$/;"	f	class:MSSAPHISVFGNode
opVerEnd	include/Util/VFGNode.h	/^    inline OPVers::const_iterator opVerEnd() const {$/;"	f	class:BinaryOPVFGNode
opVerEnd	include/Util/VFGNode.h	/^    inline OPVers::const_iterator opVerEnd() const {$/;"	f	class:CmpVFGNode
opVerEnd	include/Util/VFGNode.h	/^    inline OPVers::const_iterator opVerEnd() const {$/;"	f	class:PHIVFGNode
opVers	include/MSSA/MSSAMuChi.h	/^    OPVers opVers;$/;"	m	class:MSSAPHI
opVers	include/MSSA/SVFGNode.h	/^    OPVers opVers;$/;"	m	class:MSSAPHISVFGNode
opVers	include/Util/VFGNode.h	/^    OPVers opVers;$/;"	m	class:BinaryOPVFGNode
opVers	include/Util/VFGNode.h	/^    OPVers opVers;$/;"	m	class:CmpVFGNode
opVers	include/Util/VFGNode.h	/^    OPVers opVers;$/;"	m	class:PHIVFGNode
operator !=	include/MemoryModel/ConditionalPT.h	/^        bool operator != (int val) {$/;"	f	class:CondPointsToSet::CondPtsSetIterator
operator !=	include/MemoryModel/ConditionalPT.h	/^        bool operator!=(const CondPtsSetIterator &RHS) const {$/;"	f	class:CondPointsToSet::CondPtsSetIterator
operator !=	include/MemoryModel/ConditionalPT.h	/^    inline bool operator != (const CondVar & rhs) const {$/;"	f	class:CondVar
operator !=	include/MemoryModel/ConditionalPT.h	/^    inline bool operator!=(const CondPointsToSet<Cond>& rhs) {$/;"	f	class:CondPointsToSet
operator !=	include/MemoryModel/ConditionalPT.h	/^    inline bool operator!=(const CondStdSet<Element>& rhs) const {$/;"	f	class:CondStdSet
operator !=	include/MemoryModel/PTAType.h	/^    inline bool operator!=(const PTAType &ty) const {$/;"	f	class:PTAType
operator !=	include/Util/CxtStmt.h	/^    inline bool operator!= (const CxtStmt& rhs) const {$/;"	f	class:CxtStmt
operator !=	include/Util/CxtStmt.h	/^    inline bool operator!= (const CxtThread& rhs) const {$/;"	f	class:CxtThread
operator !=	include/Util/CxtStmt.h	/^    inline bool operator!= (const CxtThreadProc& rhs) const {$/;"	f	class:CxtThreadProc
operator !=	include/Util/CxtStmt.h	/^    inline bool operator!= (const CxtThreadStmt& rhs) const {$/;"	f	class:CxtThreadStmt
operator !=	include/Util/CxtStmt.h	/^    inline bool operator!=(const CxtProc& rhs) const {$/;"	f	class:CxtProc
operator !=	include/Util/DPItem.h	/^    inline bool operator!= (const ContextCond& rhs) const {$/;"	f	class:ContextCond
operator !=	include/Util/DPItem.h	/^    inline bool operator!= (const CxtStmtDPItem<LocCond>& rhs) const {$/;"	f	class:CxtStmtDPItem
operator !=	include/Util/DPItem.h	/^    inline bool operator!= (const DPItem& rhs) const {$/;"	f	class:DPItem
operator !=	include/Util/DPItem.h	/^    inline bool operator!= (const PathStmtDPItem<LocCond>& rhs) const {$/;"	f	class:PathStmtDPItem
operator !=	include/Util/DPItem.h	/^    inline bool operator!= (const StmtDPItem& rhs) const {$/;"	f	class:StmtDPItem
operator !=	include/Util/DPItem.h	/^    inline bool operator!= (const VFPathCond& rhs) const {$/;"	f	class:VFPathCond
operator !=	include/Util/DataFlowUtil.h	/^    inline bool operator!= (const PTASCEV& rhs) const {$/;"	f	class:PTASCEV
operator !=	include/Util/GEPTypeBridgeIterator.h	/^    bool operator!=(const generic_bridge_gep_type_iterator& x) const {$/;"	f	class:llvm::generic_bridge_gep_type_iterator
operator &=	include/MemoryModel/ConditionalPT.h	/^    inline bool operator &= (const CondPointsToSet<Cond>& rhs) {$/;"	f	class:CondPointsToSet
operator &=	include/MemoryModel/ConditionalPT.h	/^    inline bool operator&=(const CondStdSet<Element>& rhs) {$/;"	f	class:CondStdSet
operator ()	include/MSSA/MemRegion.h	/^        bool operator()(const MemRegion* lhs, const MemRegion* rhs) const {$/;"	f	struct:MemRegion::__anon24
operator ()	include/MSSA/MemRegion.h	/^        bool operator()(const PointsTo& lhs, const PointsTo& rhs) const {$/;"	f	struct:MemRegion::__anon25
operator ()	include/MemoryModel/GenericGraph.h	/^        bool operator()(const GenericEdge<NodeType>* lhs, const GenericEdge<NodeType>* rhs) const {$/;"	f	struct:GenericEdge::__anon1
operator *	include/MemoryModel/ConditionalPT.h	/^        SingleCondVar operator *(void) {$/;"	f	class:CondPointsToSet::CondPtsSetIterator
operator *	include/Util/GEPTypeBridgeIterator.h	/^    Type *operator*() const {$/;"	f	class:llvm::generic_bridge_gep_type_iterator
operator +	include/MemoryModel/LocationSet.h	/^    inline LocationSet operator+ (const LocationSet& rhs) const {$/;"	f	class:LocationSet
operator ++	include/MemoryModel/ConditionalPT.h	/^        void operator ++(void) {$/;"	f	class:CondPointsToSet::CondPtsSetIterator
operator ++	include/Util/GEPTypeBridgeIterator.h	/^    generic_bridge_gep_type_iterator operator++(int) {$/;"	f	class:llvm::generic_bridge_gep_type_iterator
operator ++	include/Util/GEPTypeBridgeIterator.h	/^    generic_bridge_gep_type_iterator& operator++() {$/;"	f	class:llvm::generic_bridge_gep_type_iterator
operator ->	include/Util/GEPTypeBridgeIterator.h	/^    Type *operator->() const {$/;"	f	class:llvm::generic_bridge_gep_type_iterator
operator <	include/MSSA/MSSAMuChi.h	/^    inline bool operator < (const MSSADEF & rhs) const {$/;"	f	class:MSSADEF
operator <	include/MSSA/MSSAMuChi.h	/^    inline bool operator < (const MSSAMU & rhs) const {$/;"	f	class:MSSAMU
operator <	include/MemoryModel/ConditionalPT.h	/^    inline bool operator < (const CondVar & rhs) const {$/;"	f	class:CondVar
operator <	include/MemoryModel/ConditionalPT.h	/^    inline bool operator< (const CondPointsToSet<Cond>& rhs) const {$/;"	f	class:CondPointsToSet
operator <	include/MemoryModel/ConditionalPT.h	/^    inline bool operator<(const CondStdSet<Element>& rhs) const {$/;"	f	class:CondStdSet
operator <	include/MemoryModel/LocationSet.h	/^    inline bool operator< (const LocationSet& rhs) const {$/;"	f	class:LocationSet
operator <	include/MemoryModel/PTAType.h	/^    inline bool operator<(const PTAType &ty) const {$/;"	f	class:PTAType
operator <	include/Util/CxtStmt.h	/^    inline bool operator< (const CxtStmt& rhs) const {$/;"	f	class:CxtStmt
operator <	include/Util/CxtStmt.h	/^    inline bool operator< (const CxtThread& rhs) const {$/;"	f	class:CxtThread
operator <	include/Util/CxtStmt.h	/^    inline bool operator< (const CxtThreadProc& rhs) const {$/;"	f	class:CxtThreadProc
operator <	include/Util/CxtStmt.h	/^    inline bool operator< (const CxtThreadStmt& rhs) const {$/;"	f	class:CxtThreadStmt
operator <	include/Util/CxtStmt.h	/^    inline bool operator<(const CxtProc& rhs) const {$/;"	f	class:CxtProc
operator <	include/Util/DPItem.h	/^    inline bool operator< (const ContextCond& rhs) const {$/;"	f	class:ContextCond
operator <	include/Util/DPItem.h	/^    inline bool operator< (const CxtDPItem& rhs) const {$/;"	f	class:CxtDPItem
operator <	include/Util/DPItem.h	/^    inline bool operator< (const CxtStmtDPItem<LocCond>& rhs) const {$/;"	f	class:CxtStmtDPItem
operator <	include/Util/DPItem.h	/^    inline bool operator< (const DPItem& rhs) const {$/;"	f	class:DPItem
operator <	include/Util/DPItem.h	/^    inline bool operator< (const PathStmtDPItem<LocCond>& rhs) const {$/;"	f	class:PathStmtDPItem
operator <	include/Util/DPItem.h	/^    inline bool operator< (const StmtDPItem& rhs) const {$/;"	f	class:StmtDPItem
operator <	include/Util/DPItem.h	/^    inline bool operator< (const VFPathCond& rhs) const {$/;"	f	class:VFPathCond
operator <	include/Util/DataFlowUtil.h	/^    inline bool operator< (const PTASCEV& rhs) const {$/;"	f	class:PTASCEV
operator <<	include/MemoryModel/ConditionalPT.h	/^    friend raw_ostream& operator<< (raw_ostream &o, const CondVar<Cond> &cvar) {$/;"	f	class:CondVar
operator <<	include/MemoryModel/PAGNode.h	/^    friend raw_ostream& operator<< (raw_ostream &o, const PAGNode &node) {$/;"	f	class:PAGNode
operator <<	include/MemoryModel/PointsToDS.h	/^raw_ostream& operator<< (raw_ostream &o, const CondVar<Cond> &cvar) {$/;"	f
operator <<	include/Util/ICFGNode.h	/^    friend raw_ostream &operator<<(raw_ostream &o, const ICFGNode &node) {$/;"	f	class:ICFGNode
operator <<	include/Util/VFGNode.h	/^    friend raw_ostream& operator<< (raw_ostream &o, const VFGNode &node) {$/;"	f	class:VFGNode
operator =	include/MemoryModel/ConditionalPT.h	/^    inline CondPointsToSet<Cond>& operator=($/;"	f	class:CondPointsToSet
operator =	include/MemoryModel/ConditionalPT.h	/^    inline CondStdSet<Element>& operator=(const CondStdSet<Element>& rhs) {$/;"	f	class:CondStdSet
operator =	include/MemoryModel/ConditionalPT.h	/^    inline CondVar& operator= (const CondVar& rhs) {$/;"	f	class:CondVar
operator =	include/MemoryModel/LocationSet.h	/^    inline const LocationSet& operator= (const LocationSet& rhs) {$/;"	f	class:LocationSet
operator =	include/Util/CxtStmt.h	/^    inline CxtProc& operator=(const CxtProc& rhs) {$/;"	f	class:CxtProc
operator =	include/Util/CxtStmt.h	/^    inline CxtStmt& operator= (const CxtStmt& rhs) {$/;"	f	class:CxtStmt
operator =	include/Util/CxtStmt.h	/^    inline CxtThread& operator= (const CxtThread& rhs) {$/;"	f	class:CxtThread
operator =	include/Util/CxtStmt.h	/^    inline CxtThreadProc& operator= (const CxtThreadProc& rhs) {$/;"	f	class:CxtThreadProc
operator =	include/Util/CxtStmt.h	/^    inline CxtThreadStmt& operator= (const CxtThreadStmt& rhs) {$/;"	f	class:CxtThreadStmt
operator =	include/Util/DPItem.h	/^    inline ContextCond& operator= (const ContextCond& rhs) {$/;"	f	class:ContextCond
operator =	include/Util/DPItem.h	/^    inline CxtStmtDPItem<LocCond>& operator= (const CxtStmtDPItem<LocCond>& rhs) {$/;"	f	class:CxtStmtDPItem
operator =	include/Util/DPItem.h	/^    inline DPItem& operator= (const DPItem& rhs) {$/;"	f	class:DPItem
operator =	include/Util/DPItem.h	/^    inline PathStmtDPItem<LocCond>& operator= (const PathStmtDPItem<LocCond>& rhs) {$/;"	f	class:PathStmtDPItem
operator =	include/Util/DPItem.h	/^    inline StmtDPItem& operator= (const StmtDPItem& rhs)  {$/;"	f	class:StmtDPItem
operator =	include/Util/DPItem.h	/^    inline VFPathCond& operator= (const VFPathCond& rhs) {$/;"	f	class:VFPathCond
operator =	include/Util/DataFlowUtil.h	/^    inline PTASCEV& operator= (const PTASCEV& rhs) {$/;"	f	class:PTASCEV
operator ==	include/MSSA/MemRegion.h	/^    inline bool operator==(const MemRegion* rhs) const {$/;"	f	class:MemRegion
operator ==	include/MemoryModel/ConditionalPT.h	/^        bool operator==(const CondPtsSetIterator &RHS) const {$/;"	f	class:CondPointsToSet::CondPtsSetIterator
operator ==	include/MemoryModel/ConditionalPT.h	/^    inline bool operator == (const CondVar & rhs) const {$/;"	f	class:CondVar
operator ==	include/MemoryModel/ConditionalPT.h	/^    inline bool operator==(const CondPointsToSet<Cond>& rhs) const {$/;"	f	class:CondPointsToSet
operator ==	include/MemoryModel/ConditionalPT.h	/^    inline bool operator==(const CondStdSet<Element>& rhs) const {$/;"	f	class:CondStdSet
operator ==	include/MemoryModel/GenericGraph.h	/^    inline bool operator==(const GenericEdge<NodeType>* rhs) const {$/;"	f	class:GenericEdge
operator ==	include/MemoryModel/MemModel.h	/^    inline bool operator==(const MemObj &mem) const {$/;"	f	class:MemObj
operator ==	include/MemoryModel/PTAType.h	/^    inline bool operator==(const PTAType &ty) const {$/;"	f	class:PTAType
operator ==	include/Util/CxtStmt.h	/^    inline bool operator== (const CxtStmt& rhs) const {$/;"	f	class:CxtStmt
operator ==	include/Util/CxtStmt.h	/^    inline bool operator== (const CxtThread& rhs) const {$/;"	f	class:CxtThread
operator ==	include/Util/CxtStmt.h	/^    inline bool operator== (const CxtThreadProc& rhs) const {$/;"	f	class:CxtThreadProc
operator ==	include/Util/CxtStmt.h	/^    inline bool operator== (const CxtThreadStmt& rhs) const {$/;"	f	class:CxtThreadStmt
operator ==	include/Util/CxtStmt.h	/^    inline bool operator==(const CxtProc& rhs) const {$/;"	f	class:CxtProc
operator ==	include/Util/DPItem.h	/^    inline bool operator== (const ContextCond& rhs) const {$/;"	f	class:ContextCond
operator ==	include/Util/DPItem.h	/^    inline bool operator== (const CxtStmtDPItem<LocCond>& rhs) const {$/;"	f	class:CxtStmtDPItem
operator ==	include/Util/DPItem.h	/^    inline bool operator== (const DPItem& rhs) const {$/;"	f	class:DPItem
operator ==	include/Util/DPItem.h	/^    inline bool operator== (const PathStmtDPItem<LocCond>& rhs) const {$/;"	f	class:PathStmtDPItem
operator ==	include/Util/DPItem.h	/^    inline bool operator== (const StmtDPItem& rhs) const {$/;"	f	class:StmtDPItem
operator ==	include/Util/DPItem.h	/^    inline bool operator== (const VFPathCond& rhs) const {$/;"	f	class:VFPathCond
operator ==	include/Util/DataFlowUtil.h	/^    inline bool operator== (const PTASCEV& rhs) const {$/;"	f	class:PTASCEV
operator ==	include/Util/GEPTypeBridgeIterator.h	/^    bool operator==(const generic_bridge_gep_type_iterator& x) const {$/;"	f	class:llvm::generic_bridge_gep_type_iterator
operator >	include/MemoryModel/PTAType.h	/^    inline bool operator>(const PTAType &ty) const {$/;"	f	class:PTAType
operator []	include/Util/DPItem.h	/^    inline NodeID operator[] (const u32_t index) const {$/;"	f	class:ContextCond
operator |=	include/MemoryModel/ConditionalPT.h	/^    inline bool operator |= (const CondPointsToSet<Cond>& rhs) {$/;"	f	class:CondPointsToSet
operator |=	include/MemoryModel/ConditionalPT.h	/^    inline bool operator|=(const CondStdSet<Element>& rhs) {$/;"	f	class:CondStdSet
order	include/CUDD/cuddInt.h	/^    array_t *order;		\/* copy of order_list *\/$/;"	m	struct:DdManager
orderedVarNames	include/CUDD/dddmpInt.h	/^  char **orderedVarNames;$/;"	m	struct:Dddmp_Hdr_s
originalSize	lib/CUDD/cuddGroup.c	/^static unsigned int originalSize;$/;"	v	file:
out	include/CUDD/cuddInt.h	/^    FILE *out;			\/* stdout for this manager *\/$/;"	m	struct:DdManager
out	include/DisPatch/CtrlIdentifier.h	/^        const Value * out;   \/\/ originally to$/;"	m	struct:CtrlIdentifier::_ctrlinfo
out	include/DisPatch/InitPIDObj.h	/^            string out;$/;"	m	class:InitPIDObj::CtrlInfo
outConn	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, ctrlinfo *> outConn, inConn;  $/;"	m	class:CtrlIdentifier
outTrans	include/DisPatch/CtrlIdentifier.h	/^    map <ctrlinfo *, set <ctrlinfo *> > outTrans, inTrans;$/;"	m	class:CtrlIdentifier
outUpdatedVarMap	include/MemoryModel/PointsToDFDS.h	/^    UpdatedVarMap outUpdatedVarMap;$/;"	m	class:IncDFPTData
outgoingAddrEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy& outgoingAddrEdges() {$/;"	f	class:ConstraintNode
outgoingAddrsBegin	include/MemoryModel/ConsGNode.h	/^    inline const_iterator outgoingAddrsBegin() const {$/;"	f	class:ConstraintNode
outgoingAddrsEnd	include/MemoryModel/ConsGNode.h	/^    inline const_iterator outgoingAddrsEnd() const {$/;"	f	class:ConstraintNode
outgoingLoadsBegin	include/MemoryModel/ConsGNode.h	/^    inline const_iterator outgoingLoadsBegin() const {$/;"	f	class:ConstraintNode
outgoingLoadsEnd	include/MemoryModel/ConsGNode.h	/^    inline const_iterator outgoingLoadsEnd() const {$/;"	f	class:ConstraintNode
outgoingStoresBegin	include/MemoryModel/ConsGNode.h	/^    inline const_iterator outgoingStoresBegin() const {$/;"	f	class:ConstraintNode
outgoingStoresEnd	include/MemoryModel/ConsGNode.h	/^    inline const_iterator outgoingStoresEnd() const {$/;"	f	class:ConstraintNode
outputPAGEdge	lib/MemoryModel/ExternalPAG.cpp	/^static void outputPAGEdge(raw_ostream &o, PAGEdge *pagEdge) {$/;"	f	file:
outputPAGNode	lib/MemoryModel/ExternalPAG.cpp	/^static void outputPAGNode(raw_ostream &o, PAGNode *pagNode) {$/;"	f	file:
outputPAGNode	lib/MemoryModel/ExternalPAG.cpp	/^static void outputPAGNode(raw_ostream &o, PAGNode *pagNode, int argno) {$/;"	f	file:
outputPAGNode	lib/MemoryModel/ExternalPAG.cpp	/^static void outputPAGNode(raw_ostream &o, PAGNode *pagNode,$/;"	f	file:
outputPAGNodeNoNewLine	lib/MemoryModel/ExternalPAG.cpp	/^static void outputPAGNodeNoNewLine(raw_ostream &o, PAGNode *pagNode) {$/;"	f	file:
outs	include/DisPatch/CtrlIdentifier.h	/^        set <const Value *> outs;   \/\/ctrl out$/;"	m	struct:CtrlIdentifier::_ctrlinfo
outs	include/Util/SVFUtil.h	/^inline raw_ostream &outs(){$/;"	f	namespace:SVFUtil
overlap	include/MemoryModel/PointerAnalysis.h	/^    bool overlap(const CPtSet& cpts1, const CPtSet& cpts2) const {$/;"	f	class:CondPTAImpl
p	include/DisPatch/InitPIDObj.h	/^            string p;   \/\/ param$/;"	m	class:InitPIDObj::CtrlInfo
p1	lib/CUDD/cuddEssent.c	/^    short p1, p2;$/;"	m	struct:TlClause	file:
p2	lib/CUDD/cuddEssent.c	/^    short p1, p2;$/;"	m	struct:TlClause	file:
pad_file	lib/CUDD/saveimage.c	/^pad_file(outFd, nbytes)$/;"	f	file:
pag	include/MemoryModel/ConsG.h	/^    PAG*pag;$/;"	m	class:ConstraintGraph
pag	include/MemoryModel/PAG.h	/^    static PAG* pag;	\/\/\/< Singleton pattern here to enable instance of PAG can only be created once.$/;"	m	class:PAG
pag	include/MemoryModel/PAGBuilder.h	/^    PAG* pag;$/;"	m	class:PAGBuilder
pag	include/MemoryModel/PAGBuilderFromFile.h	/^    PAG* pag;$/;"	m	class:PAGBuilderFromFile
pag	include/MemoryModel/PointerAnalysis.h	/^    static PAG* pag;$/;"	m	class:PointerAnalysis
pag	include/Util/ICFG.h	/^    PAG* pag;$/;"	m	class:ICFG
pag	include/Util/VFG.h	/^    PAG* pag;$/;"	m	class:VFG
pag	lib/MemoryModel/PAG.cpp	/^PAG* PAG::pag = NULL;$/;"	m	class:PAG	file:
pag	lib/MemoryModel/PointerAnalysis.cpp	/^PAG* PointerAnalysis::pag = NULL;$/;"	m	class:PointerAnalysis	file:
pagEdge	include/Util/VFGNode.h	/^    const PAGEdge* pagEdge;$/;"	m	class:StmtVFGNode
pagEdgeToFunMap	include/MSSA/MemRegion.h	/^    PAGEdgeToFunMap pagEdgeToFunMap;$/;"	m	class:MRGenerator
pagFileName	include/Util/SVFModule.h	/^    static inline std::string pagFileName() {$/;"	f	class:SVFModule
pagReadFromTXT	include/Util/SVFModule.h	/^    static inline bool pagReadFromTXT() {$/;"	f	class:SVFModule
pagReadFromTxt	include/Util/SVFModule.h	/^    static std::string pagReadFromTxt;$/;"	m	class:SVFModule
pagReadFromTxt	lib/Util/SVFModule.cpp	/^std::string SVFModule::pagReadFromTxt = "";$/;"	m	class:SVFModule	file:
page	lib/CUDD/cuddApprox.c	/^    NodeData *page;		\/* per-node information *\/$/;"	m	struct:ApproxInfo	file:
page	lib/CUDD/cuddSubsetHB.c	/^static	int		page; \/* index to current page *\/$/;"	v	file:
pageIndex	lib/CUDD/cuddSubsetHB.c	/^static	int		pageIndex; \/* index to next element *\/$/;"	v	file:
pageSize	lib/CUDD/cuddSubsetHB.c	/^static	int		pageSize = DEFAULT_PAGE_SIZE; \/* page size *\/$/;"	v	file:
pairIndex	include/CUDD/cuddInt.h	/^    int pairIndex;              \/* corresponding variable index (ps <-> ns) *\/$/;"	m	struct:DdSubtable
parForSites	include/Util/ThreadCallGraph.h	/^    CallSiteSet parForSites; \/\/\/< all parallel for sites$/;"	m	class:ThreadCallGraph
parForSitesBegin	include/Util/ThreadCallGraph.h	/^    inline CallSiteSet::iterator parForSitesBegin() const {$/;"	f	class:ThreadCallGraph
parForSitesEnd	include/Util/ThreadCallGraph.h	/^    inline CallSiteSet::iterator parForSitesEnd() const {$/;"	f	class:ThreadCallGraph
param	include/Util/VFGNode.h	/^    const PAGNode* param;$/;"	m	class:ArgumentVFGNode
parent	include/CUDD/mtr.h	/^    struct MtrNode *parent;$/;"	m	struct:MtrNode	typeref:struct:MtrNode::MtrNode
parity	lib/CUDD/cuddApprox.c	/^    short int parity;		\/* 1: even; 2: odd; 3: both *\/$/;"	m	struct:NodeData	file:
parseExternalPAGs	lib/MemoryModel/ExternalPAG.cpp	/^    ExternalPAG::parseExternalPAGs(llvm::cl::list<std::string> &extpagsArgs) {$/;"	f	class:ExternalPAG
parseSelfCycleHandleOption	lib/MSSA/SVFGOPT.cpp	/^void SVFGOPT::parseSelfCycleHandleOption()$/;"	f	class:SVFGOPT
partitionMRs	lib/MSSA/MemPartition.cpp	/^void DistinctMRG::partitionMRs()$/;"	f	class:DistinctMRG
partitionMRs	lib/MSSA/MemPartition.cpp	/^void InterDisjointMRG::partitionMRs()$/;"	f	class:InterDisjointMRG
partitionMRs	lib/MSSA/MemPartition.cpp	/^void IntraDisjointMRG::partitionMRs()$/;"	f	class:IntraDisjointMRG
partitionMRs	lib/MSSA/MemRegion.cpp	/^void MRGenerator::partitionMRs() {$/;"	f	class:MRGenerator
pasMsg	lib/Util/SVFUtil.cpp	/^std::string SVFUtil::pasMsg(std::string msg) {$/;"	f	class:SVFUtil
path	include/Util/DPItem.h	/^    PathCond* path;$/;"	m	class:VFPathCond
pathLen	include/Util/DPItem.h	/^    inline u32_t pathLen() const {$/;"	f	class:VFPathCond
pci	include/DisPatch/CtrlIdentifier.h	/^    ctrlinfo *rci, *pci, *yci; $/;"	m	class:CtrlIdentifier
pclose	lib/CUDD/stub.c	/^pclose(fp)$/;"	f
peakLiveNodes	include/CUDD/cuddInt.h	/^    unsigned int peakLiveNodes;	\/* maximum number of live nodes *\/$/;"	m	struct:DdManager
performAPIStat	lib/Util/ThreadAPI.cpp	/^void ThreadAPI::performAPIStat(SVFModule module) {$/;"	f	class:ThreadAPI
performSCCStat	lib/MSSA/SVFGStat.cpp	/^void SVFGStat::performSCCStat(SVFGEdgeSet insensitiveCalRetEdges) {$/;"	f	class:SVFGStat
performStat	include/Util/ICFGStat.h	/^    void performStat() {$/;"	f	class:ICFGStat
performStat	lib/MSSA/MemSSA.cpp	/^void MemSSA::performStat() {$/;"	f	class:MemSSA
performStat	lib/MSSA/SVFG.cpp	/^void SVFG::performStat()$/;"	f	class:SVFG
performStat	lib/MSSA/SVFGStat.cpp	/^void MemSSAStat::performStat() {$/;"	f	class:MemSSAStat
performStat	lib/MSSA/SVFGStat.cpp	/^void SVFGStat::performStat()$/;"	f	class:SVFGStat
performStat	lib/Util/PTAStat.cpp	/^void PTAStat::performStat() {$/;"	f	class:PTAStat
performStat	lib/WPA/AndersenStat.cpp	/^void AndersenStat::performStat() {$/;"	f	class:AndersenStat
performStat	lib/WPA/FlowSensitiveStat.cpp	/^void FlowSensitiveStat::performStat()$/;"	f	class:FlowSensitiveStat
performStatPerQuery	include/Util/PTAStat.h	/^    virtual void performStatPerQuery(NodeID ptr) {}$/;"	f	class:PTAStat
performStatforIFDS	include/Util/ICFGStat.h	/^    void performStatforIFDS() {$/;"	f	class:ICFGStat
perm	include/CUDD/cuddInt.h	/^    int *perm;			\/* current variable perm. (index to level) *\/$/;"	m	struct:DdManager
permZ	include/CUDD/cuddInt.h	/^    int *permZ;			\/* for ZDD *\/$/;"	m	struct:DdManager
permids	include/CUDD/dddmpInt.h	/^  int *permids;$/;"	m	struct:Dddmp_Hdr_s
phases	lib/CUDD/cuddEssent.c	/^    long *phases;$/;"	m	struct:DdTlcInfo	file:
phiNodeMap	include/MemoryModel/PAG.h	/^    PHINodeMap phiNodeMap;	\/\/\/< A set of phi copy edges$/;"	m	class:PAG
phiset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
phiset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::phiset;$/;"	m	class:BinIRWrapper	file:
pid	include/DisPatch/CtrlIdentifier.h	/^    InitPIDObj *pid;$/;"	m	class:CtrlIdentifier
pidInfoMap	include/DisPatch/InitPIDObj.h	/^    map <string, AxisInfo> pidInfoMap;$/;"	m	class:InitPIDObj
pidty	include/DisPatch/CtrlIdentifier.h	/^        string pidty;$/;"	m	struct:CtrlIdentifier::_ctrlinfo
pidty	include/DisPatch/InitPIDObj.h	/^            string pidty;$/;"	m	class:InitPIDObj::CtrlInfo
pinst2ptr	include/DisPatch/BinIRWrapper.h	/^    static map <const Value *, const Value *> pinst2ptr;$/;"	m	class:BinIRWrapper
pinst2ptr	lib/DisPatch/BinIRWrapper.cpp	/^map <const Value *, const Value *> BinIRWrapper::pinst2ptr;$/;"	m	class:BinIRWrapper	file:
pinst2val	include/DisPatch/BinIRWrapper.h	/^    static map <const Value *, const Value *> pinst2val;$/;"	m	class:BinIRWrapper
pinst2val	lib/DisPatch/BinIRWrapper.cpp	/^map <const Value *, const Value *> BinIRWrapper::pinst2val;$/;"	m	class:BinIRWrapper	file:
platform	include/DisPatch/InterProcAnal.h	/^    struct platform platform;$/;"	m	class:InterProcAnal	typeref:struct:InterProcAnal::platform
platform	include/DisPatch/InterProcAnal.h	/^    struct platform {$/;"	s	class:InterProcAnal
plusinfinity	include/CUDD/cuddInt.h	/^    DdNode *plusinfinity;	\/* plus infinity *\/$/;"	m	struct:DdManager
pointsTo	include/MemoryModel/ConditionalPT.h	/^    inline CondPts &pointsTo(void) {$/;"	f	class:CondPointsToSet
pointsTo	include/MemoryModel/ConditionalPT.h	/^    inline PointsTo &pointsTo(Cond cond) {$/;"	f	class:CondPointsToSet
pointsTo	include/MemoryModel/ConditionalPT.h	/^    inline const CondPts &pointsTo(void) const {$/;"	f	class:CondPointsToSet
pointsTo	include/MemoryModel/ConditionalPT.h	/^    inline const PointsTo &pointsTo(Cond cond) const {$/;"	f	class:CondPointsToSet
pop	include/Util/WorkList.h	/^    Data pop() {$/;"	f	class:List
pop	include/Util/WorkList.h	/^    inline Data pop() {$/;"	f	class:FIFOWorkList
pop	include/Util/WorkList.h	/^    inline Data pop() {$/;"	f	class:FILOWorkList
popFromWorklist	include/Util/CFLSolver.h	/^    inline DPIm popFromWorklist() {$/;"	f	class:CFLSolver
popFromWorklist	include/WPA/WPASolver.h	/^    inline NodeID popFromWorklist() {$/;"	f	class:WPASolver
popen	lib/CUDD/stub.c	/^popen(string, mode)$/;"	f
popsize	lib/CUDD/cuddGenetic.c	/^static int popsize;		\/* the size of the population *\/$/;"	v	file:
populationSize	include/CUDD/cuddInt.h	/^    int populationSize;		\/* population size for GA *\/$/;"	m	struct:DdManager
pos	lib/CUDD/cuddSat.c	/^    int	pos;$/;"	m	struct:cuddPathPair	file:
postGCHook	include/CUDD/cuddInt.h	/^    DdHook *postGCHook;		\/* hooks to be called after GC *\/$/;"	m	struct:DdManager
postProcessNode	lib/WPA/AndersenWaveDiff.cpp	/^void AndersenWaveDiff::postProcessNode(NodeID nodeId)$/;"	f	class:AndersenWaveDiff
postReorderingHook	include/CUDD/cuddInt.h	/^    DdHook *postReorderingHook;	\/* hooks to be called after reordering *\/$/;"	m	struct:DdManager
pr	lib/CUDD/cuddGroup.c	/^static	int	pr = 0;	\/* flag to enable printing while debugging *\/$/;"	v	file:
pr	lib/CUDD/cuddZddGroup.c	/^static	int	pr = 0;	\/* flag to enable printing while debugging *\/$/;"	v	file:
preGCHook	include/CUDD/cuddInt.h	/^    DdHook *preGCHook;		\/* hooks to be called before GC *\/$/;"	m	struct:DdManager
prePassSchedule	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::prePassSchedule(SVFModule svfModule)$/;"	f	class:SymbolTableInfo
preReorderingHook	include/CUDD/cuddInt.h	/^    DdHook *preReorderingHook;	\/* hooks to be called before reordering *\/$/;"	m	struct:DdManager
primes	include/CUDD/cuddInt.h	/^	} primes;$/;"	m	union:DdGen::__anon12	typeref:struct:DdGen::__anon12::__anon14
print	lib/MemoryModel/ConsG.cpp	/^void ConstraintGraph::print() {$/;"	f	class:ConstraintGraph
print	lib/MemoryModel/PAG.cpp	/^void PAG::print() {$/;"	f	class:PAG
printCH	lib/MemoryModel/CHA.cpp	/^void CHGraph::printCH() {$/;"	f	class:CHGraph
printCubeCnf	lib/CUDD/dddmpStoreCnf.c	/^printCubeCnf ($/;"	f	file:
printDbg	include/Util/Conditions.h	/^    inline void printDbg(DdNode* d) {$/;"	f	class:BddCondManager
printDbg	include/Util/PathCondAllocator.h	/^    inline void printDbg(Condition* cond) {$/;"	f	class:PathCondAllocator
printFlattenFields	lib/MemoryModel/MemModel.cpp	/^void SymbolTableInfo::printFlattenFields(const Type* type) {$/;"	f	class:SymbolTableInfo
printIndCSTargets	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::printIndCSTargets()$/;"	f	class:PointerAnalysis
printIndCSTargets	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::printIndCSTargets(const CallSite cs, const FunctionSet& targets)$/;"	f	class:PointerAnalysis
printMinterms	include/Util/Conditions.h	/^    inline void printMinterms(DdNode* d) {$/;"	f	class:BddCondManager
printPathCond	lib/Util/PathCondAllocator.cpp	/^void PathCondAllocator::printPathCond() {$/;"	f	class:PathCondAllocator
printStat	include/MemoryModel/PointerAnalysis.h	/^    inline bool printStat() {$/;"	f	class:PointerAnalysis
printStat	include/Util/ICFGStat.h	/^    void printStat(string statname) {$/;"	f	class:ICFGStat
printStat	include/WPA/Andersen.h	/^    inline void printStat() {$/;"	f	class:Andersen
printStat	include/WPA/WPASolver.h	/^    virtual void printStat() {}$/;"	f	class:WPASolver
printStat	lib/MSSA/SVFGStat.cpp	/^void MemSSAStat::printStat() {$/;"	f	class:MemSSAStat
printStat	lib/MSSA/SVFGStat.cpp	/^void SVFGStat::printStat()$/;"	f	class:SVFGStat
printStat	lib/Util/PTAStat.cpp	/^void PTAStat::printStat(string statname) {$/;"	f	class:PTAStat
printStatPerQuery	include/Util/PTAStat.h	/^    virtual void printStatPerQuery(NodeID ptr, const PointsTo& pts) {}$/;"	f	class:PTAStat
printTypeSystem	include/MemoryModel/PTAType.h	/^    void printTypeSystem() const {$/;"	f	class:TypeSystem
print_stat	include/MemoryModel/PointerAnalysis.h	/^    bool print_stat;$/;"	m	class:PointerAnalysis
processAddr	lib/WPA/Andersen.cpp	/^void Andersen::processAddr(const AddrCGEdge* addr) {$/;"	f	class:Andersen
processAddr	lib/WPA/AndersenSCD.cpp	/^void AndersenSCD::processAddr(const AddrCGEdge *addr) {$/;"	f	class:AndersenSCD
processAddr	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::processAddr(const AddrSVFGNode* addr) {$/;"	f	class:FlowSensitive
processAllAddr	lib/WPA/Andersen.cpp	/^void Andersen::processAllAddr()$/;"	f	class:Andersen
processArguments	lib/Util/SVFUtil.cpp	/^void SVFUtil::processArguments(int argc, char **argv, int &arg_num, char **arg_value,$/;"	f	class:SVFUtil
processCE	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::processCE(const Value *val) {$/;"	f	class:PAGBuilder
processCast	include/WPA/Andersen.h	/^    virtual void processCast(const ConstraintEdge *edge) {$/;"	f	class:AndersenWaveDiff
processCast	lib/WPA/AndersenWaveDiffWithType.cpp	/^void AndersenWaveDiffWithType::processCast(const ConstraintEdge *edge) {$/;"	f	class:AndersenWaveDiffWithType
processCopy	lib/WPA/Andersen.cpp	/^bool Andersen::processCopy(NodeID node, const ConstraintEdge* edge) {$/;"	f	class:Andersen
processCopy	lib/WPA/AndersenWaveDiff.cpp	/^bool AndersenWaveDiff::processCopy(NodeID node, const ConstraintEdge* edge) {$/;"	f	class:AndersenWaveDiff
processCopy	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::processCopy(const CopySVFGNode* copy) {$/;"	f	class:FlowSensitive
processFunBody	lib/Util/ICFG.cpp	/^void ICFG::processFunBody(WorkList& worklist){$/;"	f	class:ICFG
processFunEntry	lib/Util/ICFG.cpp	/^void ICFG::processFunEntry(const Function* fun, WorkList& worklist){$/;"	f	class:ICFG
processFunExit	lib/Util/ICFG.cpp	/^void ICFG::processFunExit(const Function* fun){$/;"	f	class:ICFG
processGep	lib/WPA/Andersen.cpp	/^bool Andersen::processGep(NodeID node, const GepCGEdge* edge) {$/;"	f	class:Andersen
processGep	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::processGep(const GepSVFGNode* edge) {$/;"	f	class:FlowSensitive
processGepPts	lib/WPA/Andersen.cpp	/^bool Andersen::processGepPts(PointsTo& pts, const GepCGEdge* edge)$/;"	f	class:Andersen
processGepPts	lib/WPA/AndersenSFR.cpp	/^bool AndersenSFR::processGepPts(PointsTo& pts, const GepCGEdge* edge) {$/;"	f	class:AndersenSFR
processGraph	lib/MSSA/SVFGStat.cpp	/^void SVFGStat::processGraph()$/;"	f	class:SVFGStat
processLoad	lib/WPA/Andersen.cpp	/^bool Andersen::processLoad(NodeID node, const ConstraintEdge* load) {$/;"	f	class:Andersen
processLoad	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::processLoad(const LoadSVFGNode* load) {$/;"	f	class:FlowSensitive
processNode	include/WPA/WPASolver.h	/^    virtual inline void processNode(NodeID node) {}$/;"	f	class:WPASolver
processNode	lib/WPA/Andersen.cpp	/^void Andersen::processNode(NodeID nodeId) {$/;"	f	class:Andersen
processNode	lib/WPA/AndersenWaveDiff.cpp	/^void AndersenWaveDiff::processNode(NodeID nodeId) {$/;"	f	class:AndersenWaveDiff
processNode	lib/WPA/FlowSensitive.cpp	/^void FlowSensitive::processNode(NodeID nodeId) {$/;"	f	class:FlowSensitive
processPWC	lib/WPA/AndersenSCD.cpp	/^void AndersenSCD::processPWC(ConstraintNode* rep) {$/;"	f	class:AndersenSCD
processPhi	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::processPhi(const PHISVFGNode* phi) {$/;"	f	class:FlowSensitive
processSVFGNode	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::processSVFGNode(SVFGNode* node)$/;"	f	class:FlowSensitive
processStore	lib/WPA/Andersen.cpp	/^bool Andersen::processStore(NodeID node, const ConstraintEdge* store) {$/;"	f	class:Andersen
processStore	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::processStore(const StoreSVFGNode* store) {$/;"	f	class:FlowSensitive
processTime	include/WPA/FlowSensitive.h	/^    double processTime;	\/\/\/< time of processNode.$/;"	m	class:FlowSensitive
processTypeMismatchedGep	lib/WPA/AndersenWaveDiffWithType.cpp	/^void AndersenWaveDiffWithType::processTypeMismatchedGep(NodeID obj, const Type *type) {$/;"	f	class:AndersenWaveDiffWithType
propAlongDirectEdge	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::propAlongDirectEdge(const DirectSVFGEdge* edge)$/;"	f	class:FlowSensitive
propAlongIndirectEdge	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::propAlongIndirectEdge(const IndirectSVFGEdge* edge)$/;"	f	class:FlowSensitive
propDFInToIn	include/WPA/FlowSensitive.h	/^    inline bool propDFInToIn(const SVFGNode* srcStmt, NodeID srcVar, const SVFGNode* dstStmt, NodeID dstVar) {$/;"	f	class:FlowSensitive
propDFOutToIn	include/WPA/FlowSensitive.h	/^    inline bool propDFOutToIn(const SVFGNode* srcStmt, NodeID srcVar, const SVFGNode* dstStmt, NodeID dstVar) {$/;"	f	class:FlowSensitive
propFromSrcToDst	include/WPA/WPASolver.h	/^    virtual bool propFromSrcToDst(GEDGE* edge) {$/;"	f	class:WPASolver
propFromSrcToDst	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::propFromSrcToDst(SVFGEdge* edge) {$/;"	f	class:FlowSensitive
propVarPtsAfterCGUpdated	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::propVarPtsAfterCGUpdated(NodeID var, const SVFGNode* src, const SVFGNode* dst)$/;"	f	class:FlowSensitive
propVarPtsFromSrcToDst	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::propVarPtsFromSrcToDst(NodeID var, const SVFGNode* src, const SVFGNode* dst)$/;"	f	class:FlowSensitive
propaPtsMap	include/MemoryModel/PointsToDS.h	/^    PtsMap propaPtsMap;	\/\/\/< points-to already propagated$/;"	m	class:DiffPTData
propagate	include/WPA/WPAFSSolver.h	/^    virtual void propagate(GNODE* v) {$/;"	f	class:WPASCCSolver
propagate	include/WPA/WPASolver.h	/^    virtual void propagate(GNODE* v) {$/;"	f	class:WPASolver
propagateFromAPToFP	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::propagateFromAPToFP(const ActualParmSVFGNode* ap, const SVFGNode* dst) {$/;"	f	class:FlowSensitive
propagateFromFRToAR	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::propagateFromFRToAR(const FormalRetSVFGNode* fr, const SVFGNode* dst) {$/;"	f	class:FlowSensitive
propagatedRegReadInsts	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::propagatedRegReadInsts(uint64_t addr, vector <cs_insn> &insts, uint16_t tri, const Function *func){$/;"	f	class:InterProcAnal
propagatedRegWriteInsts	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::propagatedRegWriteInsts(uint64_t addr, vector <cs_insn> &insts, uint16_t tri, const Function *func){$/;"	f	class:InterProcAnal
propagationTime	include/WPA/FlowSensitive.h	/^    double propagationTime;	\/\/\/< time of points-to propagation.$/;"	m	class:FlowSensitive
ptD	include/MemoryModel/PointerAnalysis.h	/^    PTDataTy* ptD;$/;"	m	class:BVDataPTAImpl
ptD	include/MemoryModel/PointerAnalysis.h	/^    PTDataTy* ptD;$/;"	m	class:CondPTAImpl
pta	include/DisPatch/AliasFinder.h	/^    PointerAnalysis* pta;$/;"	m	class:AliasFinder
pta	include/DisPatch/DisPatch.h	/^    PointerAnalysis* pta;$/;"	m	class:DisPatch
pta	include/MSSA/MemRegion.h	/^    BVDataPTAImpl* pta;$/;"	m	class:MRGenerator
pta	include/MSSA/MemSSA.h	/^    BVDataPTAImpl* pta;$/;"	m	class:MemSSA
pta	include/MSSA/SVFG.h	/^    PointerAnalysis* pta;$/;"	m	class:SVFG
pta	include/Util/PTAStat.h	/^    PointerAnalysis* pta;$/;"	m	class:PTAStat
pta	include/WPA/WPAStat.h	/^    Andersen* pta;$/;"	m	class:AndersenStat
ptaCallGraph	include/MemoryModel/PointerAnalysis.h	/^    PTACallGraph* ptaCallGraph;$/;"	m	class:PointerAnalysis
ptaTy	include/MemoryModel/PointerAnalysis.h	/^    PTATY ptaTy;$/;"	m	class:PointerAnalysis
ptaVector	include/WPA/WPAPass.h	/^    PTAVector ptaVector;	\/\/\/< all pointer analysis to be executed.$/;"	m	class:WPAPass
ptdTy	include/MemoryModel/PointsToDS.h	/^    PTDataTY ptdTy;$/;"	m	class:PTData
ptime	lib/CUDD/ptime.c	/^ptime()$/;"	f
ptr	include/Util/DataFlowUtil.h	/^    const Value *ptr;$/;"	m	class:PTASCEV
ptr2floatMemAccess	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, set <const Value *>> ptr2floatMemAccess;$/;"	m	class:CtrlIdentifier
ptr2vldr	lib/DisPatch/CtrlIdentifier.cpp	/^const Value *CtrlIdentifier::ptr2vldr(const Value *v, const Value *basev, ctrlinfo *ci){ \/\/ can return multi inst $/;"	f	class:CtrlIdentifier
ptr2vstr	lib/DisPatch/CtrlIdentifier.cpp	/^const Value *CtrlIdentifier::ptr2vstr(const Value *v, const Value *basev){ \/\/ can return multi inst (multiple inst is ok)$/;"	f	class:CtrlIdentifier
ptrOnlyMSSA	include/MSSA/MemRegion.h	/^    bool ptrOnlyMSSA;$/;"	m	class:MRGenerator
ptrToBVPtsMap	include/MemoryModel/PointerAnalysis.h	/^    PtrToBVPtsMap ptrToBVPtsMap;$/;"	m	class:CondPTAImpl
ptrToCPtsMap	include/MemoryModel/PointerAnalysis.h	/^    PtrToCPtsMap ptrToCPtsMap;$/;"	m	class:CondPTAImpl
ptrcastset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
ptrcastset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::ptrcastset;$/;"	m	class:BinIRWrapper	file:
ptrint	include/CUDD/cuddInt.h	/^typedef int ptrint;$/;"	t
ptrint	include/CUDD/cuddInt.h	/^typedef long ptrint;$/;"	t
ptruint	include/CUDD/cuddInt.h	/^typedef unsigned int ptruint;$/;"	t
ptruint	include/CUDD/cuddInt.h	/^typedef unsigned long ptruint;$/;"	t
ptsMap	include/MemoryModel/PointsToDS.h	/^    PtsMap ptsMap;$/;"	m	class:PTData
pureVirtualFunName	lib/MemoryModel/CHA.cpp	/^const string pureVirtualFunName = "__cxa_pure_virtual";$/;"	v
push	include/Util/WorkList.h	/^    inline bool push(Data data) {$/;"	f	class:FIFOWorkList
push	include/Util/WorkList.h	/^    inline bool push(Data data) {$/;"	f	class:FILOWorkList
push	include/Util/WorkList.h	/^    void push(Data data) {$/;"	f	class:List
pushContext	include/Util/DPItem.h	/^    inline bool pushContext(NodeID cxt) {$/;"	f	class:CxtStmtDPItem
pushContext	include/Util/DPItem.h	/^    inline bool pushContext(NodeID cxt) {$/;"	f	class:PathStmtDPItem
pushContext	include/Util/DPItem.h	/^    inline virtual bool pushContext(NodeID ctx) {$/;"	f	class:ContextCond
pushContext	include/Util/DPItem.h	/^    inline void pushContext(NodeID cxt) {$/;"	f	class:CxtDPItem
pushDown	lib/CUDD/cuddExact.c	/^pushDown($/;"	f	file:
pushIntoWorklist	include/Util/CFLSolver.h	/^    inline bool pushIntoWorklist(DPIm& item) {$/;"	f	class:CFLSolver
pushIntoWorklist	include/WPA/WPASolver.h	/^    virtual inline void pushIntoWorklist(NodeID id) {$/;"	f	class:WPASolver
putc	include/CUDD/util.h	165;"	d
pwcOpt	include/WPA/Andersen.h	/^    bool pwcOpt;$/;"	m	class:Andersen
pwcReps	include/WPA/AndersenSFR.h	/^    NodeToNodeMap pwcReps;$/;"	m	class:AndersenSCD
qnxnto	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.10.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
queuePage	lib/CUDD/cuddSubsetSP.c	/^    int		queuePage; \/* index to current page *\/$/;"	m	struct:GlobalInfo	file:
queuePageIndex	lib/CUDD/cuddSubsetSP.c	/^    int		queuePageIndex;	\/* index to next element *\/$/;"	m	struct:GlobalInfo	file:
queuePageSize	lib/CUDD/cuddSubsetSP.c	/^    int		queuePageSize; \/* page size *\/$/;"	m	struct:GlobalInfo	file:
queuePages	lib/CUDD/cuddSubsetSP.c	/^    DdNode      ***queuePages; \/* pointers to the pages *\/$/;"	m	struct:GlobalInfo	file:
quiet_bit	include/CUDD/epd.h	/^  unsigned int quiet_bit: 1;$/;"	m	struct:IeeeNanStruct
rand_int	lib/CUDD/cuddGenetic.c	/^rand_int($/;"	f	file:
random_generator	lib/CUDD/cuddAnneal.c	/^random_generator(void)$/;"	f	file:
randomizeOrder	include/CUDD/cuddInt.h	/^    unsigned int randomizeOrder; \/* perturb the next reordering threshold *\/$/;"	m	struct:DdManager
raw_fd_ostream	include/Util/BasicTypes.h	/^typedef llvm::raw_fd_ostream raw_fd_ostream;$/;"	t
raw_ostream	include/Util/BasicTypes.h	/^typedef llvm::raw_ostream raw_ostream;$/;"	t
raw_string_ostream	include/Util/BasicTypes.h	/^typedef llvm::raw_string_ostream raw_string_ostream;$/;"	t
rci	include/DisPatch/CtrlIdentifier.h	/^    ctrlinfo *rci, *pci, *yci; $/;"	m	class:CtrlIdentifier
rcsid	lib/CUDD/state.c	/^static char rcsid[] = "$Id: state.c,v 1.1 1997\/11\/04 22:38:50 fabio Exp $";$/;"	v	file:
reTargetDstOfEdge	lib/MemoryModel/ConsG.cpp	/^void ConstraintGraph::reTargetDstOfEdge(ConstraintEdge* edge, ConstraintNode* newDstNode) {$/;"	f	class:ConstraintGraph
reTargetSrcOfEdge	lib/MemoryModel/ConsG.cpp	/^void ConstraintGraph::reTargetSrcOfEdge(ConstraintEdge* edge, ConstraintNode* newSrcNode) {$/;"	f	class:ConstraintGraph
readFromFile	lib/MemoryModel/ExternalPAG.cpp	/^void ExternalPAG::readFromFile(std::string filename) {$/;"	f	class:ExternalPAG
readFromFile	lib/MemoryModel/PointerAnalysis.cpp	/^bool BVDataPTAImpl::readFromFile(const string& filename) {$/;"	f	class:BVDataPTAImpl
readHeapFromCallee	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::readHeapFromCallee(const Function *func, set <unsigned> &offSet){$/;"	f	class:BinIRWrapper
readInheritanceMetadataFromModule	lib/MemoryModel/CHA.cpp	/^void CHGraph::readInheritanceMetadataFromModule(const Module &M) {$/;"	f	class:CHGraph
realign	include/CUDD/cuddInt.h	/^    int realign;		\/* realign ZDD order after BDD reordering *\/$/;"	m	struct:DdManager
realignZ	include/CUDD/cuddInt.h	/^    int realignZ;		\/* realign BDD order after ZDD reordering *\/$/;"	m	struct:DdManager
realloc	include/CUDD/mnemosyne.h	50;"	d
reanalyze	include/WPA/WPASolver.h	/^    bool reanalyze;$/;"	m	class:WPASolver
reclaimed	include/CUDD/cuddInt.h	/^    double reclaimed;		\/* number of nodes brought back from the dead *\/$/;"	m	struct:DdManager
recomb	include/CUDD/cuddInt.h	/^    int recomb;			\/* used during group sifting *\/$/;"	m	struct:DdManager
record	include/CUDD/st.h	/^    char *record;$/;"	m	struct:st_table_entry
recordTypeMismatchedGep	include/WPA/Andersen.h	/^    void recordTypeMismatchedGep(NodeID obj, const GepCGEdge* gepEdge) {$/;"	f	class:AndersenWaveDiffWithType
recursiveAlias2Ctrl	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::recursiveAlias2Ctrl(const Function *cr, vector <const CallInst *> &callstack, string role, set <const Value *> &varset, map <unsigned, ctrlinfo *> &aliasoff2ctrl, map <string, ctrlinfo *> &role2ctrl){$/;"	f	class:CtrlIdentifier
recursiveArgForward	lib/DisPatch/InitPIDObj.cpp	/^const Value* InitPIDObj::recursiveArgForward(const Argument *av, int dist, const Function *func){$/;"	f	class:InitPIDObj
recursiveBackwardArgCopyFinder	lib/DisPatch/InitPIDObj.cpp	/^const Value* InitPIDObj::recursiveBackwardArgCopyFinder(const Value *sv, const Function *func){   $/;"	f	class:InitPIDObj
recursiveBackwardDstPoint	lib/DisPatch/InitPIDObj.cpp	/^const Value* InitPIDObj::recursiveBackwardDstPoint(const Value *sv, int dist, const Function *func){$/;"	f	class:InitPIDObj
recursiveCallStackGepOff	lib/DisPatch/CtrlIdentifier.cpp	/^unsigned CtrlIdentifier::recursiveCallStackGepOff(const Function *cr, vector <const CallInst *> &callstack, const Value *dv){$/;"	f	class:CtrlIdentifier
recursiveCallStackReachabilityTrack	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::recursiveCallStackReachabilityTrack(set <const Value *> svset, const Value *dv, const Function *cr, vector <const CallInst *> &callstack){$/;"	f	class:CtrlIdentifier
recursiveCalls	include/CUDD/cuddInt.h	/^    double recursiveCalls;	\/* number of recursive calls *\/$/;"	m	struct:DdManager
recursiveForwardSrcPoint	lib/DisPatch/InitPIDObj.cpp	/^const Value* InitPIDObj::recursiveForwardSrcPoint(const Value *sv, int dist, const Function *func){$/;"	f	class:InitPIDObj
recursiveGepOff	lib/DisPatch/BinIRWrapper.cpp	/^const Value *BinIRWrapper::recursiveGepOff(const Value *sink, const Function *func, set <const Value *> &argset, unsigned &off){$/;"	f	class:BinIRWrapper
recursiveInterBacktrackFromArg	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::recursiveInterBacktrackFromArg(const Function *func, vector <const CallInst *> &calllist, const Value *tv, const Value *dv, set<const Value *> &doneset, unsigned minidx, unsigned maxidx){$/;"	f	class:CtrlIdentifier
recursiveInterBacktrackToRet	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::recursiveInterBacktrackToRet(const Function *func, vector <const CallInst *> &calllist, const Value *tv, const Value *dv, set<const Value *> &doneset, unsigned minidx, unsigned maxidx){$/;"	f	class:CtrlIdentifier
recursiveReachabilityTrack	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::recursiveReachabilityTrack(set <const Value *> svset, const Value *dv, const Function *func, unsigned minidx, unsigned maxidx){$/;"	f	class:CtrlIdentifier
recursiveRetBackward	lib/DisPatch/InitPIDObj.cpp	/^const Value* InitPIDObj::recursiveRetBackward(int dist, const Function *func){$/;"	f	class:InitPIDObj
recursiveSearchPAGNode	lib/DisPatch/AliasFinder.cpp	/^void AliasFinder::recursiveSearchPAGNode(const PAGNode *n, set <const PAGNode *> &pnset){$/;"	f	class:AliasFinder
recursiveToSinkFunc	lib/DisPatch/CtrlIdentifier.cpp	/^const Function *CtrlIdentifier::recursiveToSinkFunc(const Function *func, set <unsigned> &offset, vector <const CallInst *> &calllist, int depth, unsigned minidx){$/;"	f	class:CtrlIdentifier
recursiveToSrcFunc	lib/DisPatch/CtrlIdentifier.cpp	/^const Function *CtrlIdentifier::recursiveToSrcFunc(const Function *func, set<unsigned> &offset, vector <const CallInst *> &calllist, int depth, int maxidx){$/;"	f	class:CtrlIdentifier
ref	include/CUDD/cudd.h	/^    DdHalfWord ref;		\/* reference count *\/$/;"	m	struct:DdNode
ref	include/DisPatch/InitPIDObj.h	/^            string ref;$/;"	m	class:InitPIDObj::CtrlInfo
ref2alias	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, const Value *> ref2alias;$/;"	m	class:CtrlIdentifier
ref2ctrl	lib/DisPatch/CtrlIdentifier.cpp	/^CtrlIdentifier::ctrlinfo * CtrlIdentifier::ref2ctrl(const Value *v){$/;"	f	class:CtrlIdentifier
ref2ctrlmap	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, ctrlinfo *> ref2ctrlmap, err2ctrlmap, cur2ctrlmap, mathout2ctrlmap;$/;"	m	class:CtrlIdentifier
ref2errInnerConnMap	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, const Value *> err2refInnerConnMap, ref2errInnerConnMap;$/;"	m	class:CtrlIdentifier
ref2oriref	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, const Value *> ref2oriref;$/;"	m	class:CtrlIdentifier
refNodes	include/MemoryModel/OfflineConsG.h	/^    NodeSet refNodes;$/;"	m	class:OfflineConsG
refVal	include/MemoryModel/MemModel.h	/^    const Value *refVal;$/;"	m	class:MemObj
reflectInputConfig	lib/DisPatch/InitPIDObj.cpp	/^void InitPIDObj::reflectInputConfig(const Function *func, CtrlInfo *ci, string cs, string rs, string es, string os, string gt, string pidty, unsigned controlidx){$/;"	f	class:InitPIDObj
refptr2vldr	lib/DisPatch/CtrlIdentifier.cpp	/^const Value *CtrlIdentifier::refptr2vldr(const Value *v, const Value *basev, ctrlinfo *ci){$/;"	f	class:CtrlIdentifier
refs	include/DisPatch/CtrlIdentifier.h	/^        set <const Value *> refs;$/;"	m	struct:CtrlIdentifier::_ctrlinfo
reg2BBMap	include/MSSA/MemSSA.h	/^    MemRegToBBsMap reg2BBMap;$/;"	m	class:MemSSA
reg2str	include/DisPatch/InterProcAnal.h	/^    inline string reg2str(uint16_t ri){$/;"	f	class:InterProcAnal
regResult	lib/CUDD/cuddSubsetSP.c	/^    DdNode *regResult;$/;"	m	struct:NodeDist	file:
rehash	lib/CUDD/st.c	/^rehash(st_table *table)$/;"	f	file:
releaseAndersenHCD	include/WPA/Andersen.h	/^    static void releaseAndersenHCD() {$/;"	f	class:AndersenHCD
releaseAndersenHLCD	include/WPA/Andersen.h	/^    static void releaseAndersenHLCD() {$/;"	f	class:AndersenHLCD
releaseAndersenLCD	include/WPA/Andersen.h	/^    static void releaseAndersenLCD() {$/;"	f	class:AndersenLCD
releaseAndersenSCD	include/WPA/AndersenSFR.h	/^    static void releaseAndersenSCD() {$/;"	f	class:AndersenSCD
releaseAndersenSFR	include/WPA/AndersenSFR.h	/^    static void releaseAndersenSFR() {$/;"	f	class:AndersenSFR
releaseAndersenWaveDiff	include/WPA/Andersen.h	/^    static void releaseAndersenWaveDiff() {$/;"	f	class:AndersenWaveDiff
releaseAndersenWaveDiffWithType	include/WPA/Andersen.h	/^    static void releaseAndersenWaveDiffWithType() {$/;"	f	class:AndersenWaveDiffWithType
releaseFSWPA	include/WPA/FlowSensitive.h	/^    static void releaseFSWPA() {$/;"	f	class:FlowSensitive
releaseLLVMModuleSet	include/Util/SVFModule.h	/^    static void releaseLLVMModuleSet() {$/;"	f	class:SVFModule
releaseMemory	lib/MSSA/SVFGBuilder.cpp	/^void SVFGBuilder::releaseMemory() {$/;"	f	class:SVFGBuilder
releasePAG	include/MemoryModel/PAG.h	/^    static void releasePAG() {$/;"	f	class:PAG
releaseSVFG	include/MSSA/SVFGBuilder.h	/^    static void releaseSVFG() {$/;"	f	class:SVFGBuilder
releaseSymbolnfo	include/MemoryModel/MemModel.h	/^    static void releaseSymbolnfo() {$/;"	f	class:SymbolTableInfo
removeAddrEdge	lib/MemoryModel/ConsG.cpp	/^void ConstraintGraph::removeAddrEdge(AddrCGEdge* edge) {$/;"	f	class:ConstraintGraph
removeAllEdges	include/MSSA/SVFGOPT.h	/^    inline void removeAllEdges(const SVFGNode* node) {$/;"	f	class:SVFGOPT
removeCandidates	include/WPA/WPAFSSolver.h	/^    inline void removeCandidates(const NodeBS& nodes) {$/;"	f	class:WPAMinimumSolver
removeConstraintNode	include/MemoryModel/ConsG.h	/^    inline void removeConstraintNode(ConstraintNode* node) {$/;"	f	class:ConstraintGraph
removeDirectEdge	lib/MemoryModel/ConsG.cpp	/^void ConstraintGraph::removeDirectEdge(ConstraintEdge* edge) {$/;"	f	class:ConstraintGraph
removeGNode	include/MemoryModel/GenericGraph.h	/^    inline void removeGNode(NodeType* node) {$/;"	f	class:GenericGraph
removeICFGEdge	include/Util/ICFG.h	/^    inline void removeICFGEdge(ICFGEdge* edge) {$/;"	f	class:ICFG
removeICFGNode	include/Util/ICFG.h	/^    inline void removeICFGNode(ICFGNode* node) {$/;"	f	class:ICFG
removeInEdges	include/MSSA/SVFGOPT.h	/^    inline void removeInEdges(const SVFGNode* node) {$/;"	f	class:SVFGOPT
removeIncomingAddrEdge	include/MemoryModel/ConsGNode.h	/^    inline void removeIncomingAddrEdge(AddrCGEdge* inEdge) {$/;"	f	class:ConstraintNode
removeIncomingDirectEdge	include/MemoryModel/ConsGNode.h	/^    inline void removeIncomingDirectEdge(ConstraintEdge* inEdge) {$/;"	f	class:ConstraintNode
removeIncomingEdge	include/MemoryModel/GenericGraph.h	/^    inline Size_t removeIncomingEdge(EdgeType* edge) {$/;"	f	class:GenericNode
removeIncomingLoadEdge	include/MemoryModel/ConsGNode.h	/^    inline void removeIncomingLoadEdge(LoadCGEdge* inEdge) {$/;"	f	class:ConstraintNode
removeIncomingStoreEdge	include/MemoryModel/ConsGNode.h	/^    inline void removeIncomingStoreEdge(StoreCGEdge* inEdge) {$/;"	f	class:ConstraintNode
removeLoadEdge	lib/MemoryModel/ConsG.cpp	/^void ConstraintGraph::removeLoadEdge(LoadCGEdge* edge) {$/;"	f	class:ConstraintGraph
removeMDTag	include/Util/Annotator.h	/^    inline void removeMDTag(Instruction *inst, Value *val, std::string str) {$/;"	f	class:Annotator
removeMDTag	include/Util/Annotator.h	/^    inline void removeMDTag(Instruction *inst, std::string str) {$/;"	f	class:Annotator
removeOutEdges	include/MSSA/SVFGOPT.h	/^    inline void removeOutEdges(const SVFGNode* node) {$/;"	f	class:SVFGOPT
removeOutgoingAddrEdge	include/MemoryModel/ConsGNode.h	/^    inline void removeOutgoingAddrEdge(AddrCGEdge* outEdge) {$/;"	f	class:ConstraintNode
removeOutgoingDirectEdge	include/MemoryModel/ConsGNode.h	/^    inline void removeOutgoingDirectEdge(ConstraintEdge* outEdge) {$/;"	f	class:ConstraintNode
removeOutgoingEdge	include/MemoryModel/GenericGraph.h	/^    inline Size_t removeOutgoingEdge(EdgeType* edge) {$/;"	f	class:GenericNode
removeOutgoingLoadEdge	include/MemoryModel/ConsGNode.h	/^    inline void removeOutgoingLoadEdge(LoadCGEdge* outEdge) {$/;"	f	class:ConstraintNode
removeOutgoingStoreEdge	include/MemoryModel/ConsGNode.h	/^    inline void removeOutgoingStoreEdge(StoreCGEdge* outEdge) {$/;"	f	class:ConstraintNode
removeSVFGEdge	include/MSSA/SVFG.h	/^    inline void removeSVFGEdge(SVFGEdge* edge) {$/;"	f	class:SVFG
removeSVFGNode	include/MSSA/SVFG.h	/^    inline void removeSVFGNode(SVFGNode* node) {$/;"	f	class:SVFG
removeStoreEdge	lib/MemoryModel/ConsG.cpp	/^void ConstraintGraph::removeStoreEdge(StoreCGEdge* edge) {$/;"	f	class:ConstraintGraph
removeVFGEdge	include/Util/VFG.h	/^    inline void removeVFGEdge(VFGEdge* edge) {$/;"	f	class:VFG
removeVFGNode	include/Util/VFG.h	/^    inline void removeVFGNode(VFGNode* node) {$/;"	f	class:VFG
removeVarFromDFInUpdatedSet	include/MemoryModel/PointsToDFDS.h	/^    inline void removeVarFromDFInUpdatedSet(LocID loc,const Key& var) {$/;"	f	class:IncDFPTData
removeVarFromDFOutUpdatedSet	include/MemoryModel/PointsToDFDS.h	/^    inline void removeVarFromDFOutUpdatedSet(LocID loc,const Key& var) {$/;"	f	class:IncDFPTData
reordCycle	include/CUDD/cuddInt.h	/^    int reordCycle;		\/* how often to apply alternate threshold *\/$/;"	m	struct:DdManager
reordTime	include/CUDD/cuddInt.h	/^    unsigned long reordTime;	\/* total time spent in reordering *\/$/;"	m	struct:DdManager
reorder_flag	include/CUDD/st.h	/^    int reorder_flag;$/;"	m	struct:st_table
reordered	include/CUDD/cuddInt.h	/^    int reordered;		\/* flag set at the end of reordering *\/$/;"	m	struct:DdManager
reorderings	include/CUDD/cuddInt.h	/^    unsigned int reorderings;	\/* number of calls to Cudd_ReduceHeap *\/$/;"	m	struct:DdManager
rep	include/Util/SCC.h	/^        inline NodeID rep(void)const {$/;"	f	class:SCCDetection::GNodeSCCInfo
rep	include/Util/SCC.h	/^        inline void rep(NodeID n)    {$/;"	f	class:SCCDetection::GNodeSCCInfo
rep	include/Util/SCC.h	/^    inline NodeID rep(NodeID n) {$/;"	f	class:SCCDetection
rep	include/Util/SCC.h	/^    inline void rep(NodeID n, NodeID r)  {$/;"	f	class:SCCDetection
repNode	include/Util/SCC.h	/^    inline NodeID repNode(NodeID n) const {$/;"	f	class:SCCDetection
repNodes	include/Util/SCC.h	/^    NodeBS repNodes;$/;"	m	class:SCCDetection
repeat	lib/CUDD/cuddGenetic.c	/^static int *repeat;		\/* how many times an order is present *\/$/;"	v	file:
replace	lib/CUDD/cuddApprox.c	/^    char replace;		\/* replacement decision *\/$/;"	m	struct:NodeData	file:
replaceFParamARetWithPHI	lib/MSSA/SVFGOPT.cpp	/^void SVFGOPT::replaceFParamARetWithPHI(PHISVFGNode* phi, SVFGNode* svfgNode)$/;"	f	class:SVFGOPT
reportMemoryUsageKB	lib/Util/SVFUtil.cpp	/^void SVFUtil::reportMemoryUsageKB(const std::string& infor, raw_ostream & O)$/;"	f	class:SVFUtil
res	include/MSSA/SVFGNode.h	/^    const MemSSA::MDEF* res;$/;"	m	class:MSSAPHISVFGNode
res	include/Util/VFGNode.h	/^    const PAGNode* res;$/;"	m	class:BinaryOPVFGNode
res	include/Util/VFGNode.h	/^    const PAGNode* res;$/;"	m	class:CmpVFGNode
res	include/Util/VFGNode.h	/^    const PAGNode* res;$/;"	m	class:PHIVFGNode
resVer	include/MSSA/MSSAMuChi.h	/^    MRVer* resVer;$/;"	m	class:MSSADEF
reset	include/MemoryModel/ConditionalPT.h	/^    inline void reset(const SingleCondVar& var) {$/;"	f	class:CondPointsToSet
resetData	include/WPA/Andersen.h	/^    inline void resetData() {$/;"	f	class:Andersen
resetDef	include/MSSA/SVFGOPT.h	/^    inline void resetDef(const PAGNode* pagNode, const SVFGNode* node) {$/;"	f	class:SVFGOPT
resetObjFieldSensitive	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::resetObjFieldSensitive()$/;"	f	class:PointerAnalysis
resetSubs	include/MemoryModel/ConsG.h	/^    inline void resetSubs(NodeID node) {$/;"	f	class:ConstraintGraph
resolveCPPIndCalls	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::resolveCPPIndCalls(CallSite cs, const PointsTo& target, CallEdgeMap& newEdges) {$/;"	f	class:PointerAnalysis
resolveIndCalls	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::resolveIndCalls(CallSite cs, const PointsTo& target, CallEdgeMap& newEdges,LLVMCallGraph* callgraph) {$/;"	f	class:PointerAnalysis
restart_global_flag	lib/CUDD/restart.c	/^static int restart_global_flag;$/;"	v	file:
restart_program	lib/CUDD/restart.c	/^restart_program()$/;"	f	file:
restoreOrder	lib/CUDD/cuddAnneal.c	/^restoreOrder($/;"	f	file:
result	lib/CUDD/cuddGenetic.c	/^static int result;$/;"	v	file:
resultN	lib/CUDD/cuddApprox.c	/^    DdNode *resultN;		\/* result for odd parity *\/$/;"	m	struct:NodeData	file:
resultP	lib/CUDD/cuddApprox.c	/^    DdNode *resultP;		\/* result for even parity *\/$/;"	m	struct:NodeData	file:
retAsmStr	lib/DisPatch/BinIRWrapper.cpp	/^string BinIRWrapper::retAsmStr(const Value *instv){$/;"	f	class:BinIRWrapper
retBBAddr	lib/DisPatch/BinIRWrapper.cpp	/^uint64_t BinIRWrapper::retBBAddr(const BasicBlock *bb){$/;"	f	class:BinIRWrapper
retBinIndcsaddr2ce	lib/DisPatch/BinIRWrapper.cpp	/^const Function* BinIRWrapper::retBinIndcsaddr2ce(uint64_t csaddr){$/;"	f	class:BinIRWrapper
retBinIndcsaddr2ceaddr	lib/DisPatch/BinIRWrapper.cpp	/^uint64_t BinIRWrapper::retBinIndcsaddr2ceaddr(uint64_t csaddr){$/;"	f	class:BinIRWrapper
retBinOpTy	lib/DisPatch/BinIRWrapper.cpp	/^unsigned BinIRWrapper::retBinOpTy(const Value *instv){$/;"	f	class:BinIRWrapper
retCEArgFromCSArg	lib/DisPatch/InterProcAnal.cpp	/^const Value *InterProcAnal::retCEArgFromCSArg(uint64_t csaddr, const Value *v){$/;"	f	class:InterProcAnal
retCERetFromCSRet	lib/DisPatch/InterProcAnal.cpp	/^const Value *InterProcAnal::retCERetFromCSRet(uint64_t csaddr, const Value *v){$/;"	f	class:InterProcAnal
retCSAddr2ArgCEReg	lib/DisPatch/InterProcAnal.cpp	/^uint16_t InterProcAnal::retCSAddr2ArgCEReg(uint64_t csaddr, const Value *v){$/;"	f	class:InterProcAnal
retCSAddr2ArgCEV	lib/DisPatch/InterProcAnal.cpp	/^const Value *InterProcAnal::retCSAddr2ArgCEV(uint64_t csaddr, uint16_t ri){$/;"	f	class:InterProcAnal
retCSAddr2ArgCEVs	lib/DisPatch/InterProcAnal.cpp	/^set <const Value *> InterProcAnal::retCSAddr2ArgCEVs(uint64_t csaddr){$/;"	f	class:InterProcAnal
retCSAddr2ArgCSReg	lib/DisPatch/InterProcAnal.cpp	/^uint16_t InterProcAnal::retCSAddr2ArgCSReg(uint64_t csaddr, const Value *v){$/;"	f	class:InterProcAnal
retCSAddr2ArgCSV	lib/DisPatch/InterProcAnal.cpp	/^const Value *InterProcAnal::retCSAddr2ArgCSV(uint64_t csaddr, uint16_t ri){$/;"	f	class:InterProcAnal
retCSAddr2ArgCSVs	lib/DisPatch/InterProcAnal.cpp	/^set <const Value *> InterProcAnal::retCSAddr2ArgCSVs(uint64_t csaddr){$/;"	f	class:InterProcAnal
retCSAddr2Reg	lib/DisPatch/InterProcAnal.cpp	/^uint16_t InterProcAnal::retCSAddr2Reg(uint64_t csaddr, const Value *v){$/;"	f	class:InterProcAnal
retCSAddr2RetCSReg	lib/DisPatch/InterProcAnal.cpp	/^uint16_t InterProcAnal::retCSAddr2RetCSReg(uint64_t csaddr, const Value *v){$/;"	f	class:InterProcAnal
retCSAddr2RetCSV	lib/DisPatch/InterProcAnal.cpp	/^const Value *InterProcAnal::retCSAddr2RetCSV(uint64_t csaddr, uint16_t ri){$/;"	f	class:InterProcAnal
retCSAddr2RetCSVs	lib/DisPatch/InterProcAnal.cpp	/^set <const Value *> InterProcAnal::retCSAddr2RetCSVs(uint64_t csaddr){$/;"	f	class:InterProcAnal
retCSAddrFromRetVar	lib/DisPatch/InterProcAnal.cpp	/^uint64_t InterProcAnal::retCSAddrFromRetVar(const Function *func, const Value *v, unsigned minidx, unsigned maxidx){$/;"	f	class:InterProcAnal
retCSArgFromCEArg	lib/DisPatch/InterProcAnal.cpp	/^const Value *InterProcAnal::retCSArgFromCEArg(uint64_t csaddr, const Value *v){$/;"	f	class:InterProcAnal
retCSRetFromCERet	lib/DisPatch/InterProcAnal.cpp	/^const Value *InterProcAnal::retCSRetFromCERet(uint64_t csaddr, const Value *v){$/;"	f	class:InterProcAnal
retCSRetVar2ArgVarSet	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::retCSRetVar2ArgVarSet(const Function *func, const Value *v, set <const Value *> &vset, unsigned si, unsigned di){$/;"	f	class:InterProcAnal
retCVset	include/DisPatch/InitPIDObj.h	/^    inline set <const Value *> retCVset(string key){$/;"	f	class:InitPIDObj
retCallSiteSet	lib/DisPatch/BinIRWrapper.cpp	/^set <const CallInst *> BinIRWrapper::retCallSiteSet(const Function *cefunc, SVFModule &m){$/;"	f	class:BinIRWrapper
retCalleeAddr	lib/DisPatch/InterProcAnal.cpp	/^uint64_t InterProcAnal::retCalleeAddr(cs_insn &inst, uint64_t addrmin, uint64_t addrmax){$/;"	f	class:InterProcAnal
retCeARMRegAnalysis	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::retCeARMRegAnalysis(uint64_t addr){$/;"	f	class:InterProcAnal
retClosestDst2Src	lib/DisPatch/CtrlIdentifier.cpp	/^const Value * CtrlIdentifier::retClosestDst2Src(const Value *dv,  unsigned di, unsigned si, const Function *func){$/;"	f	class:CtrlIdentifier
retClosestSrc2Dst	lib/DisPatch/CtrlIdentifier.cpp	/^const Value * CtrlIdentifier::retClosestSrc2Dst(const Value *sv,  unsigned si, unsigned di, const Function *func){$/;"	f	class:CtrlIdentifier
retCtrlVecFromBot	lib/DisPatch/CtrlIdentifier.cpp	/^vector <CtrlIdentifier::ctrlinfo *> CtrlIdentifier::retCtrlVecFromBot(ctrlinfo *ci){$/;"	f	class:CtrlIdentifier
retCtrlVecFromTop	lib/DisPatch/CtrlIdentifier.cpp	/^vector <CtrlIdentifier::ctrlinfo *> CtrlIdentifier::retCtrlVecFromTop(ctrlinfo *ci){$/;"	f	class:CtrlIdentifier
retCtrlVset	include/DisPatch/InitPIDObj.h	/^    inline set <const Value *> retCtrlVset(const Value *v){$/;"	f	class:InitPIDObj
retCtrls	include/DisPatch/InitPIDObj.h	/^            vector <string> retCtrls(){$/;"	f	class:InitPIDObj::AxisInfo
retFunc2ArgCEV	lib/DisPatch/InterProcAnal.cpp	/^const Value *InterProcAnal::retFunc2ArgCEV(const Function *func, uint16_t ri){$/;"	f	class:InterProcAnal
retFunc2HeuriAggressiveArgCEV	lib/DisPatch/InterProcAnal.cpp	/^const Value *InterProcAnal::retFunc2HeuriAggressiveArgCEV(const Function *ce, const CallInst *cs, uint16_t ri){$/;"	f	class:InterProcAnal
retFuncAddr	lib/DisPatch/BinIRWrapper.cpp	/^uint64_t BinIRWrapper::retFuncAddr(const Function *func){$/;"	f	class:BinIRWrapper
retFuncFromInstAddr	lib/DisPatch/BinIRWrapper.cpp	/^const Function* BinIRWrapper::retFuncFromInstAddr(string straddr){$/;"	f	class:BinIRWrapper
retFuncFromInstAddr	lib/DisPatch/BinIRWrapper.cpp	/^const Function* BinIRWrapper::retFuncFromInstAddr(uint64_t addr){$/;"	f	class:BinIRWrapper
retFuncMode	include/DisPatch/InterProcAnal.h	/^    inline string retFuncMode(cs_insn &inst){$/;"	f	class:InterProcAnal
retFuncMode	include/DisPatch/InterProcAnal.h	/^    inline string retFuncMode(uint64_t addr){$/;"	f	class:InterProcAnal
retFuncMode	lib/DisPatch/BinIRWrapper.cpp	/^string BinIRWrapper::retFuncMode(uint64_t addr){$/;"	f	class:BinIRWrapper
retFuncSz	include/DisPatch/InterProcAnal.h	/^    inline uint64_t retFuncSz(cs_insn &inst){$/;"	f	class:InterProcAnal
retFuncSz	include/DisPatch/InterProcAnal.h	/^    inline uint64_t retFuncSz(uint64_t addr){$/;"	f	class:InterProcAnal
retFuncSz	lib/DisPatch/BinIRWrapper.cpp	/^uint64_t BinIRWrapper::retFuncSz(uint64_t addr){$/;"	f	class:BinIRWrapper
retIRFunc	lib/DisPatch/BinIRWrapper.cpp	/^const Function* BinIRWrapper::retIRFunc(uint64_t addr){$/;"	f	class:BinIRWrapper
retIRInputVars	lib/DisPatch/BinIRWrapper.cpp	/^void BinIRWrapper::retIRInputVars(const Function *func, set <const Value *> &inVars){$/;"	f	class:BinIRWrapper
retInCtrl	lib/DisPatch/CtrlIdentifier.cpp	/^CtrlIdentifier::ctrlinfo *CtrlIdentifier::retInCtrl(ctrlinfo *ci){$/;"	f	class:CtrlIdentifier
retInstvecFromAddr	include/DisPatch/BinIRWrapper.h	/^    vector <const Instruction *> retInstvecFromAddr(uint64_t addr){$/;"	f	class:BinIRWrapper
retIntraAliasGep	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::retIntraAliasGep(const Value *v, const Function *func){$/;"	f	class:BinIRWrapper
retIntraOffVec	include/DisPatch/UtilDef.h	/^    inline vector <unsigned> retIntraOffVec(const Value *v, const Function *func){$/;"	f	class:UtilDef
retIntraOffsum	include/DisPatch/UtilDef.h	/^    inline unsigned retIntraOffsum(const Value *v, const Function *func){$/;"	f	class:UtilDef
retLateVstr	lib/DisPatch/CtrlIdentifier.cpp	/^const Value *CtrlIdentifier::retLateVstr(const Value *v){$/;"	f	class:CtrlIdentifier
retMaxIdx	include/DisPatch/CtrlIdentifier.h	/^    unsigned retMaxIdx(unsigned minidx, unsigned maxidx, const Value *v){$/;"	f	class:CtrlIdentifier
retNumInOff	lib/DisPatch/CtrlIdentifier.cpp	/^int CtrlIdentifier::retNumInOff(ctrlinfo *ci){ \/\/ Replace "hasOffCtrl" $/;"	f	class:CtrlIdentifier
retOffCtrl	lib/DisPatch/CtrlIdentifier.cpp	/^CtrlIdentifier::ctrlinfo *CtrlIdentifier::retOffCtrl(ctrlinfo* ci, int off, set <ctrlinfo*> &ctrlset){$/;"	f	class:CtrlIdentifier
retOffFromSVSet	lib/DisPatch/CtrlIdentifier.cpp	/^unsigned CtrlIdentifier::retOffFromSVSet(set <const Value *> &svset){$/;"	f	class:CtrlIdentifier
retOffVec	include/DisPatch/UtilDef.h	/^    inline vector <unsigned> retOffVec(const Value *v){$/;"	f	class:UtilDef
retOffsum	include/DisPatch/UtilDef.h	/^    inline unsigned retOffsum(const Value *v){$/;"	f	class:UtilDef
retOutCtrl	lib/DisPatch/CtrlIdentifier.cpp	/^CtrlIdentifier::ctrlinfo *CtrlIdentifier::retOutCtrl(ctrlinfo *ci){$/;"	f	class:CtrlIdentifier
retPEBegin	include/Util/VFGNode.h	/^    inline RetPESet::const_iterator retPEBegin() const {$/;"	f	class:FormalRetVFGNode
retPEEnd	include/Util/VFGNode.h	/^    inline RetPESet::const_iterator retPEEnd() const {$/;"	f	class:FormalRetVFGNode
retPEs	include/Util/VFGNode.h	/^    RetPESet retPEs;$/;"	m	class:FormalRetVFGNode
retPatchCxt	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::retPatchCxt(ctrlinfo *ci, int axis, vector <ctrlinfo *> orderctrls, map<map <string, set<const Instruction*>>> &cicxtcandidmap, map <string, const Instruction*> &cxtmap){$/;"	f	class:CtrlIdentifier
retPatchCxtCandid	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::retPatchCxtCandid(ctrlinfo *ci, int axis, map <string, set<const Instruction*>> &cxtmap){$/;"	f	class:CtrlIdentifier
retPostfix_SameLevelCtrlTy	lib/DisPatch/CtrlIdentifier.cpp	/^string CtrlIdentifier::retPostfix_SameLevelCtrlTy(set <string> &untagged){$/;"	f	class:CtrlIdentifier
retPrefix_SameLevelCtrlTy	lib/DisPatch/CtrlIdentifier.cpp	/^string CtrlIdentifier::retPrefix_SameLevelCtrlTy(set <string> &untagged){$/;"	f	class:CtrlIdentifier
retProcFP	lib/DisPatch/BinIRWrapper.cpp	/^double BinIRWrapper::retProcFP(const Value *instv){$/;"	f	class:BinIRWrapper
retPtrOffPtr	lib/DisPatch/BinIRWrapper.cpp	/^const Value* BinIRWrapper::retPtrOffPtr(const Value *instv){$/;"	f	class:BinIRWrapper
retPtrPtr	lib/DisPatch/BinIRWrapper.cpp	/^const Value* BinIRWrapper::retPtrPtr(const Value *instv){$/;"	f	class:BinIRWrapper
retPtrVal	lib/DisPatch/BinIRWrapper.cpp	/^const Value* BinIRWrapper::retPtrVal(const Value *instv){$/;"	f	class:BinIRWrapper
retRecursiveReachedPtr	lib/DisPatch/CtrlIdentifier.cpp	/^const Value *CtrlIdentifier::retRecursiveReachedPtr(const Value *v, const Function *curfunc){$/;"	f	class:CtrlIdentifier
retReg2Var	lib/DisPatch/InterProcAnal.cpp	/^const Value * InterProcAnal::retReg2Var(cs_insn &inst, uint16_t ri,  vector <const Value *> &irvec, char mode){$/;"	f	class:InterProcAnal
retSanitizedAddr	lib/DisPatch/BinIRWrapper.cpp	/^uint64_t BinIRWrapper::retSanitizedAddr(uint64_t rawaddr, uint64_t preaddr, string addrstr){$/;"	f	class:BinIRWrapper
retSinkVec	lib/DisPatch/CtrlIdentifier.cpp	/^vector <const Value *> CtrlIdentifier::retSinkVec(const CallInst *ci, set <unsigned> &offset){$/;"	f	class:CtrlIdentifier
retSinkVec	lib/DisPatch/CtrlIdentifier.cpp	/^vector <const Value *> CtrlIdentifier::retSinkVec(const CallInst *ci, unsigned offset){$/;"	f	class:CtrlIdentifier
retSrcVec	lib/DisPatch/CtrlIdentifier.cpp	/^vector <const Value *> CtrlIdentifier::retSrcVec(const CallInst *ci, set <unsigned> &offset){$/;"	f	class:CtrlIdentifier
retSrcVec	lib/DisPatch/CtrlIdentifier.cpp	/^vector <const Value *> CtrlIdentifier::retSrcVec(const CallInst *ci, unsigned offset){$/;"	f	class:CtrlIdentifier
retSyms	include/MemoryModel/MemModel.h	/^    inline FunToIDMapTy& retSyms() {$/;"	f	class:SymbolTableInfo
retTargetDstVars	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::retTargetDstVars(const Value *sv, vector <const Value *> &dvec, const Function *func){$/;"	f	class:CtrlIdentifier
retTargetSrcVars	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::retTargetSrcVars(set <const Value *> &srcset, const Function *func){$/;"	f	class:CtrlIdentifier
retUntaggedCtrl	lib/DisPatch/CtrlIdentifier.cpp	/^set <string> CtrlIdentifier::retUntaggedCtrl(set <ctrlinfo*> &taggedctrls){$/;"	f	class:CtrlIdentifier
retVLDRPtr	lib/DisPatch/BinIRWrapper.cpp	/^const Value *BinIRWrapper::retVLDRPtr(const Value *v){ $/;"	f	class:BinIRWrapper
retVMEMPtr	lib/DisPatch/BinIRWrapper.cpp	/^const Value *BinIRWrapper::retVMEMPtr(const Value *v){$/;"	f	class:BinIRWrapper
retVSTRPtr	lib/DisPatch/BinIRWrapper.cpp	/^const Value *BinIRWrapper::retVSTRPtr(const Value *v){$/;"	f	class:BinIRWrapper
ret_csaddr2cev2csv	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, map <const Value *, const Value *>> ret_csaddr2cev2csv;$/;"	m	class:InterProcAnal
ret_csaddr2csv2cev	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, map <const Value *, const Value *>> ret_csaddr2csv2cev;$/;"	m	class:InterProcAnal
ret_csaddr2csv2reg	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, map <const Value *, uint16_t>> ret_csaddr2csv2reg;$/;"	m	class:InterProcAnal
ret_csaddr2csvs	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, set <const Value *>> ret_csaddr2csvs;$/;"	m	class:InterProcAnal
ret_csaddr2reg2csv	include/DisPatch/InterProcAnal.h	/^    map <uint64_t, map <uint16_t, const Value *>> ret_csaddr2reg2csv;$/;"	m	class:InterProcAnal
retarch	include/DisPatch/InitPIDObj.h	/^    inline string retarch(){ return arch; }$/;"	f	class:InitPIDObj
retargetEdgesOfAInFOut	lib/MSSA/SVFGOPT.cpp	/^void SVFGOPT::retargetEdgesOfAInFOut(SVFGNode* node)$/;"	f	class:SVFGOPT
retargetEdgesOfAOutFIn	lib/MSSA/SVFGOPT.cpp	/^void SVFGOPT::retargetEdgesOfAOutFIn(SVFGNode* node)$/;"	f	class:SVFGOPT
retbaseaddr	include/DisPatch/InitPIDObj.h	/^    inline uint64_t retbaseaddr(){ return baseaddr; }$/;"	f	class:InitPIDObj
retbaseoff	include/DisPatch/InitPIDObj.h	/^    inline uint64_t retbaseoff(){ return baseoff; }$/;"	f	class:InitPIDObj
retbinname	include/DisPatch/InitPIDObj.h	/^    inline string retbinname(){ return binname; }$/;"	f	class:InitPIDObj
retcsaddr2ce	lib/DisPatch/BinIRWrapper.cpp	/^const Function* BinIRWrapper::retcsaddr2ce(uint64_t csaddr){$/;"	f	class:BinIRWrapper
returnNode	include/MemoryModel/ExternalPAG.h	/^    NodeID returnNode;$/;"	m	class:ExternalPAG
returnSymMap	include/MemoryModel/MemModel.h	/^    FunToIDMapTy returnSymMap;		\/\/\/< return  map$/;"	m	class:SymbolTableInfo
retvar2csaddrs	include/DisPatch/InterProcAnal.h	/^    map <const Value *, set <uint64_t>> retvar2csaddrs;$/;"	m	class:InterProcAnal
revPtsMap	include/MemoryModel/PointsToDS.h	/^    PtsMap revPtsMap;$/;"	m	class:PTData
rid	include/MSSA/MemRegion.h	/^    MRID rid;$/;"	m	class:MemRegion
role	include/DisPatch/CtrlIdentifier.h	/^        string role;$/;"	m	struct:CtrlIdentifier::_ctrlinfo
roleConfirm	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::roleConfirm(){$/;"	f	class:CtrlIdentifier
roleInnerFuncIdentification	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::roleInnerFuncIdentification(){$/;"	f	class:CtrlIdentifier
roleInterFuncIdentification	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::roleInterFuncIdentification(){$/;"	f	class:CtrlIdentifier
rolemap	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, string> rolemap;$/;"	m	class:CtrlIdentifier
rootids	include/CUDD/dddmpInt.h	/^  int *rootids;$/;"	m	struct:Dddmp_Hdr_s
rootnames	include/CUDD/dddmpInt.h	/^  char **rootnames;$/;"	m	struct:Dddmp_Hdr_s
roulette	lib/CUDD/cuddGenetic.c	/^roulette($/;"	f	file:
runOnDT	include/MSSA/SVFGBuilder.h	/^    bool runOnDT(DominatorTree& dt) {$/;"	f	class:MemSSADF
runOnLI	include/Util/DataFlowUtil.h	/^    bool runOnLI(Function& fun) {$/;"	f	class:PTALoopInfo
runOnModule	include/Util/BreakConstantExpr.h	/^    virtual bool runOnModule (Module & M) {$/;"	f	class:MergeFunctionRets
runOnModule	include/WPA/FlowSensitive.h	/^    virtual bool runOnModule(SVFModule module) {$/;"	f	class:FlowSensitive
runOnModule	include/WPA/WPAPass.h	/^    virtual bool runOnModule(llvm::Module& module) {$/;"	f	class:WPAPass
runOnModule	lib/DisPatch/DisPatch.cpp	/^bool DisPatch::runOnModule(Module& inmodule) {$/;"	f	class:DisPatch
runOnModule	lib/Util/BreakConstantExpr.cpp	/^BreakConstantGEPs::runOnModule (Module & module) {$/;"	f	class:BreakConstantGEPs
runOnModule	lib/WPA/WPAPass.cpp	/^void WPAPass::runOnModule(SVFModule svfModule) {$/;"	f	class:WPAPass
runPointerAnalysis	lib/WPA/WPAPass.cpp	/^void WPAPass::runPointerAnalysis(SVFModule svfModule, u32_t kind)$/;"	f	class:WPAPass
s32_t	include/Util/BasicTypes.h	/^typedef signed s32_t;$/;"	t
sanitizePts	include/WPA/Andersen.h	/^    void sanitizePts() {$/;"	f	class:Andersen
sanityCheck	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::sanityCheck() {$/;"	f	class:PAGBuilder
save_stack_base	lib/CUDD/restart.c	/^static char *save_stack_base;$/;"	v	file:
scc	include/WPA/WPASolver.h	/^    SCC* scc;$/;"	m	class:WPASolver
sccCandidates	include/WPA/AndersenSFR.h	/^    NodeSet sccCandidates;$/;"	m	class:AndersenSCD
sccEdgeFlag	include/MemoryModel/ConsGNode.h	/^    static SCCEdgeFlag sccEdgeFlag;$/;"	m	class:ConstraintNode
sccEdgeFlag	lib/MemoryModel/ConsG.cpp	/^ConstraintNode::SCCEdgeFlag ConstraintNode::sccEdgeFlag = ConstraintNode::Direct;$/;"	m	class:ConstraintNode	file:
sccRepNode	include/MemoryModel/ConsG.h	/^    inline NodeID sccRepNode(NodeID id) const {$/;"	f	class:ConstraintGraph
sccRepNode	include/WPA/Andersen.h	/^    inline NodeID sccRepNode(NodeID id) const {$/;"	f	class:Andersen
sccRepNode	include/WPA/WPAFSSolver.h	/^    virtual inline NodeID sccRepNode(NodeID id) const {$/;"	f	class:WPAFSSolver
sccRepNode	include/WPA/WPASolver.h	/^    virtual NodeID sccRepNode(NodeID id) const {$/;"	f	class:WPASolver
sccSubNodes	include/MemoryModel/ConsG.h	/^    inline NodeBS& sccSubNodes(NodeID id) {$/;"	f	class:ConstraintGraph
sccSubNodes	include/WPA/Andersen.h	/^    inline NodeBS& sccSubNodes(NodeID repId) {$/;"	f	class:Andersen
sccTime	include/WPA/FlowSensitive.h	/^    double sccTime;	\/\/\/< time of SCC detection.$/;"	m	class:FlowSensitive
scdAndersen	include/WPA/AndersenSFR.h	/^    static AndersenSCD* scdAndersen;$/;"	m	class:AndersenSCD
scev	include/Util/DataFlowUtil.h	/^    const SCEV *scev;$/;"	m	class:PTASCEV
secdiff	lib/CUDD/cuddGroup.c	/^static  int     secdiff;$/;"	v	file:
secdiff	lib/CUDD/cuddZddGroup.c	/^static  int     secdiff;$/;"	v	file:
secdiffcalls	lib/CUDD/cuddGroup.c	/^static  int     secdiffcalls;$/;"	v	file:
secdiffcalls	lib/CUDD/cuddZddGroup.c	/^static  int     secdiffcalls;$/;"	v	file:
secdiffmisfire	lib/CUDD/cuddGroup.c	/^static  int     secdiffmisfire;$/;"	v	file:
secdiffmisfire	lib/CUDD/cuddZddGroup.c	/^static  int     secdiffmisfire;$/;"	v	file:
selectMintermsFromUniverse	lib/CUDD/cuddSplit.c	/^selectMintermsFromUniverse($/;"	f	file:
semanticFuncSetMap	include/DisPatch/InitPIDObj.h	/^    map <string, set <const Function *>> semanticFuncSetMap;$/;"	m	class:InitPIDObj
sentinel	include/CUDD/cuddInt.h	/^    DdNode sentinel;		\/* for collision lists *\/$/;"	m	struct:DdManager
sentinelp	lib/CUDD/cuddEssent.c	/^sentinelp($/;"	f	file:
separateCube	lib/CUDD/cuddPriority.c	/^separateCube($/;"	f	file:
set	include/MemoryModel/ConditionalPT.h	/^    inline void set(const Element& var) {$/;"	f	class:CondStdSet
set	include/MemoryModel/ConditionalPT.h	/^    inline void set(const SingleCondVar& var) {$/;"	f	class:CondPointsToSet
setActualINDef	include/MSSA/SVFGOPT.h	/^    inline void setActualINDef(NodeID ai, NodeID def) {$/;"	f	class:SVFGOPT
setBB	include/MemoryModel/PAGEdge.h	/^    inline void setBB(const BasicBlock *bb) {$/;"	f	class:PAGEdge
setBranchCond	lib/Util/PathCondAllocator.cpp	/^void PathCondAllocator::setBranchCond(const BasicBlock *bb, const BasicBlock *succ, Condition* cond) {$/;"	f	class:PathCondAllocator
setByteOffset	include/MemoryModel/LocationSet.h	/^    inline void setByteOffset(Size_t os) {$/;"	f	class:LocationSet
setCFCond	include/Util/PathCondAllocator.h	/^    inline bool setCFCond(const BasicBlock* bb, Condition* cond) {$/;"	f	class:PathCondAllocator
setCurEvalVal	include/Util/PathCondAllocator.h	/^    inline void setCurEvalVal(const Value* val) {$/;"	f	class:PathCondAllocator
setCurNodeID	include/Util/DPItem.h	/^    inline void setCurNodeID(NodeID c) {$/;"	f	class:DPItem
setCurrentBBAndValueForPAGEdge	lib/MemoryModel/PAG.cpp	/^void PAG::setCurrentBBAndValueForPAGEdge(PAGEdge* edge) {$/;"	f	class:PAG
setCurrentDFDT	lib/MSSA/MemSSA.cpp	/^void MemSSA::setCurrentDFDT(DominanceFrontier* f, DominatorTree* t) {$/;"	f	class:MemSSA
setCurrentLocation	include/MemoryModel/PAG.h	/^    inline void setCurrentLocation(const Value* val, const BasicBlock* bb) {$/;"	f	class:PAG
setCurrentSCC	include/WPA/WPAFSSolver.h	/^    inline void setCurrentSCC(NodeID id) {$/;"	f	class:WPASCCSolver
setDef	include/MSSA/SVFG.h	/^	inline void setDef(const PAGNode* pagNode, const SVFGNode* node) {$/;"	f	class:SVFG
setDef	include/MSSA/SVFG.h	/^    inline void setDef(const MRVer* mvar, const SVFGNode* node) {$/;"	f	class:SVFG
setDef	include/Util/VFG.h	/^    inline void setDef(const PAGNode* pagNode, const VFGNode* node) {$/;"	f	class:VFG
setDiffOpt	include/WPA/Andersen.h	/^    void setDiffOpt(bool flag) { diffOpt = flag; }$/;"	f	class:Andersen
setFieldInsensitive	include/MemoryModel/MemModel.h	/^    inline void setFieldInsensitive() {$/;"	f	class:MemObj
setFieldSensitive	lib/MemoryModel/MemModel.cpp	/^void MemObj::setFieldSensitive() {$/;"	f	class:MemObj
setFlag	include/MemoryModel/CHA.h	/^    inline void setFlag(CLASSATTR mask) {$/;"	f	class:CHNode
setFlag	include/MemoryModel/MemModel.h	/^    inline void setFlag(MEMTYPE mask) {$/;"	f	class:ObjTypeInfo
setFldIdx	include/MemoryModel/LocationSet.h	/^    inline void setFldIdx(Size_t idx) {$/;"	f	class:LocationSet
setFormalOUTDef	include/MSSA/SVFGOPT.h	/^    inline void setFormalOUTDef(NodeID fo, NodeID def) {$/;"	f	class:SVFGOPT
setGraph	include/Util/CFLSolver.h	/^    inline void setGraph(GraphType g) {$/;"	f	class:CFLSolver
setGraph	include/WPA/WPASolver.h	/^    inline void setGraph(GraphType g) {$/;"	f	class:WPASolver
setHeuristicGep	include/DisPatch/BinIRWrapper.h	/^    void setHeuristicGep(bool enable){$/;"	f	class:BinIRWrapper
setHeuristicGep	include/DisPatch/BinIRWrapper.h	/^    void setHeuristicGep(string enable){$/;"	f	class:BinIRWrapper
setInSCC	include/Util/SCC.h	/^    inline void setInSCC(NodeID n,bool v)   {$/;"	f	class:SCCDetection
setIncycle	include/Util/CxtStmt.h	/^    inline void setIncycle(bool in) {$/;"	f	class:CxtThread
setInloop	include/Util/CxtStmt.h	/^    inline void setInloop(bool in) {$/;"	f	class:CxtThread
setLoc	include/Util/DPItem.h	/^    inline void setLoc(const LocCond* l) {$/;"	f	class:StmtDPItem
setLocVar	include/Util/DPItem.h	/^    inline void setLocVar(const LocCond* l,NodeID v) {$/;"	f	class:StmtDPItem
setMaxBudget	include/Util/DPItem.h	/^    static inline void setMaxBudget(u32_t max) {$/;"	f	class:DPItem
setMaxCxtLen	include/Util/DPItem.h	/^    static inline void setMaxCxtLen(u32_t max) {$/;"	f	class:ContextCond
setMaxFieldOffsetLimit	include/MemoryModel/MemModel.h	/^    inline void setMaxFieldOffsetLimit(u32_t limit) {$/;"	f	class:ObjTypeInfo
setMaxPathLen	include/Util/DPItem.h	/^    static inline void setMaxPathLen(u32_t max) {$/;"	f	class:VFPathCond
setMergedNode	include/WPA/Andersen.h	/^    inline void setMergedNode(NodeID node) {$/;"	f	class:AndersenHCD
setModelConstants	include/MemoryModel/MemModel.h	/^    void setModelConstants(bool _modelConstants) {$/;"	f	class:SymbolTableInfo
setMultiInheritance	include/MemoryModel/CHA.h	/^    inline void setMultiInheritance() {$/;"	f	class:CHNode
setNodeNumAfterPAGBuild	include/MemoryModel/PAG.h	/^    inline void setNodeNumAfterPAGBuild(u32_t num) {$/;"	f	class:PAG
setNonConcreteCxt	include/Util/DPItem.h	/^    inline void setNonConcreteCxt() {$/;"	f	class:ContextCond
setNorRep	include/MemoryModel/OfflineConsG.h	/^    inline void setNorRep(NodeID nor, NodeID rep) {$/;"	f	class:OfflineConsG
setObjFieldInsensitive	include/MemoryModel/ConsG.h	/^    inline void setObjFieldInsensitive(NodeID id) {$/;"	f	class:ConstraintGraph
setObjFieldInsensitive	include/MemoryModel/PointerAnalysis.h	/^    inline void setObjFieldInsensitive(NodeID id) {$/;"	f	class:PointerAnalysis
setOpVer	include/MSSA/MSSAMuChi.h	/^    inline void setOpVer(MRVer* v) {$/;"	f	class:MSSACHI
setOpVer	include/MSSA/MSSAMuChi.h	/^    inline void setOpVer(const MRVer* v, u32_t pos) {$/;"	f	class:MSSAPHI
setOpVer	include/MSSA/SVFGNode.h	/^    inline void setOpVer(u32_t pos, const MRVer* node) {$/;"	f	class:MSSAPHISVFGNode
setOpVer	include/Util/VFGNode.h	/^    inline void setOpVer(u32_t pos, const PAGNode* node) {$/;"	f	class:BinaryOPVFGNode
setOpVer	include/Util/VFGNode.h	/^    inline void setOpVer(u32_t pos, const PAGNode* node) {$/;"	f	class:CmpVFGNode
setOpVer	include/Util/VFGNode.h	/^    inline void setOpVer(u32_t pos, const PAGNode* node) {$/;"	f	class:PHIVFGNode
setOpVerAndBB	include/Util/VFGNode.h	/^    inline void setOpVerAndBB(u32_t pos, const PAGNode* node, const BasicBlock* bb) {$/;"	f	class:IntraPHIVFGNode
setPAG	include/MemoryModel/PointerAnalysis.h	/^    static inline void setPAG(PAG* g) {$/;"	f	class:PointerAnalysis
setPWCNode	include/MemoryModel/ConsG.h	/^    inline void setPWCNode(NodeID nodeId) {$/;"	f	class:ConstraintGraph
setPWCNode	include/MemoryModel/ConsGNode.h	/^    inline void setPWCNode() {$/;"	f	class:ConstraintNode
setPWCOpt	include/WPA/Andersen.h	/^    void setPWCOpt(bool flag) {$/;"	f	class:Andersen
setPagFromTXT	include/Util/SVFModule.h	/^    static inline void setPagFromTXT(std::string txt) {$/;"	f	class:SVFModule
setPaths	include/Util/DPItem.h	/^    inline void setPaths(PathCond* p, const EdgeSet& e) {$/;"	f	class:VFPathCond
setPureAbstract	include/MemoryModel/CHA.h	/^    inline void setPureAbstract() {$/;"	f	class:CHNode
setRep	include/MemoryModel/ConsG.h	/^    inline void setRep(NodeID node, NodeID rep) {$/;"	f	class:ConstraintGraph
setResVer	include/MSSA/MSSAMuChi.h	/^    inline void setResVer(MRVer* v) {$/;"	f	class:MSSADEF
setReturnNode	include/MemoryModel/ExternalPAG.h	/^    void setReturnNode(NodeID returnNode) {$/;"	f	class:ExternalPAG
setSCCEdgeFlag	include/MemoryModel/ConsGNode.h	/^    static void setSCCEdgeFlag(SCCEdgeFlag f) {$/;"	f	class:ConstraintNode
setSCCEdgeFlag	include/WPA/Andersen.h	/^    virtual void setSCCEdgeFlag(ConstraintNode::SCCEdgeFlag f) {$/;"	f	class:Andersen
setSubs	include/MemoryModel/ConsG.h	/^    inline void setSubs(NodeID node, NodeBS& subs) {$/;"	f	class:ConstraintGraph
setTemplate	include/MemoryModel/CHA.h	/^    inline void setTemplate() {$/;"	f	class:CHNode
setTokeepActualOutFormalIn	include/MSSA/SVFGOPT.h	/^    inline void setTokeepActualOutFormalIn() {$/;"	f	class:SVFGOPT
setTokeepAllSelfCycle	include/MSSA/SVFGOPT.h	/^    inline void setTokeepAllSelfCycle() {$/;"	f	class:SVFGOPT
setTokeepContextSelfCycle	include/MSSA/SVFGOPT.h	/^    inline void setTokeepContextSelfCycle() {$/;"	f	class:SVFGOPT
setVTable	include/MemoryModel/CHA.h	/^    void setVTable(const GlobalValue *vtbl) {$/;"	f	class:CHNode
setValue	include/MemoryModel/PAGEdge.h	/^    inline void setValue(const Value *val) {$/;"	f	class:PAGEdge
setVarDFInSetUpdated	include/MemoryModel/PointsToDFDS.h	/^    inline void setVarDFInSetUpdated(LocID loc,const Key& var) {$/;"	f	class:IncDFPTData
setVarDFOutSetUpdated	include/MemoryModel/PointsToDFDS.h	/^    inline void setVarDFOutSetUpdated(LocID loc,const Key& var) {$/;"	f	class:IncDFPTData
setVer	include/MSSA/MSSAMuChi.h	/^    inline void setVer(MRVer* v) {$/;"	f	class:MSSAMU
setVisited	include/Util/SCC.h	/^    inline void setVisited(NodeID n,bool v) {$/;"	f	class:SCCDetection
setVisited	include/WPA/CSC.h	/^    void setVisited(NodeID nId) {$/;"	f	class:CSC
sfrAndersen	include/WPA/AndersenSFR.h	/^    static AndersenSFR* sfrAndersen;$/;"	m	class:AndersenSFR
sfrObjNodes	include/WPA/AndersenSFR.h	/^    NodeSet sfrObjNodes;$/;"	m	class:AndersenSFR
sfvgOptEnd	include/MSSA/SVFGStat.h	/^    void sfvgOptEnd() {$/;"	f	class:SVFGStat
sfvgOptStart	include/MSSA/SVFGStat.h	/^    void sfvgOptStart() {$/;"	f	class:SVFGStat
shift	include/CUDD/cuddInt.h	/^    int shift;			\/* shift for hash function *\/$/;"	m	struct:DdSubtable
shift	include/CUDD/cuddInt.h	/^    int shift;$/;"	m	struct:DdHashTable
shift	include/CUDD/cuddInt.h	/^    int shift;$/;"	m	struct:DdLevelQueue
shift	include/CUDD/cuddInt.h	/^    int shift;$/;"	m	struct:DdLocalCache
shuffleSelect	lib/CUDD/cuddUtil.c	/^static	long shuffleSelect;$/;"	v	file:
shuffleTable	lib/CUDD/cuddUtil.c	/^static	long shuffleTable[STAB_SIZE];$/;"	v	file:
siftBackwardProb	lib/CUDD/cuddAnneal.c	/^siftBackwardProb($/;"	f	file:
siftMaxSwap	include/CUDD/cuddInt.h	/^    int siftMaxSwap;		\/* maximum number of swaps per sifting *\/$/;"	m	struct:DdManager
siftMaxVar	include/CUDD/cuddInt.h	/^    int siftMaxVar;		\/* maximum number of vars sifted *\/$/;"	m	struct:DdManager
sift_up	lib/CUDD/cuddGenetic.c	/^sift_up($/;"	f	file:
sign	include/CUDD/epd.h	/^  unsigned int sign: 1;$/;"	m	struct:IeeeDoubleStruct
sign	include/CUDD/epd.h	/^  unsigned int sign: 1;$/;"	m	struct:IeeeNanStruct
simplify_type	include/Util/Casting.h	/^template<typename From> struct simplify_type {$/;"	s	namespace:SVFUtil
simplify_type	include/Util/Casting.h	/^template<typename From> struct simplify_type<const From> {$/;"	s	namespace:SVFUtil
sinks	include/MSSA/SVFGStat.h	/^    SVFGNodeSet	sinks;$/;"	m	class:SVFGStat
siset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
siset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::siset;$/;"	m	class:BinIRWrapper	file:
size	include/CUDD/cuddInt.h	/^	    int                 size;$/;"	m	struct:DdGen::__anon12::__anon15
size	include/CUDD/cuddInt.h	/^    int size;			\/* number of unique subtables *\/$/;"	m	struct:DdManager
size	include/CUDD/cuddInt.h	/^    int size;$/;"	m	struct:DdLevelQueue
size	include/CUDD/cuddInt.h	/^    int size;$/;"	m	struct:Move
size	include/CUDD/cuddInt.h	/^    unsigned int size;$/;"	m	struct:DdHashTable
size	include/CUDD/mtr.h	/^    MtrHalfWord size;$/;"	m	struct:MtrNode
size	include/DisPatch/InterProcAnal.h	/^        size_t size;$/;"	m	struct:InterProcAnal::platform
size	include/MemoryModel/ConditionalPT.h	/^    inline unsigned size() const {$/;"	f	class:CondStdSet
size	include/MemoryModel/PTAType.h	/^    inline u32_t size() const {$/;"	f	class:TypeSet
size	lib/CUDD/cuddApprox.c	/^    int size;			\/* how many nodes are left *\/$/;"	m	struct:ApproxInfo	file:
size	lib/CUDD/cuddSign.c	/^static int    size;$/;"	v	file:
sizeZ	include/CUDD/cuddInt.h	/^    int sizeZ;			\/* for ZDD *\/$/;"	m	struct:DdManager
slots	include/CUDD/cuddInt.h	/^    unsigned int slots;		\/* size of the hash table *\/$/;"	m	struct:DdSubtable
slots	include/CUDD/cuddInt.h	/^    unsigned int slots;		\/* total number of hash buckets *\/$/;"	m	struct:DdManager
slots	include/CUDD/cuddInt.h	/^    unsigned int slots;$/;"	m	struct:DdLocalCache
solve	include/WPA/WPAFSSolver.h	/^    virtual void solve() {$/;"	f	class:WPAMinimumSolver
solve	include/WPA/WPAFSSolver.h	/^    virtual void solve() {$/;"	f	class:WPASCCSolver
solve	include/WPA/WPASolver.h	/^    virtual inline void solve() {$/;"	f	class:WPASolver
solveOfflineSCC	lib/MemoryModel/OfflineConsG.cpp	/^void OfflineConsG::solveOfflineSCC(OSCC* oscc) {$/;"	f	class:OfflineConsG
solveRep	lib/MemoryModel/OfflineConsG.cpp	/^NodeID OfflineConsG::solveRep(OSCC* oscc, NodeID rep) {$/;"	f	class:OfflineConsG
solveTime	include/WPA/FlowSensitive.h	/^    double solveTime;	\/\/\/< time of solve.$/;"	m	class:FlowSensitive
solveWorklist	include/WPA/Andersen.h	/^    void solveWorklist() {AndersenHCD::solveWorklist();}$/;"	f	class:AndersenHLCD
solveWorklist	include/WPA/WPASolver.h	/^    virtual inline void solveWorklist() {$/;"	f	class:WPASolver
solveWorklist	lib/WPA/AndersenHCD.cpp	/^void AndersenHCD::solveWorklist() {$/;"	f	class:AndersenHCD
solveWorklist	lib/WPA/AndersenLCD.cpp	/^void AndersenLCD::solveWorklist() {$/;"	f	class:AndersenLCD
solveWorklist	lib/WPA/AndersenSCD.cpp	/^void AndersenSCD::solveWorklist() {$/;"	f	class:AndersenSCD
solveWorklist	lib/WPA/AndersenWaveDiff.cpp	/^void AndersenWaveDiff::solveWorklist() {$/;"	f	class:AndersenWaveDiff
sortPointsTo	lib/MSSA/MemRegion.cpp	/^void MRGenerator::sortPointsTo(const PointsTo& cpts) {$/;"	f	class:MRGenerator
sources	include/MSSA/SVFGStat.h	/^    SVFGNodeSet	sources;$/;"	m	class:SVFGStat
sp	include/CUDD/cuddInt.h	/^	int	sp;$/;"	m	struct:DdGen::__anon16
src	include/MemoryModel/GenericGraph.h	/^    NodeTy* src;		\/\/\/< source node$/;"	m	class:GenericEdge
stPathTableDdFree	lib/CUDD/cuddSubsetSP.c	/^stPathTableDdFree($/;"	f	file:
st_add_direct	lib/CUDD/st.c	/^st_add_direct(st_table *table, void *key, void *value)$/;"	f
st_copy	lib/CUDD/st.c	/^st_copy(st_table *old_table)$/;"	f
st_count	include/CUDD/st.h	121;"	d
st_delete	lib/CUDD/st.c	/^st_delete(st_table *table, void *keyp, void *value)$/;"	f
st_delete_int	lib/CUDD/st.c	/^st_delete_int(st_table *table, void *keyp, int *value)$/;"	f
st_find	lib/CUDD/st.c	/^st_find(st_table *table, void *key, void *slot)$/;"	f
st_find_or_add	lib/CUDD/st.c	/^st_find_or_add(st_table *table, void *key, void *slot)$/;"	f
st_foreach	lib/CUDD/st.c	/^st_foreach(st_table *table, ST_PFSR func, char *arg)$/;"	f
st_foreach_item	include/CUDD/st.h	155;"	d
st_foreach_item_int	include/CUDD/st.h	194;"	d
st_free_gen	lib/CUDD/st.c	/^st_free_gen(st_generator *gen)$/;"	f
st_free_table	lib/CUDD/st.c	/^st_free_table(st_table *table)$/;"	f
st_gen	lib/CUDD/st.c	/^st_gen(st_generator *gen, void *key_p, void *value_p)$/;"	f
st_gen_int	lib/CUDD/st.c	/^st_gen_int(st_generator *gen, void *key_p, int *value_p)$/;"	f
st_generator	include/CUDD/st.h	/^struct st_generator {$/;"	s
st_generator	include/CUDD/st.h	/^typedef struct st_generator st_generator;$/;"	t	typeref:struct:st_generator
st_init_gen	lib/CUDD/st.c	/^st_init_gen(st_table *table)$/;"	f
st_init_table	lib/CUDD/st.c	/^st_init_table(ST_PFICPCP compare, ST_PFICPI hash)$/;"	f
st_init_table_with_params	lib/CUDD/st.c	/^st_init_table_with_params($/;"	f
st_insert	lib/CUDD/st.c	/^st_insert(st_table *table, void *key, void *value)$/;"	f
st_is_member	include/CUDD/st.h	107;"	d
st_lookup	lib/CUDD/st.c	/^st_lookup(st_table *table, void *key, void *value)$/;"	f
st_lookup_int	lib/CUDD/st.c	/^st_lookup_int(st_table *table, void *key, int *value)$/;"	f
st_numcmp	lib/CUDD/st.c	/^st_numcmp(const char *x, const char *y)$/;"	f
st_numhash	lib/CUDD/st.c	/^st_numhash(char *x, int size)$/;"	f
st_ptrcmp	lib/CUDD/st.c	/^st_ptrcmp(const char *x, const char *y)$/;"	f
st_ptrhash	lib/CUDD/st.c	/^st_ptrhash(char *x, int size)$/;"	f
st_retval	include/CUDD/st.h	/^enum st_retval {ST_CONTINUE, ST_STOP, ST_DELETE};$/;"	g
st_shift	lib/CUDD/st.c	52;"	d	file:
st_shift	lib/CUDD/st.c	54;"	d	file:
st_strhash	lib/CUDD/st.c	/^st_strhash(char *string, int modulus)$/;"	f
st_table	include/CUDD/st.h	/^struct st_table {$/;"	s
st_table	include/CUDD/st.h	/^typedef struct st_table st_table;$/;"	t	typeref:struct:st_table
st_table_entry	include/CUDD/st.h	/^struct st_table_entry {$/;"	s
st_table_entry	include/CUDD/st.h	/^typedef struct st_table_entry st_table_entry;$/;"	t	typeref:struct:st_table_entry
st_zdd_count_dbl_free	lib/CUDD/cuddZddCount.c	/^st_zdd_count_dbl_free($/;"	f	file:
st_zdd_countfree	lib/CUDD/cuddZddCount.c	/^st_zdd_countfree($/;"	f	file:
stack	include/CUDD/cuddInt.h	/^	DdNode	**stack;$/;"	m	struct:DdGen::__anon16
stack	include/CUDD/cuddInt.h	/^    DdNode **stack;		\/* stack for iterative procedures *\/$/;"	m	struct:DdManager
stack	include/CUDD/cuddInt.h	/^    } stack;$/;"	m	struct:DdGen	typeref:struct:DdGen::__anon16
stack_hi_addr	lib/CUDD/restart.c	/^static char *stack_hi_addr;$/;"	v	file:
stack_lo_addr	lib/CUDD/restart.c	/^static char *stack_lo_addr;$/;"	v	file:
stack_size	lib/CUDD/restart.c	/^static int stack_size;$/;"	v	file:
start	include/Util/DataFlowUtil.h	/^    const Value* start;$/;"	m	class:PTASCEV
startClk	include/Util/PTAStat.h	/^    virtual inline void startClk() {$/;"	f	class:PTAStat
startTime	include/CUDD/cuddInt.h	/^    unsigned long startTime;    \/* start time in milliseconds *\/$/;"	m	struct:DdManager
startTime	include/Util/PTAStat.h	/^    double startTime;$/;"	m	class:PTAStat
startaddr	include/DisPatch/BinIRWrapper.h	/^        uint64_t startaddr;$/;"	m	class:FuncInfo
stash	include/CUDD/cuddInt.h	/^    char *stash;		\/* memory reserve *\/$/;"	m	struct:DdManager
stat	include/MSSA/MemSSA.h	/^    MemSSAStat* stat;$/;"	m	class:MemSSA
stat	include/MSSA/SVFG.h	/^    SVFGStat * stat;$/;"	m	class:SVFG
stat	include/MemoryModel/PointerAnalysis.h	/^    PTAStat* stat;$/;"	m	class:PointerAnalysis
stat	include/Util/ICFG.h	/^    ICFGStat * stat;$/;"	m	class:ICFG
statAddrVarPtsSize	lib/WPA/FlowSensitiveStat.cpp	/^void FlowSensitiveStat::statAddrVarPtsSize()$/;"	f	class:FlowSensitiveStat
statInOutPtsSize	lib/WPA/FlowSensitiveStat.cpp	/^void FlowSensitiveStat::statInOutPtsSize(const DFInOutMap& data, ENUM_INOUT inOrOut)$/;"	f	class:FlowSensitiveStat
statInit	lib/Util/ThreadAPI.cpp	/^void ThreadAPI::statInit(StringMap& tdAPIStatMap) {$/;"	f	class:ThreadAPI
statLine	include/CUDD/cuddInt.h	981;"	d
statLine	include/CUDD/cuddInt.h	987;"	d
statLine	include/CUDD/cuddInt.h	990;"	d
statNullPtr	lib/WPA/AndersenStat.cpp	/^void AndersenStat::statNullPtr() {$/;"	f	class:AndersenStat
statNullPtr	lib/WPA/FlowSensitiveStat.cpp	/^void FlowSensitiveStat::statNullPtr()$/;"	f	class:FlowSensitiveStat
statPtsSize	lib/WPA/FlowSensitiveStat.cpp	/^void FlowSensitiveStat::statPtsSize()$/;"	f	class:FlowSensitiveStat
status	include/CUDD/cuddInt.h	/^    int		status;$/;"	m	struct:DdGen
step	include/Util/DataFlowUtil.h	/^    const Value* step;$/;"	m	class:PTASCEV
stopping_criterion	lib/CUDD/cuddAnneal.c	/^stopping_criterion($/;"	f	file:
store2ChiSetMap	include/MSSA/MemSSA.h	/^    StoreToChiSetMap store2ChiSetMap;$/;"	m	class:MemSSA
storeEdgeLabelCounter	include/MemoryModel/PAGEdge.h	/^    static u64_t storeEdgeLabelCounter;  \/\/\/< Store Instruction counter$/;"	m	class:PAGEdge
storeEdgeLabelCounter	lib/MemoryModel/PAG.cpp	/^u64_t PAGEdge::storeEdgeLabelCounter = 0;$/;"	m	class:PAGEdge	file:
storeInEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy storeInEdges; \/\/\/< all incoming store edge of this node$/;"	m	class:ConstraintNode
storeOutEdges	include/MemoryModel/ConsGNode.h	/^    ConstraintEdge::ConstraintEdgeSetTy storeOutEdges; \/\/\/< all outgoing store edge of this node$/;"	m	class:ConstraintNode
storeTime	include/WPA/FlowSensitive.h	/^    double storeTime;	\/\/\/< time of store edges$/;"	m	class:FlowSensitive
storedd	lib/CUDD/cuddGenetic.c	/^static int *storedd;$/;"	v	file:
storesToMRsMap	include/MSSA/MemRegion.h	/^    StoresToMRsMap storesToMRsMap;$/;"	m	class:MRGenerator
storesToPointsToMap	include/MSSA/MemRegion.h	/^    StoresToPointsToMap	storesToPointsToMap;$/;"	m	class:MRGenerator
str2inst	include/DisPatch/UtilDef.h	/^    const Instruction* str2inst(const Function *func, string targetname){$/;"	f	class:UtilDef
str2reg	lib/DisPatch/InterProcAnal.cpp	/^uint16_t InterProcAnal::str2reg(string reg){$/;"	f	class:InterProcAnal
strchr	lib/CUDD/stub.c	/^strchr(s, c)$/;"	f
strconfig2num	include/DisPatch/InitPIDObj.h	/^    inline int strconfig2num(string s){$/;"	f	class:InitPIDObj
strides	include/MemoryModel/ConsGNode.h	/^    NodeBS strides;$/;"	m	class:ConstraintNode
stripAllCasts	lib/Util/SVFUtil.cpp	/^Value * SVFUtil::stripAllCasts(Value *val) {$/;"	f	class:SVFUtil
stripConstantCasts	lib/Util/SVFUtil.cpp	/^const Value * SVFUtil::stripConstantCasts(const Value *val) {$/;"	f	class:SVFUtil
strongUpdateOutFromIn	include/WPA/FlowSensitive.h	/^    virtual bool strongUpdateOutFromIn(const SVFGNode* node, NodeID singleton) {$/;"	f	class:FlowSensitive
strrchr	lib/CUDD/stub.c	/^strrchr(s, c)$/;"	f
strsav	include/CUDD/util.h	41;"	d
strspliter	include/DisPatch/UtilDef.h	/^    vector <string> strspliter(string s, string delimiter){$/;"	f	class:UtilDef
structName	lib/Util/CPPUtil.cpp	/^const string structName = "struct.";$/;"	v
subNodes	include/Util/SCC.h	/^        inline NodeBS& subNodes() {$/;"	f	class:SCCDetection::GNodeSCCInfo
subNodes	include/Util/SCC.h	/^        inline const NodeBS& subNodes() const   {$/;"	f	class:SCCDetection::GNodeSCCInfo
subNodes	include/Util/SCC.h	/^    inline const NodeBS& subNodes(NodeID n)  const  {$/;"	f	class:SCCDetection
subtableZ	include/CUDD/cuddInt.h	/^    DdSubtable *subtableZ;	\/* for ZDD *\/$/;"	m	struct:DdManager
subtables	include/CUDD/cuddInt.h	/^    DdSubtable *subtables;	\/* array of unique subtables *\/$/;"	m	struct:DdManager
sucMsg	lib/Util/SVFUtil.cpp	/^std::string SVFUtil::sucMsg(std::string msg) {$/;"	f	class:SVFUtil
succ_const_iterator	include/Util/BasicTypes.h	/^typedef llvm::succ_const_iterator succ_const_iterator;$/;"	t
super	include/Util/GEPTypeBridgeIterator.h	/^    typedef std::iterator<std::forward_iterator_tag,Type *, ptrdiff_t> super;$/;"	t	class:llvm::generic_bridge_gep_type_iterator
suppVarNames	include/CUDD/dddmpInt.h	/^  char **suppVarNames;$/;"	m	struct:Dddmp_Hdr_s
svfMod	include/MemoryModel/CHA.h	/^    SVFModule svfMod;$/;"	m	class:CHGraph
svfMod	include/MemoryModel/PAGBuilder.h	/^    SVFModule svfMod;$/;"	m	class:PAGBuilder
svfMod	include/MemoryModel/PointerAnalysis.h	/^    SVFModule svfMod;$/;"	m	class:PointerAnalysis
svfMod	include/Util/PTACallGraph.h	/^    SVFModule svfMod;$/;"	m	class:PTACallGraph
svfg	include/MSSA/SVFGBuilder.h	/^    SVFG* svfg;$/;"	m	class:SVFGBuilder
svfg	include/WPA/FlowSensitive.h	/^    SVFG* svfg;$/;"	m	class:FlowSensitive
svfgHasSU	include/WPA/FlowSensitive.h	/^    NodeBS svfgHasSU;$/;"	m	class:FlowSensitive
svfgOptTimeEnd	include/MSSA/SVFGStat.h	/^    double svfgOptTimeEnd;$/;"	m	class:SVFGStat
svfgOptTimeStart	include/MSSA/SVFGStat.h	/^    double svfgOptTimeStart;$/;"	m	class:SVFGStat
swapSteps	include/CUDD/cuddInt.h	/^    double swapSteps;		\/* number of elementary reordering steps *\/$/;"	m	struct:DdManager
symInfo	include/MemoryModel/PAG.h	/^    SymbolTableInfo* symInfo;$/;"	m	class:PAG
symTyMap	include/MemoryModel/MemModel.h	/^    IDToSymTyMapTy	symTyMap;	\/\/\/ < map a sym id to its type$/;"	m	class:SymbolTableInfo
symlnfo	include/MemoryModel/MemModel.h	/^    static SymbolTableInfo* symlnfo;$/;"	m	class:SymbolTableInfo
symlnfo	lib/MemoryModel/MemModel.cpp	/^SymbolTableInfo* SymbolTableInfo::symlnfo = NULL;$/;"	m	class:SymbolTableInfo	file:
symmviolation	include/CUDD/cuddInt.h	/^    int symmviolation;		\/* used during group sifting *\/$/;"	m	struct:DdManager
sz	include/DisPatch/BinIRWrapper.h	/^        uint64_t sz;$/;"	m	class:FuncInfo
t	lib/Util/ExtAPI.cpp	/^    ExtAPI::extf_t t;$/;"	m	struct:ei_pair	file:
t	lib/Util/ThreadAPI.cpp	/^    ThreadAPI::TD_TYPE t;$/;"	m	struct:ei_pair	file:
table	include/CUDD/st.h	/^    st_table *table;$/;"	m	struct:st_generator
table	lib/CUDD/cuddApprox.c	/^    DdHashTable *table;		\/* hash table to access the per-node info *\/$/;"	m	struct:ApproxInfo	file:
table_mem	lib/CUDD/cuddSign.c	/^static int table_mem;$/;"	v	file:
tagAxisCtrls	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::tagAxisCtrls(vector <ctrlinfo *> &ctrlvec, string axis, set <ctrlinfo *> &taggedctrls){$/;"	f	class:CtrlIdentifier
tagAxisFromBot	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::tagAxisFromBot(ctrlinfo *ci, string axis, set <ctrlinfo *> &taggedctrls){$/;"	f	class:CtrlIdentifier
tagAxisFromTop	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::tagAxisFromTop(ctrlinfo *ci, string axis, set <ctrlinfo *> &taggedctrls){$/;"	f	class:CtrlIdentifier
tagCtrl	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::tagCtrl(ctrlinfo *ci, string axis, int differential_level, set <ctrlinfo *> &taggedctrls){$/;"	f	class:CtrlIdentifier
tagCtrl	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::tagCtrl(ctrlinfo *ci, string name, set <ctrlinfo *> &taggedctrls){$/;"	f	class:CtrlIdentifier
taggingTransition	lib/DisPatch/CtrlIdentifier.cpp	/^bool CtrlIdentifier::taggingTransition(const Function *cr, vector <const CallInst *> &callstack, set <const Value *> &outs, map <string, set<const Value *>> &role2varset){$/;"	f	class:CtrlIdentifier
tail	include/Util/WorkList.h	/^    Node* tail;$/;"	m	class:List
tdAPI	include/Util/ThreadAPI.h	/^    static ThreadAPI* tdAPI;$/;"	m	class:ThreadAPI
tdAPI	include/Util/ThreadCallGraph.h	/^    ThreadAPI* tdAPI;		\/\/\/< Thread API$/;"	m	class:ThreadCallGraph
tdAPIMap	include/Util/ThreadAPI.h	/^    TDAPIMap tdAPIMap;$/;"	m	class:ThreadAPI
templateNameToInstancesMap	include/MemoryModel/CHA.h	/^    NameToCHNodesMap templateNameToInstancesMap;$/;"	m	class:CHGraph
test	include/MemoryModel/ConditionalPT.h	/^    inline bool test(const Element& var) const {$/;"	f	class:CondStdSet
test	include/MemoryModel/ConditionalPT.h	/^    inline bool test(const SingleCondVar& var) const {$/;"	f	class:CondPointsToSet
test_and_set	include/MemoryModel/ConditionalPT.h	/^    inline bool test_and_set(const Element& var) {$/;"	f	class:CondStdSet
test_and_set	include/MemoryModel/ConditionalPT.h	/^    inline bool test_and_set(const SingleCondVar& var) {$/;"	f	class:CondPointsToSet
this2gepset	include/DisPatch/BinIRWrapper.h	/^    static map <const Value *, set<const Value *>> this2gepset;$/;"	m	class:BinIRWrapper
this2gepset	lib/DisPatch/BinIRWrapper.cpp	/^map <const Value *, set<const Value *>> BinIRWrapper::this2gepset;$/;"	m	class:BinIRWrapper	file:
thishit	lib/CUDD/cuddSubsetSP.c	/^    int         thishit;$/;"	m	struct:GlobalInfo	file:
threshold	include/CUDD/cuddInt.h	/^    int threshold;		\/* for pseudo var threshold value*\/$/;"	m	struct:DdManager
threshold	lib/CUDD/cuddSubsetSP.c	/^    int threshold;$/;"	m	struct:AssortedInfo	file:
thresholdReached	lib/CUDD/cuddSubsetSP.c	/^    int thresholdReached;$/;"	m	struct:AssortedInfo	file:
tid	include/Util/CxtStmt.h	/^    NodeID tid;$/;"	m	class:CxtThreadProc
tid	include/Util/CxtStmt.h	/^    NodeID tid;$/;"	m	class:CxtThreadStmt
timeLimit	include/CUDD/cuddInt.h	/^    unsigned long timeLimit;    \/* CPU time limit *\/$/;"	m	struct:DdManager
timeOfCollapse	include/WPA/Andersen.h	/^    static double timeOfCollapse;$/;"	m	class:Andersen
timeOfCollapse	lib/WPA/Andersen.cpp	/^double Andersen::timeOfCollapse = 0;$/;"	m	class:Andersen	file:
timeOfCreateMUCHI	include/MSSA/MemSSA.h	/^    static double timeOfCreateMUCHI;	\/\/\/< Time for generating mu\/chi for load\/store\/calls$/;"	m	class:MemSSA
timeOfCreateMUCHI	lib/MSSA/MemSSA.cpp	/^double MemSSA::timeOfCreateMUCHI  = 0;	\/\/\/< Time for generating mu\/chi for load\/store\/calls$/;"	m	class:MemSSA	file:
timeOfGeneratingMemRegions	include/MSSA/MemSSA.h	/^    static double timeOfGeneratingMemRegions;	\/\/\/< Time for allocating regions$/;"	m	class:MemSSA
timeOfGeneratingMemRegions	lib/MSSA/MemSSA.cpp	/^double MemSSA::timeOfGeneratingMemRegions = 0;	\/\/\/< Time for allocating regions$/;"	m	class:MemSSA	file:
timeOfInsertingPHI	include/MSSA/MemSSA.h	/^    static double timeOfInsertingPHI;	\/\/\/< Time for inserting phis$/;"	m	class:MemSSA
timeOfInsertingPHI	lib/MSSA/MemSSA.cpp	/^double MemSSA::timeOfInsertingPHI  = 0;	\/\/\/< Time for inserting phis$/;"	m	class:MemSSA	file:
timeOfProcessCopyGep	include/WPA/Andersen.h	/^    static double timeOfProcessCopyGep;$/;"	m	class:Andersen
timeOfProcessCopyGep	lib/WPA/Andersen.cpp	/^double Andersen::timeOfProcessCopyGep = 0;$/;"	m	class:Andersen	file:
timeOfProcessLoadStore	include/WPA/Andersen.h	/^    static double timeOfProcessLoadStore;$/;"	m	class:Andersen
timeOfProcessLoadStore	lib/WPA/Andersen.cpp	/^double Andersen::timeOfProcessLoadStore = 0;$/;"	m	class:Andersen	file:
timeOfSCCDetection	include/WPA/Andersen.h	/^    static double timeOfSCCDetection;$/;"	m	class:Andersen
timeOfSCCDetection	lib/WPA/Andersen.cpp	/^double Andersen::timeOfSCCDetection = 0;$/;"	m	class:Andersen	file:
timeOfSCCMerges	include/WPA/Andersen.h	/^    static double timeOfSCCMerges;$/;"	m	class:Andersen
timeOfSCCMerges	lib/WPA/Andersen.cpp	/^double Andersen::timeOfSCCMerges = 0;$/;"	m	class:Andersen	file:
timeOfSSARenaming	include/MSSA/MemSSA.h	/^    static double timeOfSSARenaming;	\/\/\/< Time for SSA rename$/;"	m	class:MemSSA
timeOfSSARenaming	lib/MSSA/MemSSA.cpp	/^double MemSSA::timeOfSSARenaming  = 0;	\/\/\/< Time for SSA rename$/;"	m	class:MemSSA	file:
timeOfUpdateCallGraph	include/WPA/Andersen.h	/^    static double timeOfUpdateCallGraph;$/;"	m	class:Andersen
timeOfUpdateCallGraph	lib/WPA/Andersen.cpp	/^double Andersen::timeOfUpdateCallGraph = 0;$/;"	m	class:Andersen	file:
timeStatMap	include/Util/PTAStat.h	/^    TIMEStatMap timeStatMap;$/;"	m	class:PTAStat
tlcInfoAlloc	lib/CUDD/cuddEssent.c	/^tlcInfoAlloc(void)$/;"	f	file:
toString	include/MemoryModel/ConditionalPT.h	/^    inline std::string toString() const {$/;"	f	class:CondStdSet
toString	include/MemoryModel/ConditionalPT.h	/^    inline std::string toString() const {$/;"	f	class:CondVar
toString	include/Util/DPItem.h	/^    inline std::string toString() const {$/;"	f	class:ContextCond
toString	include/Util/DPItem.h	/^    inline std::string toString() const {$/;"	f	class:VFPathCond
topctrl2botctrl	lib/DisPatch/CtrlIdentifier.cpp	/^CtrlIdentifier::ctrlinfo *CtrlIdentifier::topctrl2botctrl(ctrlinfo *ci){$/;"	f	class:CtrlIdentifier
topoNodeStack	include/Util/SCC.h	/^    inline GNodeStack &topoNodeStack() {$/;"	f	class:SCCDetection
tosses	lib/CUDD/cuddAnneal.c	/^static	int	tosses;$/;"	v	file:
totCacheMisses	include/CUDD/cuddInt.h	/^    double totCacheMisses;	\/* total number of cache misses *\/$/;"	m	struct:DdManager
totCachehits	include/CUDD/cuddInt.h	/^    double totCachehits;	\/* total number of cache hits *\/$/;"	m	struct:DdManager
totalCallSiteNum	include/Util/PTACallGraph.h	/^    static CallSiteID totalCallSiteNum;	\/\/\/< CallSiteIDs, start from 1;$/;"	m	class:PTACallGraph
totalCallSiteNum	lib/Util/PTACallGraph.cpp	/^CallSiteID PTACallGraph::totalCallSiteNum = 1;$/;"	m	class:PTACallGraph	file:
totalCondNum	include/Util/PathCondAllocator.h	/^    static u32_t totalCondNum;$/;"	m	class:PathCondAllocator
totalCondNum	lib/Util/PathCondAllocator.cpp	/^u32_t PathCondAllocator::totalCondNum = 0;$/;"	m	class:PathCondAllocator	file:
totalDirCallEdge	include/MSSA/SVFGStat.h	/^    int totalDirCallEdge;$/;"	m	class:SVFGStat
totalDirRetEdge	include/MSSA/SVFGStat.h	/^    int totalDirRetEdge;$/;"	m	class:SVFGStat
totalEdgeNum	include/MemoryModel/PAGEdge.h	/^    static Size_t totalEdgeNum;		\/\/\/< Total edge number$/;"	m	class:PAGEdge
totalICFGNode	include/Util/ICFG.h	/^    NodeID totalICFGNode;$/;"	m	class:ICFG
totalInEdge	include/MSSA/SVFGStat.h	/^    int totalInEdge;	\/\/\/< Total number of incoming SVFG edges$/;"	m	class:SVFGStat
totalIndCallEdge	include/MSSA/SVFGStat.h	/^    int totalIndCallEdge;$/;"	m	class:SVFGStat
totalIndInEdge	include/MSSA/SVFGStat.h	/^    int totalIndInEdge;	\/\/\/< Total number of indirect SVFG edges$/;"	m	class:SVFGStat
totalIndOutEdge	include/MSSA/SVFGStat.h	/^    int totalIndOutEdge;$/;"	m	class:SVFGStat
totalIndRetEdge	include/MSSA/SVFGStat.h	/^    int totalIndRetEdge;$/;"	m	class:SVFGStat
totalMRNum	include/MSSA/MemRegion.h	/^    static Size_t totalMRNum;$/;"	m	class:MemRegion
totalOutEdge	include/MSSA/SVFGStat.h	/^    int totalOutEdge;	\/\/\/< Total number of outgoing SVFG edges$/;"	m	class:SVFGStat
totalPTAPAGEdge	include/MemoryModel/PAG.h	/^    u32_t totalPTAPAGEdge;$/;"	m	class:PAG
totalSymNum	include/MemoryModel/MemModel.h	/^    static SymID totalSymNum;$/;"	m	class:SymbolTableInfo
totalSymNum	lib/MemoryModel/MemModel.cpp	/^SymID SymbolTableInfo::totalSymNum = 0;$/;"	m	class:SymbolTableInfo	file:
totalVERNum	include/MSSA/MSSAMuChi.h	/^    static Size_t totalVERNum;$/;"	m	class:MRVer
totalVERNum	lib/MSSA/MemRegion.cpp	/^Size_t MRVer::totalVERNum = 0;$/;"	m	class:MRVer	file:
totalVFGNode	include/Util/VFG.h	/^    NodeID totalVFGNode;$/;"	m	class:VFG
translateLLVMTypeToPTAType	include/MemoryModel/PTAType.h	/^    void translateLLVMTypeToPTAType(const PAG *pag) {$/;"	f	class:TypeSystem
tree	include/CUDD/cuddInt.h	/^    MtrNode *tree;		\/* variable group tree (BDD) *\/$/;"	m	struct:DdManager
treeZ	include/CUDD/cuddInt.h	/^    MtrNode *treeZ;		\/* variable group tree (ZDD) *\/$/;"	m	struct:DdManager
tripcount	include/Util/DataFlowUtil.h	/^    unsigned tripcount;$/;"	m	class:PTASCEV
trueCond	include/Util/PathCondAllocator.h	/^    static inline Condition* trueCond() {$/;"	f	class:PathCondAllocator
two	lib/CUDD/cuddAddAbs.c	/^static	DdNode	*two;$/;"	v	file:
type	include/CUDD/cudd.h	/^    } type;$/;"	m	struct:DdNode	typeref:union:DdNode::__anon23
type	include/CUDD/cuddInt.h	/^    int		type;$/;"	m	struct:DdGen
type	include/CUDD/epd.h	/^  union EpTypeUnion		type;$/;"	m	struct:EpDoubleStruct	typeref:union:EpDoubleStruct::EpTypeUnion
type	include/MSSA/MSSAMuChi.h	/^    DEFTYPE type;$/;"	m	class:MSSADEF
type	include/MSSA/MSSAMuChi.h	/^    MUTYPE type;$/;"	m	class:MSSAMU
type	include/MemoryModel/MemModel.h	/^    const Type* type;$/;"	m	class:ObjTypeInfo
type	include/MemoryModel/PTAType.h	/^    const Type *type;$/;"	m	class:PTAType
typeInfo	include/MemoryModel/MemModel.h	/^    ObjTypeInfo* typeInfo;$/;"	m	class:MemObj
typeMismatchedObjToEdges	include/WPA/Andersen.h	/^    TypeMismatchedObjToEdgeTy typeMismatchedObjToEdges;$/;"	m	class:AndersenWaveDiffWithType
typeSet	include/MemoryModel/PTAType.h	/^    TypeSetTy typeSet;$/;"	m	class:TypeSet
typeSystem	include/MemoryModel/PointerAnalysis.h	/^    TypeSystem *typeSystem;$/;"	m	class:PointerAnalysis
typeToFieldInfo	include/MemoryModel/MemModel.h	/^    TypeToFieldInfoMap typeToFieldInfo;$/;"	m	class:SymbolTableInfo
typeToVarsMap	include/MemoryModel/PTAType.h	/^    TypeToVarsMapTy typeToVarsMap;$/;"	m	class:TypeSystem
u32_t	include/Util/BasicTypes.h	/^typedef unsigned u32_t;$/;"	t
u64_t	include/Util/BasicTypes.h	/^typedef unsigned long long u64_t;$/;"	t
ub	include/CUDD/cuddInt.h	/^	    DdNode		*ub;$/;"	m	struct:DdGen::__anon12::__anon14
unconnectedRefAliasDetect	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::unconnectedRefAliasDetect(){$/;"	f	class:CtrlIdentifier
unionPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline bool unionPts(CVar id, CVar ptd) {$/;"	f	class:CondPTAImpl
unionPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline bool unionPts(CVar id, const CPtSet& target) {$/;"	f	class:CondPTAImpl
unionPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline bool unionPts(NodeID id, NodeID ptd) {$/;"	f	class:BVDataPTAImpl
unionPts	include/MemoryModel/PointerAnalysis.h	/^    virtual inline bool unionPts(NodeID id, const PointsTo& target) {$/;"	f	class:BVDataPTAImpl
unionPts	include/MemoryModel/PointsToDFDS.h	/^    inline bool unionPts(Data& dstData, const Data& srcData) {$/;"	f	class:DFPTData
unionPts	include/MemoryModel/PointsToDFDS.h	/^    inline bool unionPts(const Key& dstKey, const Data& srcData) {$/;"	f	class:DFPTData
unionPts	include/MemoryModel/PointsToDFDS.h	/^    inline bool unionPts(const Key& dstKey, const Key& srcKey) {$/;"	f	class:DFPTData
unionPts	include/MemoryModel/PointsToDS.h	/^    inline bool unionPts(Data& dstData, const Data& srcData) {$/;"	f	class:PTData
unionPts	include/MemoryModel/PointsToDS.h	/^    inline bool unionPts(const Key& dstKey, const Data& srcData) {$/;"	f	class:PTData
unionPts	include/MemoryModel/PointsToDS.h	/^    inline bool unionPts(const Key& dstKey, const Key& srcKey) {$/;"	f	class:PTData
unionPts	include/WPA/Andersen.h	/^    virtual inline bool unionPts(NodeID id, NodeID ptd) {$/;"	f	class:Andersen
unionPts	include/WPA/Andersen.h	/^    virtual inline bool unionPts(NodeID id, const PointsTo& target) {$/;"	f	class:Andersen
unionPtsFromIn	include/WPA/FlowSensitive.h	/^    inline bool unionPtsFromIn(const SVFGNode* stmt, NodeID srcVar, NodeID dstVar) {$/;"	f	class:FlowSensitive
unionPtsFromTop	include/WPA/FlowSensitive.h	/^    inline bool unionPtsFromTop(const SVFGNode* stmt, NodeID srcVar, NodeID dstVar) {$/;"	f	class:FlowSensitive
uniqueLinks	include/CUDD/cuddInt.h	/^    double uniqueLinks;		\/* total distance traveled in coll. chains *\/$/;"	m	struct:DdManager
uniqueLookUps	include/CUDD/cuddInt.h	/^    double uniqueLookUps;	\/* number of unique table lookups *\/$/;"	m	struct:DdManager
univ	include/CUDD/cuddInt.h	/^    DdNode **univ;		\/* ZDD 1 for each variable *\/$/;"	m	struct:DdManager
updateATVPts	include/MemoryModel/PointsToDFDS.h	/^    virtual inline bool updateATVPts(const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:DFPTData
updateATVPts	include/MemoryModel/PointsToDFDS.h	/^    virtual inline bool updateATVPts(const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:IncDFPTData
updateAliasMRs	lib/MSSA/MemRegion.cpp	/^void MRGenerator::updateAliasMRs() {$/;"	f	class:MRGenerator
updateAliases	lib/DisPatch/AliasFinder.cpp	/^void AliasFinder::updateAliases(const Value *v, set <const Value *> &valset){$/;"	f	class:AliasFinder
updateAllCtrlVars	lib/DisPatch/InitPIDObj.cpp	/^void InitPIDObj::updateAllCtrlVars(InterProcAnal *inipa){$/;"	f	class:InitPIDObj
updateAllDFInFromIn	include/MemoryModel/PointsToDFDS.h	/^    inline bool updateAllDFInFromIn(LocID srcLoc, const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:IncDFPTData
updateAllDFInFromIn	include/MemoryModel/PointsToDFDS.h	/^    virtual inline bool updateAllDFInFromIn(LocID srcLoc, const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:DFPTData
updateAllDFInFromOut	include/MemoryModel/PointsToDFDS.h	/^    inline bool updateAllDFInFromOut(LocID srcLoc, const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:IncDFPTData
updateAllDFInFromOut	include/MemoryModel/PointsToDFDS.h	/^    virtual inline bool updateAllDFInFromOut(LocID srcLoc, const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:DFPTData
updateAllDFOutFromIn	include/MemoryModel/PointsToDFDS.h	/^    inline bool updateAllDFOutFromIn(LocID loc, const Key& singleton, bool strongUpdates)$/;"	f	class:IncDFPTData
updateAllDFOutFromIn	include/MemoryModel/PointsToDFDS.h	/^    virtual inline bool updateAllDFOutFromIn(LocID loc, const Key& singleton, bool strongUpdates)$/;"	f	class:DFPTData
updateCSRet2CSAddrs	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::updateCSRet2CSAddrs(const Function *func, const Value *v, set <uint64_t> &csaddrset){$/;"	f	class:InterProcAnal
updateCallGraph	include/MemoryModel/PointerAnalysis.h	/^    virtual inline bool updateCallGraph(const CallSiteToFunPtrMap& callsites) {$/;"	f	class:BVDataPTAImpl
updateCallGraph	include/WPA/Andersen.h	/^	virtual inline bool updateCallGraph() {$/;"	f	class:Andersen
updateCallGraph	include/WPA/WPASolver.h	/^    virtual bool updateCallGraph() { return false; }$/;"	f	class:WPASolver
updateCallGraph	lib/Util/ThreadCallGraph.cpp	/^void ThreadCallGraph::updateCallGraph(PointerAnalysis* pta) {$/;"	f	class:ThreadCallGraph
updateCallGraph	lib/Util/VFG.cpp	/^void VFG::updateCallGraph(PointerAnalysis* pta)$/;"	f	class:VFG
updateCallGraph	lib/WPA/Andersen.cpp	/^bool Andersen::updateCallGraph(const CallSiteToFunPtrMap& callsites) {$/;"	f	class:Andersen
updateCallGraph	lib/WPA/AndersenSCD.cpp	/^bool AndersenSCD::updateCallGraph(const PointerAnalysis::CallSiteToFunPtrMap& callsites) {$/;"	f	class:AndersenSCD
updateCallGraph	lib/WPA/FlowSensitive.cpp	/^bool FlowSensitive::updateCallGraph(const CallSiteToFunPtrMap& callsites)$/;"	f	class:FlowSensitive
updateCallGraphTime	include/WPA/FlowSensitive.h	/^    double updateCallGraphTime; \/\/\/< time of updating call graph$/;"	m	class:FlowSensitive
updateCallgraph	lib/Util/ICFG.cpp	/^void ICFG::updateCallgraph(PointerAnalysis* pta) {$/;"	f	class:ICFG
updateConnectedNodes	lib/WPA/FlowSensitive.cpp	/^void FlowSensitive::updateConnectedNodes(const SVFGEdgeSetTy& edges)$/;"	f	class:FlowSensitive
updateCtrlVars	lib/DisPatch/InitPIDObj.cpp	/^vector <const Value *> InitPIDObj::updateCtrlVars(string word, const Function *func, unsigned controlidx, string kind){$/;"	f	class:InitPIDObj
updateDFInFromIn	include/MemoryModel/PointsToDFDS.h	/^    inline bool updateDFInFromIn(LocID srcLoc, const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:IncDFPTData
updateDFInFromIn	include/MemoryModel/PointsToDFDS.h	/^    virtual inline bool updateDFInFromIn(LocID srcLoc, const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:DFPTData
updateDFInFromOut	include/MemoryModel/PointsToDFDS.h	/^    inline bool updateDFInFromOut(LocID srcLoc, const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:IncDFPTData
updateDFInFromOut	include/MemoryModel/PointsToDFDS.h	/^    virtual inline bool updateDFInFromOut(LocID srcLoc, const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:DFPTData
updateDFOutFromIn	include/MemoryModel/PointsToDFDS.h	/^    inline bool updateDFOutFromIn(LocID srcLoc, const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:IncDFPTData
updateDFOutFromIn	include/MemoryModel/PointsToDFDS.h	/^    virtual inline bool updateDFOutFromIn(LocID srcLoc, const Key& srcVar, LocID dstLoc, const Key& dstVar) {$/;"	f	class:DFPTData
updateEntry	lib/CUDD/cuddExact.c	/^updateEntry($/;"	f	file:
updateInFromIn	include/WPA/FlowSensitive.h	/^    inline bool updateInFromIn(const SVFGNode* srcStmt, NodeID srcVar, const SVFGNode* dstStmt, NodeID dstVar) {$/;"	f	class:FlowSensitive
updateInFromOut	include/WPA/FlowSensitive.h	/^    inline bool updateInFromOut(const SVFGNode* srcStmt, NodeID srcVar, const SVFGNode* dstStmt, NodeID dstVar) {$/;"	f	class:FlowSensitive
updateInstAddr2rRegSet	lib/DisPatch/InterProcAnal.cpp	/^void InterProcAnal::updateInstAddr2rRegSet(uint64_t faddr){$/;"	f	class:InterProcAnal
updateInterCallee	lib/DisPatch/CtrlIdentifier.cpp	/^void CtrlIdentifier::updateInterCallee(const Function *crfunc, const Value *dv, $/;"	f	class:CtrlIdentifier
updateJoinEdge	lib/Util/ThreadCallGraph.cpp	/^void ThreadCallGraph::updateJoinEdge(PointerAnalysis* pta) {$/;"	f	class:ThreadCallGraph
updateNodeRepAndSubs	lib/WPA/Andersen.cpp	/^void Andersen::updateNodeRepAndSubs(NodeID nodeId, NodeID newRepId) {$/;"	f	class:Andersen
updateObjType	lib/WPA/AndersenWaveDiffWithType.cpp	/^void AndersenWaveDiffWithType::updateObjType(const Type *type, PointsTo &objs) {$/;"	f	class:AndersenWaveDiffWithType
updateOutFromIn	include/WPA/FlowSensitive.h	/^    inline bool updateOutFromIn(const SVFGNode* srcStmt, NodeID srcVar, const SVFGNode* dstStmt, NodeID dstVar) {$/;"	f	class:FlowSensitive
updateParity	lib/CUDD/cuddApprox.c	/^updateParity($/;"	f	file:
updatePropaPts	include/WPA/Andersen.h	/^    inline void updatePropaPts(NodeID dstId, NodeID srcId) {$/;"	f	class:Andersen
updatePropaPtsMap	include/MemoryModel/PointsToDS.h	/^    inline void updatePropaPtsMap(Key& src, Key&dst) {$/;"	f	class:DiffPTData
updateRefs	lib/CUDD/cuddApprox.c	/^updateRefs($/;"	f	file:
updateTLVPts	include/MemoryModel/PointsToDFDS.h	/^    virtual inline bool updateTLVPts(LocID srcLoc, const Key& srcVar, const Key& dstVar) {$/;"	f	class:DFPTData
updateTLVPts	include/MemoryModel/PointsToDFDS.h	/^    virtual inline bool updateTLVPts(LocID srcLoc, const Key& srcVar, const Key& dstVar) {$/;"	f	class:IncDFPTData
updateTime	include/WPA/FlowSensitive.h	/^    double updateTime;	\/\/\/< time of strong\/weak updates.$/;"	m	class:FlowSensitive
updateUB	lib/CUDD/cuddExact.c	/^updateUB($/;"	f	file:
usedRegs	include/MSSA/MemSSA.h	/^    MRSet usedRegs;$/;"	m	class:MemSSA
util_cpu_time	lib/CUDD/cpu_time.c	/^util_cpu_time()$/;"	f
util_do_nothing	lib/CUDD/stub.c	/^util_do_nothing()$/;"	f
util_file_search	lib/CUDD/pathsearch.c	/^util_file_search($/;"	f
util_path_search	lib/CUDD/pathsearch.c	/^util_path_search(char const *prog)$/;"	f
util_pipefork	lib/CUDD/pipefork.c	/^util_pipefork($/;"	f
util_print_cpu_stats	lib/CUDD/cpu_stats.c	/^util_print_cpu_stats(FILE *fp)$/;"	f
util_print_time	lib/CUDD/prtime.c	/^util_print_time(unsigned long t)$/;"	f
util_ptrint	include/CUDD/util.h	/^typedef int util_ptrint;$/;"	t
util_ptrint	include/CUDD/util.h	/^typedef long util_ptrint;$/;"	t
util_restart	lib/CUDD/restart.c	/^util_restart(char const *old, char const *neW, int interval)$/;"	f
util_restart_restore_state	lib/CUDD/state.c	/^util_restart_restore_state()$/;"	f
util_restart_save_state	lib/CUDD/state.c	/^util_restart_save_state()$/;"	f
util_restart_state	lib/CUDD/state.c	/^int util_restart_state[32];$/;"	v
util_save_image	lib/CUDD/saveimage.c	/^util_save_image(char const *orig_file_name, char const *save_file_name)$/;"	f
util_save_sp	lib/CUDD/restart.c	/^char *util_save_sp;		\/* set by util_restart_save_state() *\/$/;"	v
util_strsav	lib/CUDD/strsav.c	/^util_strsav(char const *s)$/;"	f
util_tilde_expand	lib/CUDD/texpand.c	/^util_tilde_expand(char const *fname)$/;"	f
v1	lib/CUDD/cuddEssent.c	/^    DdHalfWord v1, v2;$/;"	m	struct:TlClause	file:
v2	lib/CUDD/cuddEssent.c	/^    DdHalfWord v1, v2;$/;"	m	struct:TlClause	file:
v2GroundTruthController	include/DisPatch/InitPIDObj.h	/^    map <const Value *, string> v2GroundTruthController;$/;"	m	class:InitPIDObj
v2ctrlinfo	include/DisPatch/InitPIDObj.h	/^    map <const Value *, CtrlInfo *> v2ctrlinfo;$/;"	m	class:InitPIDObj
v2ctrlty	include/DisPatch/InitPIDObj.h	/^    map <const Value *, string> v2ctrlty;$/;"	m	class:InitPIDObj
v2func	include/DisPatch/UtilDef.h	/^    inline const Function * v2func(const Instruction *inst){$/;"	f	class:UtilDef
v2func	include/DisPatch/UtilDef.h	/^    inline const Function * v2func(const Value *v){$/;"	f	class:UtilDef
vNodeBegin	include/Util/ICFGNode.h	/^    inline const_iterator vNodeBegin() const {$/;"	f	class:IntraBlockNode
vNodeEnd	include/Util/ICFGNode.h	/^    inline const_iterator vNodeEnd() const {$/;"	f	class:IntraBlockNode
valSymMap	include/MemoryModel/MemModel.h	/^    ValueToIDMapTy valSymMap;	\/\/\/< map a value to its sym id$/;"	m	class:SymbolTableInfo
valSyms	include/MemoryModel/MemModel.h	/^    inline ValueToIDMapTy& valSyms() {$/;"	f	class:SymbolTableInfo
validateExpectedFailureTests	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::validateExpectedFailureTests(const char* fun) {$/;"	f	class:PointerAnalysis
validateSuccessTests	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::validateSuccessTests(const char* fun) {$/;"	f	class:PointerAnalysis
validateTests	lib/MemoryModel/PointerAnalysis.cpp	/^void PointerAnalysis::validateTests() {$/;"	f	class:PointerAnalysis
value	include/CUDD/cudd.h	/^	CUDD_VALUE_TYPE value;	\/* for constant nodes *\/$/;"	m	union:DdNode::__anon23
value	include/CUDD/cuddInt.h	/^	    CUDD_VALUE_TYPE	value;$/;"	m	struct:DdGen::__anon12::__anon13
value	include/CUDD/cuddInt.h	/^    DdNode *value;$/;"	m	struct:DdHashItem
value	include/CUDD/cuddInt.h	/^    DdNode *value;$/;"	m	struct:DdLocalCacheItem
value	include/CUDD/epd.h	/^  double			value;$/;"	m	union:EpTypeUnion
value	include/MemoryModel/PAGEdge.h	/^    const Value* value;	\/\/\/< LLVM value$/;"	m	class:PAGEdge
value	include/MemoryModel/PAGNode.h	/^    const Value* value; \/\/\/< value of this PAG node$/;"	m	class:PAGNode
value	include/Util/Casting.h	/^  static const bool value =$/;"	m	struct:SVFUtil::is_simple_type
value	lib/CUDD/cuddTable.c	/^    CUDD_VALUE_TYPE value;$/;"	m	union:hack	file:
valueNodes	include/MemoryModel/ExternalPAG.h	/^    std::set<NodeID> valueNodes;$/;"	m	class:ExternalPAG
var2FuncMap	include/DisPatch/CtrlIdentifier.h	/^    map <const Value *, const Function *> var2FuncMap;$/;"	m	class:CtrlIdentifier
var2ctrlidx	include/DisPatch/InitPIDObj.h	/^    map <const Value *, unsigned> var2ctrlidx;$/;"	m	class:InitPIDObj
var2offsum	include/DisPatch/UtilDef.h	/^    static map <const Value *, unsigned> var2offsum;$/;"	m	class:UtilDef
var2offsum	lib/DisPatch/UtilDef.cpp	/^map <const Value *, unsigned> UtilDef::var2offsum;$/;"	m	class:UtilDef	file:
var2offvec	include/DisPatch/UtilDef.h	/^    static map <const Value *, vector <unsigned>> var2offvec;$/;"	m	class:UtilDef
var2offvec	lib/DisPatch/UtilDef.cpp	/^map <const Value *, vector <unsigned>> UtilDef::var2offvec;$/;"	m	class:UtilDef	file:
varHandled	include/CUDD/cuddInt.h	/^    int varHandled;		\/* flag: 1 means variable is already handled *\/$/;"	m	struct:DdSubtable
varHasNewDFInPts	include/MemoryModel/PointsToDFDS.h	/^    inline bool varHasNewDFInPts(LocID loc,const Key& var) {$/;"	f	class:IncDFPTData
varHasNewDFOutPts	include/MemoryModel/PointsToDFDS.h	/^    inline bool varHasNewDFOutPts(LocID loc,const Key& var) {$/;"	f	class:IncDFPTData
varKills	include/MSSA/MemSSA.h	/^    MRSet varKills;$/;"	m	class:MemSSA
varToBeGrouped	include/CUDD/cuddInt.h	/^    Cudd_LazyGroupType varToBeGrouped; \/* tells what grouping to apply *\/$/;"	m	struct:DdSubtable
varType	include/CUDD/cuddInt.h	/^    Cudd_VariableType varType;  \/* variable type (ps, ns, pi) *\/$/;"	m	struct:DdSubtable
varargSymMap	include/MemoryModel/MemModel.h	/^    FunToIDMapTy varargSymMap;	    \/\/\/< vararg map$/;"	m	class:SymbolTableInfo
varargSyms	include/MemoryModel/MemModel.h	/^    inline FunToIDMapTy& varargSyms() {$/;"	f	class:SymbolTableInfo
varinfo	include/CUDD/dddmpInt.h	/^  Dddmp_VarInfoType varinfo;$/;"	m	struct:Dddmp_Hdr_s
varmapset	include/DisPatch/AliasFinder.h	/^    map <string, set<const Value *>> varmapset;$/;"	m	class:AliasFinder
varmapset	include/DisPatch/InitPIDObj.h	/^    map <string, set <const Value *>> varmapset;$/;"	m	class:InitPIDObj
vars	include/CUDD/cuddInt.h	/^    DdNode **vars;		\/* projection functions *\/$/;"	m	struct:DdManager
vars	lib/CUDD/cuddEssent.c	/^    DdHalfWord *vars;$/;"	m	struct:DdTlcInfo	file:
ver	include/CUDD/dddmpInt.h	/^  char *ver;$/;"	m	struct:Dddmp_Hdr_s
ver	include/MSSA/MSSAMuChi.h	/^    MRVer* ver;$/;"	m	class:MSSAMU
verifyCallGraph	lib/Util/PTACallGraph.cpp	/^void PTACallGraph::verifyCallGraph()$/;"	f	class:PTACallGraph
verifyStructSize	lib/MemoryModel/LocMemModel.cpp	/^void LocSymTableInfo::verifyStructSize(StInfo *stinfo, u32_t structSize) {$/;"	f	class:LocSymTableInfo
version	include/MSSA/MSSAMuChi.h	/^    VERSION version;$/;"	m	class:MRVer
vfEdgesAtIndCallSite	include/MSSA/SVFGBuilder.h	/^    SVFGEdgeSet vfEdgesAtIndCallSite;$/;"	m	class:SVFGBuilder
vfEdgesTrace	include/Util/DPItem.h	/^    inline std::string vfEdgesTrace() const {$/;"	f	class:VFPathCond
vfID	include/MemoryModel/CHA.h	/^    s32_t vfID;$/;"	m	class:CHGraph
vfg	include/Util/ICFG.h	/^	VFG* vfg;$/;"	m	class:ICFG
vfpath	include/Util/DPItem.h	/^    VFPathCond vfpath;$/;"	m	class:PathStmtDPItem
vfunPreLabel	lib/Util/CPPUtil.cpp	/^const string vfunPreLabel = "_Z";$/;"	v
vid	include/MSSA/MSSAMuChi.h	/^    MRVERID vid;$/;"	m	class:MRVer
virtualCallSites	include/WPA/TypeAnalysis.h	/^    std::set<CallSite> virtualCallSites;$/;"	m	class:TypeAnalysis
virtualFunctionToIDMap	include/MemoryModel/CHA.h	/^    std::map<const Function*, s32_t> virtualFunctionToIDMap;$/;"	m	class:CHGraph
virtualFunctionVectors	include/MemoryModel/CHA.h	/^    std::vector<std::vector<const Function*>> virtualFunctionVectors;$/;"	m	class:CHNode
visit	include/Util/SCC.h	/^    void visit(NodeID v) {$/;"	f	class:SCCDetection
visit	lib/WPA/CSC.cpp	/^void CSC::visit(NodeID nodeId, Size_t _w) {$/;"	f	class:CSC
visitAllocaInst	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitAllocaInst(AllocaInst &inst) {$/;"	f	class:PAGBuilder
visitAtomicCmpXchgInst	include/MemoryModel/PAGBuilder.h	/^    void visitAtomicCmpXchgInst(AtomicCmpXchgInst &I) {$/;"	f	class:PAGBuilder
visitAtomicRMWInst	include/MemoryModel/PAGBuilder.h	/^    void visitAtomicRMWInst(AtomicRMWInst &I) {$/;"	f	class:PAGBuilder
visitBinaryOperator	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitBinaryOperator(BinaryOperator &inst) {$/;"	f	class:PAGBuilder
visitCallInst	include/MemoryModel/PAGBuilder.h	/^    void visitCallInst(CallInst &I) {$/;"	f	class:PAGBuilder
visitCallSite	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitCallSite(CallSite cs) {$/;"	f	class:PAGBuilder
visitCastInst	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitCastInst(CastInst &inst) {$/;"	f	class:PAGBuilder
visitCmpInst	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitCmpInst(CmpInst &inst) {$/;"	f	class:PAGBuilder
visitExtractElementInst	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitExtractElementInst(ExtractElementInst &inst) {$/;"	f	class:PAGBuilder
visitExtractValueInst	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitExtractValueInst(ExtractValueInst  &inst) {$/;"	f	class:PAGBuilder
visitFenceInst	include/MemoryModel/PAGBuilder.h	/^    void visitFenceInst(FenceInst &I) { \/*returns void*\/$/;"	f	class:PAGBuilder
visitGetElementPtrInst	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitGetElementPtrInst(GetElementPtrInst &inst) {$/;"	f	class:PAGBuilder
visitGlobal	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitGlobal(SVFModule svfModule) {$/;"	f	class:PAGBuilder
visitInsertElementInst	include/MemoryModel/PAGBuilder.h	/^    void visitInsertElementInst(InsertElementInst &I) {$/;"	f	class:PAGBuilder
visitInsertValueInst	include/MemoryModel/PAGBuilder.h	/^    void visitInsertValueInst(InsertValueInst &I) {$/;"	f	class:PAGBuilder
visitInstruction	include/MemoryModel/PAGBuilder.h	/^    inline void visitInstruction(Instruction &I) {$/;"	f	class:PAGBuilder
visitInvokeInst	include/MemoryModel/PAGBuilder.h	/^    void visitInvokeInst(InvokeInst &II) {$/;"	f	class:PAGBuilder
visitLandingPadInst	include/MemoryModel/PAGBuilder.h	/^    void visitLandingPadInst(LandingPadInst &I) {$/;"	f	class:PAGBuilder
visitLoadInst	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitLoadInst(LoadInst &inst) {$/;"	f	class:PAGBuilder
visitPHINode	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitPHINode(PHINode &inst) {$/;"	f	class:PAGBuilder
visitResumeInst	include/MemoryModel/PAGBuilder.h	/^    void visitResumeInst(ResumeInst &I) { \/*returns void*\/$/;"	f	class:PAGBuilder
visitReturnInst	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitReturnInst(ReturnInst &inst) {$/;"	f	class:PAGBuilder
visitSelectInst	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitSelectInst(SelectInst &inst) {$/;"	f	class:PAGBuilder
visitShuffleVectorInst	include/MemoryModel/PAGBuilder.h	/^    void visitShuffleVectorInst(ShuffleVectorInst &I) {$/;"	f	class:PAGBuilder
visitStoreInst	lib/MemoryModel/PAGBuilder.cpp	/^void PAGBuilder::visitStoreInst(StoreInst &inst) {$/;"	f	class:PAGBuilder
visitUnreachableInst	include/MemoryModel/PAGBuilder.h	/^    void visitUnreachableInst(UnreachableInst &I) { \/*returns void*\/$/;"	f	class:PAGBuilder
visitVAArgInst	include/MemoryModel/PAGBuilder.h	/^    void visitVAArgInst(VAArgInst &I) {$/;"	f	class:PAGBuilder
visited	include/Util/SCC.h	/^        inline bool visited(void) const {$/;"	f	class:SCCDetection::GNodeSCCInfo
visited	include/Util/SCC.h	/^        inline void visited(bool v)     {$/;"	f	class:SCCDetection::GNodeSCCInfo
visited	include/Util/SCC.h	/^    inline bool visited(NodeID n)  {$/;"	f	class:SCCDetection
vldrset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
vldrset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::vldrset;$/;"	m	class:BinIRWrapper	file:
vmovset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
vmovset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::vmovset;$/;"	m	class:BinIRWrapper	file:
vnodes	include/Util/ICFGNode.h	/^    StmtOrPHIVFGNodeVec vnodes;$/;"	m	class:IntraBlockNode
void	lib/CUDD/cpu_time.c	7;"	d	file:
volatile	build/CMakeFiles/3.10.2/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
vstrset	include/DisPatch/BinIRWrapper.h	/^    static set <const Value *> ciset, giset, phiset, liset, siset, vldrset, vstrset, biset, castset, vmovset, heuriargset, bitcastset, ptrcastset;$/;"	m	class:BinIRWrapper
vstrset	lib/DisPatch/BinIRWrapper.cpp	/^set <const Value *> BinIRWrapper::vstrset;$/;"	m	class:BinIRWrapper	file:
vtable	include/MemoryModel/CHA.h	/^    const GlobalValue* vtable;$/;"	m	class:CHNode
vtblLabelAfterDemangle	lib/Util/CPPUtil.cpp	/^const string vtblLabelAfterDemangle = "vtable for ";$/;"	v
vtblLabelBeforeDemangle	lib/Util/CPPUtil.cpp	/^const string vtblLabelBeforeDemangle = "_ZTV";$/;"	v
weakUpdateOutFromIn	include/WPA/FlowSensitive.h	/^    virtual bool weakUpdateOutFromIn(const SVFGNode* node) {$/;"	f	class:FlowSensitive
worklist	include/MSSA/SVFGOPT.h	/^    WorkList worklist;	\/\/\/< storing MSSAPHI nodes which may be removed.$/;"	m	class:SVFGOPT
worklist	include/Util/CFLSolver.h	/^    WorkList worklist;$/;"	m	class:CFLSolver
worklist	include/WPA/WPASolver.h	/^    WorkList worklist;$/;"	m	class:WPASolver
writeToFile	lib/MemoryModel/PointerAnalysis.cpp	/^void BVDataPTAImpl::writeToFile(const string& filename) {$/;"	f	class:BVDataPTAImpl
wrnMsg	lib/Util/SVFUtil.cpp	/^void SVFUtil::wrnMsg(std::string msg) {$/;"	f	class:SVFUtil
x	include/CUDD/cuddInt.h	/^    DdHalfWord x;$/;"	m	struct:Move
y	include/CUDD/cuddInt.h	/^    DdHalfWord y;$/;"	m	struct:Move
yci	include/DisPatch/CtrlIdentifier.h	/^    ctrlinfo *rci, *pci, *yci; $/;"	m	class:CtrlIdentifier
younger	include/CUDD/mtr.h	/^    struct MtrNode *younger;$/;"	m	struct:MtrNode	typeref:struct:MtrNode::MtrNode
zddClearFlag	lib/CUDD/cuddZddUtil.c	/^zddClearFlag($/;"	f	file:
zddCountInternalMtrNodes	lib/CUDD/cuddZddGroup.c	/^zddCountInternalMtrNodes($/;"	f	file:
zddFindNodeHiLo	lib/CUDD/cuddZddGroup.c	/^zddFindNodeHiLo($/;"	f	file:
zddFixTree	lib/CUDD/cuddZddReord.c	/^zddFixTree($/;"	f	file:
zddGroupMove	lib/CUDD/cuddZddGroup.c	/^zddGroupMove($/;"	f	file:
zddGroupMoveBackward	lib/CUDD/cuddZddGroup.c	/^zddGroupMoveBackward($/;"	f	file:
zddGroupSifting	lib/CUDD/cuddZddGroup.c	/^zddGroupSifting($/;"	f	file:
zddGroupSiftingAux	lib/CUDD/cuddZddGroup.c	/^zddGroupSiftingAux($/;"	f	file:
zddGroupSiftingBackward	lib/CUDD/cuddZddGroup.c	/^zddGroupSiftingBackward($/;"	f	file:
zddGroupSiftingDown	lib/CUDD/cuddZddGroup.c	/^zddGroupSiftingDown($/;"	f	file:
zddGroupSiftingUp	lib/CUDD/cuddZddGroup.c	/^zddGroupSiftingUp($/;"	f	file:
zddMergeGroups	lib/CUDD/cuddZddGroup.c	/^zddMergeGroups($/;"	f	file:
zddPortFromBddStep	lib/CUDD/cuddZddPort.c	/^zddPortFromBddStep($/;"	f	file:
zddPortToBddStep	lib/CUDD/cuddZddPort.c	/^zddPortToBddStep($/;"	f	file:
zddPrintCoverAux	lib/CUDD/cuddZddUtil.c	/^zddPrintCoverAux($/;"	f	file:
zddReorderChildren	lib/CUDD/cuddZddGroup.c	/^zddReorderChildren($/;"	f	file:
zddReorderPostprocess	lib/CUDD/cuddZddReord.c	/^zddReorderPostprocess($/;"	f	file:
zddReorderPreprocess	lib/CUDD/cuddZddReord.c	/^zddReorderPreprocess($/;"	f	file:
zddShuffle	lib/CUDD/cuddZddReord.c	/^zddShuffle($/;"	f	file:
zddSiftUp	lib/CUDD/cuddZddReord.c	/^zddSiftUp($/;"	f	file:
zddSupportStep	lib/CUDD/cuddZddUtil.c	/^zddSupportStep($/;"	f	file:
zddSwapAny	lib/CUDD/cuddZddReord.c	/^zddSwapAny($/;"	f	file:
zddTotalNumberLinearTr	lib/CUDD/cuddZddLin.c	/^static	int	zddTotalNumberLinearTr;$/;"	v	file:
zddTotalNumberSwapping	lib/CUDD/cuddZddReord.c	/^int	zddTotalNumberSwapping;$/;"	v
zddTreeSiftingAux	lib/CUDD/cuddZddGroup.c	/^zddTreeSiftingAux($/;"	f	file:
zddUniqueCompareGroup	lib/CUDD/cuddZddGroup.c	/^zddUniqueCompareGroup($/;"	f	file:
zddVarToConst	lib/CUDD/cuddZddSetop.c	/^zddVarToConst($/;"	f	file:
zdd_entry	lib/CUDD/cuddZddReord.c	/^int	*zdd_entry;$/;"	v
zdd_group_move	lib/CUDD/cuddZddSymm.c	/^zdd_group_move($/;"	f	file:
zdd_group_move_backward	lib/CUDD/cuddZddSymm.c	/^zdd_group_move_backward($/;"	f	file:
zdd_print_minterm_aux	lib/CUDD/cuddZddUtil.c	/^zdd_print_minterm_aux($/;"	f	file:
zdd_subset0_aux	lib/CUDD/cuddZddSetop.c	/^zdd_subset0_aux($/;"	f	file:
zdd_subset1_aux	lib/CUDD/cuddZddSetop.c	/^zdd_subset1_aux($/;"	f	file:
zero	include/CUDD/cuddInt.h	/^    DdNode *zero;		\/* constant 0 *\/$/;"	m	struct:DdManager
zero	lib/CUDD/cuddApa.c	/^static	DdNode	*background, *zero;$/;"	v	file:
zero	lib/CUDD/cuddApprox.c	/^    DdNode *zero;		\/* BDD zero constant *\/$/;"	m	struct:ApproxInfo	file:
zero	lib/CUDD/cuddDecomp.c	/^static	DdNode	*one, *zero;$/;"	v	file:
zero	lib/CUDD/cuddLinear.c	/^static	int	zero = 0;$/;"	v	file:
zero	lib/CUDD/cuddSat.c	/^static	DdNode	*one, *zero;$/;"	v	file:
zero	lib/CUDD/cuddSubsetHB.c	/^static	DdNode	        *zero, *one; \/* constant functions *\/$/;"	v	file:
zero	lib/CUDD/cuddUtil.c	/^static	DdNode	*background, *zero;$/;"	v	file:
zp2	lib/CUDD/cuddZddUtil.c	/^zp2($/;"	f	file:
ztiLabel	lib/MemoryModel/CHA.cpp	/^const string ztiLabel = "_ZTI";$/;"	v
~Andersen	include/WPA/Andersen.h	/^    virtual ~Andersen() {$/;"	f	class:Andersen
~AndersenSFR	include/WPA/AndersenSFR.h	/^    ~AndersenSFR() {$/;"	f	class:AndersenSFR
~AndersenStat	include/WPA/WPAStat.h	/^    virtual ~AndersenStat() {$/;"	f	class:AndersenStat
~Annotator	include/Util/Annotator.h	/^    virtual ~Annotator() {$/;"	f	class:Annotator
~BVDataPTAImpl	include/MemoryModel/PointerAnalysis.h	/^    virtual ~BVDataPTAImpl() {$/;"	f	class:BVDataPTAImpl
~BddCondManager	include/Util/Conditions.h	/^    ~BddCondManager() {$/;"	f	class:BddCondManager
~CFLSolver	include/Util/CFLSolver.h	/^    virtual ~CFLSolver() {$/;"	f	class:CFLSolver
~CHGraph	lib/MemoryModel/CHA.cpp	/^CHGraph::~CHGraph() {$/;"	f	class:CHGraph
~CHNode	include/MemoryModel/CHA.h	/^    ~CHNode() {$/;"	f	class:CHNode
~CallCHI	include/MSSA/MSSAMuChi.h	/^    virtual ~CallCHI() {$/;"	f	class:CallCHI
~CallMU	include/MSSA/MSSAMuChi.h	/^    virtual ~CallMU() {$/;"	f	class:CallMU
~CondPTAImpl	include/MemoryModel/PointerAnalysis.h	/^    virtual ~CondPTAImpl() {$/;"	f	class:CondPTAImpl
~CondPtsSetIterator	include/MemoryModel/ConditionalPT.h	/^        ~CondPtsSetIterator() {}$/;"	f	class:CondPointsToSet::CondPtsSetIterator
~CondStdSet	include/MemoryModel/ConditionalPT.h	/^    ~CondStdSet() {}$/;"	f	class:CondStdSet
~CondVar	include/MemoryModel/ConditionalPT.h	/^    ~CondVar() {}$/;"	f	class:CondVar
~ConstraintEdge	include/MemoryModel/ConsGEdge.h	/^    ~ConstraintEdge() {$/;"	f	class:ConstraintEdge
~ConstraintGraph	include/MemoryModel/ConsG.h	/^    virtual ~ConstraintGraph() {$/;"	f	class:ConstraintGraph
~ContextCond	include/Util/DPItem.h	/^    virtual ~ContextCond() {$/;"	f	class:ContextCond
~CxtDPItem	include/Util/DPItem.h	/^    virtual ~CxtDPItem() {$/;"	f	class:CxtDPItem
~CxtProc	include/Util/CxtStmt.h	/^    virtual ~CxtProc() {$/;"	f	class:CxtProc
~CxtStmt	include/Util/CxtStmt.h	/^    virtual ~CxtStmt() {$/;"	f	class:CxtStmt
~CxtStmtDPItem	include/Util/DPItem.h	/^    virtual ~CxtStmtDPItem() {$/;"	f	class:CxtStmtDPItem
~CxtThread	include/Util/CxtStmt.h	/^    virtual ~CxtThread() {$/;"	f	class:CxtThread
~CxtThreadProc	include/Util/CxtStmt.h	/^    virtual ~CxtThreadProc() {$/;"	f	class:CxtThreadProc
~CxtThreadStmt	include/Util/CxtStmt.h	/^    virtual ~CxtThreadStmt() {$/;"	f	class:CxtThreadStmt
~DFPTData	include/MemoryModel/PointsToDFDS.h	/^    virtual ~DFPTData() {$/;"	f	class:DFPTData
~DPItem	include/Util/DPItem.h	/^    virtual ~DPItem() {$/;"	f	class:DPItem
~DiffPTData	include/MemoryModel/PointsToDS.h	/^    ~DiffPTData() {}$/;"	f	class:DiffPTData
~DisPatch	lib/DisPatch/DisPatch.cpp	/^DisPatch::~DisPatch() {$/;"	f	class:DisPatch
~DistinctMRG	include/MSSA/MemPartition.h	/^    ~DistinctMRG() {}$/;"	f	class:DistinctMRG
~EntryCHI	include/MSSA/MSSAMuChi.h	/^    virtual ~EntryCHI() {$/;"	f	class:EntryCHI
~ExternalPAG	include/MemoryModel/ExternalPAG.h	/^    ~ExternalPAG() {}$/;"	f	class:ExternalPAG
~FIFOWorkList	include/Util/WorkList.h	/^    ~FIFOWorkList() {}$/;"	f	class:FIFOWorkList
~FILOWorkList	include/Util/WorkList.h	/^    ~FILOWorkList() {}$/;"	f	class:FILOWorkList
~FlowSensitive	include/WPA/FlowSensitive.h	/^    virtual ~FlowSensitive() {$/;"	f	class:FlowSensitive
~FlowSensitiveStat	include/WPA/WPAStat.h	/^    virtual ~FlowSensitiveStat() {}$/;"	f	class:FlowSensitiveStat
~GenericEdge	include/MemoryModel/GenericGraph.h	/^    virtual ~GenericEdge() {$/;"	f	class:GenericEdge
~GenericGraph	include/MemoryModel/GenericGraph.h	/^    virtual ~GenericGraph()$/;"	f	class:GenericGraph
~GenericNode	include/MemoryModel/GenericGraph.h	/^    virtual ~GenericNode() {$/;"	f	class:GenericNode
~HareParForEdge	include/Util/ThreadCallGraph.h	/^    virtual ~HareParForEdge() {$/;"	f	class:HareParForEdge
~ICFG	include/Util/ICFG.h	/^    virtual ~ICFG() {$/;"	f	class:ICFG
~ICFGEdge	include/Util/ICFGEdge.h	/^    ~ICFGEdge() {$/;"	f	class:ICFGEdge
~IncDFPTData	include/MemoryModel/PointsToDFDS.h	/^    virtual ~IncDFPTData() {$/;"	f	class:IncDFPTData
~InterDisjointMRG	include/MSSA/MemPartition.h	/^    ~InterDisjointMRG() {}$/;"	f	class:InterDisjointMRG
~InterProcAnal	include/DisPatch/InterProcAnal.h	/^    ~InterProcAnal(){$/;"	f	class:InterProcAnal
~IntraDisjointMRG	include/MSSA/MemPartition.h	/^    ~IntraDisjointMRG() {}$/;"	f	class:IntraDisjointMRG
~IteratedDominanceFrontier	include/Util/DataFlowUtil.h	/^    virtual ~IteratedDominanceFrontier() {$/;"	f	class:IteratedDominanceFrontier
~List	include/Util/WorkList.h	/^    ~List() {}$/;"	f	class:List
~ListNode	include/Util/WorkList.h	/^        ~ListNode() {}$/;"	f	class:List::ListNode
~LoadMU	include/MSSA/MSSAMuChi.h	/^    virtual ~LoadMU() {$/;"	f	class:LoadMU
~LocObjTypeInfo	include/MemoryModel/LocMemModel.h	/^    virtual ~LocObjTypeInfo() {$/;"	f	class:LocObjTypeInfo
~LocSymTableInfo	include/MemoryModel/LocMemModel.h	/^    virtual ~LocSymTableInfo() {$/;"	f	class:LocSymTableInfo
~LocationSet	include/MemoryModel/LocationSet.h	/^    ~LocationSet() {}$/;"	f	class:LocationSet
~MRGenerator	include/MSSA/MemRegion.h	/^    virtual ~MRGenerator() {$/;"	f	class:MRGenerator
~MSSACHI	include/MSSA/MSSAMuChi.h	/^    virtual ~MSSACHI() {}$/;"	f	class:MSSACHI
~MSSADEF	include/MSSA/MSSAMuChi.h	/^    virtual ~MSSADEF() {}$/;"	f	class:MSSADEF
~MSSAMU	include/MSSA/MSSAMuChi.h	/^    virtual ~MSSAMU() {$/;"	f	class:MSSAMU
~MSSAPHI	include/MSSA/MSSAMuChi.h	/^    virtual ~MSSAPHI() {$/;"	f	class:MSSAPHI
~MemObj	include/MemoryModel/MemModel.h	/^    ~MemObj() {$/;"	f	class:MemObj
~MemRegion	include/MSSA/MemRegion.h	/^    ~MemRegion() {$/;"	f	class:MemRegion
~MemSSA	include/MSSA/MemSSA.h	/^    virtual ~MemSSA() {$/;"	f	class:MemSSA
~MemSSAStat	include/MSSA/SVFGStat.h	/^    virtual ~MemSSAStat() {$/;"	f	class:MemSSAStat
~ObjTypeInfo	include/MemoryModel/MemModel.h	/^    virtual ~ObjTypeInfo() {$/;"	f	class:ObjTypeInfo
~PAG	include/MemoryModel/PAG.h	/^    virtual ~PAG() {$/;"	f	class:PAG
~PAGBuilder	include/MemoryModel/PAGBuilder.h	/^    virtual ~PAGBuilder() {$/;"	f	class:PAGBuilder
~PAGBuilderFromFile	include/MemoryModel/PAGBuilderFromFile.h	/^    ~PAGBuilderFromFile() {$/;"	f	class:PAGBuilderFromFile
~PAGEdge	include/MemoryModel/PAGEdge.h	/^    ~PAGEdge() {$/;"	f	class:PAGEdge
~PAGNode	include/MemoryModel/PAGNode.h	/^    virtual ~PAGNode() {$/;"	f	class:PAGNode
~PTACFInfoBuilder	include/Util/DataFlowUtil.h	/^    ~PTACFInfoBuilder() {$/;"	f	class:PTACFInfoBuilder
~PTACallGraph	include/Util/PTACallGraph.h	/^    virtual ~PTACallGraph() {$/;"	f	class:PTACallGraph
~PTACallGraphEdge	include/Util/PTACallGraph.h	/^    virtual ~PTACallGraphEdge() {$/;"	f	class:PTACallGraphEdge
~PTASCEV	include/Util/DataFlowUtil.h	/^    virtual ~PTASCEV() {$/;"	f	class:PTASCEV
~PTAStat	include/Util/PTAStat.h	/^    virtual ~PTAStat() {}$/;"	f	class:PTAStat
~PTData	include/MemoryModel/PointsToDS.h	/^    virtual ~PTData() {$/;"	f	class:PTData
~PathCondAllocator	include/Util/PathCondAllocator.h	/^    virtual ~PathCondAllocator() {$/;"	f	class:PathCondAllocator
~PathStmtDPItem	include/Util/DPItem.h	/^    virtual ~PathStmtDPItem() {$/;"	f	class:PathStmtDPItem
~PointerAnalysis	lib/MemoryModel/PointerAnalysis.cpp	/^PointerAnalysis::~PointerAnalysis() {$/;"	f	class:PointerAnalysis
~RaceAnnotator	include/Util/RaceAnnotator.h	/^    virtual ~RaceAnnotator() {$/;"	f	class:RaceAnnotator
~RetMU	include/MSSA/MSSAMuChi.h	/^    virtual ~RetMU() {}$/;"	f	class:RetMU
~SVFG	include/MSSA/SVFG.h	/^    virtual ~SVFG() {$/;"	f	class:SVFG
~SVFGBuilder	include/MSSA/SVFGBuilder.h	/^    virtual ~SVFGBuilder() {}$/;"	f	class:SVFGBuilder
~SVFGOPT	include/MSSA/SVFGOPT.h	/^    virtual ~SVFGOPT() {}$/;"	f	class:SVFGOPT
~SVFGStat	include/MSSA/SVFGStat.h	/^    virtual ~SVFGStat() {}$/;"	f	class:SVFGStat
~StInfo	include/MemoryModel/MemModel.h	/^    ~StInfo() {$/;"	f	class:StInfo
~StmtDPItem	include/Util/DPItem.h	/^    virtual ~StmtDPItem() {$/;"	f	class:StmtDPItem
~StoreCHI	include/MSSA/MSSAMuChi.h	/^    virtual ~StoreCHI() {$/;"	f	class:StoreCHI
~SymbolTableInfo	include/MemoryModel/MemModel.h	/^    virtual ~SymbolTableInfo() {$/;"	f	class:SymbolTableInfo
~ThreadCallGraph	include/Util/ThreadCallGraph.h	/^    virtual ~ThreadCallGraph() {$/;"	f	class:ThreadCallGraph
~ThreadForkEdge	include/Util/ThreadCallGraph.h	/^    virtual ~ThreadForkEdge() {$/;"	f	class:ThreadForkEdge
~ThreadJoinEdge	include/Util/ThreadCallGraph.h	/^    virtual ~ThreadJoinEdge() {$/;"	f	class:ThreadJoinEdge
~TypeAnalysis	include/WPA/TypeAnalysis.h	/^    virtual ~TypeAnalysis() {$/;"	f	class:TypeAnalysis
~VFG	include/Util/VFG.h	/^    virtual ~VFG() {$/;"	f	class:VFG
~VFGEdge	include/Util/VFGEdge.h	/^    ~VFGEdge() {$/;"	f	class:VFGEdge
~VFPathCond	include/Util/DPItem.h	/^    virtual ~VFPathCond() {$/;"	f	class:VFPathCond
~WPAFSSolver	include/WPA/WPAFSSolver.h	/^    virtual ~WPAFSSolver() {}$/;"	f	class:WPAFSSolver
~WPAMinimumSolver	include/WPA/WPAFSSolver.h	/^    virtual ~WPAMinimumSolver() {}$/;"	f	class:WPAMinimumSolver
~WPAPass	lib/WPA/WPAPass.cpp	/^WPAPass::~WPAPass() {$/;"	f	class:WPAPass
~WPASCCSolver	include/WPA/WPAFSSolver.h	/^    virtual ~WPASCCSolver() {}$/;"	f	class:WPASCCSolver
~WPASolver	include/WPA/WPASolver.h	/^    virtual ~WPASolver() {$/;"	f	class:WPASolver
