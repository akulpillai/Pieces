Call graph node <<null function>><<0x565523b6fc90>>  #uses=0
  CS<None> calls function '_sbrk'
  CS<None> calls function 'test_static'
  CS<None> calls function 'write_number'
  CS<None> calls function 'curr_stamp'
  CS<None> calls function 'mystrlen'
  CS<None> calls function 'mymemcmp'
  CS<None> calls function 'ethernet_link_status_updated'
  CS<None> calls function 'Ethernet_Link_Periodic_Handle'
  CS<None> calls function 'DHCP_Process'
  CS<None> calls function 'DHCP_Periodic_Handle'
  CS<None> calls function 'NMI_Handler'
  CS<None> calls function 'HardFault_Handler'
  CS<None> calls function 'MemManage_Handler'
  CS<None> calls function 'BusFault_Handler'
  CS<None> calls function 'UsageFault_Handler'
  CS<None> calls function 'SysTick_Handler'
  CS<None> calls function 'main'
  CS<None> calls function 'SystemInit'
  CS<None> calls function 'SystemCoreClockUpdate'
  CS<None> calls function 'ETH_PHY_IO_Init'
  CS<None> calls function 'ETH_PHY_IO_DeInit'
  CS<None> calls function 'ETH_PHY_IO_WriteReg'
  CS<None> calls function 'ETH_PHY_IO_ReadReg'
  CS<None> calls function 'ETH_PHY_IO_GetTick'
  CS<None> calls function 'ethernetif_input'
  CS<None> calls function 'ethernetif_init'
  CS<None> calls function 'printf'
  CS<None> calls function 'low_level_output'
  CS<None> calls function 'llvm.memcpy.p0i8.p0i8.i32'
  CS<None> calls function 'llvm.memset.p0i8.i32'
  CS<None> calls function 'ethernet_link_check_state'
  CS<None> calls function 'pbuf_free_custom'
  CS<None> calls function 'sys_now'
  CS<None> calls function 'HAL_ETH_MspInit'
  CS<None> calls function 'HAL_ETH_RxAllocateCallback'
  CS<None> calls function 'HAL_ETH_RxLinkCallback'
  CS<None> calls function 'HAL_ETH_TxFreeCallback'
  CS<None> calls function 'HAL_Init'
  CS<None> calls function 'HAL_InitTick'
  CS<None> calls function 'HAL_MspInit'
  CS<None> calls function 'HAL_DeInit'
  CS<None> calls function 'HAL_MspDeInit'
  CS<None> calls function 'HAL_IncTick'
  CS<None> calls function 'HAL_GetTick'
  CS<None> calls function 'HAL_GetTickPrio'
  CS<None> calls function 'HAL_SetTickFreq'
  CS<None> calls function 'HAL_GetTickFreq'
  CS<None> calls function 'HAL_Delay'
  CS<None> calls function 'HAL_SuspendTick'
  CS<None> calls function 'HAL_ResumeTick'
  CS<None> calls function 'HAL_GetHalVersion'
  CS<None> calls function 'HAL_GetREVID'
  CS<None> calls function 'HAL_GetDEVID'
  CS<None> calls function 'HAL_GetUIDw0'
  CS<None> calls function 'HAL_GetUIDw1'
  CS<None> calls function 'HAL_GetUIDw2'
  CS<None> calls function 'HAL_DBGMCU_EnableDBGSleepMode'
  CS<None> calls function 'HAL_DBGMCU_DisableDBGSleepMode'
  CS<None> calls function 'HAL_DBGMCU_EnableDBGStopMode'
  CS<None> calls function 'HAL_DBGMCU_DisableDBGStopMode'
  CS<None> calls function 'HAL_DBGMCU_EnableDBGStandbyMode'
  CS<None> calls function 'HAL_DBGMCU_DisableDBGStandbyMode'
  CS<None> calls function 'HAL_EnableCompensationCell'
  CS<None> calls function 'HAL_DisableCompensationCell'
  CS<None> calls function 'HAL_EnableFMCMemorySwapping'
  CS<None> calls function 'HAL_DisableFMCMemorySwapping'
  CS<None> calls function 'HAL_EnableMemorySwappingBank'
  CS<None> calls function 'HAL_DisableMemorySwappingBank'
  CS<None> calls function 'BSP_GetVersion'
  CS<None> calls function 'BSP_LED_Init'
  CS<None> calls function 'BSP_LED_DeInit'
  CS<None> calls function 'BSP_LED_On'
  CS<None> calls function 'BSP_LED_Off'
  CS<None> calls function 'BSP_LED_Toggle'
  CS<None> calls function 'BSP_PB_Init'
  CS<None> calls function 'BSP_PB_DeInit'
  CS<None> calls function 'BSP_PB_GetState'
  CS<None> calls function 'BSP_COM_Init'
  CS<None> calls function 'BSP_COM_DeInit'
  CS<None> calls function 'BSP_POTENTIOMETER_Init'
  CS<None> calls function 'BSP_POTENTIOMETER_GetLevel'
  CS<None> calls function 'AUDIO_IO_Init'
  CS<None> calls function 'AUDIO_IO_DeInit'
  CS<None> calls function 'AUDIO_IO_Write'
  CS<None> calls function 'AUDIO_IO_Read'
  CS<None> calls function 'AUDIO_IO_Delay'
  CS<None> calls function 'CAMERA_IO_Init'
  CS<None> calls function 'CAMERA_IO_Write'
  CS<None> calls function 'CAMERA_IO_Read'
  CS<None> calls function 'CAMERA_Delay'
  CS<None> calls function 'EEPROM_IO_Init'
  CS<None> calls function 'EEPROM_IO_WriteData'
  CS<None> calls function 'EEPROM_IO_ReadData'
  CS<None> calls function 'EEPROM_IO_IsDeviceReady'
  CS<None> calls function 'TS_IO_Init'
  CS<None> calls function 'TS_IO_Write'
  CS<None> calls function 'TS_IO_Read'
  CS<None> calls function 'TS_IO_ReadMultiple'
  CS<None> calls function 'TS_IO_WriteMultiple'
  CS<None> calls function 'TS_IO_Delay'
  CS<None> calls function 'OTM8009A_IO_Delay'
  CS<None> calls function 'dhcp_coarse_tmr'
  CS<None> calls function 'dhcp_release_and_stop'
  CS<None> calls function 'dhcp_start'
  CS<None> calls function 'dhcp_renew'
  CS<None> calls function 'rand'
  CS<None> calls function 'dhcp_recv'
  CS<None> calls function 'dhcp_supplied_address'
  CS<None> calls function 'dhcp_fine_tmr'
  CS<None> calls function 'dhcp_set_struct'
  CS<None> calls function 'dhcp_cleanup'
  CS<None> calls function 'dhcp_inform'
  CS<None> calls function 'dhcp_network_changed'
  CS<None> calls function 'dhcp_arp_reply'
  CS<None> calls function 'dhcp_release'
  CS<None> calls function 'dhcp_stop'
  CS<None> calls function 'lwip_init'
  CS<None> calls function 'netif_init'
  CS<None> calls function 'netif_input'
  CS<None> calls function 'netif_add_noaddr'
  CS<None> calls function 'netif_add'
  CS<None> calls function 'netif_null_output_ip4'
  CS<None> calls function 'netif_set_addr'
  CS<None> calls function 'netif_set_ipaddr'
  CS<None> calls function 'netif_set_netmask'
  CS<None> calls function 'netif_set_gw'
  CS<None> calls function 'netif_remove'
  CS<None> calls function 'netif_set_down'
  CS<None> calls function 'netif_set_default'
  CS<None> calls function 'netif_set_up'
  CS<None> calls function 'netif_set_link_up'
  CS<None> calls function 'netif_set_link_down'
  CS<None> calls function 'netif_set_link_callback'
  CS<None> calls function 'netif_name_to_index'
  CS<None> calls function 'netif_find'
  CS<None> calls function 'atoi'
  CS<None> calls function 'netif_index_to_name'
  CS<None> calls function 'netif_get_by_index'
  CS<None> calls function 'HAL_RCC_DeInit'
  CS<None> calls function 'HAL_RCC_OscConfig'
  CS<None> calls function 'HAL_RCC_ClockConfig'
  CS<None> calls function 'HAL_RCC_GetSysClockFreq'
  CS<None> calls function 'HAL_RCC_MCOConfig'
  CS<None> calls function 'HAL_RCC_EnableCSS'
  CS<None> calls function 'HAL_RCC_DisableCSS'
  CS<None> calls function 'HAL_RCC_GetHCLKFreq'
  CS<None> calls function 'HAL_RCC_GetPCLK1Freq'
  CS<None> calls function 'HAL_RCC_GetPCLK2Freq'
  CS<None> calls function 'HAL_RCC_GetOscConfig'
  CS<None> calls function 'llvm.ctlz.i32'
  CS<None> calls function 'HAL_RCC_GetClockConfig'
  CS<None> calls function 'HAL_RCC_NMI_IRQHandler'
  CS<None> calls function 'HAL_RCC_CSSCallback'
  CS<None> calls function 'HAL_ETH_Init'
  CS<None> calls function 'HAL_ETH_DeInit'
  CS<None> calls function 'HAL_ETH_MspDeInit'
  CS<None> calls function 'HAL_ETH_Start'
  CS<None> calls function 'HAL_ETH_Start_IT'
  CS<None> calls function 'HAL_ETH_Stop'
  CS<None> calls function 'HAL_ETH_Stop_IT'
  CS<None> calls function 'HAL_ETH_Transmit'
  CS<None> calls function 'HAL_ETH_Transmit_IT'
  CS<None> calls function 'HAL_ETH_ReadData'
  CS<None> calls function 'HAL_ETH_RegisterRxAllocateCallback'
  CS<None> calls function 'HAL_ETH_UnRegisterRxAllocateCallback'
  CS<None> calls function 'HAL_ETH_RegisterRxLinkCallback'
  CS<None> calls function 'HAL_ETH_UnRegisterRxLinkCallback'
  CS<None> calls function 'HAL_ETH_GetRxDataErrorCode'
  CS<None> calls function 'HAL_ETH_RegisterTxFreeCallback'
  CS<None> calls function 'HAL_ETH_UnRegisterTxFreeCallback'
  CS<None> calls function 'HAL_ETH_ReleaseTxPacket'
  CS<None> calls function 'HAL_ETH_IRQHandler'
  CS<None> calls function 'HAL_ETH_RxCpltCallback'
  CS<None> calls function 'HAL_ETH_TxCpltCallback'
  CS<None> calls function 'HAL_ETH_ErrorCallback'
  CS<None> calls function 'HAL_ETH_PMTCallback'
  CS<None> calls function 'HAL_ETH_WakeUpCallback'
  CS<None> calls function 'HAL_ETH_ReadPHYRegister'
  CS<None> calls function 'HAL_ETH_WritePHYRegister'
  CS<None> calls function 'HAL_ETH_GetMACConfig'
  CS<None> calls function 'HAL_ETH_GetDMAConfig'
  CS<None> calls function 'HAL_ETH_SetMACConfig'
  CS<None> calls function 'HAL_ETH_SetDMAConfig'
  CS<None> calls function 'HAL_ETH_SetMDIOClockRange'
  CS<None> calls function 'HAL_ETH_SetMACFilterConfig'
  CS<None> calls function 'HAL_ETH_GetMACFilterConfig'
  CS<None> calls function 'HAL_ETH_SetSourceMACAddrMatch'
  CS<None> calls function 'HAL_ETH_SetHashTable'
  CS<None> calls function 'HAL_ETH_SetRxVLANIdentifier'
  CS<None> calls function 'HAL_ETH_EnterPowerDownMode'
  CS<None> calls function 'HAL_ETH_ExitPowerDownMode'
  CS<None> calls function 'HAL_ETH_SetWakeUpFilter'
  CS<None> calls function 'HAL_ETH_GetState'
  CS<None> calls function 'HAL_ETH_GetError'
  CS<None> calls function 'HAL_ETH_GetDMAError'
  CS<None> calls function 'HAL_ETH_GetMACError'
  CS<None> calls function 'HAL_ETH_GetMACWakeUpSource'
  CS<None> calls function 'DP83848_RegisterBusIO'
  CS<None> calls function 'DP83848_Init'
  CS<None> calls function 'DP83848_DeInit'
  CS<None> calls function 'DP83848_DisablePowerDownMode'
  CS<None> calls function 'DP83848_EnablePowerDownMode'
  CS<None> calls function 'DP83848_StartAutoNego'
  CS<None> calls function 'DP83848_GetLinkState'
  CS<None> calls function 'DP83848_SetLinkState'
  CS<None> calls function 'DP83848_EnableLoopbackMode'
  CS<None> calls function 'DP83848_DisableLoopbackMode'
  CS<None> calls function 'DP83848_EnableIT'
  CS<None> calls function 'DP83848_DisableIT'
  CS<None> calls function 'DP83848_ClearIT'
  CS<None> calls function 'DP83848_GetITStatus'
  CS<None> calls function 'pbuf_alloc'
  CS<None> calls function 'pbuf_alloc_reference'
  CS<None> calls function 'pbuf_free'
  CS<None> calls function 'pbuf_alloced_custom'
  CS<None> calls function 'pbuf_realloc'
  CS<None> calls function 'pbuf_add_header'
  CS<None> calls function 'pbuf_add_header_force'
  CS<None> calls function 'pbuf_remove_header'
  CS<None> calls function 'pbuf_header'
  CS<None> calls function 'pbuf_header_force'
  CS<None> calls function 'pbuf_free_header'
  CS<None> calls function 'pbuf_clen'
  CS<None> calls function 'pbuf_ref'
  CS<None> calls function 'pbuf_cat'
  CS<None> calls function 'pbuf_chain'
  CS<None> calls function 'pbuf_dechain'
  CS<None> calls function 'pbuf_copy'
  CS<None> calls function 'pbuf_copy_partial'
  CS<None> calls function 'pbuf_get_contiguous'
  CS<None> calls function 'pbuf_skip'
  CS<None> calls function 'pbuf_take'
  CS<None> calls function 'pbuf_take_at'
  CS<None> calls function 'pbuf_coalesce'
  CS<None> calls function 'pbuf_clone'
  CS<None> calls function 'pbuf_get_at'
  CS<None> calls function 'pbuf_try_get_at'
  CS<None> calls function 'pbuf_put_at'
  CS<None> calls function 'pbuf_memcmp'
  CS<None> calls function 'pbuf_memfind'
  CS<None> calls function 'pbuf_strstr'
  CS<None> calls function 'strlen'
  CS<None> calls function 'HAL_GPIO_Init'
  CS<None> calls function 'HAL_GPIO_DeInit'
  CS<None> calls function 'HAL_GPIO_ReadPin'
  CS<None> calls function 'HAL_GPIO_WritePin'
  CS<None> calls function 'HAL_GPIO_TogglePin'
  CS<None> calls function 'HAL_GPIO_LockPin'
  CS<None> calls function 'HAL_GPIO_EXTI_IRQHandler'
  CS<None> calls function 'HAL_GPIO_EXTI_Callback'
  CS<None> calls function 'HAL_UART_Init'
  CS<None> calls function 'HAL_UART_MspInit'
  CS<None> calls function 'UART_SetConfig'
  CS<None> calls function 'UART_AdvFeatureConfig'
  CS<None> calls function 'UART_CheckIdleState'
  CS<None> calls function 'UART_WaitOnFlagUntilTimeout'
  CS<None> calls function 'HAL_HalfDuplex_Init'
  CS<None> calls function 'HAL_LIN_Init'
  CS<None> calls function 'HAL_MultiProcessor_Init'
  CS<None> calls function 'HAL_UART_DeInit'
  CS<None> calls function 'HAL_UART_MspDeInit'
  CS<None> calls function 'HAL_UART_Transmit'
  CS<None> calls function 'HAL_UART_Receive'
  CS<None> calls function 'HAL_UART_Transmit_IT'
  CS<None> calls function 'UART_TxISR_16BIT'
  CS<None> calls function 'UART_TxISR_8BIT'
  CS<None> calls function 'HAL_UART_Receive_IT'
  CS<None> calls function 'UART_Start_Receive_IT'
  CS<None> calls function 'UART_RxISR_16BIT'
  CS<None> calls function 'UART_RxISR_8BIT'
  CS<None> calls function 'HAL_UARTEx_RxEventCallback'
  CS<None> calls function 'HAL_UART_RxCpltCallback'
  CS<None> calls function 'HAL_UART_Transmit_DMA'
  CS<None> calls function 'UART_DMATransmitCplt'
  CS<None> calls function 'UART_DMATxHalfCplt'
  CS<None> calls function 'UART_DMAError'
  CS<None> calls function 'HAL_UART_ErrorCallback'
  CS<None> calls function 'HAL_UART_TxHalfCpltCallback'
  CS<None> calls function 'HAL_UART_TxCpltCallback'
  CS<None> calls function 'HAL_UART_Receive_DMA'
  CS<None> calls function 'UART_Start_Receive_DMA'
  CS<None> calls function 'UART_DMAReceiveCplt'
  CS<None> calls function 'UART_DMARxHalfCplt'
  CS<None> calls function 'HAL_UART_RxHalfCpltCallback'
  CS<None> calls function 'HAL_UART_DMAPause'
  CS<None> calls function 'HAL_UART_DMAResume'
  CS<None> calls function 'HAL_UART_DMAStop'
  CS<None> calls function 'HAL_UART_Abort'
  CS<None> calls function 'HAL_UART_AbortTransmit'
  CS<None> calls function 'HAL_UART_AbortReceive'
  CS<None> calls function 'HAL_UART_Abort_IT'
  CS<None> calls function 'UART_DMATxAbortCallback'
  CS<None> calls function 'UART_DMARxAbortCallback'
  CS<None> calls function 'HAL_UART_AbortCpltCallback'
  CS<None> calls function 'HAL_UART_AbortTransmit_IT'
  CS<None> calls function 'UART_DMATxOnlyAbortCallback'
  CS<None> calls function 'HAL_UART_AbortTransmitCpltCallback'
  CS<None> calls function 'HAL_UART_AbortReceive_IT'
  CS<None> calls function 'UART_DMARxOnlyAbortCallback'
  CS<None> calls function 'HAL_UART_AbortReceiveCpltCallback'
  CS<None> calls function 'HAL_UART_IRQHandler'
  CS<None> calls function 'UART_DMAAbortOnError'
  CS<None> calls function 'HAL_UARTEx_WakeupCallback'
  CS<None> calls function 'HAL_UART_ReceiverTimeout_Config'
  CS<None> calls function 'HAL_UART_EnableReceiverTimeout'
  CS<None> calls function 'HAL_UART_DisableReceiverTimeout'
  CS<None> calls function 'HAL_MultiProcessor_EnableMuteMode'
  CS<None> calls function 'HAL_MultiProcessor_DisableMuteMode'
  CS<None> calls function 'HAL_MultiProcessor_EnterMuteMode'
  CS<None> calls function 'HAL_HalfDuplex_EnableTransmitter'
  CS<None> calls function 'HAL_HalfDuplex_EnableReceiver'
  CS<None> calls function 'HAL_LIN_SendBreak'
  CS<None> calls function 'HAL_UART_GetState'
  CS<None> calls function 'HAL_UART_GetError'
  CS<None> calls function 'HAL_NVIC_SetPriorityGrouping'
  CS<None> calls function 'HAL_NVIC_SetPriority'
  CS<None> calls function 'HAL_NVIC_EnableIRQ'
  CS<None> calls function 'HAL_NVIC_DisableIRQ'
  CS<None> calls function 'HAL_NVIC_SystemReset'
  CS<None> calls function 'HAL_SYSTICK_Config'
  CS<None> calls function 'HAL_MPU_Disable'
  CS<None> calls function 'HAL_MPU_Enable'
  CS<None> calls function 'HAL_MPU_ConfigRegion'
  CS<None> calls function 'HAL_NVIC_GetPriorityGrouping'
  CS<None> calls function 'HAL_NVIC_GetPriority'
  CS<None> calls function 'HAL_NVIC_SetPendingIRQ'
  CS<None> calls function 'HAL_NVIC_GetPendingIRQ'
  CS<None> calls function 'HAL_NVIC_ClearPendingIRQ'
  CS<None> calls function 'HAL_NVIC_GetActive'
  CS<None> calls function 'HAL_SYSTICK_CLKSourceConfig'
  CS<None> calls function 'HAL_SYSTICK_IRQHandler'
  CS<None> calls function 'HAL_SYSTICK_Callback'
  CS<None> calls function 'tcp_timer_needed'
  CS<None> calls function 'tcpip_tcp_timer'
  CS<None> calls function 'sys_timeout'
  CS<None> calls function 'sys_timeouts_init'
  CS<None> calls function 'lwip_cyclic_timer'
  CS<None> calls function 'sys_untimeout'
  CS<None> calls function 'sys_check_timeouts'
  CS<None> calls function 'sys_restart_timeouts'
  CS<None> calls function 'sys_timeouts_sleeptime'
  CS<None> calls function 'HAL_I2C_Init'
  CS<None> calls function 'HAL_I2C_MspInit'
  CS<None> calls function 'HAL_I2C_DeInit'
  CS<None> calls function 'HAL_I2C_MspDeInit'
  CS<None> calls function 'HAL_I2C_Master_Transmit'
  CS<None> calls function 'HAL_I2C_Master_Receive'
  CS<None> calls function 'HAL_I2C_Slave_Transmit'
  CS<None> calls function 'HAL_I2C_Slave_Receive'
  CS<None> calls function 'HAL_I2C_Master_Transmit_IT'
  CS<None> calls function 'I2C_Master_ISR_IT'
  CS<None> calls function 'I2C_Master_ISR_DMA'
  CS<None> calls function 'I2C_Slave_ISR_DMA'
  CS<None> calls function 'HAL_I2C_AddrCallback'
  CS<None> calls function 'I2C_Slave_ISR_IT'
  CS<None> calls function 'I2C_DMAAbort'
  CS<None> calls function 'HAL_I2C_AbortCpltCallback'
  CS<None> calls function 'HAL_I2C_ErrorCallback'
  CS<None> calls function 'HAL_I2C_SlaveTxCpltCallback'
  CS<None> calls function 'HAL_I2C_SlaveRxCpltCallback'
  CS<None> calls function 'HAL_I2C_ListenCpltCallback'
  CS<None> calls function 'HAL_I2C_MemTxCpltCallback'
  CS<None> calls function 'HAL_I2C_MasterTxCpltCallback'
  CS<None> calls function 'HAL_I2C_MemRxCpltCallback'
  CS<None> calls function 'HAL_I2C_MasterRxCpltCallback'
  CS<None> calls function 'HAL_I2C_Master_Receive_IT'
  CS<None> calls function 'HAL_I2C_Slave_Transmit_IT'
  CS<None> calls function 'HAL_I2C_Slave_Receive_IT'
  CS<None> calls function 'HAL_I2C_Master_Transmit_DMA'
  CS<None> calls function 'I2C_DMAMasterTransmitCplt'
  CS<None> calls function 'I2C_DMAError'
  CS<None> calls function 'HAL_I2C_Master_Receive_DMA'
  CS<None> calls function 'I2C_DMAMasterReceiveCplt'
  CS<None> calls function 'HAL_I2C_Slave_Transmit_DMA'
  CS<None> calls function 'I2C_DMASlaveTransmitCplt'
  CS<None> calls function 'HAL_I2C_Slave_Receive_DMA'
  CS<None> calls function 'I2C_DMASlaveReceiveCplt'
  CS<None> calls function 'HAL_I2C_Mem_Write'
  CS<None> calls function 'HAL_I2C_Mem_Read'
  CS<None> calls function 'HAL_I2C_Mem_Write_IT'
  CS<None> calls function 'I2C_Mem_ISR_IT'
  CS<None> calls function 'HAL_I2C_Mem_Read_IT'
  CS<None> calls function 'HAL_I2C_Mem_Write_DMA'
  CS<None> calls function 'I2C_Mem_ISR_DMA'
  CS<None> calls function 'HAL_I2C_Mem_Read_DMA'
  CS<None> calls function 'HAL_I2C_IsDeviceReady'
  CS<None> calls function 'HAL_I2C_Master_Seq_Transmit_IT'
  CS<None> calls function 'HAL_I2C_Master_Seq_Transmit_DMA'
  CS<None> calls function 'HAL_I2C_Master_Seq_Receive_IT'
  CS<None> calls function 'HAL_I2C_Master_Seq_Receive_DMA'
  CS<None> calls function 'HAL_I2C_Slave_Seq_Transmit_IT'
  CS<None> calls function 'HAL_I2C_Slave_Seq_Transmit_DMA'
  CS<None> calls function 'HAL_I2C_Slave_Seq_Receive_IT'
  CS<None> calls function 'HAL_I2C_Slave_Seq_Receive_DMA'
  CS<None> calls function 'HAL_I2C_EnableListen_IT'
  CS<None> calls function 'HAL_I2C_DisableListen_IT'
  CS<None> calls function 'HAL_I2C_Master_Abort_IT'
  CS<None> calls function 'HAL_I2C_EV_IRQHandler'
  CS<None> calls function 'HAL_I2C_ER_IRQHandler'
  CS<None> calls function 'HAL_I2C_GetState'
  CS<None> calls function 'HAL_I2C_GetMode'
  CS<None> calls function 'HAL_I2C_GetError'
  CS<None> calls function 'lwip_htons'
  CS<None> calls function 'lwip_htonl'
  CS<None> calls function 'lwip_strnstr'
  CS<None> calls function 'strncmp'
  CS<None> calls function 'lwip_stricmp'
  CS<None> calls function 'lwip_strnicmp'
  CS<None> calls function 'lwip_itoa'
  CS<None> calls function 'llvm.memmove.p0i8.p0i8.i32'
  CS<None> calls function 'HAL_PWREx_EnableBkUpReg'
  CS<None> calls function 'HAL_PWREx_DisableBkUpReg'
  CS<None> calls function 'HAL_PWREx_EnableFlashPowerDown'
  CS<None> calls function 'HAL_PWREx_DisableFlashPowerDown'
  CS<None> calls function 'HAL_PWREx_EnableMainRegulatorLowVoltage'
  CS<None> calls function 'HAL_PWREx_DisableMainRegulatorLowVoltage'
  CS<None> calls function 'HAL_PWREx_EnableLowRegulatorLowVoltage'
  CS<None> calls function 'HAL_PWREx_DisableLowRegulatorLowVoltage'
  CS<None> calls function 'HAL_PWREx_EnableOverDrive'
  CS<None> calls function 'HAL_PWREx_DisableOverDrive'
  CS<None> calls function 'HAL_PWREx_EnterUnderDriveSTOPMode'
  CS<None> calls function 'HAL_PWREx_GetVoltageRange'
  CS<None> calls function 'HAL_PWREx_ControlVoltageScaling'
  CS<None> calls function 'ethernet_input'
  CS<None> calls function 'memcmp'
  CS<None> calls function 'ethernet_output'
  CS<None> calls function 'mem_init'
  CS<None> calls function 'mem_free'
  CS<None> calls function 'mem_trim'
  CS<None> calls function 'mem_malloc'
  CS<None> calls function 'mem_calloc'
  CS<None> calls function 'udp_init'
  CS<None> calls function 'udp_input'
  CS<None> calls function 'udp_send'
  CS<None> calls function 'udp_sendto'
  CS<None> calls function 'udp_sendto_if'
  CS<None> calls function 'udp_sendto_if_src'
  CS<None> calls function 'udp_bind'
  CS<None> calls function 'udp_bind_netif'
  CS<None> calls function 'udp_connect'
  CS<None> calls function 'udp_disconnect'
  CS<None> calls function 'udp_recv'
  CS<None> calls function 'udp_remove'
  CS<None> calls function 'udp_new'
  CS<None> calls function 'udp_new_ip_type'
  CS<None> calls function 'udp_netif_ip_addr_changed'
  CS<None> calls function 'ip4_addr_isbroadcast_u32'
  CS<None> calls function 'ip4_addr_netmask_valid'
  CS<None> calls function 'ipaddr_addr'
  CS<None> calls function 'ip4addr_aton'
  CS<None> calls function 'ip4addr_ntoa'
  CS<None> calls function 'ip4addr_ntoa_r'
  CS<None> calls function 'tcp_init'
  CS<None> calls function 'tcp_free'
  CS<None> calls function 'tcp_tmr'
  CS<None> calls function 'tcp_fasttmr'
  CS<None> calls function 'tcp_slowtmr'
  CS<None> calls function 'tcp_pcb_purge'
  CS<None> calls function 'tcp_segs_free'
  CS<None> calls function 'tcp_seg_free'
  CS<None> calls function 'tcp_process_refused_data'
  CS<None> calls function 'tcp_recv_null'
  CS<None> calls function 'tcp_recved'
  CS<None> calls function 'tcp_close'
  CS<None> calls function 'tcp_pcb_remove'
  CS<None> calls function 'tcp_update_rcv_ann_wnd'
  CS<None> calls function 'tcp_shutdown'
  CS<None> calls function 'tcp_abandon'
  CS<None> calls function 'tcp_abort'
  CS<None> calls function 'tcp_bind'
  CS<None> calls function 'tcp_bind_netif'
  CS<None> calls function 'tcp_listen_with_backlog'
  CS<None> calls function 'tcp_listen_with_backlog_and_err'
  CS<None> calls function 'tcp_accept_null'
  CS<None> calls function 'tcp_connect'
  CS<None> calls function 'tcp_next_iss'
  CS<None> calls function 'tcp_eff_send_mss_netif'
  CS<None> calls function 'tcp_txnow'
  CS<None> calls function 'tcp_setprio'
  CS<None> calls function 'tcp_alloc'
  CS<None> calls function 'tcp_new'
  CS<None> calls function 'tcp_new_ip_type'
  CS<None> calls function 'tcp_arg'
  CS<None> calls function 'tcp_recv'
  CS<None> calls function 'tcp_sent'
  CS<None> calls function 'tcp_err'
  CS<None> calls function 'tcp_accept'
  CS<None> calls function 'tcp_poll'
  CS<None> calls function 'tcp_netif_ip_addr_changed'
  CS<None> calls function 'tcp_debug_state_str'
  CS<None> calls function 'tcp_tcp_get_tcp_addrinfo'
  CS<None> calls function 'etharp_tmr'
  CS<None> calls function 'etharp_request'
  CS<None> calls function 'etharp_cleanup_netif'
  CS<None> calls function 'etharp_find_addr'
  CS<None> calls function 'etharp_get_entry'
  CS<None> calls function 'etharp_input'
  CS<None> calls function 'etharp_output'
  CS<None> calls function 'etharp_query'
  CS<None> calls function 'HAL_DMA_Init'
  CS<None> calls function 'HAL_DMA_DeInit'
  CS<None> calls function 'HAL_DMA_Start'
  CS<None> calls function 'HAL_DMA_Start_IT'
  CS<None> calls function 'HAL_DMA_Abort'
  CS<None> calls function 'HAL_DMA_Abort_IT'
  CS<None> calls function 'HAL_DMA_PollForTransfer'
  CS<None> calls function 'HAL_DMA_IRQHandler'
  CS<None> calls function 'HAL_DMA_RegisterCallback'
  CS<None> calls function 'HAL_DMA_UnRegisterCallback'
  CS<None> calls function 'HAL_DMA_GetState'
  CS<None> calls function 'HAL_DMA_GetError'
  CS<None> calls function 'icmp_input'
  CS<None> calls function 'icmp_dest_unreach'
  CS<None> calls function 'icmp_time_exceeded'
  CS<None> calls function 'memp_init_pool'
  CS<None> calls function 'memp_init'
  CS<None> calls function 'memp_malloc_pool'
  CS<None> calls function 'memp_malloc'
  CS<None> calls function 'memp_free_pool'
  CS<None> calls function 'memp_free'
  CS<None> calls function 'HAL_ADC_Init'
  CS<None> calls function 'HAL_ADC_MspInit'
  CS<None> calls function 'HAL_ADC_DeInit'
  CS<None> calls function 'HAL_ADC_MspDeInit'
  CS<None> calls function 'HAL_ADC_Start'
  CS<None> calls function 'HAL_ADC_Stop'
  CS<None> calls function 'HAL_ADC_PollForConversion'
  CS<None> calls function 'HAL_ADC_PollForEvent'
  CS<None> calls function 'HAL_ADC_Start_IT'
  CS<None> calls function 'HAL_ADC_Stop_IT'
  CS<None> calls function 'HAL_ADC_IRQHandler'
  CS<None> calls function 'HAL_ADC_ConvCpltCallback'
  CS<None> calls function 'HAL_ADC_LevelOutOfWindowCallback'
  CS<None> calls function 'HAL_ADC_ErrorCallback'
  CS<None> calls function 'HAL_ADC_Start_DMA'
  CS<None> calls function 'ADC_DMAConvCplt'
  CS<None> calls function 'ADC_DMAHalfConvCplt'
  CS<None> calls function 'ADC_DMAError'
  CS<None> calls function 'HAL_ADC_ConvHalfCpltCallback'
  CS<None> calls function 'HAL_ADC_Stop_DMA'
  CS<None> calls function 'HAL_ADC_GetValue'
  CS<None> calls function 'HAL_ADC_ConfigChannel'
  CS<None> calls function 'HAL_ADC_AnalogWDGConfig'
  CS<None> calls function 'HAL_ADC_GetState'
  CS<None> calls function 'HAL_ADC_GetError'
  CS<None> calls function 'tcp_write'
  CS<None> calls function 'tcp_split_unsent_seg'
  CS<None> calls function 'tcp_send_fin'
  CS<None> calls function 'tcp_enqueue_flags'
  CS<None> calls function 'tcp_output'
  CS<None> calls function 'tcp_send_empty_ack'
  CS<None> calls function 'tcp_rexmit_rto_prepare'
  CS<None> calls function 'tcp_rexmit_rto_commit'
  CS<None> calls function 'tcp_rexmit_rto'
  CS<None> calls function 'tcp_rexmit'
  CS<None> calls function 'tcp_rexmit_fast'
  CS<None> calls function 'tcp_rst'
  CS<None> calls function 'tcp_keepalive'
  CS<None> calls function 'tcp_zero_window_probe'
  CS<None> calls function 'ip4_route'
  CS<None> calls function 'ip4_input'
  CS<None> calls function 'ip4_output_if'
  CS<None> calls function 'ip4_output_if_src'
  CS<None> calls function 'ip4_output'
  CS<None> calls function 'lwip_standard_chksum'
  CS<None> calls function 'inet_chksum_pseudo'
  CS<None> calls function 'ip_chksum_pseudo'
  CS<None> calls function 'inet_chksum_pseudo_partial'
  CS<None> calls function 'ip_chksum_pseudo_partial'
  CS<None> calls function 'inet_chksum'
  CS<None> calls function 'inet_chksum_pbuf'
  CS<None> calls function 'ip_reass_tmr'
  CS<None> calls function 'ip4_reass'
  CS<None> calls function 'ip4_frag'
  CS<None> calls function 'ipfrag_free_pbuf_custom'
  CS<None> calls function 'HAL_ADCEx_InjectedStart'
  CS<None> calls function 'HAL_ADCEx_InjectedStart_IT'
  CS<None> calls function 'HAL_ADCEx_InjectedStop'
  CS<None> calls function 'HAL_ADCEx_InjectedPollForConversion'
  CS<None> calls function 'HAL_ADCEx_InjectedStop_IT'
  CS<None> calls function 'HAL_ADCEx_InjectedGetValue'
  CS<None> calls function 'HAL_ADCEx_MultiModeStart_DMA'
  CS<None> calls function 'ADC_MultiModeDMAConvCplt'
  CS<None> calls function 'ADC_MultiModeDMAHalfConvCplt'
  CS<None> calls function 'ADC_MultiModeDMAError'
  CS<None> calls function 'HAL_ADCEx_MultiModeStop_DMA'
  CS<None> calls function 'HAL_ADCEx_MultiModeGetValue'
  CS<None> calls function 'HAL_ADCEx_InjectedConvCpltCallback'
  CS<None> calls function 'HAL_ADCEx_InjectedConfigChannel'
  CS<None> calls function 'HAL_ADCEx_MultiModeConfigChannel'
  CS<None> calls function 'tcp_input'
  CS<None> calls function 'tcp_trigger_input_pcb_close'
  CS<None> calls function 'tcp_echoserver_init'
  CS<None> calls function 'tcp_echoserver_accept'
  CS<None> calls function 'tcp_echoserver_recv'
  CS<None> calls function 'tcp_echoserver_error'
  CS<None> calls function 'tcp_echoserver_poll'
  CS<None> calls function 'tcp_echoserver_sent'
  CS<None> calls function 'init_mpu'
  CS<None> calls function 'rtmk_init'
  CS<None> calls function 'switch_view'
  CS<None> calls function 'DebugMon_Handler'
  CS<None> calls function 'lastCompart'
  CS<None> calls function 'xcall_arg0'
  CS<None> calls function 'xcall_arg1i'
  CS<None> calls function 'pcall_arg1p'
  CS<None> calls function 'rtmkcpy'
  CS<None> calls function 'pcall_arg0'
  CS<None> calls function 'pcall_arg3iii'
  CS<None> calls function 'pcall_arg1i'
  CS<None> calls function 'xcall_arg2ii'
  CS<None> calls function 'xcall_arg2ip'
  CS<None> calls function 'xcall_arg1p'
  CS<None> calls function 'xcall_arg2pi'
  CS<None> calls function 'xcall_arg3pii'
  CS<None> calls function 'icall_arg3pii'
  CS<None> calls function 'xcall_arg2pp'
  CS<None> calls function 'switch_view_svc'
  CS<None> calls function 'icall_arg0'
  CS<None> calls function 'icall_arg1i'
  CS<None> calls function 'icall_arg1i_noid'
  CS<None> calls function 'getCompartmentFromAddr'
  CS<None> calls function 'icall_arg1p'
  CS<None> calls function 'icall_arg1p_noid'
  CS<None> calls function 'icall_arg0_noid'
  CS<None> calls function 'xcall_arg0_noid'
  CS<None> calls function 'xcall_arg1p_noid'
  CS<None> calls function 'icall_arg2pi'
  CS<None> calls function 'icall_arg2pd'
  CS<None> calls function 'icall_arg2pp'
  CS<None> calls function 'icall_arg3ppi'
  CS<None> calls function 'icall_arg4ppii'
  CS<None> calls function 'icall_arg4pppi'
  CS<None> calls function 'icall_arg6ppipip'
  CS<None> calls function 'icall_arg6piiipp'
  CS<None> calls function 'icall_arg5iiipi'
  CS<None> calls function '_kill'
  CS<None> calls function '_getpid'
  CS<None> calls function '_read'
  CS<None> calls function '_lseek'
  CS<None> calls function '_close'
  CS<None> calls function '_write'
  CS<None> calls function '_fstat'
  CS<None> calls function '_isatty'

Call graph node for function: 'ADC_DMAConvCplt'<<0x565523c2e670>>  #uses=1
  CS<0x56552491ba00> calls function 'HAL_ADC_ConvCpltCallback'
  CS<0x56552491c070> calls function 'HAL_ADC_ErrorCallback'
  CS<0x56552491c5e0> calls external node

Call graph node for function: 'ADC_DMAError'<<0x565523c2e8d0>>  #uses=1
  CS<0x56552491f3e0> calls function 'HAL_ADC_ErrorCallback'

Call graph node for function: 'ADC_DMAHalfConvCplt'<<0x565523c2e7d0>>  #uses=1
  CS<0x56552491e060> calls function 'HAL_ADC_ConvHalfCpltCallback'

Call graph node for function: 'ADC_Init'<<0x565523c2de10>>  #uses=1

Call graph node for function: 'ADC_MultiModeDMAConvCplt'<<0x565523c0b2a0>>  #uses=1
  CS<0x565524b21930> calls function 'HAL_ADC_ConvCpltCallback'
  CS<0x565524b21ea0> calls external node

Call graph node for function: 'ADC_MultiModeDMAError'<<0x565523c0b430>>  #uses=1
  CS<0x565524b248d0> calls function 'HAL_ADC_ErrorCallback'

Call graph node for function: 'ADC_MultiModeDMAHalfConvCplt'<<0x565523c0b3b0>>  #uses=1
  CS<0x565524b23550> calls function 'HAL_ADC_ConvHalfCpltCallback'

Call graph node for function: 'AUDIO_IO_DeInit'<<0x565524c230d0>>  #uses=1

Call graph node for function: 'AUDIO_IO_Delay'<<0x565524c23670>>  #uses=1
  CS<0x565523dd7240> calls function 'HAL_Delay'

Call graph node for function: 'AUDIO_IO_Init'<<0x565524c0bb10>>  #uses=1
  CS<0x565523dc7e30> calls function 'I2Cx_Init'

Call graph node for function: 'AUDIO_IO_Read'<<0x565524c23460>>  #uses=1
  CS<0x565523b908f0> calls function 'I2Cx_ReadMultiple'

Call graph node for function: 'AUDIO_IO_Write'<<0x565524c23150>>  #uses=1
  CS<0x565523ba21d0> calls function 'I2Cx_WriteMultiple'

Call graph node for function: 'BSP_COM_DeInit'<<0x565524c0b480>>  #uses=1
  CS<0x565523dc1ff0> calls function 'HAL_UART_DeInit'

Call graph node for function: 'BSP_COM_Init'<<0x565524c0b270>>  #uses=1
  CS<0x565523dbef60> calls function 'HAL_GPIO_Init'
  CS<0x565523dbfc40> calls function 'HAL_GPIO_Init'
  CS<0x565523dc0200> calls function 'HAL_UART_Init'

Call graph node for function: 'BSP_Config'<<0x565523b88480>>  #uses=1
  CS<0x565523d52360> calls function 'BSP_LED_Init'
  CS<0x565523d52400> calls function 'BSP_LED_Init'
  CS<0x565523d524d0> calls function 'BSP_LED_Init'
  CS<0x565523d525a0> calls function 'BSP_LED_Init'

Call graph node for function: 'BSP_GetVersion'<<0x565524c08630>>  #uses=1

Call graph node for function: 'BSP_LED_DeInit'<<0x565524c08790>>  #uses=1
  CS<0x565523daefa0> calls function 'HAL_GPIO_WritePin'
  CS<0x565523daf490> calls function 'HAL_GPIO_DeInit'

Call graph node for function: 'BSP_LED_Init'<<0x565523b88900>>  #uses=5
  CS<0x565523dad270> calls function 'HAL_GPIO_Init'
  CS<0x565523dad7f0> calls function 'HAL_GPIO_WritePin'

Call graph node for function: 'BSP_LED_Off'<<0x565523b87500>>  #uses=6
  CS<0x565523db0d30> calls function 'HAL_GPIO_WritePin'

Call graph node for function: 'BSP_LED_On'<<0x565523b87630>>  #uses=4
  CS<0x565523db0100> calls function 'HAL_GPIO_WritePin'

Call graph node for function: 'BSP_LED_Toggle'<<0x565524c08920>>  #uses=1
  CS<0x565523db1940> calls function 'HAL_GPIO_TogglePin'

Call graph node for function: 'BSP_PB_DeInit'<<0x565524c08c90>>  #uses=1
  CS<0x565523db9750> calls function 'HAL_NVIC_DisableIRQ'
  CS<0x565523db9ba0> calls function 'HAL_GPIO_DeInit'

Call graph node for function: 'BSP_PB_GetState'<<0x565524c08d90>>  #uses=1
  CS<0x565523dba890> calls function 'HAL_GPIO_ReadPin'

Call graph node for function: 'BSP_PB_Init'<<0x565524c08a50>>  #uses=1
  CS<0x565523db5d10> calls function 'HAL_GPIO_Init'
  CS<0x565523db7110> calls function 'HAL_GPIO_Init'
  CS<0x565523db74c0> calls function 'HAL_NVIC_SetPriority'
  CS<0x565523db7830> calls function 'HAL_NVIC_EnableIRQ'

Call graph node for function: 'BSP_POTENTIOMETER_GetLevel'<<0x565524c0b860>>  #uses=1
  CS<0x565523dc7140> calls function 'HAL_ADC_Start'
  CS<0x565523dc7370> calls function 'HAL_ADC_PollForConversion'
  CS<0x565523dc75e0> calls function 'HAL_ADC_GetValue'

Call graph node for function: 'BSP_POTENTIOMETER_Init'<<0x565524c0b580>>  #uses=1
  CS<0x565523dc5300> calls function 'HAL_GPIO_Init'
  CS<0x565523dc5490> calls function 'HAL_ADC_DeInit'
  CS<0x565523dc5e60> calls function 'HAL_ADC_Init'
  CS<0x565523dc6610> calls function 'HAL_ADC_ConfigChannel'

Call graph node for function: 'BusFault_Handler'<<0x565523b87b40>>  #uses=1

Call graph node for function: 'CAMERA_Delay'<<0x565524c23990>>  #uses=1
  CS<0x565523ddd700> calls function 'HAL_Delay'

Call graph node for function: 'CAMERA_IO_Init'<<0x565524c236f0>>  #uses=1
  CS<0x565523dd75c0> calls function 'I2Cx_Init'

Call graph node for function: 'CAMERA_IO_Read'<<0x565524c238b0>>  #uses=1
  CS<0x565523b8da80> calls function 'I2Cx_ReadMultiple'
  CS<0x565523ddbc20> calls function 'I2Cx_ReadMultiple'

Call graph node for function: 'CAMERA_IO_Write'<<0x565524c237a0>>  #uses=1
  CS<0x565523b8d500> calls function 'I2Cx_WriteMultiple'
  CS<0x565523b8d3b0> calls function 'I2Cx_WriteMultiple'

Call graph node for function: 'DHCP_Periodic_Handle'<<0x565523b87940>>  #uses=2
  CS<0x565523d2c870> calls function 'HAL_GetTick'
  CS<0x565523d2cc20> calls function 'HAL_GetTick'
  CS<0x565523d2ce50> calls function 'DHCP_Process'

Call graph node for function: 'DHCP_Process'<<0x565523b70510>>  #uses=2
  CS<0x565523bd2330> calls function 'BSP_LED_Off'
  CS<0x565523bd2400> calls function 'BSP_LED_Off'
  CS<0x565523bd2d80> calls external node
  CS<0x565523bd3050> calls external node
  CS<0x565523bd3350> calls function 'BSP_LED_On'
  CS<0x565523bd3420> calls function 'BSP_LED_Off'
  CS<0x565523bd8400> calls external node
  CS<0x565523bd43a0> calls function 'BSP_LED_On'
  CS<0x565523bd4470> calls function 'BSP_LED_Off'
  CS<0x565523bd47b0> calls function 'BSP_LED_Off'
  CS<0x565523bd4880> calls function 'BSP_LED_On'

Call graph node for function: 'DMA_CalcBaseAndBitshift'<<0x565523c2c920>>  #uses=2

Call graph node for function: 'DMA_CheckFifoParam'<<0x565523c2c8a0>>  #uses=1

Call graph node for function: 'DMA_SetConfig'<<0x565523c2caa0>>  #uses=2

Call graph node for function: 'DP83848_ClearIT'<<0x565523b71a60>>  #uses=1
  CS<0x565523e92430> calls external node

Call graph node for function: 'DP83848_DeInit'<<0x565523b71310>>  #uses=1
  CS<0x56552406fd30> calls external node

Call graph node for function: 'DP83848_DisableIT'<<0x565523b71980>>  #uses=1
  CS<0x565523e8f870> calls external node
  CS<0x565523e903a0> calls external node

Call graph node for function: 'DP83848_DisableLoopbackMode'<<0x565523b717c0>>  #uses=1
  CS<0x565524087f30> calls external node
  CS<0x565524088900> calls external node

Call graph node for function: 'DP83848_DisablePowerDownMode'<<0x565523b71390>>  #uses=1
  CS<0x565524071e20> calls external node
  CS<0x5655240727f0> calls external node

Call graph node for function: 'DP83848_EnableIT'<<0x565523b718a0>>  #uses=1
  CS<0x56552408aae0> calls external node
  CS<0x56552408b550> calls external node

Call graph node for function: 'DP83848_EnableLoopbackMode'<<0x565523b716e0>>  #uses=1
  CS<0x5655240856e0> calls external node
  CS<0x5655240860b0> calls external node

Call graph node for function: 'DP83848_EnablePowerDownMode'<<0x565523b71440>>  #uses=1
  CS<0x565524074640> calls external node
  CS<0x565524075010> calls external node

Call graph node for function: 'DP83848_GetITStatus'<<0x565523b71ae0>>  #uses=1
  CS<0x565524096160> calls external node

Call graph node for function: 'DP83848_GetLinkState'<<0x565524c07cd0>>  #uses=2
  CS<0x56552407a080> calls external node
  CS<0x56552407a920> calls external node
  CS<0x56552407b5f0> calls external node
  CS<0x56552407d250> calls external node

Call graph node for function: 'DP83848_Init'<<0x565523b897c0>>  #uses=2
  CS<0x565523f93fa0> calls external node
  CS<0x565523f94a70> calls external node
  CS<0x565523f96570> calls external node
  CS<0x565523f96ce0> calls external node
  CS<0x565523f971f0> calls external node
  CS<0x565523f97930> calls external node
  CS<0x565523f98200> calls external node
  CS<0x56552406c1b0> calls external node
  CS<0x56552406c620> calls external node

Call graph node for function: 'DP83848_RegisterBusIO'<<0x565523b89690>>  #uses=2

Call graph node for function: 'DP83848_SetLinkState'<<0x565523b71660>>  #uses=1
  CS<0x565524081740> calls external node
  CS<0x565524083510> calls external node

Call graph node for function: 'DP83848_StartAutoNego'<<0x565523b71520>>  #uses=1
  CS<0x565524076e60> calls external node
  CS<0x565524077830> calls external node

Call graph node for function: 'DebugMon_Handler'<<0x565523d3f830>>  #uses=1
  CS<0x565524c48ac0> calls external node

Call graph node for function: 'EEPROM_IO_Init'<<0x565524c23a10>>  #uses=1
  CS<0x565523ddda80> calls function 'I2Cx_Init'

Call graph node for function: 'EEPROM_IO_IsDeviceReady'<<0x565524c23c20>>  #uses=1
  CS<0x565523de1430> calls function 'I2Cx_IsDeviceReady'

Call graph node for function: 'EEPROM_IO_ReadData'<<0x565524c23b70>>  #uses=1
  CS<0x565523de06a0> calls function 'I2Cx_ReadMultiple'

Call graph node for function: 'EEPROM_IO_WriteData'<<0x565524c23ac0>>  #uses=1
  CS<0x565523ddef80> calls function 'I2Cx_WriteMultiple'

Call graph node for function: 'ETH_DMARxDescListInit'<<0x565524d58760>>  #uses=1

Call graph node for function: 'ETH_DMATxDescListInit'<<0x565524d586e0>>  #uses=1

Call graph node for function: 'ETH_FlushTransmitFIFO'<<0x565524d58c30>>  #uses=4
  CS<0x565523faba50> calls function 'HAL_Delay'

Call graph node for function: 'ETH_MACAddressConfig'<<0x565524d587e0>>  #uses=1

Call graph node for function: 'ETH_MACDMAConfig'<<0x565524d58660>>  #uses=1
  CS<0x565523f9b060> calls function 'ETH_SetMACConfig'
  CS<0x565523f9ccf0> calls function 'ETH_SetDMAConfig'

Call graph node for function: 'ETH_PHY_IO_DeInit'<<0x565523b88c30>>  #uses=1

Call graph node for function: 'ETH_PHY_IO_GetTick'<<0x565523b88f10>>  #uses=1
  CS<0x565523bf12d0> calls function 'HAL_GetTick'

Call graph node for function: 'ETH_PHY_IO_Init'<<0x565523b88b30>>  #uses=1
  CS<0x565523bed550> calls function 'HAL_ETH_SetMDIOClockRange'

Call graph node for function: 'ETH_PHY_IO_ReadReg'<<0x565523b88de0>>  #uses=1
  CS<0x565523bf07f0> calls function 'HAL_ETH_ReadPHYRegister'

Call graph node for function: 'ETH_PHY_IO_WriteReg'<<0x565523b88cb0>>  #uses=1
  CS<0x565523c57d40> calls function 'HAL_ETH_WritePHYRegister'

Call graph node for function: 'ETH_Prepare_Tx_Descriptors'<<0x565524d59050>>  #uses=2
  CS<0x565523fcd600> calls external node
  CS<0x565523ea0000> calls external node
  CS<0x565523ea2400> calls external node
  CS<0x565523ea3cd0> calls external node
  CS<0x565523ea4230> calls external node

Call graph node for function: 'ETH_SetDMAConfig'<<0x565524d588e0>>  #uses=2
  CS<0x565523e48800> calls function 'HAL_Delay'
  CS<0x565523e4aa70> calls function 'HAL_Delay'

Call graph node for function: 'ETH_SetMACConfig'<<0x565524d58860>>  #uses=2
  CS<0x565523e40070> calls function 'HAL_Delay'
  CS<0x565523e43160> calls function 'HAL_Delay'

Call graph node for function: 'ETH_UpdateDescriptor'<<0x565524d58b20>>  #uses=3
  CS<0x565523fa5d60> calls function 'HAL_ETH_RxAllocateCallback'
  CS<0x565523fa7490> calls external node

Call graph node for function: 'Error_Handler'<<0x565523b88780>>  #uses=3

Call graph node for function: 'Ethernet_Link_Periodic_Handle'<<0x565523b703e0>>  #uses=2
  CS<0x565523c13800> calls function 'HAL_GetTick'
  CS<0x565523c13bb0> calls function 'HAL_GetTick'
  CS<0x565523c145f0> calls function 'ethernet_link_check_state'

Call graph node for function: 'HAL_ADCEx_InjectedConfigChannel'<<0x565523c0b610>>  #uses=1

Call graph node for function: 'HAL_ADCEx_InjectedConvCpltCallback'<<0x565523c2e360>>  #uses=2

Call graph node for function: 'HAL_ADCEx_InjectedGetValue'<<0x565523c0b1a0>>  #uses=1

Call graph node for function: 'HAL_ADCEx_InjectedPollForConversion'<<0x565523c0b0a0>>  #uses=1
  CS<0x565524b06070> calls function 'HAL_GetTick'
  CS<0x565524b06c60> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_ADCEx_InjectedStart'<<0x565523c0af20>>  #uses=1

Call graph node for function: 'HAL_ADCEx_InjectedStart_IT'<<0x565523c0afa0>>  #uses=1

Call graph node for function: 'HAL_ADCEx_InjectedStop'<<0x565523c0b020>>  #uses=1

Call graph node for function: 'HAL_ADCEx_InjectedStop_IT'<<0x565523c0b120>>  #uses=1

Call graph node for function: 'HAL_ADCEx_MultiModeConfigChannel'<<0x565523c0b690>>  #uses=1

Call graph node for function: 'HAL_ADCEx_MultiModeGetValue'<<0x565523c0b590>>  #uses=1

Call graph node for function: 'HAL_ADCEx_MultiModeStart_DMA'<<0x565523c0b220>>  #uses=1
  CS<0x565524b1aff0> calls function 'HAL_DMA_Start_IT'

Call graph node for function: 'HAL_ADCEx_MultiModeStop_DMA'<<0x565523c0b4e0>>  #uses=1
  CS<0x565524b26dd0> calls function 'HAL_DMA_Abort'

Call graph node for function: 'HAL_ADC_AnalogWDGConfig'<<0x565523c2ea30>>  #uses=1

Call graph node for function: 'HAL_ADC_ConfigChannel'<<0x565524c0b7e0>>  #uses=2

Call graph node for function: 'HAL_ADC_ConvCpltCallback'<<0x565523c2e2e0>>  #uses=4

Call graph node for function: 'HAL_ADC_ConvHalfCpltCallback'<<0x565523c2e850>>  #uses=3

Call graph node for function: 'HAL_ADC_DeInit'<<0x565524c0b630>>  #uses=2
  CS<0x5655248cf220> calls function 'HAL_ADC_MspDeInit'

Call graph node for function: 'HAL_ADC_ErrorCallback'<<0x565523c2e570>>  #uses=5

Call graph node for function: 'HAL_ADC_GetError'<<0x565523c2eb30>>  #uses=1

Call graph node for function: 'HAL_ADC_GetState'<<0x565523c2eab0>>  #uses=1

Call graph node for function: 'HAL_ADC_GetValue'<<0x565524c0b9e0>>  #uses=2

Call graph node for function: 'HAL_ADC_IRQHandler'<<0x565523c2e260>>  #uses=1
  CS<0x565524900280> calls function 'HAL_ADC_ConvCpltCallback'
  CS<0x565524904410> calls function 'HAL_ADCEx_InjectedConvCpltCallback'
  CS<0x565524905990> calls function 'HAL_ADC_LevelOutOfWindowCallback'
  CS<0x565524906dd0> calls function 'HAL_ADC_ErrorCallback'

Call graph node for function: 'HAL_ADC_Init'<<0x565524c0b6b0>>  #uses=2
  CS<0x5655247a9420> calls function 'HAL_ADC_MspInit'
  CS<0x5655247aa2f0> calls function 'ADC_Init'

Call graph node for function: 'HAL_ADC_LevelOutOfWindowCallback'<<0x565523c2e440>>  #uses=2

Call graph node for function: 'HAL_ADC_MspDeInit'<<0x565523c2def0>>  #uses=2

Call graph node for function: 'HAL_ADC_MspInit'<<0x565523c2dd90>>  #uses=2

Call graph node for function: 'HAL_ADC_PollForConversion'<<0x565524c0b960>>  #uses=2
  CS<0x5655248e10b0> calls function 'HAL_GetTick'
  CS<0x5655248e1ca0> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_ADC_PollForEvent'<<0x565523c2e080>>  #uses=1
  CS<0x5655248e8080> calls function 'HAL_GetTick'
  CS<0x5655248e8d50> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_ADC_Start'<<0x565524c0b8e0>>  #uses=2

Call graph node for function: 'HAL_ADC_Start_DMA'<<0x565523c2e5f0>>  #uses=1
  CS<0x5655249124e0> calls function 'HAL_DMA_Start_IT'

Call graph node for function: 'HAL_ADC_Start_IT'<<0x565523c2e160>>  #uses=1

Call graph node for function: 'HAL_ADC_Stop'<<0x565523c2df70>>  #uses=1

Call graph node for function: 'HAL_ADC_Stop_DMA'<<0x565523c2e980>>  #uses=1
  CS<0x565524922a60> calls function 'HAL_DMA_Abort'

Call graph node for function: 'HAL_ADC_Stop_IT'<<0x565523c2e1e0>>  #uses=1

Call graph node for function: 'HAL_DBGMCU_DisableDBGSleepMode'<<0x565524c09a60>>  #uses=1

Call graph node for function: 'HAL_DBGMCU_DisableDBGStandbyMode'<<0x565524c09c60>>  #uses=1

Call graph node for function: 'HAL_DBGMCU_DisableDBGStopMode'<<0x565524c09b60>>  #uses=1

Call graph node for function: 'HAL_DBGMCU_EnableDBGSleepMode'<<0x565524c099e0>>  #uses=1

Call graph node for function: 'HAL_DBGMCU_EnableDBGStandbyMode'<<0x565524c09be0>>  #uses=1

Call graph node for function: 'HAL_DBGMCU_EnableDBGStopMode'<<0x565524c09ae0>>  #uses=1

Call graph node for function: 'HAL_DMA_Abort'<<0x565524d57a90>>  #uses=11
  CS<0x565524853a70> calls function 'HAL_GetTick'
  CS<0x5655248565e0> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_DMA_Abort_IT'<<0x565523c0ea10>>  #uses=14

Call graph node for function: 'HAL_DMA_DeInit'<<0x565523c2c9a0>>  #uses=1
  CS<0x565524841e70> calls function 'DMA_CalcBaseAndBitshift'

Call graph node for function: 'HAL_DMA_GetError'<<0x565524d57b10>>  #uses=8

Call graph node for function: 'HAL_DMA_GetState'<<0x565523b77c90>>  #uses=3

Call graph node for function: 'HAL_DMA_IRQHandler'<<0x565523c2cd40>>  #uses=1
  CS<0x565524873c50> calls external node
  CS<0x565524874470> calls external node
  CS<0x565524875810> calls external node
  CS<0x565524879530> calls external node
  CS<0x56552487a8d0> calls external node
  CS<0x56552487b0f0> calls external node
  CS<0x56552487c9e0> calls external node
  CS<0x56552487f2b0> calls external node

Call graph node for function: 'HAL_DMA_Init'<<0x565523c2c820>>  #uses=1
  CS<0x565523f289f0> calls function 'HAL_GetTick'
  CS<0x565523f2a4b0> calls function 'HAL_GetTick'
  CS<0x5655248324c0> calls function 'DMA_CheckFifoParam'
  CS<0x565524833330> calls function 'DMA_CalcBaseAndBitshift'

Call graph node for function: 'HAL_DMA_PollForTransfer'<<0x565523c2cbb0>>  #uses=1
  CS<0x56552485d760> calls function 'HAL_GetTick'
  CS<0x565524860d10> calls function 'HAL_GetTick'
  CS<0x565524865300> calls function 'HAL_DMA_Abort'

Call graph node for function: 'HAL_DMA_RegisterCallback'<<0x565523c2ce70>>  #uses=1

Call graph node for function: 'HAL_DMA_Start'<<0x565523c2ca20>>  #uses=1
  CS<0x565524834f60> calls function 'DMA_SetConfig'

Call graph node for function: 'HAL_DMA_Start_IT'<<0x565524d565f0>>  #uses=17
  CS<0x56552484f1b0> calls function 'DMA_SetConfig'

Call graph node for function: 'HAL_DMA_UnRegisterCallback'<<0x565523c2cef0>>  #uses=1

Call graph node for function: 'HAL_DeInit'<<0x565524c09220>>  #uses=1
  CS<0x565523d9c8e0> calls function 'HAL_MspDeInit'

Call graph node for function: 'HAL_Delay'<<0x565524c094d0>>  #uses=24
  CS<0x565523da1430> calls function 'HAL_GetTick'
  CS<0x565523da1dc0> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_DisableCompensationCell'<<0x565524c09d60>>  #uses=1

Call graph node for function: 'HAL_DisableFMCMemorySwapping'<<0x565524c084b0>>  #uses=1

Call graph node for function: 'HAL_DisableMemorySwappingBank'<<0x565524c085b0>>  #uses=1

Call graph node for function: 'HAL_ETH_DeInit'<<0x565524d58a20>>  #uses=1
  CS<0x565523f9d3e0> calls function 'HAL_ETH_MspDeInit'

Call graph node for function: 'HAL_ETH_EnterPowerDownMode'<<0x565524d5a240>>  #uses=1

Call graph node for function: 'HAL_ETH_ErrorCallback'<<0x565524d59a70>>  #uses=2

Call graph node for function: 'HAL_ETH_ExitPowerDownMode'<<0x565524d5a2c0>>  #uses=1
  CS<0x565524057ee0> calls function 'HAL_Delay'
  CS<0x565524059170> calls function 'HAL_Delay'

Call graph node for function: 'HAL_ETH_GetDMAConfig'<<0x565524d59da0>>  #uses=1

Call graph node for function: 'HAL_ETH_GetDMAError'<<0x565523b70fe0>>  #uses=1

Call graph node for function: 'HAL_ETH_GetError'<<0x565523b70f60>>  #uses=1

Call graph node for function: 'HAL_ETH_GetMACConfig'<<0x565524c07dd0>>  #uses=2

Call graph node for function: 'HAL_ETH_GetMACError'<<0x565523b71060>>  #uses=1

Call graph node for function: 'HAL_ETH_GetMACFilterConfig'<<0x565524d59fb0>>  #uses=1

Call graph node for function: 'HAL_ETH_GetMACWakeUpSource'<<0x565523b710e0>>  #uses=1

Call graph node for function: 'HAL_ETH_GetRxDataErrorCode'<<0x565524d59660>>  #uses=1

Call graph node for function: 'HAL_ETH_GetState'<<0x565523b70ee0>>  #uses=1

Call graph node for function: 'HAL_ETH_IRQHandler'<<0x565524d59860>>  #uses=1
  CS<0x56552400af90> calls function 'HAL_ETH_RxCpltCallback'
  CS<0x56552400bf60> calls function 'HAL_ETH_TxCpltCallback'
  CS<0x56552400eac0> calls function 'HAL_ETH_ErrorCallback'
  CS<0x56552400f850> calls function 'HAL_ETH_PMTCallback'
  CS<0x565524010040> calls function 'HAL_ETH_WakeUpCallback'

Call graph node for function: 'HAL_ETH_Init'<<0x565523b89500>>  #uses=2
  CS<0x565523e89d00> calls function 'HAL_ETH_MspInit'
  CS<0x565523e8af90> calls function 'HAL_GetTick'
  CS<0x565523e8b670> calls function 'HAL_GetTick'
  CS<0x565523e8c120> calls function 'ETH_MACDMAConfig'
  CS<0x565523e8c290> calls function 'ETH_DMATxDescListInit'
  CS<0x565523e8c400> calls function 'ETH_DMARxDescListInit'
  CS<0x565523e8c8a0> calls function 'ETH_MACAddressConfig'

Call graph node for function: 'HAL_ETH_MspDeInit'<<0x565524d58aa0>>  #uses=2

Call graph node for function: 'HAL_ETH_MspInit'<<0x565523b87df0>>  #uses=2
  CS<0x565523d89010> calls function 'HAL_GPIO_Init'
  CS<0x565523d892b0> calls function 'HAL_GPIO_Init'
  CS<0x565523d89550> calls function 'HAL_GPIO_Init'
  CS<0x565523d897f0> calls function 'HAL_GPIO_Init'
  CS<0x565523d89a90> calls function 'HAL_GPIO_Init'
  CS<0x565523d89d30> calls function 'HAL_GPIO_Init'

Call graph node for function: 'HAL_ETH_PMTCallback'<<0x565524d59af0>>  #uses=2

Call graph node for function: 'HAL_ETH_ReadData'<<0x565523b891a0>>  #uses=2
  CS<0x565523ff6e30> calls function 'HAL_ETH_RxLinkCallback'
  CS<0x565523ff93e0> calls function 'ETH_UpdateDescriptor'

Call graph node for function: 'HAL_ETH_ReadPHYRegister'<<0x565523b88e60>>  #uses=2
  CS<0x565524016560> calls function 'HAL_GetTick'
  CS<0x565524016a10> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_ETH_RegisterRxAllocateCallback'<<0x565524d59460>>  #uses=1

Call graph node for function: 'HAL_ETH_RegisterRxLinkCallback'<<0x565524d59560>>  #uses=1

Call graph node for function: 'HAL_ETH_RegisterTxFreeCallback'<<0x565524d596e0>>  #uses=1

Call graph node for function: 'HAL_ETH_ReleaseTxPacket'<<0x565524d597e0>>  #uses=1
  CS<0x565524007460> calls function 'HAL_ETH_TxFreeCallback'

Call graph node for function: 'HAL_ETH_RxAllocateCallback'<<0x565523b87f20>>  #uses=2
  CS<0x565523d8d830> calls function 'memp_malloc_pool'
  CS<0x565523c7c130> calls function 'pbuf_alloced_custom'

Call graph node for function: 'HAL_ETH_RxCpltCallback'<<0x565524d598e0>>  #uses=2

Call graph node for function: 'HAL_ETH_RxLinkCallback'<<0x565523b880a0>>  #uses=2
  CS<0x565523d93110> calls function 'SCB_InvalidateDCache_by_Addr'

Call graph node for function: 'HAL_ETH_SetDMAConfig'<<0x565524d59e20>>  #uses=1
  CS<0x565524036aa0> calls function 'ETH_SetDMAConfig'

Call graph node for function: 'HAL_ETH_SetHashTable'<<0x565524d5a0b0>>  #uses=1
  CS<0x56552404f4a0> calls function 'HAL_Delay'
  CS<0x565524050340> calls function 'HAL_Delay'

Call graph node for function: 'HAL_ETH_SetMACConfig'<<0x565524c07fa0>>  #uses=2
  CS<0x565524034f30> calls function 'ETH_SetMACConfig'

Call graph node for function: 'HAL_ETH_SetMACFilterConfig'<<0x565524d59f00>>  #uses=1
  CS<0x56552403fe50> calls function 'HAL_Delay'

Call graph node for function: 'HAL_ETH_SetMDIOClockRange'<<0x565523b88bb0>>  #uses=2
  CS<0x565524038ae0> calls function 'HAL_RCC_GetHCLKFreq'

Call graph node for function: 'HAL_ETH_SetRxVLANIdentifier'<<0x565524d5a1c0>>  #uses=1
  CS<0x565524053970> calls function 'HAL_Delay'

Call graph node for function: 'HAL_ETH_SetSourceMACAddrMatch'<<0x565524d5a030>>  #uses=1

Call graph node for function: 'HAL_ETH_SetWakeUpFilter'<<0x565523b70e60>>  #uses=1

Call graph node for function: 'HAL_ETH_Start'<<0x565524c08020>>  #uses=2
  CS<0x565523f9f330> calls function 'ETH_UpdateDescriptor'
  CS<0x565523f9fc40> calls function 'HAL_Delay'
  CS<0x565523fa09a0> calls function 'HAL_Delay'
  CS<0x565523fa0f60> calls function 'ETH_FlushTransmitFIFO'

Call graph node for function: 'HAL_ETH_Start_IT'<<0x565524d58cb0>>  #uses=1
  CS<0x565523fae600> calls function 'ETH_UpdateDescriptor'
  CS<0x565523faef10> calls function 'HAL_Delay'
  CS<0x565523fafc70> calls function 'HAL_Delay'
  CS<0x565523fb0230> calls function 'ETH_FlushTransmitFIFO'

Call graph node for function: 'HAL_ETH_Stop'<<0x565524c07d50>>  #uses=2
  CS<0x565523fb3f80> calls function 'HAL_Delay'
  CS<0x565523fb4540> calls function 'ETH_FlushTransmitFIFO'
  CS<0x565523fb4e50> calls function 'HAL_Delay'

Call graph node for function: 'HAL_ETH_Stop_IT'<<0x565524d58f20>>  #uses=1
  CS<0x565523fb8d60> calls function 'HAL_Delay'
  CS<0x565523fb9320> calls function 'ETH_FlushTransmitFIFO'
  CS<0x565523fb9c30> calls function 'HAL_Delay'

Call graph node for function: 'HAL_ETH_Transmit'<<0x565523b89450>>  #uses=2
  CS<0x565523fbf140> calls function 'ETH_Prepare_Tx_Descriptors'
  CS<0x565523fbf810> calls external node
  CS<0x565523fc1830> calls function 'HAL_GetTick'
  CS<0x565523fc3070> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_ETH_Transmit_IT'<<0x565524d59380>>  #uses=1
  CS<0x565523ea8b00> calls function 'ETH_Prepare_Tx_Descriptors'
  CS<0x565523ea91d0> calls external node

Call graph node for function: 'HAL_ETH_TxCpltCallback'<<0x565524d59990>>  #uses=2

Call graph node for function: 'HAL_ETH_TxFreeCallback'<<0x565523b88230>>  #uses=2
  CS<0x565523d6b090> calls function 'pbuf_free'

Call graph node for function: 'HAL_ETH_UnRegisterRxAllocateCallback'<<0x565524d594e0>>  #uses=1

Call graph node for function: 'HAL_ETH_UnRegisterRxLinkCallback'<<0x565524d595e0>>  #uses=1

Call graph node for function: 'HAL_ETH_UnRegisterTxFreeCallback'<<0x565524d59760>>  #uses=1

Call graph node for function: 'HAL_ETH_WakeUpCallback'<<0x565524d59b70>>  #uses=2

Call graph node for function: 'HAL_ETH_WritePHYRegister'<<0x565523b88d30>>  #uses=2
  CS<0x56552401b900> calls function 'HAL_GetTick'
  CS<0x56552401bdb0> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_EnableCompensationCell'<<0x565524c09ce0>>  #uses=1

Call graph node for function: 'HAL_EnableFMCMemorySwapping'<<0x565524c09de0>>  #uses=1

Call graph node for function: 'HAL_EnableMemorySwappingBank'<<0x565524c08530>>  #uses=1

Call graph node for function: 'HAL_GPIO_DeInit'<<0x565524c08810>>  #uses=3

Call graph node for function: 'HAL_GPIO_EXTI_Callback'<<0x565523b73d90>>  #uses=2

Call graph node for function: 'HAL_GPIO_EXTI_IRQHandler'<<0x565523b73d10>>  #uses=1
  CS<0x56552416c100> calls function 'HAL_GPIO_EXTI_Callback'

Call graph node for function: 'HAL_GPIO_Init'<<0x565523b87e70>>  #uses=17

Call graph node for function: 'HAL_GPIO_LockPin'<<0x565523b73c90>>  #uses=1

Call graph node for function: 'HAL_GPIO_ReadPin'<<0x565524c08e10>>  #uses=2

Call graph node for function: 'HAL_GPIO_TogglePin'<<0x565524c089a0>>  #uses=2

Call graph node for function: 'HAL_GPIO_WritePin'<<0x565524c086b0>>  #uses=5

Call graph node for function: 'HAL_GetDEVID'<<0x565524c097e0>>  #uses=1

Call graph node for function: 'HAL_GetHalVersion'<<0x565524c096e0>>  #uses=1

Call graph node for function: 'HAL_GetREVID'<<0x565524c09760>>  #uses=1

Call graph node for function: 'HAL_GetTick'<<0x565523b70090>>  #uses=107

Call graph node for function: 'HAL_GetTickFreq'<<0x565524c09450>>  #uses=1

Call graph node for function: 'HAL_GetTickPrio'<<0x565524c09320>>  #uses=1

Call graph node for function: 'HAL_GetUIDw0'<<0x565524c09860>>  #uses=1

Call graph node for function: 'HAL_GetUIDw1'<<0x565524c098e0>>  #uses=1

Call graph node for function: 'HAL_GetUIDw2'<<0x565524c09960>>  #uses=1

Call graph node for function: 'HAL_HalfDuplex_EnableReceiver'<<0x565523c10460>>  #uses=1
  CS<0x565524351720> calls external node
  CS<0x5655243523c0> calls external node
  CS<0x565524353000> calls external node
  CS<0x565524353ca0> calls external node

Call graph node for function: 'HAL_HalfDuplex_EnableTransmitter'<<0x565523c10330>>  #uses=1
  CS<0x56552434a9b0> calls external node
  CS<0x56552434b650> calls external node
  CS<0x56552434c290> calls external node
  CS<0x56552434cf30> calls external node

Call graph node for function: 'HAL_HalfDuplex_Init'<<0x565523b74890>>  #uses=1
  CS<0x5655241a92c0> calls function 'HAL_UART_MspInit'
  CS<0x5655241a9b40> calls function 'UART_SetConfig'
  CS<0x5655241aa410> calls function 'UART_AdvFeatureConfig'
  CS<0x5655241ab6a0> calls function 'UART_CheckIdleState'

Call graph node for function: 'HAL_I2C_AbortCpltCallback'<<0x565523b783a0>>  #uses=2

Call graph node for function: 'HAL_I2C_AddrCallback'<<0x565523b780d0>>  #uses=4

Call graph node for function: 'HAL_I2C_DeInit'<<0x565524c23380>>  #uses=2
  CS<0x565524281a80> calls function 'HAL_I2C_MspDeInit'

Call graph node for function: 'HAL_I2C_DisableListen_IT'<<0x565523c24140>>  #uses=1
  CS<0x565524603e20> calls function 'I2C_Disable_IRQ'

Call graph node for function: 'HAL_I2C_ER_IRQHandler'<<0x565523c24320>>  #uses=1
  CS<0x56552460fa00> calls function 'I2C_ITError'

Call graph node for function: 'HAL_I2C_EV_IRQHandler'<<0x565523c242a0>>  #uses=1
  CS<0x56552460a380> calls external node

Call graph node for function: 'HAL_I2C_EnableListen_IT'<<0x565523c240c0>>  #uses=1
  CS<0x5655246019c0> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_ErrorCallback'<<0x565523b78450>>  #uses=2

Call graph node for function: 'HAL_I2C_GetError'<<0x565523c24450>>  #uses=1

Call graph node for function: 'HAL_I2C_GetMode'<<0x565523c243d0>>  #uses=1

Call graph node for function: 'HAL_I2C_GetState'<<0x565524c0bc10>>  #uses=2

Call graph node for function: 'HAL_I2C_Init'<<0x565524c22d70>>  #uses=2
  CS<0x5655243a4820> calls function 'HAL_I2C_MspInit'

Call graph node for function: 'HAL_I2C_IsDeviceReady'<<0x565524c23d50>>  #uses=2
  CS<0x56552458c5a0> calls function 'HAL_GetTick'
  CS<0x56552458db60> calls function 'HAL_GetTick'
  CS<0x565524590230> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x5655245911d0> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x565524592610> calls function 'I2C_WaitOnFlagUntilTimeout'

Call graph node for function: 'HAL_I2C_ListenCpltCallback'<<0x565523b77820>>  #uses=3

Call graph node for function: 'HAL_I2C_MasterRxCpltCallback'<<0x565523b785b0>>  #uses=3

Call graph node for function: 'HAL_I2C_MasterTxCpltCallback'<<0x565523b784d0>>  #uses=3

Call graph node for function: 'HAL_I2C_Master_Abort_IT'<<0x565523c241f0>>  #uses=1
  CS<0x5655246067d0> calls function 'I2C_Disable_IRQ'
  CS<0x565524606ff0> calls function 'I2C_Disable_IRQ'
  CS<0x5655246078a0> calls function 'I2C_TransferConfig'
  CS<0x565524607d30> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Master_Receive'<<0x565523b76290>>  #uses=1
  CS<0x5655243dde50> calls function 'HAL_GetTick'
  CS<0x5655243cb8b0> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x5655243dfe00> calls function 'I2C_TransferConfig'
  CS<0x5655243e0820> calls function 'I2C_TransferConfig'
  CS<0x5655243e0fd0> calls function 'I2C_WaitOnRXNEFlagUntilTimeout'
  CS<0x5655243e2eb0> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x5655243e3d10> calls function 'I2C_TransferConfig'
  CS<0x5655243e4730> calls function 'I2C_TransferConfig'
  CS<0x5655243e4ba0> calls function 'I2C_WaitOnSTOPFlagUntilTimeout'

Call graph node for function: 'HAL_I2C_Master_Receive_DMA'<<0x565523c21a00>>  #uses=1
  CS<0x5655244d9810> calls function 'HAL_DMA_Start_IT'
  CS<0x5655244dada0> calls function 'I2C_TransferConfig'
  CS<0x5655244db8d0> calls function 'I2C_Enable_IRQ'
  CS<0x5655244dd260> calls function 'I2C_TransferConfig'
  CS<0x5655244dd6f0> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Master_Receive_IT'<<0x565523b78930>>  #uses=1
  CS<0x5655243ab640> calls function 'I2C_TransferConfig'
  CS<0x5655243abad0> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Master_Seq_Receive_DMA'<<0x565523c23700>>  #uses=1
  CS<0x5655244b12d0> calls function 'I2C_ConvertOtherXferOptions'
  CS<0x5655244b3b90> calls function 'HAL_DMA_Start_IT'
  CS<0x5655244b51c0> calls function 'I2C_TransferConfig'
  CS<0x5655244b5cf0> calls function 'I2C_Enable_IRQ'
  CS<0x5655244b7680> calls function 'I2C_TransferConfig'
  CS<0x5655244b7b10> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Master_Seq_Receive_IT'<<0x565523c23680>>  #uses=1
  CS<0x5655245b4f20> calls function 'I2C_ConvertOtherXferOptions'
  CS<0x5655245b5d70> calls function 'I2C_TransferConfig'
  CS<0x5655245b6200> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Master_Seq_Transmit_DMA'<<0x565523c23400>>  #uses=1
  CS<0x5655245a64d0> calls function 'I2C_ConvertOtherXferOptions'
  CS<0x5655245a8d90> calls function 'HAL_DMA_Start_IT'
  CS<0x5655245aa3c0> calls function 'I2C_TransferConfig'
  CS<0x5655245aaef0> calls function 'I2C_Enable_IRQ'
  CS<0x5655245ac880> calls function 'I2C_TransferConfig'
  CS<0x5655245acd10> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Master_Seq_Transmit_IT'<<0x565523c23300>>  #uses=1
  CS<0x56552459bd60> calls function 'I2C_ConvertOtherXferOptions'
  CS<0x56552459cbb0> calls function 'I2C_TransferConfig'
  CS<0x56552459d040> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Master_Transmit'<<0x565523b75ce0>>  #uses=1
  CS<0x5655242866b0> calls function 'HAL_GetTick'
  CS<0x565524286a00> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x565524288780> calls function 'I2C_TransferConfig'
  CS<0x5655242891a0> calls function 'I2C_TransferConfig'
  CS<0x5655243b5560> calls function 'I2C_WaitOnTXISFlagUntilTimeout'
  CS<0x5655243b7380> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x5655243b81e0> calls function 'I2C_TransferConfig'
  CS<0x5655243b8c00> calls function 'I2C_TransferConfig'
  CS<0x5655243b9070> calls function 'I2C_WaitOnSTOPFlagUntilTimeout'

Call graph node for function: 'HAL_I2C_Master_Transmit_DMA'<<0x565523b78ae0>>  #uses=1
  CS<0x5655244c3890> calls function 'HAL_DMA_Start_IT'
  CS<0x5655244c4e20> calls function 'I2C_TransferConfig'
  CS<0x5655244c5950> calls function 'I2C_Enable_IRQ'
  CS<0x5655244c72e0> calls function 'I2C_TransferConfig'
  CS<0x5655244c7770> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Master_Transmit_IT'<<0x565523b76ac0>>  #uses=1
  CS<0x565524411e40> calls function 'I2C_TransferConfig'
  CS<0x5655244122d0> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_MemRxCpltCallback'<<0x565523b788b0>>  #uses=2

Call graph node for function: 'HAL_I2C_MemTxCpltCallback'<<0x565523b786e0>>  #uses=2

Call graph node for function: 'HAL_I2C_Mem_Read'<<0x565524c23560>>  #uses=3
  CS<0x565524516010> calls function 'HAL_GetTick'
  CS<0x565524516360> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x565524517a80> calls function 'I2C_RequestMemoryRead'
  CS<0x565524518be0> calls function 'I2C_TransferConfig'
  CS<0x565524519600> calls function 'I2C_TransferConfig'
  CS<0x565524519a10> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x56552451b8f0> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x56552451c750> calls function 'I2C_TransferConfig'
  CS<0x56552451d170> calls function 'I2C_TransferConfig'
  CS<0x56552451d9f0> calls function 'I2C_WaitOnSTOPFlagUntilTimeout'

Call graph node for function: 'HAL_I2C_Mem_Read_DMA'<<0x565523c231d0>>  #uses=1
  CS<0x565524582290> calls function 'HAL_DMA_Start_IT'
  CS<0x565524583620> calls function 'I2C_TransferConfig'
  CS<0x565524583ab0> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Mem_Read_IT'<<0x565523c22b60>>  #uses=1
  CS<0x565524557ba0> calls function 'I2C_TransferConfig'
  CS<0x565524558030> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Mem_Write'<<0x565524c23250>>  #uses=3
  CS<0x5655245010a0> calls function 'HAL_GetTick'
  CS<0x5655245013f0> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x565524502b10> calls function 'I2C_RequestMemoryWrite'
  CS<0x565524503c70> calls function 'I2C_TransferConfig'
  CS<0x565524504690> calls function 'I2C_TransferConfig'
  CS<0x565524504a60> calls function 'I2C_WaitOnTXISFlagUntilTimeout'
  CS<0x565524506940> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x5655245077a0> calls function 'I2C_TransferConfig'
  CS<0x5655245081c0> calls function 'I2C_TransferConfig'
  CS<0x565524508a40> calls function 'I2C_WaitOnSTOPFlagUntilTimeout'

Call graph node for function: 'HAL_I2C_Mem_Write_DMA'<<0x565523c22be0>>  #uses=1
  CS<0x565524563290> calls function 'HAL_DMA_Start_IT'
  CS<0x565524564620> calls function 'I2C_TransferConfig'
  CS<0x565524564ab0> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Mem_Write_IT'<<0x565523c22950>>  #uses=1
  CS<0x565524126320> calls function 'I2C_TransferConfig'
  CS<0x5655241267b0> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_MspDeInit'<<0x565523b75c30>>  #uses=2

Call graph node for function: 'HAL_I2C_MspInit'<<0x565523b75bb0>>  #uses=2

Call graph node for function: 'HAL_I2C_SlaveRxCpltCallback'<<0x565523b778a0>>  #uses=3

Call graph node for function: 'HAL_I2C_SlaveTxCpltCallback'<<0x565523b77920>>  #uses=3

Call graph node for function: 'HAL_I2C_Slave_Receive'<<0x565523b76a40>>  #uses=1
  CS<0x565524401ac0> calls function 'HAL_GetTick'
  CS<0x5655244036d0> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x5655244044a0> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x565524405360> calls function 'I2C_WaitOnRXNEFlagUntilTimeout'
  CS<0x565524408740> calls function 'I2C_WaitOnSTOPFlagUntilTimeout'
  CS<0x565524409510> calls function 'I2C_WaitOnFlagUntilTimeout'

Call graph node for function: 'HAL_I2C_Slave_Receive_DMA'<<0x565523c21e60>>  #uses=1
  CS<0x5655244f64b0> calls function 'HAL_DMA_Start_IT'
  CS<0x5655244f7db0> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Slave_Receive_IT'<<0x565523b78a30>>  #uses=1
  CS<0x5655243b4f50> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Slave_Seq_Receive_DMA'<<0x565523c23ef0>>  #uses=1
  CS<0x5655245f16c0> calls function 'I2C_Disable_IRQ'
  CS<0x5655245f23d0> calls function 'I2C_Disable_IRQ'
  CS<0x5655245f3860> calls function 'HAL_DMA_Abort_IT'
  CS<0x5655245f4030> calls external node
  CS<0x5655245f5ab0> calls function 'HAL_DMA_Abort_IT'
  CS<0x5655245f6280> calls external node
  CS<0x5655245f9d90> calls function 'HAL_DMA_Start_IT'
  CS<0x5655245fdee0> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Slave_Seq_Receive_IT'<<0x565523c23d20>>  #uses=1
  CS<0x5655245e66f0> calls function 'I2C_Disable_IRQ'
  CS<0x5655245e7400> calls function 'I2C_Disable_IRQ'
  CS<0x5655245e8890> calls function 'HAL_DMA_Abort_IT'
  CS<0x5655245e9060> calls external node
  CS<0x5655245ec4f0> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Slave_Seq_Transmit_DMA'<<0x565523c23b50>>  #uses=1
  CS<0x5655245d4f30> calls function 'I2C_Disable_IRQ'
  CS<0x5655245d5460> calls function 'I2C_Disable_IRQ'
  CS<0x5655245d68f0> calls function 'HAL_DMA_Abort_IT'
  CS<0x5655245d70c0> calls external node
  CS<0x5655245d8b40> calls function 'HAL_DMA_Abort_IT'
  CS<0x5655245d9310> calls external node
  CS<0x5655245dce20> calls function 'HAL_DMA_Start_IT'
  CS<0x5655245e0f70> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Slave_Seq_Transmit_IT'<<0x565523c23980>>  #uses=1
  CS<0x5655245c9770> calls function 'I2C_Disable_IRQ'
  CS<0x5655245ca480> calls function 'I2C_Disable_IRQ'
  CS<0x5655245cb910> calls function 'HAL_DMA_Abort_IT'
  CS<0x5655245cc0e0> calls external node
  CS<0x5655245cf570> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Slave_Transmit'<<0x565523b766d0>>  #uses=1
  CS<0x5655243f31b0> calls function 'HAL_GetTick'
  CS<0x5655243f4970> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x5655243f5bd0> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x5655243f6a40> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x5655243f7900> calls function 'I2C_WaitOnTXISFlagUntilTimeout'
  CS<0x5655243f9190> calls function 'I2C_WaitOnFlagUntilTimeout'
  CS<0x5655243f9a80> calls function 'I2C_Flush_TXDR'
  CS<0x5655243fa090> calls function 'I2C_WaitOnSTOPFlagUntilTimeout'
  CS<0x5655243fae60> calls function 'I2C_WaitOnFlagUntilTimeout'

Call graph node for function: 'HAL_I2C_Slave_Transmit_DMA'<<0x565523c21d60>>  #uses=1
  CS<0x5655244ea110> calls function 'HAL_DMA_Start_IT'
  CS<0x5655244eba10> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_I2C_Slave_Transmit_IT'<<0x565523b789b0>>  #uses=1
  CS<0x5655243b07f0> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'HAL_IncTick'<<0x565523b87cc0>>  #uses=2

Call graph node for function: 'HAL_Init'<<0x565523b882d0>>  #uses=2
  CS<0x565523d6b8a0> calls function 'HAL_NVIC_SetPriorityGrouping'
  CS<0x565523d6b970> calls function 'HAL_InitTick'
  CS<0x565523d6ba20> calls function 'HAL_MspInit'

Call graph node for function: 'HAL_InitTick'<<0x565524c08f70>>  #uses=5
  CS<0x565523d6c7c0> calls function 'HAL_SYSTICK_Config'
  CS<0x565523d6ce80> calls function 'HAL_NVIC_SetPriority'

Call graph node for function: 'HAL_LIN_Init'<<0x565524d55610>>  #uses=1
  CS<0x5655241ae860> calls function 'HAL_UART_MspInit'
  CS<0x5655241af0e0> calls function 'UART_SetConfig'
  CS<0x5655241af9b0> calls function 'UART_AdvFeatureConfig'
  CS<0x5655241b13c0> calls function 'UART_CheckIdleState'

Call graph node for function: 'HAL_LIN_SendBreak'<<0x565523c10590>>  #uses=1

Call graph node for function: 'HAL_MPU_ConfigRegion'<<0x565523b749c0>>  #uses=1

Call graph node for function: 'HAL_MPU_Disable'<<0x565523c10e40>>  #uses=1
  CS<0x56552435ab30> calls external node

Call graph node for function: 'HAL_MPU_Enable'<<0x565523b74910>>  #uses=1
  CS<0x56552435b810> calls external node
  CS<0x56552435b8c0> calls external node

Call graph node for function: 'HAL_MspDeInit'<<0x565524c092a0>>  #uses=2

Call graph node for function: 'HAL_MspInit'<<0x565524c08ff0>>  #uses=2

Call graph node for function: 'HAL_MultiProcessor_DisableMuteMode'<<0x565523c10180>>  #uses=1
  CS<0x5655243451d0> calls external node
  CS<0x565524345e70> calls external node
  CS<0x565524346510> calls function 'UART_CheckIdleState'

Call graph node for function: 'HAL_MultiProcessor_EnableMuteMode'<<0x565523c10050>>  #uses=1
  CS<0x565524340f80> calls external node
  CS<0x565524341c20> calls external node
  CS<0x5655243422c0> calls function 'UART_CheckIdleState'

Call graph node for function: 'HAL_MultiProcessor_EnterMuteMode'<<0x565523c102b0>>  #uses=1

Call graph node for function: 'HAL_MultiProcessor_Init'<<0x565524d55740>>  #uses=1
  CS<0x5655241b41d0> calls function 'HAL_UART_MspInit'
  CS<0x5655241b4a50> calls function 'UART_SetConfig'
  CS<0x5655241b5320> calls function 'UART_AdvFeatureConfig'
  CS<0x5655241b7470> calls function 'UART_CheckIdleState'

Call graph node for function: 'HAL_NVIC_ClearPendingIRQ'<<0x565523b74f00>>  #uses=1
  CS<0x565524382800> calls function '__NVIC_ClearPendingIRQ'

Call graph node for function: 'HAL_NVIC_DisableIRQ'<<0x565524c08d10>>  #uses=2
  CS<0x5655243648c0> calls function '__NVIC_DisableIRQ'

Call graph node for function: 'HAL_NVIC_EnableIRQ'<<0x565524c08c10>>  #uses=4
  CS<0x565524363040> calls function '__NVIC_EnableIRQ'

Call graph node for function: 'HAL_NVIC_GetActive'<<0x565523b75030>>  #uses=1
  CS<0x565524384080> calls function '__NVIC_GetActive'

Call graph node for function: 'HAL_NVIC_GetPendingIRQ'<<0x565523b74dd0>>  #uses=1
  CS<0x5655243808a0> calls function '__NVIC_GetPendingIRQ'

Call graph node for function: 'HAL_NVIC_GetPriority'<<0x565523b74ac0>>  #uses=1
  CS<0x565524378e30> calls function '__NVIC_GetPriority'
  CS<0x5655242705d0> calls function 'NVIC_DecodePriority'

Call graph node for function: 'HAL_NVIC_GetPriorityGrouping'<<0x565523b74a40>>  #uses=1
  CS<0x565524377c90> calls function '__NVIC_GetPriorityGrouping'

Call graph node for function: 'HAL_NVIC_SetPendingIRQ'<<0x565523b74cd0>>  #uses=1
  CS<0x56552437f060> calls function '__NVIC_SetPendingIRQ'

Call graph node for function: 'HAL_NVIC_SetPriority'<<0x565524c091a0>>  #uses=5
  CS<0x5655240de5d0> calls function '__NVIC_GetPriorityGrouping'
  CS<0x5655240dea20> calls function 'NVIC_EncodePriority'
  CS<0x5655240deb10> calls function '__NVIC_SetPriority'

Call graph node for function: 'HAL_NVIC_SetPriorityGrouping'<<0x565524c08ec0>>  #uses=2
  CS<0x5655240dbb50> calls function '__NVIC_SetPriorityGrouping'

Call graph node for function: 'HAL_NVIC_SystemReset'<<0x565523c10b50>>  #uses=1
  CS<0x565524365ee0> calls function '__NVIC_SystemReset'

Call graph node for function: 'HAL_PWREx_ControlVoltageScaling'<<0x565523c250e0>>  #uses=1
  CS<0x56552463b7c0> calls function 'HAL_GetTick'
  CS<0x56552463bdf0> calls function 'HAL_GetTick'
  CS<0x56552463cc10> calls function 'HAL_GetTick'
  CS<0x56552463d240> calls function 'HAL_GetTick'
  CS<0x56552463d790> calls function 'HAL_GetTick'
  CS<0x56552463dd10> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_PWREx_DisableBkUpReg'<<0x565523c24910>>  #uses=1
  CS<0x56552462b610> calls function 'HAL_GetTick'
  CS<0x56552462bb90> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_PWREx_DisableFlashPowerDown'<<0x565523c24a70>>  #uses=1

Call graph node for function: 'HAL_PWREx_DisableLowRegulatorLowVoltage'<<0x565523c24c70>>  #uses=1

Call graph node for function: 'HAL_PWREx_DisableMainRegulatorLowVoltage'<<0x565523c24b70>>  #uses=1

Call graph node for function: 'HAL_PWREx_DisableOverDrive'<<0x565523c24e00>>  #uses=1
  CS<0x565524632b50> calls function 'HAL_GetTick'
  CS<0x565524632fa0> calls function 'HAL_GetTick'
  CS<0x5655246336b0> calls function 'HAL_GetTick'
  CS<0x565524633b00> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_PWREx_EnableBkUpReg'<<0x565523c24800>>  #uses=1
  CS<0x5655246299e0> calls function 'HAL_GetTick'
  CS<0x565524629eb0> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_PWREx_EnableFlashPowerDown'<<0x565523c249f0>>  #uses=1

Call graph node for function: 'HAL_PWREx_EnableLowRegulatorLowVoltage'<<0x565523c24bf0>>  #uses=1

Call graph node for function: 'HAL_PWREx_EnableMainRegulatorLowVoltage'<<0x565523c24af0>>  #uses=1

Call graph node for function: 'HAL_PWREx_EnableOverDrive'<<0x565523b88800>>  #uses=2
  CS<0x56552462f5a0> calls function 'HAL_GetTick'
  CS<0x56552462fab0> calls function 'HAL_GetTick'
  CS<0x5655246301c0> calls function 'HAL_GetTick'
  CS<0x5655246306d0> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_PWREx_EnterUnderDriveSTOPMode'<<0x565523c24f30>>  #uses=1
  CS<0x565524636e70> calls function 'HAL_GetTick'
  CS<0x5655246372c0> calls function 'HAL_GetTick'
  CS<0x565524638360> calls external node
  CS<0x5655246384b0> calls external node

Call graph node for function: 'HAL_PWREx_GetVoltageRange'<<0x565523c25060>>  #uses=1

Call graph node for function: 'HAL_RCC_CSSCallback'<<0x565524d58470>>  #uses=2

Call graph node for function: 'HAL_RCC_ClockConfig'<<0x565523b88880>>  #uses=2
  CS<0x565523f77480> calls function 'HAL_GetTick'
  CS<0x565523f77bc0> calls function 'HAL_GetTick'
  CS<0x565523f79f90> calls function 'HAL_RCC_GetSysClockFreq'
  CS<0x565523f7a670> calls function 'HAL_InitTick'

Call graph node for function: 'HAL_RCC_DeInit'<<0x565524c0a5c0>>  #uses=1
  CS<0x565523f3f970> calls function 'HAL_GetTick'
  CS<0x565523f3ff80> calls function 'HAL_GetTick'
  CS<0x565523f40690> calls function 'HAL_GetTick'
  CS<0x565523f40bd0> calls function 'HAL_GetTick'
  CS<0x565523f41120> calls function 'HAL_GetTick'
  CS<0x565523f41760> calls function 'HAL_GetTick'
  CS<0x565523f41cb0> calls function 'HAL_GetTick'
  CS<0x565523f422f0> calls function 'HAL_GetTick'
  CS<0x565523f42840> calls function 'HAL_GetTick'
  CS<0x565523f42e80> calls function 'HAL_GetTick'
  CS<0x565523f433d0> calls function 'HAL_GetTick'
  CS<0x565523f43a10> calls function 'HAL_GetTick'
  CS<0x565523f44a20> calls function 'HAL_InitTick'

Call graph node for function: 'HAL_RCC_DisableCSS'<<0x565524c0af40>>  #uses=1

Call graph node for function: 'HAL_RCC_EnableCSS'<<0x565524c0aec0>>  #uses=1

Call graph node for function: 'HAL_RCC_GetClockConfig'<<0x565524d58370>>  #uses=1

Call graph node for function: 'HAL_RCC_GetHCLKFreq'<<0x565524c0afc0>>  #uses=4

Call graph node for function: 'HAL_RCC_GetOscConfig'<<0x565524c0b170>>  #uses=1
  CS<0x565523e83a40> calls external node

Call graph node for function: 'HAL_RCC_GetPCLK1Freq'<<0x565524c0b040>>  #uses=3
  CS<0x565523f85f50> calls function 'HAL_RCC_GetHCLKFreq'

Call graph node for function: 'HAL_RCC_GetPCLK2Freq'<<0x565524c0b0c0>>  #uses=3
  CS<0x565523f867f0> calls function 'HAL_RCC_GetHCLKFreq'

Call graph node for function: 'HAL_RCC_GetSysClockFreq'<<0x565524c0adc0>>  #uses=4

Call graph node for function: 'HAL_RCC_MCOConfig'<<0x565524c0ae40>>  #uses=1
  CS<0x565523f82f70> calls function 'HAL_GPIO_Init'
  CS<0x565523f84340> calls function 'HAL_GPIO_Init'

Call graph node for function: 'HAL_RCC_NMI_IRQHandler'<<0x565524d583f0>>  #uses=1
  CS<0x565523e87ca0> calls function 'HAL_RCC_CSSCallback'

Call graph node for function: 'HAL_RCC_OscConfig'<<0x565523b88700>>  #uses=2
  CS<0x565523f4fdb0> calls function 'HAL_GetTick'
  CS<0x565523f503e0> calls function 'HAL_GetTick'
  CS<0x565523f509d0> calls function 'HAL_GetTick'
  CS<0x565523f51000> calls function 'HAL_GetTick'
  CS<0x565523f53810> calls function 'HAL_GetTick'
  CS<0x565523f53e40> calls function 'HAL_GetTick'
  CS<0x565523f54a70> calls function 'HAL_GetTick'
  CS<0x565523f550a0> calls function 'HAL_GetTick'
  CS<0x565523f56130> calls function 'HAL_GetTick'
  CS<0x565523f56760> calls function 'HAL_GetTick'
  CS<0x565523f56f10> calls function 'HAL_GetTick'
  CS<0x565523f57540> calls function 'HAL_GetTick'
  CS<0x565523f58e70> calls function 'HAL_GetTick'
  CS<0x565523f592c0> calls function 'HAL_GetTick'
  CS<0x565523f5b510> calls function 'HAL_GetTick'
  CS<0x565523f5bb40> calls function 'HAL_GetTick'
  CS<0x565523f5c130> calls function 'HAL_GetTick'
  CS<0x565523f5c760> calls function 'HAL_GetTick'
  CS<0x565523f5e010> calls function 'HAL_GetTick'
  CS<0x565523f5e640> calls function 'HAL_GetTick'
  CS<0x565523f60280> calls function 'HAL_GetTick'
  CS<0x565523f608b0> calls function 'HAL_GetTick'
  CS<0x565523f61060> calls function 'HAL_GetTick'
  CS<0x565523f61690> calls function 'HAL_GetTick'

Call graph node for function: 'HAL_ResumeTick'<<0x565524c09660>>  #uses=1

Call graph node for function: 'HAL_SYSTICK_CLKSourceConfig'<<0x565523b75160>>  #uses=1

Call graph node for function: 'HAL_SYSTICK_Callback'<<0x565523b75260>>  #uses=2

Call graph node for function: 'HAL_SYSTICK_Config'<<0x565524c09120>>  #uses=2
  CS<0x565524358f60> calls function 'SysTick_Config'

Call graph node for function: 'HAL_SYSTICK_IRQHandler'<<0x565523b751e0>>  #uses=1
  CS<0x565524386c00> calls function 'HAL_SYSTICK_Callback'

Call graph node for function: 'HAL_SetTickFreq'<<0x565524c093a0>>  #uses=1
  CS<0x565523d6da20> calls function 'HAL_InitTick'

Call graph node for function: 'HAL_SuspendTick'<<0x565524c095e0>>  #uses=1

Call graph node for function: 'HAL_UARTEx_RxEventCallback'<<0x565524d562a0>>  #uses=7

Call graph node for function: 'HAL_UARTEx_WakeupCallback'<<0x565524d57ce0>>  #uses=2

Call graph node for function: 'HAL_UART_Abort'<<0x565523c0e1a0>>  #uses=1
  CS<0x565524187f50> calls external node
  CS<0x565524188a10> calls external node
  CS<0x565524189440> calls external node
  CS<0x56552418a0b0> calls external node
  CS<0x56552418b090> calls external node
  CS<0x56552418bd30> calls external node
  CS<0x56552418cf10> calls external node
  CS<0x56552418dbb0> calls external node
  CS<0x56552418e8b0> calls function 'HAL_DMA_Abort'
  CS<0x56552418ed20> calls function 'HAL_DMA_GetError'
  CS<0x565524190280> calls external node
  CS<0x565524190f20> calls external node
  CS<0x565524191c20> calls function 'HAL_DMA_Abort'
  CS<0x565524289bd0> calls function 'HAL_DMA_GetError'

Call graph node for function: 'HAL_UART_AbortCpltCallback'<<0x565523c0ed20>>  #uses=4

Call graph node for function: 'HAL_UART_AbortReceive'<<0x565523c0e530>>  #uses=1
  CS<0x565524299e40> calls external node
  CS<0x56552429a900> calls external node
  CS<0x56552429b370> calls external node
  CS<0x56552429c010> calls external node
  CS<0x56552429cff0> calls external node
  CS<0x56552429dc90> calls external node
  CS<0x56552429ee70> calls external node
  CS<0x565523fd0210> calls external node
  CS<0x565523fd0f10> calls function 'HAL_DMA_Abort'
  CS<0x565523fd1380> calls function 'HAL_DMA_GetError'

Call graph node for function: 'HAL_UART_AbortReceiveCpltCallback'<<0x565523c0f510>>  #uses=4

Call graph node for function: 'HAL_UART_AbortReceive_IT'<<0x565523c0f080>>  #uses=1
  CS<0x5655242f9190> calls external node
  CS<0x5655242f9c50> calls external node
  CS<0x5655242fa770> calls external node
  CS<0x5655242fb410> calls external node
  CS<0x5655242fc3f0> calls external node
  CS<0x5655242fd090> calls external node
  CS<0x5655242fe270> calls external node
  CS<0x5655242fef10> calls external node
  CS<0x5655242ffc10> calls function 'HAL_DMA_Abort_IT'
  CS<0x5655243003e0> calls external node
  CS<0x5655243016e0> calls function 'HAL_UART_AbortReceiveCpltCallback'
  CS<0x5655243025c0> calls function 'HAL_UART_AbortReceiveCpltCallback'

Call graph node for function: 'HAL_UART_AbortTransmit'<<0x565523c0e4b0>>  #uses=1
  CS<0x565524290670> calls external node
  CS<0x565524291250> calls external node
  CS<0x565524292390> calls external node
  CS<0x565524293030> calls external node
  CS<0x565524293d30> calls function 'HAL_DMA_Abort'
  CS<0x5655242941a0> calls function 'HAL_DMA_GetError'

Call graph node for function: 'HAL_UART_AbortTransmitCpltCallback'<<0x565523c0ef80>>  #uses=4

Call graph node for function: 'HAL_UART_AbortTransmit_IT'<<0x565523c0eed0>>  #uses=1
  CS<0x565523f70f40> calls external node
  CS<0x565523f71b20> calls external node
  CS<0x565523f72c60> calls external node
  CS<0x565523f73900> calls external node
  CS<0x565523f74600> calls function 'HAL_DMA_Abort_IT'
  CS<0x565523f74dd0> calls external node
  CS<0x565523f75740> calls function 'HAL_UART_AbortTransmitCpltCallback'
  CS<0x565523f760b0> calls function 'HAL_UART_AbortTransmitCpltCallback'

Call graph node for function: 'HAL_UART_Abort_IT'<<0x565523c0e990>>  #uses=1
  CS<0x565523fd9d00> calls external node
  CS<0x565523fda7c0> calls external node
  CS<0x565523fdb220> calls external node
  CS<0x565523fdbec0> calls external node
  CS<0x565523fdcea0> calls external node
  CS<0x565523fddb40> calls external node
  CS<0x565523fe1080> calls external node
  CS<0x565523fe1d20> calls external node
  CS<0x565523fe2670> calls function 'HAL_DMA_Abort_IT'
  CS<0x565523fe3d30> calls external node
  CS<0x565523fe49d0> calls external node
  CS<0x565523fe5320> calls function 'HAL_DMA_Abort_IT'
  CS<0x565523fe79b0> calls function 'HAL_UART_AbortCpltCallback'

Call graph node for function: 'HAL_UART_DMAPause'<<0x565524d57760>>  #uses=1
  CS<0x56552425d540> calls external node
  CS<0x56552425e150> calls external node
  CS<0x56552425f570> calls external node
  CS<0x565524260210> calls external node
  CS<0x565524260e50> calls external node
  CS<0x565524261af0> calls external node
  CS<0x565524262730> calls external node
  CS<0x5655242633d0> calls external node

Call graph node for function: 'HAL_UART_DMAResume'<<0x565524d57840>>  #uses=1
  CS<0x565524268a00> calls external node
  CS<0x5655242694c0> calls external node
  CS<0x56552426ac90> calls external node
  CS<0x56552426b930> calls external node
  CS<0x56552426c610> calls external node
  CS<0x56552426d2b0> calls external node
  CS<0x56552426def0> calls external node
  CS<0x56552426eb90> calls external node

Call graph node for function: 'HAL_UART_DMAStop'<<0x565524d57a10>>  #uses=1
  CS<0x565524274110> calls external node
  CS<0x565524274db0> calls external node
  CS<0x565524275700> calls function 'HAL_DMA_Abort'
  CS<0x565524275b70> calls function 'HAL_DMA_GetError'
  CS<0x565524276340> calls function 'UART_EndTxTransfer'
  CS<0x565524277480> calls external node
  CS<0x565524278120> calls external node
  CS<0x565524278a70> calls function 'HAL_DMA_Abort'
  CS<0x565524278ee0> calls function 'HAL_DMA_GetError'
  CS<0x5655242796b0> calls function 'UART_EndRxTransfer'

Call graph node for function: 'HAL_UART_DeInit'<<0x565524c0b500>>  #uses=2
  CS<0x5655241ba2a0> calls function 'HAL_UART_MspDeInit'

Call graph node for function: 'HAL_UART_DisableReceiverTimeout'<<0x565523c0ffd0>>  #uses=1

Call graph node for function: 'HAL_UART_EnableReceiverTimeout'<<0x565523c0ff50>>  #uses=1

Call graph node for function: 'HAL_UART_ErrorCallback'<<0x565524d56c20>>  #uses=6

Call graph node for function: 'HAL_UART_GetError'<<0x565523c10690>>  #uses=1

Call graph node for function: 'HAL_UART_GetState'<<0x565523c10610>>  #uses=1

Call graph node for function: 'HAL_UART_IRQHandler'<<0x565523c0f610>>  #uses=1
  CS<0x565524311320> calls external node
  CS<0x565524316ee0> calls external node
  CS<0x565524317c20> calls function 'UART_EndRxTransfer'
  CS<0x565524318a80> calls external node
  CS<0x565524319720> calls external node
  CS<0x56552431a420> calls function 'HAL_DMA_Abort_IT'
  CS<0x56552431abf0> calls external node
  CS<0x56552431ae70> calls function 'HAL_UART_ErrorCallback'
  CS<0x56552431b0f0> calls function 'HAL_UART_ErrorCallback'
  CS<0x56552431b370> calls function 'HAL_UART_ErrorCallback'
  CS<0x56552431ea10> calls external node
  CS<0x56552431f6b0> calls external node
  CS<0x5655243202f0> calls external node
  CS<0x565524320f90> calls external node
  CS<0x565524321bd0> calls external node
  CS<0x565524322870> calls external node
  CS<0x565524323950> calls external node
  CS<0x5655243245f0> calls external node
  CS<0x565524324ba0> calls function 'HAL_DMA_Abort'
  CS<0x565524325660> calls function 'HAL_UARTEx_RxEventCallback'
  CS<0x565524326fd0> calls external node
  CS<0x565524327c70> calls external node
  CS<0x5655243288b0> calls external node
  CS<0x565524329550> calls external node
  CS<0x56552432a880> calls external node
  CS<0x56552432b520> calls external node
  CS<0x56552432bc80> calls function 'HAL_UARTEx_RxEventCallback'
  CS<0x56552432c850> calls function 'HAL_UARTEx_WakeupCallback'
  CS<0x56552432d600> calls external node
  CS<0x56552432de80> calls function 'UART_EndTransmit_IT'

Call graph node for function: 'HAL_UART_Init'<<0x565524c0b350>>  #uses=2
  CS<0x56552416e7a0> calls function 'HAL_UART_MspInit'
  CS<0x56552416f020> calls function 'UART_SetConfig'
  CS<0x56552416f8f0> calls function 'UART_AdvFeatureConfig'
  CS<0x565524170760> calls function 'UART_CheckIdleState'

Call graph node for function: 'HAL_UART_MspDeInit'<<0x565524d55870>>  #uses=2

Call graph node for function: 'HAL_UART_MspInit'<<0x565523b73e40>>  #uses=5

Call graph node for function: 'HAL_UART_Receive'<<0x565524d55a50>>  #uses=1
  CS<0x5655241c8bf0> calls function 'HAL_GetTick'
  CS<0x5655241cd760> calls function 'UART_WaitOnFlagUntilTimeout'

Call graph node for function: 'HAL_UART_Receive_DMA'<<0x565524d56f00>>  #uses=1
  CS<0x56552423bc30> calls external node
  CS<0x56552423c8d0> calls external node
  CS<0x56552423cf40> calls function 'UART_Start_Receive_DMA'

Call graph node for function: 'HAL_UART_Receive_IT'<<0x565524d55e70>>  #uses=1
  CS<0x5655241ea740> calls external node
  CS<0x5655241eb3e0> calls external node
  CS<0x5655241eba50> calls function 'UART_Start_Receive_IT'

Call graph node for function: 'HAL_UART_ReceiverTimeout_Config'<<0x565523c0fed0>>  #uses=1

Call graph node for function: 'HAL_UART_RxCpltCallback'<<0x565524d56320>>  #uses=4

Call graph node for function: 'HAL_UART_RxHalfCpltCallback'<<0x565524d576e0>>  #uses=2

Call graph node for function: 'HAL_UART_Transmit'<<0x565524d558f0>>  #uses=1
  CS<0x5655241bf440> calls function 'HAL_GetTick'
  CS<0x5655241c1170> calls function 'UART_WaitOnFlagUntilTimeout'
  CS<0x5655241c3080> calls function 'UART_WaitOnFlagUntilTimeout'

Call graph node for function: 'HAL_UART_Transmit_DMA'<<0x565524d56570>>  #uses=1
  CS<0x56552421d560> calls function 'HAL_DMA_Start_IT'
  CS<0x56552421e9f0> calls external node
  CS<0x56552421f690> calls external node

Call graph node for function: 'HAL_UART_Transmit_IT'<<0x565524d55ad0>>  #uses=1
  CS<0x5655241d64d0> calls external node
  CS<0x5655241d7170> calls external node

Call graph node for function: 'HAL_UART_TxCpltCallback'<<0x565524d567a0>>  #uses=3

Call graph node for function: 'HAL_UART_TxHalfCpltCallback'<<0x565524d569f0>>  #uses=2

Call graph node for function: 'HardFault_Handler'<<0x565523b87a40>>  #uses=1

Call graph node for function: 'I2C_ConvertOtherXferOptions'<<0x565523c23380>>  #uses=4

Call graph node for function: 'I2C_DMAAbort'<<0x565523b78320>>  #uses=1
  CS<0x56552448ed80> calls function 'I2C_TreatErrorCallback'

Call graph node for function: 'I2C_DMAError'<<0x565523c21980>>  #uses=1
  CS<0x5655244d0c40> calls function 'HAL_DMA_GetError'
  CS<0x5655244d1660> calls function 'I2C_ITError'

Call graph node for function: 'I2C_DMAMasterReceiveCplt'<<0x565523c21ce0>>  #uses=1
  CS<0x5655244e12c0> calls function 'I2C_Enable_IRQ'
  CS<0x5655244d22d0> calls function 'HAL_DMA_Start_IT'
  CS<0x5655244e32f0> calls function 'I2C_ITError'
  CS<0x5655244e3520> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'I2C_DMAMasterTransmitCplt'<<0x565523c21900>>  #uses=1
  CS<0x5655244cb310> calls function 'I2C_Enable_IRQ'
  CS<0x565524283570> calls function 'HAL_DMA_Start_IT'
  CS<0x5655244cd340> calls function 'I2C_ITError'
  CS<0x5655244cd570> calls function 'I2C_Enable_IRQ'

Call graph node for function: 'I2C_DMASlaveReceiveCplt'<<0x565523c21f70>>  #uses=1
  CS<0x5655244fc5c0> calls function 'I2C_ITSlaveSeqCplt'

Call graph node for function: 'I2C_DMASlaveTransmitCplt'<<0x565523c21de0>>  #uses=1
  CS<0x5655244efe80> calls function 'I2C_ITSlaveSeqCplt'

Call graph node for function: 'I2C_Disable_IRQ'<<0x565523b77650>>  #uses=24

Call graph node for function: 'I2C_Enable_IRQ'<<0x565523b76b40>>  #uses=33

Call graph node for function: 'I2C_Flush_TXDR'<<0x565523b76210>>  #uses=10

Call graph node for function: 'I2C_ITAddrCplt'<<0x565523b775d0>>  #uses=2
  CS<0x565524473f70> calls function 'HAL_I2C_AddrCallback'
  CS<0x5655244743a0> calls function 'I2C_Disable_IRQ'
  CS<0x565524474990> calls function 'HAL_I2C_AddrCallback'
  CS<0x565524474c30> calls function 'I2C_Disable_IRQ'
  CS<0x565524475220> calls function 'HAL_I2C_AddrCallback'

Call graph node for function: 'I2C_ITError'<<0x565523b76e70>>  #uses=14
  CS<0x565524465ea0> calls function 'I2C_Disable_IRQ'
  CS<0x565524466570> calls function 'I2C_Disable_IRQ'
  CS<0x565524468780> calls function 'HAL_DMA_GetState'
  CS<0x5655244692a0> calls function 'HAL_DMA_Abort_IT'
  CS<0x565524469a70> calls external node
  CS<0x565524469cf0> calls function 'I2C_TreatErrorCallback'
  CS<0x56552446b400> calls function 'HAL_DMA_GetState'
  CS<0x56552446bf20> calls function 'HAL_DMA_Abort_IT'
  CS<0x56552446c6f0> calls external node
  CS<0x56552446c970> calls function 'I2C_TreatErrorCallback'
  CS<0x56552446cbf0> calls function 'I2C_TreatErrorCallback'

Call graph node for function: 'I2C_ITListenCplt'<<0x565523b77380>>  #uses=3
  CS<0x56552445c6d0> calls function 'I2C_Disable_IRQ'
  CS<0x56552445ce60> calls function 'HAL_I2C_ListenCpltCallback'

Call graph node for function: 'I2C_ITMasterCplt'<<0x565523b76ef0>>  #uses=4
  CS<0x56552408e180> calls function 'I2C_Disable_IRQ'
  CS<0x56552408e9a0> calls function 'I2C_Disable_IRQ'
  CS<0x5655240911c0> calls function 'I2C_Flush_TXDR'
  CS<0x565524091df0> calls function 'I2C_ITError'
  CS<0x565524093130> calls function 'HAL_I2C_MemTxCpltCallback'
  CS<0x565524093890> calls function 'HAL_I2C_MasterTxCpltCallback'
  CS<0x5655244a7820> calls function 'HAL_I2C_MemRxCpltCallback'
  CS<0x5655244a7f80> calls function 'HAL_I2C_MasterRxCpltCallback'

Call graph node for function: 'I2C_ITMasterSeqCplt'<<0x565523b76ca0>>  #uses=4
  CS<0x565524494b40> calls function 'I2C_Disable_IRQ'
  CS<0x565524494fb0> calls function 'HAL_I2C_MasterTxCpltCallback'
  CS<0x5655244958d0> calls function 'I2C_Disable_IRQ'
  CS<0x565524495d40> calls function 'HAL_I2C_MasterRxCpltCallback'

Call graph node for function: 'I2C_ITSlaveCplt'<<0x565523b77300>>  #uses=2
  CS<0x56552444cbb0> calls function 'I2C_Disable_IRQ'
  CS<0x56552444d4b0> calls function 'I2C_Disable_IRQ'
  CS<0x56552444e2c0> calls function 'I2C_Flush_TXDR'
  CS<0x565524453e20> calls function 'I2C_ITError'
  CS<0x5655244543f0> calls function 'I2C_ITListenCplt'
  CS<0x565524454a40> calls function 'I2C_ITSlaveSeqCplt'
  CS<0x5655244555a0> calls function 'HAL_I2C_ListenCpltCallback'
  CS<0x5655244562f0> calls function 'HAL_I2C_SlaveRxCpltCallback'
  CS<0x565524456ca0> calls function 'HAL_I2C_SlaveTxCpltCallback'

Call graph node for function: 'I2C_ITSlaveSeqCplt'<<0x565523b77400>>  #uses=7
  CS<0x565524460ad0> calls function 'I2C_Disable_IRQ'
  CS<0x565524460f40> calls function 'HAL_I2C_SlaveTxCpltCallback'
  CS<0x5655244619b0> calls function 'I2C_Disable_IRQ'
  CS<0x565524461e20> calls function 'HAL_I2C_SlaveRxCpltCallback'

Call graph node for function: 'I2C_IsErrorOccurred'<<0x565523b760a0>>  #uses=3
  CS<0x5655243cfd90> calls function 'HAL_GetTick'
  CS<0x5655243d1bd0> calls function 'HAL_GetTick'
  CS<0x5655243d2500> calls function 'HAL_GetTick'
  CS<0x5655243d58d0> calls function 'I2C_Flush_TXDR'

Call graph node for function: 'I2C_Master_ISR_DMA'<<0x565523b77200>>  #uses=1
  CS<0x56552442f990> calls function 'I2C_Enable_IRQ'
  CS<0x56552442fb00> calls function 'I2C_Flush_TXDR'
  CS<0x565524432cd0> calls function 'I2C_TransferConfig'
  CS<0x5655244348c0> calls function 'I2C_ITMasterSeqCplt'
  CS<0x565524434af0> calls function 'I2C_ITError'
  CS<0x565524436910> calls function 'I2C_ITMasterSeqCplt'
  CS<0x565524436c50> calls function 'I2C_ITError'
  CS<0x565524437890> calls function 'I2C_ITMasterCplt'

Call graph node for function: 'I2C_Master_ISR_IT'<<0x565523b76bc0>>  #uses=1
  CS<0x5655244178f0> calls function 'I2C_Flush_TXDR'
  CS<0x56552441d240> calls function 'I2C_TransferConfig'
  CS<0x56552441e200> calls function 'I2C_TransferConfig'
  CS<0x56552441e7d0> calls function 'I2C_TransferConfig'
  CS<0x56552441eff0> calls function 'I2C_ITMasterSeqCplt'
  CS<0x56552441f220> calls function 'I2C_ITError'
  CS<0x565524421040> calls function 'I2C_ITMasterSeqCplt'
  CS<0x565524421380> calls function 'I2C_ITError'
  CS<0x5655244221f0> calls function 'I2C_ITMasterCplt'

Call graph node for function: 'I2C_Mem_ISR_DMA'<<0x565523c22cc0>>  #uses=1
  CS<0x56552456b980> calls function 'I2C_Enable_IRQ'
  CS<0x56552456baf0> calls function 'I2C_Flush_TXDR'
  CS<0x56552456d7c0> calls function 'I2C_Enable_IRQ'
  CS<0x56552456e960> calls function 'I2C_TransferConfig'
  CS<0x56552456f580> calls function 'I2C_TransferConfig'
  CS<0x565524570cd0> calls function 'I2C_ITError'
  CS<0x565524572a10> calls function 'I2C_TransferConfig'
  CS<0x5655245736d0> calls function 'I2C_TransferConfig'
  CS<0x5655245757c0> calls function 'I2C_ITMasterCplt'

Call graph node for function: 'I2C_Mem_ISR_IT'<<0x565523c229d0>>  #uses=1
  CS<0x56552412bf50> calls function 'I2C_Flush_TXDR'
  CS<0x565524549860> calls function 'I2C_TransferConfig'
  CS<0x56552454a480> calls function 'I2C_TransferConfig'
  CS<0x56552454a720> calls function 'I2C_ITError'
  CS<0x56552454c460> calls function 'I2C_TransferConfig'
  CS<0x56552454d120> calls function 'I2C_TransferConfig'
  CS<0x56552454df90> calls function 'I2C_ITMasterCplt'

Call graph node for function: 'I2C_RequestMemoryRead'<<0x565523c22590>>  #uses=1
  CS<0x565524522f10> calls function 'I2C_TransferConfig'
  CS<0x565524523200> calls function 'I2C_WaitOnTXISFlagUntilTimeout'
  CS<0x5655245249c0> calls function 'I2C_WaitOnTXISFlagUntilTimeout'
  CS<0x5655245256d0> calls function 'I2C_WaitOnFlagUntilTimeout'

Call graph node for function: 'I2C_RequestMemoryWrite'<<0x565523c22080>>  #uses=1
  CS<0x56552450df80> calls function 'I2C_TransferConfig'
  CS<0x56552450e270> calls function 'I2C_WaitOnTXISFlagUntilTimeout'
  CS<0x56552450fa30> calls function 'I2C_WaitOnTXISFlagUntilTimeout'
  CS<0x565524510740> calls function 'I2C_WaitOnFlagUntilTimeout'

Call graph node for function: 'I2C_Slave_ISR_DMA'<<0x565523b77280>>  #uses=1
  CS<0x56552443e9e0> calls function 'I2C_ITSlaveCplt'
  CS<0x5655244427f0> calls function 'I2C_ITListenCplt'
  CS<0x565524443300> calls function 'I2C_Flush_TXDR'
  CS<0x565524443470> calls function 'I2C_ITSlaveSeqCplt'
  CS<0x565524445ab0> calls function 'I2C_ITError'
  CS<0x565524446bc0> calls function 'I2C_ITAddrCplt'

Call graph node for function: 'I2C_Slave_ISR_IT'<<0x565523b78150>>  #uses=1
  CS<0x5655244812b0> calls function 'I2C_ITSlaveCplt'
  CS<0x565524482870> calls function 'I2C_ITListenCplt'
  CS<0x565524483380> calls function 'I2C_Flush_TXDR'
  CS<0x5655244834f0> calls function 'I2C_ITSlaveSeqCplt'
  CS<0x5655244848b0> calls function 'I2C_ITError'
  CS<0x565524487090> calls function 'I2C_ITSlaveSeqCplt'
  CS<0x565524487d00> calls function 'I2C_ITAddrCplt'
  CS<0x56552448a200> calls function 'I2C_ITSlaveSeqCplt'

Call graph node for function: 'I2C_TransferConfig'<<0x565523b75e70>>  #uses=47

Call graph node for function: 'I2C_TreatErrorCallback'<<0x565523b77dc0>>  #uses=4
  CS<0x5655244906a0> calls function 'HAL_I2C_AbortCpltCallback'
  CS<0x565524490e00> calls function 'HAL_I2C_ErrorCallback'

Call graph node for function: 'I2C_WaitOnFlagUntilTimeout'<<0x565523b75d90>>  #uses=22
  CS<0x5655243be7f0> calls function 'HAL_GetTick'

Call graph node for function: 'I2C_WaitOnRXNEFlagUntilTimeout'<<0x565523b763c0>>  #uses=2
  CS<0x5655243e9ff0> calls function 'I2C_IsErrorOccurred'
  CS<0x5655243ed630> calls function 'HAL_GetTick'

Call graph node for function: 'I2C_WaitOnSTOPFlagUntilTimeout'<<0x565523b76020>>  #uses=6
  CS<0x5655243c9570> calls function 'I2C_IsErrorOccurred'
  CS<0x5655243c98f0> calls function 'HAL_GetTick'

Call graph node for function: 'I2C_WaitOnTXISFlagUntilTimeout'<<0x565523b75fa0>>  #uses=7
  CS<0x5655243c5640> calls function 'I2C_IsErrorOccurred'
  CS<0x5655243c5c00> calls function 'HAL_GetTick'

Call graph node for function: 'I2Cx_Error'<<0x565524c23300>>  #uses=4
  CS<0x565523dd2010> calls function 'HAL_I2C_DeInit'
  CS<0x565523dd20c0> calls function 'I2Cx_Init'

Call graph node for function: 'I2Cx_Init'<<0x565524c0bb90>>  #uses=5
  CS<0x565523dc8800> calls function 'HAL_I2C_GetState'
  CS<0x565523dc9020> calls function 'I2Cx_MspInit'
  CS<0x565523dc90f0> calls function 'HAL_I2C_Init'

Call graph node for function: 'I2Cx_IsDeviceReady'<<0x565524c23ca0>>  #uses=1
  CS<0x565523de2100> calls function 'HAL_I2C_IsDeviceReady'

Call graph node for function: 'I2Cx_MspInit'<<0x565524c22d30>>  #uses=1
  CS<0x565523dcab00> calls function 'HAL_GPIO_Init'
  CS<0x565523dcada0> calls function 'HAL_GPIO_Init'
  CS<0x565523dcb840> calls function 'HAL_NVIC_SetPriority'
  CS<0x565523dcb910> calls function 'HAL_NVIC_EnableIRQ'
  CS<0x565523dcba20> calls function 'HAL_NVIC_SetPriority'
  CS<0x565523dcbaf0> calls function 'HAL_NVIC_EnableIRQ'

Call graph node for function: 'I2Cx_Read'<<0x565524c240f0>>  #uses=1
  CS<0x565523de7c50> calls function 'HAL_I2C_Mem_Read'
  CS<0x565523de80c0> calls function 'I2Cx_Error'

Call graph node for function: 'I2Cx_ReadMultiple'<<0x565524c234e0>>  #uses=5
  CS<0x565523dd6200> calls function 'HAL_I2C_Mem_Read'
  CS<0x565523dd6670> calls function 'I2Cx_Error'

Call graph node for function: 'I2Cx_Write'<<0x565524c23f30>>  #uses=1
  CS<0x565523de4b10> calls function 'HAL_I2C_Mem_Write'
  CS<0x565523de4f80> calls function 'I2Cx_Error'

Call graph node for function: 'I2Cx_WriteMultiple'<<0x565524c231d0>>  #uses=5
  CS<0x565523dd0fe0> calls function 'HAL_I2C_Mem_Write'
  CS<0x565523dd1450> calls function 'I2Cx_Error'

Call graph node for function: 'MemManage_Handler'<<0x565523b87ac0>>  #uses=1

Call graph node for function: 'NMI_Handler'<<0x565523b879c0>>  #uses=1

Call graph node for function: 'NVIC_DecodePriority'<<0x565523b74bf0>>  #uses=1

Call graph node for function: 'NVIC_EncodePriority'<<0x565523c10840>>  #uses=1

Call graph node for function: 'Netif_Config'<<0x565523b88580>>  #uses=1
  CS<0x565523d53690> calls external node
  CS<0x565523d53760> calls external node
  CS<0x565523d53830> calls function 'ethernet_link_status_updated'
  CS<0x565523d53920> calls external node

Call graph node for function: 'OTM8009A_IO_Delay'<<0x565524c243e0>>  #uses=1
  CS<0x565523dee250> calls function 'HAL_Delay'

Call graph node for function: 'SCB_InvalidateDCache_by_Addr'<<0x565523b88120>>  #uses=1
  CS<0x565523d95d10> calls external node
  CS<0x565523d966d0> calls external node
  CS<0x565523d96780> calls external node

Call graph node for function: 'SysTick_Config'<<0x565523c10d90>>  #uses=1
  CS<0x56552435a030> calls function '__NVIC_SetPriority'

Call graph node for function: 'SysTick_Handler'<<0x565523b87c40>>  #uses=1
  CS<0x565523d2e4f0> calls function 'HAL_IncTick'

Call graph node for function: 'SystemClock_Config'<<0x565523b88350>>  #uses=1
  CS<0x565523d4ff00> calls function 'HAL_RCC_OscConfig'
  CS<0x565523d502b0> calls function 'Error_Handler'
  CS<0x565523d50400> calls function 'HAL_PWREx_EnableOverDrive'
  CS<0x565523d507b0> calls function 'Error_Handler'
  CS<0x565523d511b0> calls function 'HAL_RCC_ClockConfig'
  CS<0x565523d51560> calls function 'Error_Handler'

Call graph node for function: 'SystemCoreClockUpdate'<<0x565523b88ab0>>  #uses=1

Call graph node for function: 'SystemInit'<<0x565523b88a30>>  #uses=1

Call graph node for function: 'TS_IO_Delay'<<0x565524c24330>>  #uses=1
  CS<0x565523dedab0> calls function 'HAL_Delay'

Call graph node for function: 'TS_IO_Init'<<0x565524c23e00>>  #uses=1
  CS<0x565523de2520> calls function 'I2Cx_Init'

Call graph node for function: 'TS_IO_Read'<<0x565524c24070>>  #uses=1
  CS<0x565523de5e50> calls function 'I2Cx_Read'

Call graph node for function: 'TS_IO_ReadMultiple'<<0x565524c24200>>  #uses=1
  CS<0x565523d9ea50> calls function 'I2Cx_ReadMultiple'

Call graph node for function: 'TS_IO_Write'<<0x565524c23eb0>>  #uses=1
  CS<0x565523de34d0> calls function 'I2Cx_Write'

Call graph node for function: 'TS_IO_WriteMultiple'<<0x565524c24280>>  #uses=1
  CS<0x565523ded1e0> calls function 'I2Cx_WriteMultiple'

Call graph node for function: 'UART_AdvFeatureConfig'<<0x565523b73fd0>>  #uses=5

Call graph node for function: 'UART_CheckIdleState'<<0x565523b74100>>  #uses=7
  CS<0x565524194d10> calls function 'HAL_GetTick'
  CS<0x565523f3da20> calls function 'UART_WaitOnFlagUntilTimeout'
  CS<0x5655241960c0> calls function 'UART_WaitOnFlagUntilTimeout'

Call graph node for function: 'UART_DMAAbortOnError'<<0x565523c0fe20>>  #uses=1
  CS<0x565524334540> calls function 'HAL_UART_ErrorCallback'

Call graph node for function: 'UART_DMAError'<<0x565524d56a70>>  #uses=1
  CS<0x56552422a330> calls function 'UART_EndTxTransfer'
  CS<0x56552422aed0> calls function 'UART_EndRxTransfer'
  CS<0x56552422b430> calls function 'HAL_UART_ErrorCallback'

Call graph node for function: 'UART_DMAReceiveCplt'<<0x565524d57200>>  #uses=1
  CS<0x56552424e410> calls external node
  CS<0x56552424f020> calls external node
  CS<0x56552424fc60> calls external node
  CS<0x565524250900> calls external node
  CS<0x565524251540> calls external node
  CS<0x5655242521e0> calls external node
  CS<0x565524253410> calls external node
  CS<0x5655242540b0> calls external node
  CS<0x565524254e50> calls function 'HAL_UARTEx_RxEventCallback'
  CS<0x565524255060> calls function 'HAL_UART_RxCpltCallback'

Call graph node for function: 'UART_DMARxAbortCallback'<<0x565523c0ee20>>  #uses=1
  CS<0x565523f6d9c0> calls function 'HAL_UART_AbortCpltCallback'

Call graph node for function: 'UART_DMARxHalfCplt'<<0x565524d57660>>  #uses=1
  CS<0x565524257d90> calls function 'HAL_UARTEx_RxEventCallback'
  CS<0x565524257fa0> calls function 'HAL_UART_RxHalfCpltCallback'

Call graph node for function: 'UART_DMARxOnlyAbortCallback'<<0x565523c0f590>>  #uses=1
  CS<0x565524305fb0> calls function 'HAL_UART_AbortReceiveCpltCallback'

Call graph node for function: 'UART_DMATransmitCplt'<<0x565524d56670>>  #uses=1
  CS<0x565524223ce0> calls external node
  CS<0x565524224980> calls external node
  CS<0x5655242255c0> calls external node
  CS<0x565524226260> calls external node
  CS<0x565524226750> calls function 'HAL_UART_TxCpltCallback'

Call graph node for function: 'UART_DMATxAbortCallback'<<0x565523c0eda0>>  #uses=1
  CS<0x565523fed110> calls function 'HAL_UART_AbortCpltCallback'

Call graph node for function: 'UART_DMATxHalfCplt'<<0x565524d56970>>  #uses=1
  CS<0x565524227e00> calls function 'HAL_UART_TxHalfCpltCallback'

Call graph node for function: 'UART_DMATxOnlyAbortCallback'<<0x565523c0f000>>  #uses=1
  CS<0x5655242f4be0> calls function 'HAL_UART_AbortTransmitCpltCallback'

Call graph node for function: 'UART_EndRxTransfer'<<0x565524d56ba0>>  #uses=3
  CS<0x565524231870> calls external node
  CS<0x565524232330> calls external node
  CS<0x565524232f70> calls external node
  CS<0x565524233c10> calls external node
  CS<0x565524234bf0> calls external node
  CS<0x565524235890> calls external node

Call graph node for function: 'UART_EndTransmit_IT'<<0x565524d57d60>>  #uses=1
  CS<0x5655243365f0> calls external node
  CS<0x565524337290> calls external node
  CS<0x565524337b80> calls function 'HAL_UART_TxCpltCallback'

Call graph node for function: 'UART_EndTxTransfer'<<0x565524d56af0>>  #uses=2
  CS<0x56552422d380> calls external node
  CS<0x56552422e020> calls external node

Call graph node for function: 'UART_RxISR_16BIT'<<0x565524d560d0>>  #uses=1
  CS<0x565524201030> calls external node
  CS<0x565524201cd0> calls external node
  CS<0x565524202910> calls external node
  CS<0x5655242035b0> calls external node
  CS<0x565524204ed0> calls external node
  CS<0x565524205b70> calls external node
  CS<0x565524206bd0> calls function 'HAL_UARTEx_RxEventCallback'
  CS<0x565524206de0> calls function 'HAL_UART_RxCpltCallback'

Call graph node for function: 'UART_RxISR_8BIT'<<0x565524d563a0>>  #uses=1
  CS<0x56552420e2e0> calls external node
  CS<0x56552420ef80> calls external node
  CS<0x56552420fbc0> calls external node
  CS<0x565524210860> calls external node
  CS<0x565524212180> calls external node
  CS<0x565524212e20> calls external node
  CS<0x565524213e80> calls function 'HAL_UARTEx_RxEventCallback'
  CS<0x565524214090> calls function 'HAL_UART_RxCpltCallback'

Call graph node for function: 'UART_SetConfig'<<0x565523b73ef0>>  #uses=5
  CS<0x56552417f950> calls function 'HAL_RCC_GetPCLK1Freq'
  CS<0x56552417fb60> calls function 'HAL_RCC_GetPCLK2Freq'
  CS<0x56552417fed0> calls function 'HAL_RCC_GetSysClockFreq'
  CS<0x56552405c8f0> calls function 'HAL_RCC_GetPCLK1Freq'
  CS<0x56552405cb00> calls function 'HAL_RCC_GetPCLK2Freq'
  CS<0x56552405ce70> calls function 'HAL_RCC_GetSysClockFreq'

Call graph node for function: 'UART_Start_Receive_DMA'<<0x565524d56f80>>  #uses=2
  CS<0x565524243040> calls function 'HAL_DMA_Start_IT'
  CS<0x565524244640> calls external node
  CS<0x5655242452e0> calls external node
  CS<0x565524245fc0> calls external node
  CS<0x565524246c60> calls external node
  CS<0x5655242478a0> calls external node
  CS<0x565524248540> calls external node

Call graph node for function: 'UART_Start_Receive_IT'<<0x565524d55ef0>>  #uses=2
  CS<0x5655241f4220> calls external node
  CS<0x5655241f4ec0> calls external node
  CS<0x5655241f6e60> calls external node
  CS<0x5655241f7b00> calls external node
  CS<0x5655241f87e0> calls external node
  CS<0x5655241f9480> calls external node

Call graph node for function: 'UART_TxISR_16BIT'<<0x565524d55bb0>>  #uses=1
  CS<0x5655241db470> calls external node
  CS<0x5655241dc110> calls external node
  CS<0x5655241dcd50> calls external node
  CS<0x5655241dd9f0> calls external node

Call graph node for function: 'UART_TxISR_8BIT'<<0x565524d55d40>>  #uses=1
  CS<0x5655241e29d0> calls external node
  CS<0x5655241e3670> calls external node
  CS<0x5655241e42b0> calls external node
  CS<0x5655241e4f50> calls external node

Call graph node for function: 'UART_WaitOnFlagUntilTimeout'<<0x565523b74380>>  #uses=6
  CS<0x56552419ce70> calls function 'HAL_GetTick'
  CS<0x56552419dc00> calls external node
  CS<0x56552419e930> calls external node
  CS<0x56552419f570> calls external node
  CS<0x5655241a0210> calls external node
  CS<0x5655241a25a0> calls external node
  CS<0x5655241a3240> calls external node
  CS<0x5655241a3e80> calls external node
  CS<0x5655241a4b20> calls external node

Call graph node for function: 'UsageFault_Handler'<<0x565523b87bc0>>  #uses=1

Call graph node for function: '__NVIC_ClearPendingIRQ'<<0x565523b74f80>>  #uses=1

Call graph node for function: '__NVIC_DisableIRQ'<<0x565523c10a70>>  #uses=1
  CS<0x565524365920> calls external node
  CS<0x5655243659d0> calls external node

Call graph node for function: '__NVIC_EnableIRQ'<<0x565523c109f0>>  #uses=1

Call graph node for function: '__NVIC_GetActive'<<0x565523b750b0>>  #uses=1

Call graph node for function: '__NVIC_GetPendingIRQ'<<0x565523b74e50>>  #uses=1

Call graph node for function: '__NVIC_GetPriority'<<0x565523b74b40>>  #uses=1

Call graph node for function: '__NVIC_GetPriorityGrouping'<<0x565523c10790>>  #uses=2

Call graph node for function: '__NVIC_SetPendingIRQ'<<0x565523b74d50>>  #uses=1

Call graph node for function: '__NVIC_SetPriority'<<0x565523c108c0>>  #uses=2

Call graph node for function: '__NVIC_SetPriorityGrouping'<<0x565523c10710>>  #uses=1

Call graph node for function: '__NVIC_SystemReset'<<0x565523c10bd0>>  #uses=1
  CS<0x565524358250> calls external node
  CS<0x565524358610> calls external node
  CS<0x565524358760> calls external node

Call graph node for function: '_close'<<0x565523d44690>>  #uses=1

Call graph node for function: '_fstat'<<0x565523d44790>>  #uses=1

Call graph node for function: '_getpid'<<0x565523d44510>>  #uses=1

Call graph node for function: '_isatty'<<0x565523d44810>>  #uses=1

Call graph node for function: '_kill'<<0x565523d44490>>  #uses=1

Call graph node for function: '_lseek'<<0x565523d44610>>  #uses=1

Call graph node for function: '_read'<<0x565523d44590>>  #uses=1

Call graph node for function: '_sbrk'<<0x565523b6fd50>>  #uses=1

Call graph node for function: '_write'<<0x565523d44710>>  #uses=1

Call graph node for function: 'atoi'<<0x565524c0a2d0>>  #uses=2
  CS<None> calls external node

Call graph node for function: 'curr_stamp'<<0x565523b70010>>  #uses=106
  CS<0x565523c83560> calls function 'HAL_GetTick'

Call graph node for function: 'dhcp_arp_reply'<<0x565524d53f60>>  #uses=2
  CS<0x565523ee2900> calls function 'printf'
  CS<0x565523ee3b70> calls function 'dhcp_decline'

Call graph node for function: 'dhcp_bind'<<0x565524c26800>>  #uses=3
  CS<0x565523e96280> calls function 'printf'
  CS<0x565523e96c10> calls function 'printf'
  CS<0x565523df5620> calls function 'dhcp_set_state'
  CS<0x565523df5980> calls external node

Call graph node for function: 'dhcp_check'<<0x565524c26780>>  #uses=2
  CS<0x565523d69fd0> calls function 'dhcp_set_state'
  CS<0x565523d6a310> calls function 'etharp_query'

Call graph node for function: 'dhcp_cleanup'<<0x565524d539c0>>  #uses=1
  CS<0x565523ed77a0> calls function 'printf'
  CS<0x565523ed81d0> calls function 'mem_free'

Call graph node for function: 'dhcp_coarse_tmr'<<0x565524c24490>>  #uses=1
  CS<0x565523df0f10> calls function 'dhcp_release_and_stop'
  CS<0x565523df1080> calls function 'dhcp_start'
  CS<0x565523df1bd0> calls function 'dhcp_t2_timeout'
  CS<0x565523df2720> calls function 'dhcp_t1_timeout'

Call graph node for function: 'dhcp_create_msg'<<0x565524c24820>>  #uses=8
  CS<0x565523e1b880> calls function 'printf'
  CS<0x565523e1bee0> calls function 'printf'
  CS<0x565523e1c1d0> calls function 'pbuf_alloc'
  CS<0x565523e1cc20> calls function 'printf'
  CS<0x565523e1d8f0> calls function 'rand'
  CS<0x565523e1ef40> calls function 'lwip_htonl'
  CS<0x565523e21ec0> calls function 'dhcp_option'
  CS<0x565523e22420> calls function 'dhcp_option_byte'

Call graph node for function: 'dhcp_dec_pcb_refcount'<<0x565524c25030>>  #uses=3
  CS<0x565523d64af0> calls function 'printf'
  CS<0x565523d65220> calls function 'udp_remove'

Call graph node for function: 'dhcp_decline'<<0x565524d53fe0>>  #uses=1
  CS<0x565523ee6090> calls function 'dhcp_set_state'
  CS<0x565523ee6300> calls function 'dhcp_create_msg'
  CS<0x565523ee6ec0> calls function 'dhcp_option'
  CS<0x565523ee75d0> calls function 'lwip_htonl'
  CS<0x565523ee76b0> calls function 'dhcp_option_long'
  CS<0x565523ee7c10> calls function 'dhcp_option_trailer'
  CS<0x565523ee7f60> calls function 'udp_sendto_if_src'
  CS<0x565523ee8190> calls function 'pbuf_free'

Call graph node for function: 'dhcp_discover'<<0x565524c251b0>>  #uses=5
  CS<0x565523e4db20> calls function 'dhcp_set_state'
  CS<0x565523e4dd90> calls function 'dhcp_create_msg'
  CS<0x565523e4e950> calls function 'dhcp_option'
  CS<0x565523e4efe0> calls function 'dhcp_option_short'
  CS<0x565523e4f4c0> calls function 'dhcp_option'
  CS<0x565523e4ffd0> calls function 'dhcp_option_byte'
  CS<0x565523e50830> calls function 'dhcp_option_trailer'
  CS<0x565523e50b80> calls function 'udp_sendto_if_src'
  CS<0x565523e50cf0> calls function 'pbuf_free'

Call graph node for function: 'dhcp_fine_tmr'<<0x565524c272a0>>  #uses=1
  CS<0x565523ec2440> calls function 'dhcp_timeout'

Call graph node for function: 'dhcp_handle_ack'<<0x565524c26700>>  #uses=2
  CS<0x565523c4b540> calls function 'lwip_htonl'
  CS<0x565523c4c130> calls function 'lwip_htonl'

Call graph node for function: 'dhcp_handle_nak'<<0x565524c26880>>  #uses=1
  CS<0x565523df8960> calls function 'dhcp_set_state'
  CS<0x565523df8b30> calls external node
  CS<0x565523df8ca0> calls function 'dhcp_discover'

Call graph node for function: 'dhcp_handle_offer'<<0x565524c26900>>  #uses=1
  CS<0x565523dfa640> calls function 'lwip_htonl'
  CS<0x565523dfaf10> calls function 'dhcp_select'

Call graph node for function: 'dhcp_inc_pcb_refcount'<<0x565524c25130>>  #uses=2
  CS<0x565523d66800> calls function 'printf'
  CS<0x565523d66a00> calls function 'udp_new'
  CS<0x565523d65540> calls function 'udp_bind'
  CS<0x565523d63100> calls function 'udp_connect'
  CS<0x565523d67680> calls function 'udp_recv'

Call graph node for function: 'dhcp_inform'<<0x565524d53ac0>>  #uses=1
  CS<0x565523edb3a0> calls function 'printf'
  CS<0x565523edb5a0> calls function 'dhcp_inc_pcb_refcount'
  CS<0x565523edbae0> calls function 'dhcp_set_state'
  CS<0x565523edbcb0> calls function 'dhcp_create_msg'
  CS<0x565523edc870> calls function 'dhcp_option'
  CS<0x565523edcf00> calls function 'dhcp_option_short'
  CS<0x565523edd460> calls function 'dhcp_option_trailer'
  CS<0x565523edd790> calls function 'udp_sendto_if'
  CS<0x565523edd900> calls function 'pbuf_free'
  CS<0x565523eddac0> calls function 'dhcp_dec_pcb_refcount'

Call graph node for function: 'dhcp_network_changed'<<0x565524d53ee0>>  #uses=1
  CS<0x565523edfe60> calls function 'dhcp_reboot'
  CS<0x565523ee05c0> calls function 'printf'
  CS<0x565523ee0ad0> calls function 'dhcp_discover'

Call graph node for function: 'dhcp_option'<<0x565524c248a0>>  #uses=17
  CS<0x565523e26480> calls function 'printf'

Call graph node for function: 'dhcp_option_byte'<<0x565524c25560>>  #uses=6
  CS<0x565523e2b9a0> calls function 'printf'

Call graph node for function: 'dhcp_option_long'<<0x565524c24a50>>  #uses=5
  CS<0x565523eba880> calls function 'printf'

Call graph node for function: 'dhcp_option_short'<<0x565524c25390>>  #uses=6
  CS<0x565523e28d10> calls function 'printf'

Call graph node for function: 'dhcp_option_trailer'<<0x565524c24c20>>  #uses=8
  CS<0x565523d5b720> calls function 'pbuf_realloc'

Call graph node for function: 'dhcp_parse_reply'<<0x565524c26680>>  #uses=1
  CS<0x565523e72540> calls function 'printf'
  CS<0x565523e72f10> calls function 'printf'
  CS<0x565523e73740> calls function 'printf'
  CS<0x565523e73f70> calls function 'printf'
  CS<0x565523e74640> calls function 'printf'
  CS<0x565523e75780> calls function 'printf'
  CS<0x565523e75ee0> calls function 'printf'
  CS<0x565523e76710> calls function 'printf'
  CS<0x565523e76f40> calls function 'printf'
  CS<0x565523e79400> calls function 'printf'
  CS<0x565523e7a2a0> calls function 'pbuf_copy_partial'
  CS<0x565523e7b090> calls function 'printf'
  CS<0x565523e7b5d0> calls function 'lwip_htonl'
  CS<0x565523e7ca90> calls function 'lwip_htonl'
  CS<0x565523e7d0b0> calls function 'printf'
  CS<0x565523e74ac0> calls function 'printf'

Call graph node for function: 'dhcp_rebind'<<0x565524c25230>>  #uses=1
  CS<0x565523d5e200> calls function 'dhcp_set_state'
  CS<0x565523d5e470> calls function 'dhcp_create_msg'
  CS<0x565523d5f030> calls function 'dhcp_option'
  CS<0x565523d5f6c0> calls function 'dhcp_option_short'
  CS<0x565523d5fba0> calls function 'dhcp_option'
  CS<0x565523d606b0> calls function 'dhcp_option_byte'
  CS<0x565523d60f10> calls function 'dhcp_option_trailer'
  CS<0x565523d61240> calls function 'udp_sendto_if'
  CS<0x565523d61470> calls function 'pbuf_free'

Call graph node for function: 'dhcp_reboot'<<0x565524c27400>>  #uses=2
  CS<0x565523eccb20> calls function 'dhcp_set_state'
  CS<0x565523eccd90> calls function 'dhcp_create_msg'
  CS<0x565523ecd950> calls function 'dhcp_option'
  CS<0x565523ecde10> calls function 'dhcp_option_short'
  CS<0x565523ece2f0> calls function 'dhcp_option'
  CS<0x565523ecea00> calls function 'lwip_htonl'
  CS<0x565523eceae0> calls function 'dhcp_option_long'
  CS<0x565523ecefc0> calls function 'dhcp_option'
  CS<0x565523ecfad0> calls function 'dhcp_option_byte'
  CS<0x565523ed0330> calls function 'dhcp_option_trailer'
  CS<0x565523ed0660> calls function 'udp_sendto_if'
  CS<0x565523ed0890> calls function 'pbuf_free'

Call graph node for function: 'dhcp_recv'<<0x565524c26600>>  #uses=1
  CS<0x565523e5ab40> calls function 'lwip_htonl'
  CS<0x565523e5b180> calls function 'dhcp_parse_reply'
  CS<0x565523e5c5a0> calls function 'dhcp_handle_ack'
  CS<0x565523e5cbe0> calls function 'dhcp_check'
  CS<0x565523e5cdf0> calls function 'dhcp_bind'
  CS<0x565523e5dd60> calls function 'dhcp_handle_ack'
  CS<0x565523e5ded0> calls function 'dhcp_bind'
  CS<0x565523e5f4e0> calls function 'dhcp_handle_nak'
  CS<0x565523e5fe70> calls function 'dhcp_handle_offer'
  CS<0x565523e60300> calls function 'pbuf_free'

Call graph node for function: 'dhcp_release'<<0x565524d54170>>  #uses=1
  CS<0x565523eea2e0> calls function 'dhcp_release_and_stop'

Call graph node for function: 'dhcp_release_and_stop'<<0x565524c24510>>  #uses=6
  CS<0x565523d99850> calls function 'dhcp_supplied_address'
  CS<0x565523d99f10> calls function 'dhcp_create_msg'
  CS<0x565523d9aad0> calls function 'dhcp_option'
  CS<0x565523d9b0b0> calls function 'lwip_htonl'
  CS<0x565523d9b190> calls function 'dhcp_option_long'
  CS<0x565523dfda40> calls function 'dhcp_option_trailer'
  CS<0x565523dfdd70> calls function 'udp_sendto_if'
  CS<0x565523dfdee0> calls function 'pbuf_free'
  CS<0x565523dfe260> calls external node
  CS<0x565523dfe3f0> calls function 'dhcp_set_state'
  CS<0x565523dfe8b0> calls function 'dhcp_dec_pcb_refcount'

Call graph node for function: 'dhcp_renew'<<0x565524c252b0>>  #uses=2
  CS<0x565523e107b0> calls function 'dhcp_set_state'
  CS<0x565523e10a20> calls function 'dhcp_create_msg'
  CS<0x565523e115e0> calls function 'dhcp_option'
  CS<0x565523e11c70> calls function 'dhcp_option_short'
  CS<0x565523e12150> calls function 'dhcp_option'
  CS<0x565523e12c60> calls function 'dhcp_option_byte'
  CS<0x565523e134c0> calls function 'dhcp_option_trailer'
  CS<0x565523e13980> calls function 'udp_sendto_if'
  CS<0x565523e13bb0> calls function 'pbuf_free'

Call graph node for function: 'dhcp_select'<<0x565524c27110>>  #uses=2
  CS<0x565523eb0060> calls function 'printf'
  CS<0x565523eb0a80> calls function 'printf'
  CS<0x565523eb0df0> calls function 'dhcp_set_state'
  CS<0x565523eb1060> calls function 'dhcp_create_msg'
  CS<0x565523eb1c20> calls function 'dhcp_option'
  CS<0x565523eb22b0> calls function 'dhcp_option_short'
  CS<0x565523eb2790> calls function 'dhcp_option'
  CS<0x565523eb2ea0> calls function 'lwip_htonl'
  CS<0x565523eb2f80> calls function 'dhcp_option_long'
  CS<0x565523eb3460> calls function 'dhcp_option'
  CS<0x565523eb3b70> calls function 'lwip_htonl'
  CS<0x565523eb3c50> calls function 'dhcp_option_long'
  CS<0x565523eb4130> calls function 'dhcp_option'
  CS<0x565523eb4c40> calls function 'dhcp_option_byte'
  CS<0x565523eb54a0> calls function 'dhcp_option_trailer'
  CS<0x565523eb57f0> calls function 'udp_sendto_if_src'
  CS<0x565523eb5a20> calls function 'pbuf_free'

Call graph node for function: 'dhcp_set_state'<<0x565524c24fb0>>  #uses=12

Call graph node for function: 'dhcp_set_struct'<<0x565524d53940>>  #uses=1
  CS<0x565523ed4cd0> calls function 'printf'
  CS<0x565523ed52a0> calls function 'printf'
  CS<0x565523ed5ad0> calls function 'printf'

Call graph node for function: 'dhcp_start'<<0x565524c245c0>>  #uses=3
  CS<0x565523e01f30> calls function 'printf'
  CS<0x565523e02920> calls function 'printf'
  CS<0x565523e03710> calls function 'mem_malloc'
  CS<0x565523e044d0> calls function 'dhcp_dec_pcb_refcount'
  CS<0x565523e048d0> calls function 'dhcp_inc_pcb_refcount'
  CS<0x565523e05590> calls function 'dhcp_set_state'
  CS<0x565523e05830> calls function 'dhcp_discover'
  CS<0x565523e05d10> calls function 'dhcp_release_and_stop'

Call graph node for function: 'dhcp_stop'<<0x565524d541f0>>  #uses=1
  CS<0x565523eeaaa0> calls function 'dhcp_release_and_stop'

Call graph node for function: 'dhcp_supplied_address'<<0x565524c247a0>>  #uses=2

Call graph node for function: 'dhcp_t1_timeout'<<0x565524c24720>>  #uses=1
  CS<0x565523e0c900> calls function 'dhcp_renew'

Call graph node for function: 'dhcp_t2_timeout'<<0x565524c246a0>>  #uses=1
  CS<0x565523e091a0> calls function 'dhcp_rebind'

Call graph node for function: 'dhcp_timeout'<<0x565524c27320>>  #uses=1
  CS<0x565523ebe700> calls function 'dhcp_discover'
  CS<0x565523ebf130> calls function 'dhcp_select'
  CS<0x565523ebf340> calls function 'dhcp_release_and_stop'
  CS<0x565523ebf4b0> calls function 'dhcp_start'
  CS<0x565523ec8910> calls function 'dhcp_check'
  CS<0x565523ec8b20> calls function 'dhcp_bind'
  CS<0x565523ec95c0> calls function 'dhcp_reboot'
  CS<0x565523ec97d0> calls function 'dhcp_discover'

Call graph node for function: 'do_memp_free_pool'<<0x565523c2dc80>>  #uses=2
  CS<0x5655247a46d0> calls function 'printf'

Call graph node for function: 'do_memp_malloc_pool'<<0x565523c2db70>>  #uses=2
  CS<0x5655248b0a90> calls function 'printf'

Call graph node for function: 'etharp_cleanup_netif'<<0x565523c2b910>>  #uses=1
  CS<0x5655247cf350> calls function 'etharp_free_entry'

Call graph node for function: 'etharp_find_addr'<<0x565523c2b990>>  #uses=1
  CS<0x5655247d1c20> calls function 'printf'
  CS<0x5655247d2060> calls function 'etharp_find_entry'

Call graph node for function: 'etharp_find_entry'<<0x565523c2ba40>>  #uses=3
  CS<0x5655247db030> calls function 'printf'
  CS<0x5655247e1580> calls function 'printf'
  CS<0x5655247e27d0> calls function 'printf'
  CS<0x5655247e2b00> calls function 'etharp_free_entry'
  CS<0x5655247e3060> calls function 'printf'
  CS<0x5655247e3900> calls function 'printf'

Call graph node for function: 'etharp_free_entry'<<0x565523c2b5c0>>  #uses=3
  CS<0x5655247c1d00> calls function 'pbuf_free'

Call graph node for function: 'etharp_get_entry'<<0x565523c2bc70>>  #uses=1
  CS<0x5655247ea9d0> calls function 'printf'
  CS<0x5655247eafa0> calls function 'printf'
  CS<0x5655247eb570> calls function 'printf'

Call graph node for function: 'etharp_input'<<0x565523c2bcf0>>  #uses=1
  CS<0x5655247effd0> calls function 'printf'
  CS<0x5655247f1570> calls function 'pbuf_free'
  CS<0x5655247f2f10> calls function 'etharp_update_arp_entry'
  CS<0x5655247f4140> calls function 'etharp_raw'
  CS<0x5655247f4990> calls function 'dhcp_arp_reply'
  CS<0x5655247f4c40> calls function 'pbuf_free'

Call graph node for function: 'etharp_output'<<0x565523c2c140>>  #uses=1
  CS<0x5655248017d0> calls function 'printf'
  CS<0x565524801da0> calls function 'printf'
  CS<0x565524802370> calls function 'printf'
  CS<0x5655248027f0> calls function 'ip4_addr_isbroadcast_u32'
  CS<0x5655248077e0> calls function 'etharp_output_to_arp_index'
  CS<0x5655248092f0> calls function 'etharp_output_to_arp_index'
  CS<0x565524809a10> calls function 'etharp_query'
  CS<0x56552480a200> calls external node

Call graph node for function: 'etharp_output_to_arp_index'<<0x565523c2c1c0>>  #uses=2
  CS<0x56552480e430> calls function 'printf'
  CS<0x56552480f4e0> calls function 'etharp_request'
  CS<0x5655248108e0> calls function 'etharp_request_dst'
  CS<0x565524811990> calls external node

Call graph node for function: 'etharp_query'<<0x565524c26f20>>  #uses=3
  CS<0x5655248171e0> calls function 'ip4_addr_isbroadcast_u32'
  CS<0x565524817fd0> calls function 'etharp_find_entry'
  CS<0x565524818d50> calls function 'printf'
  CS<0x56552481ab40> calls function 'printf'
  CS<0x56552481b310> calls function 'etharp_request'
  CS<0x56552481c050> calls function 'printf'
  CS<0x56552481ce60> calls external node
  CS<0x56552481e760> calls function 'printf'
  CS<0x56552481f540> calls function 'pbuf_clone'
  CS<0x56552481f970> calls function 'pbuf_ref'
  CS<0x565524820550> calls function 'pbuf_free'

Call graph node for function: 'etharp_raw'<<0x565523c2b7d0>>  #uses=2
  CS<0x5655247c8890> calls function 'printf'
  CS<0x5655247c8af0> calls function 'pbuf_alloc'
  CS<0x5655247c9540> calls function 'printf'
  CS<0x5655247c9b60> calls function 'lwip_htons'
  CS<0x5655247ca3d0> calls function 'printf'
  CS<0x5655242a1660> calls external node
  CS<0x5655247cc140> calls function 'pbuf_free'

Call graph node for function: 'etharp_request'<<0x565523c2b640>>  #uses=4
  CS<0x5655247c3310> calls function 'etharp_request_dst'

Call graph node for function: 'etharp_request_dst'<<0x565523c2b720>>  #uses=2
  CS<0x565523ba57c0> calls function 'etharp_raw'

Call graph node for function: 'etharp_tmr'<<0x565523c2b540>>  #uses=1
  CS<0x5655247bdc90> calls function 'etharp_free_entry'
  CS<0x5655247bfa50> calls function 'etharp_request'

Call graph node for function: 'etharp_update_arp_entry'<<0x565523c2bd70>>  #uses=1
  CS<0x5655247f9270> calls function 'printf'
  CS<0x5655247f9be0> calls function 'ip4_addr_isbroadcast_u32'
  CS<0x5655247fa580> calls function 'etharp_find_entry'
  CS<0x5655247fd050> calls external node
  CS<0x5655247fd1c0> calls function 'pbuf_free'

Call graph node for function: 'ethernet_input'<<0x565524d547a0>>  #uses=2
  CS<0x565524644e60> calls function 'memcmp'
  CS<0x565524645ea0> calls function 'pbuf_remove_header'
  CS<0x5655246462e0> calls external node
  CS<0x565524646bd0> calls function 'pbuf_remove_header'
  CS<0x565524647010> calls external node
  CS<0x565524647560> calls function 'pbuf_free'

Call graph node for function: 'ethernet_link_check_state'<<0x565523b70490>>  #uses=3
  CS<0x565523d7d1f0> calls function 'DP83848_GetLinkState'
  CS<0x565523d7db60> calls function 'HAL_ETH_Stop'
  CS<0x565523d7dcd0> calls external node
  CS<0x565523d7de40> calls external node
  CS<0x565523d7f800> calls function 'HAL_ETH_GetMACConfig'
  CS<0x565523d7fd90> calls function 'HAL_ETH_SetMACConfig'
  CS<0x565523d7fe60> calls function 'HAL_ETH_Start'
  CS<0x565523d7ffd0> calls external node
  CS<0x565523d80140> calls external node

Call graph node for function: 'ethernet_link_status_updated'<<0x565523b70360>>  #uses=2

Call graph node for function: 'ethernet_output'<<0x565523c25530>>  #uses=1
  CS<0x56552464b5b0> calls function 'lwip_htons'
  CS<0x56552464b7d0> calls function 'pbuf_add_header'
  CS<0x56552464cd50> calls function 'printf'
  CS<0x56552464d2d0> calls external node

Call graph node for function: 'ethernetif_init'<<0x565523b89220>>  #uses=1
  CS<0x565523d6ebf0> calls function 'printf'
  CS<0x565523d6f970> calls function 'low_level_init'

Call graph node for function: 'ethernetif_input'<<0x565523b88600>>  #uses=2
  CS<0x565523bf2130> calls function 'low_level_input'
  CS<0x565523c81b90> calls external node
  CS<0x565523c81ee0> calls function 'pbuf_free'

Call graph node for function: 'getCompartmentFromAddr'<<0x565523d41fe0>>  #uses=6
  CS<0x565524372090> calls function 'curr_stamp'
  CS<0x565524374940> calls function 'curr_stamp'

Call graph node for function: 'icall_arg0'<<0x565523d41ce0>>  #uses=2
  CS<0x5655243668b0> calls function 'curr_stamp'
  CS<0x565524366c80> calls function 'switch_view'
  CS<0x565524367450> calls function 'curr_stamp'
  CS<0x565524367e80> calls external node
  CS<0x5655243681a0> calls function 'curr_stamp'
  CS<0x565524368400> calls function 'switch_view'
  CS<0x565524368830> calls function 'curr_stamp'

Call graph node for function: 'icall_arg0_noid'<<0x565523d42600>>  #uses=1
  CS<0x565524cb6dd0> calls function 'getCompartmentFromAddr'
  CS<0x565524cb6fd0> calls function 'icall_arg0'

Call graph node for function: 'icall_arg1i'<<0x565523d41d90>>  #uses=2
  CS<0x56552436c0b0> calls function 'curr_stamp'
  CS<0x56552436c480> calls function 'switch_view'
  CS<0x56552436cc50> calls function 'curr_stamp'
  CS<0x56552436d740> calls external node
  CS<0x56552436da60> calls function 'curr_stamp'
  CS<0x56552436dcc0> calls function 'switch_view'
  CS<0x56552436e0f0> calls function 'curr_stamp'

Call graph node for function: 'icall_arg1i_noid'<<0x565523d41f60>>  #uses=1
  CS<0x5655243700d0> calls function 'getCompartmentFromAddr'
  CS<0x565524cabde0> calls function 'icall_arg1i'

Call graph node for function: 'icall_arg1p'<<0x565523d420c0>>  #uses=2
  CS<0x565524cb06a0> calls function 'curr_stamp'
  CS<0x565524cb0f30> calls function 'rtmkcpy'
  CS<0x565524cb1700> calls function 'switch_view'
  CS<0x565524cb2130> calls function 'curr_stamp'
  CS<0x565524cb2c20> calls external node
  CS<0x565524cb2f40> calls function 'curr_stamp'
  CS<0x565524cb36c0> calls function 'rtmkcpy'
  CS<0x565524cb3850> calls function 'switch_view'
  CS<0x565524cb3c80> calls function 'curr_stamp'

Call graph node for function: 'icall_arg1p_noid'<<0x565523d42580>>  #uses=1
  CS<0x565524cb6110> calls function 'getCompartmentFromAddr'
  CS<0x565524cb6420> calls function 'icall_arg1p'

Call graph node for function: 'icall_arg2pd'<<0x565523d42c10>>  #uses=1
  CS<0x565524ce4b70> calls function 'curr_stamp'
  CS<0x565524ce5570> calls function 'rtmkcpy'
  CS<0x565524ce5900> calls function 'switch_view'
  CS<0x565524ce6c00> calls function 'curr_stamp'
  CS<0x565524ce77b0> calls external node
  CS<0x565524ce7ad0> calls function 'curr_stamp'
  CS<0x565524ce8260> calls function 'rtmkcpy'
  CS<0x565524ce83f0> calls function 'switch_view'
  CS<0x565524ce8820> calls function 'curr_stamp'

Call graph node for function: 'icall_arg2pi'<<0x565523d428a0>>  #uses=1
  CS<0x565524cbc360> calls function 'curr_stamp'
  CS<0x565524cbcd60> calls function 'rtmkcpy'
  CS<0x565524cbd0f0> calls function 'switch_view'
  CS<0x565524cde410> calls function 'curr_stamp'
  CS<0x565524cdefc0> calls external node
  CS<0x565524cdf2e0> calls function 'curr_stamp'
  CS<0x565524cdfa70> calls function 'rtmkcpy'
  CS<0x565524cdfc00> calls function 'switch_view'
  CS<0x565524ce0030> calls function 'curr_stamp'

Call graph node for function: 'icall_arg2pp'<<0x565523d42f20>>  #uses=1
  CS<0x565524ced7c0> calls function 'curr_stamp'
  CS<0x565524cee1b0> calls function 'rtmkcpy'
  CS<0x565524ceefe0> calls function 'rtmkcpy'
  CS<0x565524cf06b0> calls function 'switch_view'
  CS<0x565524cf0e80> calls function 'curr_stamp'
  CS<0x565524cf1a30> calls external node
  CS<0x565524cf1d50> calls function 'curr_stamp'
  CS<0x565524cf24d0> calls function 'rtmkcpy'
  CS<0x565524cf2920> calls function 'rtmkcpy'
  CS<0x565524cf2ab0> calls function 'switch_view'
  CS<0x565524cf2ee0> calls function 'curr_stamp'

Call graph node for function: 'icall_arg3pii'<<0x565523d41640>>  #uses=1
  CS<0x565524c9bbd0> calls function 'curr_stamp'
  CS<0x565524c9c5d0> calls function 'rtmkcpy'
  CS<0x565524c9c960> calls function 'switch_view'
  CS<0x565524c9dc90> calls function 'curr_stamp'
  CS<0x565524c9e900> calls external node
  CS<0x565524c9ec20> calls function 'curr_stamp'
  CS<0x565524c9f3b0> calls function 'rtmkcpy'
  CS<0x565524c9f540> calls function 'switch_view'
  CS<0x565524c9f970> calls function 'curr_stamp'

Call graph node for function: 'icall_arg3ppi'<<0x565523d43230>>  #uses=1
  CS<0x565524cf87f0> calls function 'curr_stamp'
  CS<0x565524cf9490> calls function 'rtmkcpy'
  CS<0x565524cfa020> calls function 'rtmkcpy'
  CS<0x565524cfb6f0> calls function 'switch_view'
  CS<0x565524cfbec0> calls function 'curr_stamp'
  CS<0x565524cfcb30> calls external node
  CS<0x565524cfce50> calls function 'curr_stamp'
  CS<0x565524cfd5d0> calls function 'rtmkcpy'
  CS<0x565524cfda30> calls function 'rtmkcpy'
  CS<0x565524cfdbc0> calls function 'switch_view'
  CS<0x565524cfdff0> calls function 'curr_stamp'

Call graph node for function: 'icall_arg4ppii'<<0x565523d43540>>  #uses=1
  CS<0x565524d04010> calls function 'curr_stamp'
  CS<0x565524d04a10> calls function 'rtmkcpy'
  CS<0x565524d05840> calls function 'rtmkcpy'
  CS<0x565524d06f10> calls function 'switch_view'
  CS<0x565524d076e0> calls function 'curr_stamp'
  CS<0x565524d08410> calls external node
  CS<0x565524d08730> calls function 'curr_stamp'
  CS<0x565524d08eb0> calls function 'rtmkcpy'
  CS<0x565524d09310> calls function 'rtmkcpy'
  CS<0x565524d094a0> calls function 'switch_view'
  CS<0x565524d098d0> calls function 'curr_stamp'

Call graph node for function: 'icall_arg4pppi'<<0x565523d43850>>  #uses=1
  CS<0x565524d10220> calls function 'curr_stamp'
  CS<0x565524d10ec0> calls function 'rtmkcpy'
  CS<0x565524d11a50> calls function 'rtmkcpy'
  CS<0x565524d125e0> calls function 'rtmkcpy'
  CS<0x565524d144c0> calls function 'switch_view'
  CS<0x565524d14c90> calls function 'curr_stamp'
  CS<0x565524d159c0> calls external node
  CS<0x565524d15ce0> calls function 'curr_stamp'
  CS<0x565524d16300> calls function 'switch_view'
  CS<0x565524d16c50> calls function 'rtmkcpy'
  CS<0x565524d17640> calls function 'rtmkcpy'
  CS<0x565524d18030> calls function 'rtmkcpy'
  CS<0x565524d18500> calls function 'curr_stamp'

Call graph node for function: 'icall_arg5iiipi'<<0x565523d44180>>  #uses=1
  CS<0x565524d41530> calls function 'curr_stamp'
  CS<0x565524d41f30> calls function 'rtmkcpy'
  CS<0x565524c18840> calls function 'switch_view'
  CS<0x565524c19010> calls function 'curr_stamp'
  CS<0x565524b29690> calls external node
  CS<0x565524c1a000> calls function 'curr_stamp'
  CS<0x565524c1a790> calls function 'rtmkcpy'
  CS<0x565524c1a920> calls function 'switch_view'
  CS<0x565524c1ad50> calls function 'curr_stamp'

Call graph node for function: 'icall_arg6piiipp'<<0x565523d43e70>>  #uses=1
  CS<0x565524d326a0> calls function 'curr_stamp'
  CS<0x565524d338a0> calls function 'rtmkcpy'
  CS<0x565524d34760> calls function 'rtmkcpy'
  CS<0x565524d35620> calls function 'rtmkcpy'
  CS<0x565524d36840> calls function 'switch_view'
  CS<0x565524d37010> calls function 'curr_stamp'
  CS<0x565524d37ec0> calls external node
  CS<0x565524d381e0> calls function 'curr_stamp'
  CS<0x565524d38c00> calls function 'rtmkcpy'
  CS<0x565524d395f0> calls function 'rtmkcpy'
  CS<0x565524d39fe0> calls function 'rtmkcpy'
  CS<0x565524d3a470> calls function 'switch_view'
  CS<0x565524d3a8a0> calls function 'curr_stamp'

Call graph node for function: 'icall_arg6ppipip'<<0x565523d43b60>>  #uses=1
  CS<0x565524d20970> calls function 'curr_stamp'
  CS<0x565524d21610> calls function 'rtmkcpy'
  CS<0x565524d22a30> calls function 'rtmkcpy'
  CS<0x565524d238f0> calls function 'rtmkcpy'
  CS<0x565524d247b0> calls function 'rtmkcpy'
  CS<0x565524d259d0> calls function 'switch_view'
  CS<0x565524d261a0> calls function 'curr_stamp'
  CS<0x565524d27050> calls external node
  CS<0x565524d27370> calls function 'curr_stamp'
  CS<0x565524d27ff0> calls function 'rtmkcpy'
  CS<0x565524d289e0> calls function 'rtmkcpy'
  CS<0x565524d293d0> calls function 'rtmkcpy'
  CS<0x565524d29dc0> calls function 'rtmkcpy'
  CS<0x565524d29ff0> calls function 'switch_view'
  CS<0x565524d2a420> calls function 'curr_stamp'

Call graph node for function: 'icmp_dest_unreach'<<0x565523c268b0>>  #uses=3
  CS<0x5655248a1d90> calls function 'icmp_send_response'

Call graph node for function: 'icmp_input'<<0x565523c2cf70>>  #uses=2
  CS<0x565524894970> calls function 'ip4_addr_isbroadcast_u32'
  CS<0x565524895170> calls function 'inet_chksum_pbuf'
  CS<0x5655248954f0> calls function 'pbuf_free'
  CS<0x5655248959b0> calls function 'pbuf_add_header'
  CS<0x565524896ae0> calls function 'pbuf_alloc'
  CS<0x5655248975d0> calls function 'pbuf_free'
  CS<0x565524897da0> calls function 'pbuf_remove_header'
  CS<0x565524898180> calls function 'printf'
  CS<0x565524898400> calls function 'pbuf_free'
  CS<0x5655248986d0> calls function 'pbuf_copy'
  CS<0x565524898a50> calls function 'pbuf_free'
  CS<0x565524898c60> calls function 'pbuf_free'
  CS<0x565524899280> calls function 'pbuf_remove_header'
  CS<0x565524899660> calls function 'printf'
  CS<0x565524899e80> calls function 'pbuf_add_header'
  CS<0x56552489b9a0> calls function 'ip4_output_if'
  CS<0x56552489e220> calls function 'pbuf_free'
  CS<0x56552489e530> calls function 'pbuf_free'
  CS<0x56552489e840> calls function 'pbuf_free'

Call graph node for function: 'icmp_send_response'<<0x565523c2d9e0>>  #uses=2
  CS<0x5655248a4190> calls function 'pbuf_alloc'
  CS<0x5655248a4b50> calls function 'printf'
  CS<0x5655248a67a0> calls function 'ip4_route'
  CS<0x5655248a6fc0> calls function 'ip4_output_if'
  CS<0x5655248a71d0> calls function 'pbuf_free'

Call graph node for function: 'icmp_time_exceeded'<<0x565523c2da90>>  #uses=2
  CS<0x5655248a8770> calls function 'icmp_send_response'

Call graph node for function: 'inet_chksum'<<0x565523c09ca0>>  #uses=1
  CS<0x565524998150> calls function 'lwip_standard_chksum'

Call graph node for function: 'inet_chksum_pbuf'<<0x565523c2cff0>>  #uses=2
  CS<0x56552499a360> calls function 'lwip_standard_chksum'

Call graph node for function: 'inet_chksum_pseudo'<<0x565523c097e0>>  #uses=2
  CS<0x565524a68340> calls function 'inet_cksum_pseudo_base'

Call graph node for function: 'inet_chksum_pseudo_partial'<<0x565523c09a10>>  #uses=2
  CS<0x565524a74550> calls function 'inet_cksum_pseudo_partial_base'

Call graph node for function: 'inet_cksum_pseudo_base'<<0x565523c09860>>  #uses=1
  CS<0x565524a6afa0> calls function 'lwip_standard_chksum'
  CS<0x565524a6cfe0> calls function 'lwip_htons'
  CS<0x565524a6d3b0> calls function 'lwip_htons'

Call graph node for function: 'inet_cksum_pseudo_partial_base'<<0x565523c09a90>>  #uses=1
  CS<0x565524a789f0> calls function 'lwip_standard_chksum'
  CS<0x565524a79550> calls function 'printf'
  CS<0x5655249933c0> calls function 'lwip_htons'
  CS<0x565524993790> calls function 'lwip_htons'

Call graph node for function: 'init_mpu'<<0x565523d3f600>>  #uses=1
  CS<0x565524c3fee0> calls external node
  CS<0x565524c3ff90> calls external node
  CS<0x565524c41a80> calls external node
  CS<0x565524c41b30> calls external node

Call graph node for function: 'ip4_addr_isbroadcast_u32'<<0x565523c26520>>  #uses=10

Call graph node for function: 'ip4_addr_netmask_valid'<<0x565523c27460>>  #uses=1
  CS<0x5655246ea570> calls function 'lwip_htonl'

Call graph node for function: 'ip4_frag'<<0x565523c316a0>>  #uses=2
  CS<0x565524ad97d0> calls function 'printf'
  CS<0x565524ad9c50> calls function 'lwip_htons'
  CS<0x565524adb4a0> calls function 'pbuf_alloc'
  CS<0x565524adbe60> calls function 'printf'
  CS<0x565524add9c0> calls function 'printf'
  CS<0x565524ade9a0> calls function 'ip_frag_alloc_pbuf_custom_ref'
  CS<0x565524adee10> calls function 'pbuf_free'
  CS<0x56552499fa10> calls function 'pbuf_alloced_custom'
  CS<0x565524adfa00> calls function 'ip_frag_free_pbuf_custom_ref'
  CS<0x565524adfb70> calls function 'pbuf_free'
  CS<0x565524adfd80> calls function 'pbuf_ref'
  CS<0x565524ae05e0> calls function 'pbuf_cat'
  CS<0x565524ae27c0> calls function 'lwip_htons'
  CS<0x565524ae2c30> calls function 'lwip_htons'
  CS<0x565524ae34a0> calls external node
  CS<0x565524ae35e0> calls function 'pbuf_free'

Call graph node for function: 'ip4_input'<<0x565523c313f0>>  #uses=1
  CS<0x565524a3b420> calls function 'pbuf_free'
  CS<0x565524a3bcf0> calls function 'lwip_htons'
  CS<0x565524a3c4d0> calls function 'pbuf_realloc'
  CS<0x565524a3e2a0> calls function 'pbuf_free'
  CS<0x565524a3fb90> calls function 'ip4_input_accept'
  CS<0x565524a40aa0> calls function 'ip4_input_accept'
  CS<0x565524a42b20> calls function 'ip4_addr_isbroadcast_u32'
  CS<0x565524a43110> calls function 'pbuf_free'
  CS<0x565524a43690> calls function 'pbuf_free'
  CS<0x565524a43dd0> calls function 'ip4_reass'
  CS<0x565524a451c0> calls function 'pbuf_remove_header'
  CS<0x565524a45660> calls function 'udp_input'
  CS<0x565524a45930> calls function 'tcp_input'
  CS<0x565524a45c00> calls function 'icmp_input'
  CS<0x565524a45ea0> calls function 'ip4_addr_isbroadcast_u32'
  CS<0x565524a464b0> calls function 'pbuf_header_force'
  CS<0x565524a46640> calls function 'icmp_dest_unreach'
  CS<0x565524a46850> calls function 'pbuf_free'

Call graph node for function: 'ip4_input_accept'<<0x565523c31470>>  #uses=2
  CS<0x565524a4b070> calls function 'ip4_addr_isbroadcast_u32'

Call graph node for function: 'ip4_output'<<0x565523c31720>>  #uses=1
  CS<0x565524a5cbd0> calls function 'printf'
  CS<0x565524a5ce90> calls function 'ip4_route'
  CS<0x565524a5d7e0> calls function 'ip4_output_if'

Call graph node for function: 'ip4_output_if'<<0x565523c2d450>>  #uses=6
  CS<0x565524a4edf0> calls function 'ip4_output_if_src'

Call graph node for function: 'ip4_output_if_src'<<0x565523c270f0>>  #uses=3
  CS<0x565524a52dd0> calls function 'printf'
  CS<0x565524a534f0> calls function 'pbuf_add_header'
  CS<0x565524a54110> calls function 'printf'
  CS<0x565524a554d0> calls function 'lwip_htons'
  CS<0x565524a559c0> calls function 'lwip_htons'
  CS<0x565524a58560> calls function 'ip4_frag'
  CS<0x565524a58b80> calls external node

Call graph node for function: 'ip4_reass'<<0x565523c09190>>  #uses=2
  CS<0x565524a9a6a0> calls function 'lwip_htons'
  CS<0x565524a9abd0> calls function 'lwip_htons'
  CS<0x565524a9bb00> calls function 'pbuf_clen'
  CS<0x565524a9c2e0> calls function 'ip_reass_remove_oldest_datagram'
  CS<0x565524a9ed00> calls function 'ip_reass_enqueue_new_datagram'
  CS<0x565524a9f3e0> calls function 'lwip_htons'
  CS<0x565524a9f9e0> calls function 'lwip_htons'
  CS<0x565524aa1860> calls function 'ip_reass_chain_frag_into_datagram_and_validate'
  CS<0x565524aa4910> calls function 'lwip_htons'
  CS<0x565524aa58b0> calls function 'pbuf_remove_header'
  CS<0x565524aa5ae0> calls function 'pbuf_cat'
  CS<0x565524aa71e0> calls function 'ip_reass_dequeue_datagram'
  CS<0x565524aa7350> calls function 'pbuf_clen'
  CS<0x565524aa79e0> calls function 'printf'
  CS<0x565524aa87f0> calls function 'printf'
  CS<0x565524aa91d0> calls function 'printf'
  CS<0x565524aa94b0> calls function 'ip_reass_dequeue_datagram'
  CS<0x565524aa9860> calls function 'pbuf_free'

Call graph node for function: 'ip4_route'<<0x565523c26b40>>  #uses=8

Call graph node for function: 'ip4addr_aton'<<0x565523c27590>>  #uses=2
  CS<0x5655246faad0> calls function 'printf'
  CS<0x5655246fb000> calls function 'lwip_htonl'

Call graph node for function: 'ip4addr_ntoa'<<0x565523c276d0>>  #uses=1
  CS<0x5655246fe120> calls function 'ip4addr_ntoa_r'

Call graph node for function: 'ip4addr_ntoa_r'<<0x565523c27750>>  #uses=2

Call graph node for function: 'ip_chksum_pseudo'<<0x565523c09990>>  #uses=1
  CS<0x565524a706c0> calls function 'inet_chksum_pseudo'

Call graph node for function: 'ip_chksum_pseudo_partial'<<0x565523c09c20>>  #uses=1
  CS<0x5655245ba1a0> calls function 'inet_chksum_pseudo_partial'

Call graph node for function: 'ip_frag_alloc_pbuf_custom_ref'<<0x565523c0ad10>>  #uses=1
  CS<0x565524ae5b70> calls function 'memp_malloc'

Call graph node for function: 'ip_frag_free_pbuf_custom_ref'<<0x565523c0ad90>>  #uses=2
  CS<0x565524ae89e0> calls function 'printf'
  CS<0x565524ae8d30> calls function 'memp_free'

Call graph node for function: 'ip_reass_chain_frag_into_datagram_and_validate'<<0x565523c0a2c0>>  #uses=1
  CS<0x565524abeab0> calls function 'lwip_htons'
  CS<0x565524abfba0> calls function 'lwip_htons'
  CS<0x565524ac7ae0> calls function 'printf'
  CS<0x565524ac8d50> calls function 'printf'
  CS<0x565524acc660> calls function 'printf'
  CS<0x565524accf70> calls function 'printf'
  CS<0x565524acd670> calls function 'printf'

Call graph node for function: 'ip_reass_dequeue_datagram'<<0x565523c0a0e0>>  #uses=3
  CS<0x565524a93db0> calls function 'printf'
  CS<0x565524a945c0> calls function 'memp_free'

Call graph node for function: 'ip_reass_enqueue_new_datagram'<<0x565523c0a240>>  #uses=1
  CS<0x565524ab6860> calls function 'memp_malloc'
  CS<0x565524ab6e30> calls function 'ip_reass_remove_oldest_datagram'
  CS<0x565524ab7140> calls function 'memp_malloc'

Call graph node for function: 'ip_reass_free_complete_datagram'<<0x565523c09e00>>  #uses=2
  CS<0x5655249a29c0> calls function 'printf'
  CS<0x565524a8b470> calls function 'printf'
  CS<0x565524a8cc40> calls function 'icmp_time_exceeded'
  CS<0x565524a8cdb0> calls function 'pbuf_clen'
  CS<0x565524a8d4d0> calls function 'printf'
  CS<0x565524a8dbd0> calls function 'pbuf_free'
  CS<0x565524a8ec10> calls function 'pbuf_clen'
  CS<0x565524a8f330> calls function 'printf'
  CS<0x565524a8fa30> calls function 'pbuf_free'
  CS<0x565524a8fcd0> calls function 'ip_reass_dequeue_datagram'
  CS<0x565524a902a0> calls function 'printf'

Call graph node for function: 'ip_reass_remove_oldest_datagram'<<0x565523c0a1c0>>  #uses=2
  CS<0x565524ab3b90> calls function 'ip_reass_free_complete_datagram'

Call graph node for function: 'ip_reass_tmr'<<0x565523c09d80>>  #uses=1
  CS<0x56552499f1c0> calls function 'ip_reass_free_complete_datagram'

Call graph node for function: 'ipaddr_addr'<<0x565523c27510>>  #uses=1
  CS<0x5655246ecf80> calls function 'ip4addr_aton'

Call graph node for function: 'ipfrag_free_pbuf_custom'<<0x565523c0ae40>>  #uses=1
  CS<0x565524aea620> calls function 'printf'
  CS<0x565524aead40> calls function 'printf'
  CS<0x565524aeb500> calls function 'pbuf_free'
  CS<0x565524aeb710> calls function 'ip_frag_free_pbuf_custom_ref'

Call graph node for function: 'lastCompart'<<0x565523d3f8e0>>  #uses=1

Call graph node for function: 'llvm.ctlz.i32'<<0x565524d582f0>>  #uses=1

Call graph node for function: 'llvm.memcpy.p0i8.p0i8.i32'<<0x565524c07bd0>>  #uses=1

Call graph node for function: 'llvm.memmove.p0i8.p0i8.i32'<<0x565523c24780>>  #uses=1

Call graph node for function: 'llvm.memset.p0i8.i32'<<0x565524c07c50>>  #uses=1

Call graph node for function: 'low_level_init'<<0x565523b89350>>  #uses=1
  CS<0x565523d77400> calls function 'HAL_ETH_Init'
  CS<0x565523d79000> calls function 'memp_init_pool'
  CS<0x565523d79460> calls function 'DP83848_RegisterBusIO'
  CS<0x565523d79530> calls function 'DP83848_Init'
  CS<0x565523d796a0> calls function 'ethernet_link_check_state'

Call graph node for function: 'low_level_input'<<0x565523b88fc0>>  #uses=1
  CS<0x565523d2f250> calls function 'HAL_ETH_ReadData'

Call graph node for function: 'low_level_output'<<0x565523b893d0>>  #uses=1
  CS<0x565523d74eb0> calls function 'HAL_ETH_Transmit'

Call graph node for function: 'lwip_cyclic_timer'<<0x565523b75760>>  #uses=1
  CS<0x565524394c10> calls external node
  CS<0x565524394c90> calls function 'sys_now'
  CS<0x565524395af0> calls function 'sys_timeout_abs'
  CS<0x565524395de0> calls function 'sys_timeout_abs'

Call graph node for function: 'lwip_htonl'<<0x565524c249d0>>  #uses=40

Call graph node for function: 'lwip_htons'<<0x565523c244d0>>  #uses=59

Call graph node for function: 'lwip_init'<<0x565523b88500>>  #uses=2
  CS<0x565523eeb600> calls function 'mem_init'
  CS<0x565523eeb6b0> calls function 'memp_init'
  CS<0x565523eeb760> calls function 'netif_init'
  CS<0x565523eeb810> calls function 'udp_init'
  CS<0x565523eeb8c0> calls function 'tcp_init'
  CS<0x565523eeb970> calls function 'sys_timeouts_init'

Call graph node for function: 'lwip_itoa'<<0x565524c0a4e0>>  #uses=2

Call graph node for function: 'lwip_standard_chksum'<<0x565523c09760>>  #uses=5

Call graph node for function: 'lwip_stricmp'<<0x565523c24680>>  #uses=1

Call graph node for function: 'lwip_strnicmp'<<0x565523c24700>>  #uses=1

Call graph node for function: 'lwip_strnstr'<<0x565523c24550>>  #uses=1
  CS<0x565524615cf0> calls function 'strlen'
  CS<0x565524617610> calls function 'strncmp'

Call graph node for function: 'main'<<0x565523b87d40>>  #uses=1
  CS<0x565523d2fe50> calls function 'curr_stamp'
  CS<0x565523d2ffd0> calls function 'HAL_Init'
  CS<0x565523d30080> calls function 'SystemClock_Config'
  CS<0x565523d30130> calls function 'BSP_Config'
  CS<0x565523d301e0> calls function 'lwip_init'
  CS<0x565523d30290> calls function 'Netif_Config'
  CS<0x565523d30340> calls external node
  CS<0x565523d30480> calls function 'ethernetif_input'
  CS<0x565523d30530> calls function 'sys_check_timeouts'
  CS<0x565523d30600> calls function 'Ethernet_Link_Periodic_Handle'
  CS<0x565523d306d0> calls function 'DHCP_Periodic_Handle'

Call graph node for function: 'mem_calloc'<<0x565523c263c0>>  #uses=1
  CS<0x565524686fe0> calls function 'mem_malloc'

Call graph node for function: 'mem_free'<<0x565524d53a40>>  #uses=5
  CS<0x565524652ed0> calls function 'printf'
  CS<0x565524653ed0> calls function 'printf'
  CS<0x5655246547a0> calls function 'printf'
  CS<0x565524654c00> calls function 'mem_link_valid'
  CS<0x565524654fe0> calls function 'printf'
  CS<0x565524655b70> calls function 'plug_holes'

Call graph node for function: 'mem_init'<<0x565524d542a0>>  #uses=2
  CS<0x56552464f0a0> calls function 'ptr_to_mem'

Call graph node for function: 'mem_link_valid'<<0x565523c25740>>  #uses=1
  CS<0x565524657ef0> calls function 'mem_to_ptr'
  CS<0x565524658280> calls function 'ptr_to_mem'
  CS<0x565524658610> calls function 'ptr_to_mem'

Call graph node for function: 'mem_malloc'<<0x565524c250b0>>  #uses=5
  CS<0x56552467ab50> calls function 'mem_to_ptr'
  CS<0x56552467b270> calls function 'ptr_to_mem'
  CS<0x56552467d170> calls function 'printf'
  CS<0x56552467d430> calls function 'ptr_to_mem'
  CS<0x56552467eb40> calls function 'ptr_to_mem'
  CS<0x565524680140> calls function 'ptr_to_mem'
  CS<0x565524680ba0> calls function 'printf'
  CS<0x565524681560> calls function 'printf'
  CS<0x565524681cc0> calls function 'printf'
  CS<0x565524682390> calls function 'printf'
  CS<0x565524682b00> calls function 'ptr_to_mem'

Call graph node for function: 'mem_to_ptr'<<0x565523c25990>>  #uses=5

Call graph node for function: 'mem_trim'<<0x565523b72240>>  #uses=2
  CS<0x565524669b80> calls function 'printf'
  CS<0x56552466aaf0> calls function 'mem_to_ptr'
  CS<0x56552466b8f0> calls function 'printf'
  CS<0x56552466c790> calls function 'ptr_to_mem'
  CS<0x56552466d3f0> calls function 'printf'
  CS<0x56552466e150> calls function 'ptr_to_mem'
  CS<0x56552466e420> calls function 'ptr_to_mem'
  CS<0x56552466f780> calls function 'ptr_to_mem'
  CS<0x565524670ad0> calls function 'printf'
  CS<0x565524670d90> calls function 'ptr_to_mem'
  CS<0x565524672730> calls function 'ptr_to_mem'

Call graph node for function: 'memcmp'<<0x565523c25360>>  #uses=2
  CS<None> calls external node

Call graph node for function: 'memp_free'<<0x565523b72190>>  #uses=12
  CS<0x5655247a6a30> calls function 'printf'
  CS<0x5655247a71f0> calls function 'do_memp_free_pool'

Call graph node for function: 'memp_free_pool'<<0x565524c083b0>>  #uses=2
  CS<0x5655248b6090> calls function 'printf'
  CS<0x5655247a2dd0> calls function 'do_memp_free_pool'

Call graph node for function: 'memp_init'<<0x565524d54350>>  #uses=2
  CS<0x5655248acbf0> calls function 'memp_init_pool'

Call graph node for function: 'memp_init_pool'<<0x565523b895b0>>  #uses=3

Call graph node for function: 'memp_malloc'<<0x565523b71c40>>  #uses=15
  CS<0x5655248b2d00> calls function 'curr_stamp'
  CS<0x5655248b33c0> calls function 'printf'
  CS<0x5655248b3870> calls function 'do_memp_malloc_pool'
  CS<0x5655248b3d60> calls function 'curr_stamp'

Call graph node for function: 'memp_malloc_pool'<<0x565523b87fa0>>  #uses=2
  CS<0x5655248ae150> calls function 'printf'
  CS<0x5655248ae780> calls function 'do_memp_malloc_pool'

Call graph node for function: 'mymemcmp'<<0x565523b702e0>>  #uses=1

Call graph node for function: 'mystrlen'<<0x565523b70110>>  #uses=1

Call graph node for function: 'netif_add'<<0x565524d548a0>>  #uses=2
  CS<0x565523ef4cf0> calls function 'printf'
  CS<0x565523ef5350> calls function 'printf'
  CS<0x565523ef8240> calls function 'netif_set_addr'
  CS<0x565523ef8450> calls external node
  CS<0x565523ef9b70> calls function 'printf'
  CS<0x565523efa300> calls function 'printf'

Call graph node for function: 'netif_add_noaddr'<<0x565524d54820>>  #uses=1
  CS<0x565523ef0bb0> calls function 'netif_add'

Call graph node for function: 'netif_do_ip_addr_changed'<<0x565524d54dd0>>  #uses=2
  CS<0x565523f145e0> calls function 'tcp_netif_ip_addr_changed'
  CS<0x565523f14810> calls function 'udp_netif_ip_addr_changed'

Call graph node for function: 'netif_do_set_gw'<<0x565524d54d50>>  #uses=2

Call graph node for function: 'netif_do_set_ipaddr'<<0x565524d54c50>>  #uses=3
  CS<0x565523f0bec0> calls function 'printf'
  CS<0x565523f0c490> calls function 'printf'
  CS<0x565523f0d6b0> calls function 'netif_do_ip_addr_changed'
  CS<0x565523f0df80> calls function 'netif_issue_reports'

Call graph node for function: 'netif_do_set_netmask'<<0x565524d54cd0>>  #uses=2

Call graph node for function: 'netif_find'<<0x565524c0a250>>  #uses=2
  CS<0x565523f36500> calls function 'atoi'

Call graph node for function: 'netif_get_by_index'<<0x565524c0a430>>  #uses=2

Call graph node for function: 'netif_index_to_name'<<0x565524c0a3b0>>  #uses=1
  CS<0x565523f39b40> calls function 'netif_get_by_index'
  CS<0x565523f3ab80> calls function 'lwip_itoa'

Call graph node for function: 'netif_init'<<0x565524d543d0>>  #uses=2

Call graph node for function: 'netif_input'<<0x565524d54720>>  #uses=1
  CS<0x565523eedd60> calls function 'printf'
  CS<0x565523eee330> calls function 'printf'
  CS<0x565523eeeb50> calls function 'ethernet_input'
  CS<0x565523eeeeb0> calls external node

Call graph node for function: 'netif_issue_reports'<<0x565524d54f00>>  #uses=3
  CS<0x565523f15f70> calls function 'printf'
  CS<0x565523f17940> calls external node

Call graph node for function: 'netif_name_to_index'<<0x565524c0a1d0>>  #uses=1
  CS<0x565523f34180> calls function 'netif_find'

Call graph node for function: 'netif_null_output_ip4'<<0x565524d54bd0>>  #uses=1

Call graph node for function: 'netif_remove'<<0x565524d55380>>  #uses=1
  CS<0x565523f20c10> calls function 'netif_do_ip_addr_changed'
  CS<0x565523f213c0> calls function 'netif_set_down'
  CS<0x565523f21810> calls function 'netif_set_default'

Call graph node for function: 'netif_set_addr'<<0x565524d54950>>  #uses=2
  CS<0x565523deac80> calls function 'netif_do_set_ipaddr'
  CS<0x565523deb220> calls function 'netif_do_set_netmask'
  CS<0x565523deb720> calls function 'netif_do_set_gw'
  CS<0x565523debd90> calls function 'netif_do_set_ipaddr'

Call graph node for function: 'netif_set_default'<<0x565524d554e0>>  #uses=2

Call graph node for function: 'netif_set_down'<<0x565524d55400>>  #uses=2
  CS<0x565523f24e00> calls function 'printf'
  CS<0x565523f25f50> calls external node

Call graph node for function: 'netif_set_gw'<<0x565524d552a0>>  #uses=1
  CS<0x565523f1e1c0> calls function 'printf'
  CS<0x565523f1e9a0> calls function 'netif_do_set_gw'

Call graph node for function: 'netif_set_ipaddr'<<0x565524d550e0>>  #uses=1
  CS<0x565523f198f0> calls function 'printf'
  CS<0x565523f1a030> calls function 'netif_do_set_ipaddr'

Call graph node for function: 'netif_set_link_callback'<<0x565524c0a150>>  #uses=1

Call graph node for function: 'netif_set_link_down'<<0x565524c0a0d0>>  #uses=1
  CS<0x565523f30880> calls function 'printf'
  CS<0x565523f31b70> calls external node

Call graph node for function: 'netif_set_link_up'<<0x565524c09f40>>  #uses=1
  CS<0x565523d2b750> calls function 'printf'
  CS<0x565523f2e5c0> calls external node
  CS<0x565523f2e750> calls function 'netif_issue_reports'
  CS<0x565523f2ee40> calls external node

Call graph node for function: 'netif_set_netmask'<<0x565524d551c0>>  #uses=1
  CS<0x565523f1bd10> calls function 'printf'
  CS<0x565523f1c4f0> calls function 'netif_do_set_netmask'

Call graph node for function: 'netif_set_up'<<0x565524c09e60>>  #uses=1
  CS<0x565523d29270> calls function 'printf'
  CS<0x565523d2a000> calls function 'netif_issue_reports'

Call graph node for function: 'pbuf_add_header'<<0x565523b72410>>  #uses=7
  CS<0x5655240c4170> calls function 'pbuf_add_header_impl'

Call graph node for function: 'pbuf_add_header_force'<<0x565523b72540>>  #uses=1
  CS<0x5655240cc7b0> calls function 'pbuf_add_header_impl'

Call graph node for function: 'pbuf_add_header_impl'<<0x565523b72490>>  #uses=3
  CS<0x5655240b9c70> calls function 'printf'

Call graph node for function: 'pbuf_alloc'<<0x565524c25870>>  #uses=15
  CS<0x56552409a8b0> calls function 'pbuf_alloc_reference'
  CS<0x56552409b3f0> calls function 'memp_malloc'
  CS<0x56552409bb10> calls function 'pbuf_free'
  CS<0x56552409d480> calls function 'pbuf_init_alloced_pbuf'
  CS<0x56552409db30> calls function 'printf'
  CS<0x56552409e3b0> calls function 'printf'
  CS<0x5655240a1190> calls function 'mem_malloc'
  CS<0x5655240a2010> calls function 'pbuf_init_alloced_pbuf'
  CS<0x5655240a26c0> calls function 'printf'
  CS<0x5655240a2b20> calls function 'printf'

Call graph node for function: 'pbuf_alloc_reference'<<0x565523b71b90>>  #uses=2
  CS<0x5655240a6d80> calls function 'printf'
  CS<0x5655240a6fa0> calls function 'memp_malloc'
  CS<0x5655240a7900> calls function 'pbuf_init_alloced_pbuf'

Call graph node for function: 'pbuf_alloced_custom'<<0x565523b88020>>  #uses=3
  CS<0x5655240b8d90> calls function 'pbuf_init_alloced_pbuf'

Call graph node for function: 'pbuf_cat'<<0x565523b72ac0>>  #uses=6
  CS<0x5655240e2dd0> calls function 'printf'
  CS<0x5655240e4950> calls function 'printf'
  CS<0x5655240e5050> calls function 'printf'

Call graph node for function: 'pbuf_chain'<<0x565523b72bd0>>  #uses=3
  CS<0x5655240e7770> calls function 'pbuf_cat'
  CS<0x5655240e78e0> calls function 'pbuf_ref'

Call graph node for function: 'pbuf_clen'<<0x565523b729c0>>  #uses=13

Call graph node for function: 'pbuf_clone'<<0x565523b73690>>  #uses=3
  CS<0x565523f05890> calls function 'pbuf_alloc'
  CS<0x565523f05ef0> calls function 'pbuf_copy'
  CS<0x565523f06540> calls function 'printf'

Call graph node for function: 'pbuf_coalesce'<<0x565523b73610>>  #uses=1
  CS<0x565523f02ff0> calls function 'pbuf_clone'
  CS<0x565523f03630> calls function 'pbuf_free'

Call graph node for function: 'pbuf_copy'<<0x565523b72de0>>  #uses=3
  CS<0x5655240f1320> calls function 'printf'
  CS<0x5655240f3b30> calls function 'printf'
  CS<0x5655240f4310> calls function 'printf'
  CS<0x5655240f5b90> calls function 'printf'
  CS<0x5655240f6c80> calls function 'printf'
  CS<0x5655240f7d70> calls function 'printf'

Call graph node for function: 'pbuf_copy_partial'<<0x565524c26ea0>>  #uses=5
  CS<0x5655240fd470> calls function 'printf'
  CS<0x5655240fdad0> calls function 'printf'

Call graph node for function: 'pbuf_dechain'<<0x565523b72c50>>  #uses=1
  CS<0x5655240ea0b0> calls function 'printf'
  CS<0x5655240eb2a0> calls function 'pbuf_free'
  CS<0x5655240ebf80> calls function 'printf'

Call graph node for function: 'pbuf_free'<<0x565523b89070>>  #uses=71
  CS<0x5655240ab270> calls function 'printf'
  CS<0x5655240abfc0> calls function 'printf'
  CS<0x5655240adc50> calls function 'printf'
  CS<0x5655240ae110> calls external node
  CS<0x5655240ae630> calls function 'memp_free'
  CS<0x5655240aeb80> calls function 'memp_free'
  CS<0x5655240af0b0> calls function 'mem_free'
  CS<0x5655240af3c0> calls function 'printf'

Call graph node for function: 'pbuf_free_custom'<<0x565524c08330>>  #uses=1
  CS<0x565523d819d0> calls function 'memp_free_pool'

Call graph node for function: 'pbuf_free_header'<<0x565523b728b0>>  #uses=1
  CS<0x5655240d8b10> calls function 'pbuf_free'
  CS<0x5655240d8e50> calls function 'pbuf_remove_header'

Call graph node for function: 'pbuf_get_at'<<0x565523b73820>>  #uses=2
  CS<0x565523f07f90> calls function 'pbuf_try_get_at'

Call graph node for function: 'pbuf_get_contiguous'<<0x565523b73060>>  #uses=1
  CS<0x565524105730> calls function 'printf'
  CS<0x565524105d90> calls function 'printf'
  CS<0x5655241064d0> calls function 'printf'
  CS<0x565524106900> calls function 'pbuf_skip_const'
  CS<0x565524107bb0> calls function 'pbuf_copy_partial'

Call graph node for function: 'pbuf_header'<<0x565523b726a0>>  #uses=1
  CS<0x5655240d2ca0> calls function 'pbuf_header_impl'

Call graph node for function: 'pbuf_header_force'<<0x565523b72830>>  #uses=3
  CS<0x5655240d58b0> calls function 'pbuf_header_impl'

Call graph node for function: 'pbuf_header_impl'<<0x565523b72720>>  #uses=2
  CS<0x5655240d4360> calls function 'pbuf_remove_header'
  CS<0x5655240d4820> calls function 'pbuf_add_header_impl'

Call graph node for function: 'pbuf_init_alloced_pbuf'<<0x565523b71dd0>>  #uses=4

Call graph node for function: 'pbuf_memcmp'<<0x565523b73a00>>  #uses=2
  CS<0x565524139130> calls function 'pbuf_get_at'

Call graph node for function: 'pbuf_memfind'<<0x565523b73ab0>>  #uses=2
  CS<0x56552413ea90> calls function 'pbuf_memcmp'

Call graph node for function: 'pbuf_put_at'<<0x565523b73950>>  #uses=1
  CS<0x5655241332b0> calls function 'pbuf_skip'

Call graph node for function: 'pbuf_realloc'<<0x565524c259d0>>  #uses=5
  CS<0x5655240bc130> calls function 'printf'
  CS<0x5655240bea10> calls function 'printf'
  CS<0x5655240c0350> calls function 'mem_trim'
  CS<0x5655240c0930> calls function 'printf'
  CS<0x5655240c18d0> calls function 'pbuf_free'

Call graph node for function: 'pbuf_ref'<<0x565523b72a40>>  #uses=5
  CS<0x565523ec68c0> calls function 'printf'

Call graph node for function: 'pbuf_remove_header'<<0x565523b725f0>>  #uses=15
  CS<0x5655240ce6b0> calls function 'printf'
  CS<0x5655240cf960> calls function 'printf'

Call graph node for function: 'pbuf_skip'<<0x565523b73310>>  #uses=3
  CS<0x56552410db20> calls function 'pbuf_skip_const'

Call graph node for function: 'pbuf_skip_const'<<0x565523b73140>>  #uses=3

Call graph node for function: 'pbuf_strstr'<<0x565523b73b60>>  #uses=1
  CS<0x5655241419e0> calls function 'strlen'
  CS<0x5655241421c0> calls function 'pbuf_memfind'

Call graph node for function: 'pbuf_take'<<0x565523b73390>>  #uses=2
  CS<0x5655241117e0> calls function 'printf'
  CS<0x565524111e40> calls function 'printf'
  CS<0x565524112720> calls function 'printf'
  CS<0x565524113c60> calls function 'printf'
  CS<0x565524115c20> calls function 'printf'

Call graph node for function: 'pbuf_take_at'<<0x565523b73590>>  #uses=1
  CS<0x565523f01990> calls function 'pbuf_skip'
  CS<0x56552411cf00> calls function 'printf'
  CS<0x56552411f0e0> calls function 'pbuf_take'

Call graph node for function: 'pbuf_try_get_at'<<0x565523b738a0>>  #uses=2
  CS<0x565523f09cd0> calls function 'pbuf_skip_const'

Call graph node for function: 'pcall_arg0'<<0x565523d402c0>>  #uses=1
  CS<0x565524c624e0> calls function 'curr_stamp'
  CS<0x565524c628b0> calls function 'switch_view'
  CS<0x565524c630b0> calls function 'curr_stamp'
  CS<0x565524c63b50> calls external node
  CS<0x565524c63e70> calls function 'curr_stamp'
  CS<0x565524c640d0> calls function 'switch_view'
  CS<0x565524c64500> calls function 'curr_stamp'

Call graph node for function: 'pcall_arg1i'<<0x565523d40510>>  #uses=1
  CS<0x565524c6e9a0> calls function 'curr_stamp'
  CS<0x565524c6f050> calls function 'switch_view'
  CS<0x565524c6f740> calls function 'curr_stamp'
  CS<0x565524c700c0> calls external node
  CS<0x565524c70410> calls function 'curr_stamp'
  CS<0x565524c70670> calls function 'switch_view'
  CS<0x565524c70aa0> calls function 'curr_stamp'

Call graph node for function: 'pcall_arg1p'<<0x565523d3fde0>>  #uses=1
  CS<0x565524c55c30> calls function 'curr_stamp'
  CS<0x565524c56630> calls function 'rtmkcpy'
  CS<0x565524c569c0> calls function 'switch_view'
  CS<0x565524c57cf0> calls function 'curr_stamp'
  CS<0x565524c587e0> calls external node
  CS<0x565524c58b00> calls function 'curr_stamp'
  CS<0x565524c59290> calls function 'rtmkcpy'
  CS<0x565524c59420> calls function 'switch_view'
  CS<0x565524c59850> calls function 'curr_stamp'

Call graph node for function: 'pcall_arg3iii'<<0x565523d40340>>  #uses=1
  CS<0x565524c68b10> calls function 'curr_stamp'
  CS<0x565524c68ee0> calls function 'switch_view'
  CS<0x565524c696e0> calls function 'curr_stamp'
  CS<0x565524c6a350> calls external node
  CS<0x565524c6a670> calls function 'curr_stamp'
  CS<0x565524c6a8d0> calls function 'switch_view'
  CS<0x565524c6ad00> calls function 'curr_stamp'

Call graph node for function: 'plug_holes'<<0x565523c25910>>  #uses=1
  CS<0x56552465d2e0> calls function 'printf'
  CS<0x56552465da00> calls function 'printf'
  CS<0x56552465e170> calls function 'printf'
  CS<0x56552465e8e0> calls function 'printf'
  CS<0x56552465ed00> calls function 'ptr_to_mem'
  CS<0x5655246607f0> calls function 'mem_to_ptr'
  CS<0x565524660ac0> calls function 'ptr_to_mem'
  CS<0x565524661080> calls function 'ptr_to_mem'
  CS<0x565524662750> calls function 'mem_to_ptr'
  CS<0x565524662a20> calls function 'ptr_to_mem'

Call graph node for function: 'printf'<<0x565523b892a0>>  #uses=334
  CS<None> calls external node

Call graph node for function: 'ptr_to_mem'<<0x565523c255e0>>  #uses=18

Call graph node for function: 'rand'<<0x565524c258f0>>  #uses=4
  CS<None> calls external node

Call graph node for function: 'rtmk_init'<<0x565523d3f730>>  #uses=1
  CS<0x565524c42390> calls function 'switch_view'

Call graph node for function: 'rtmkcpy'<<0x565523d3fe60>>  #uses=57

Call graph node for function: 'strlen'<<0x565523b73be0>>  #uses=3
  CS<None> calls external node

Call graph node for function: 'strncmp'<<0x565523c24600>>  #uses=2
  CS<None> calls external node

Call graph node for function: 'switch_view'<<0x565523d3f7b0>>  #uses=52

Call graph node for function: 'switch_view_svc'<<0x565523d41c60>>  #uses=1
  CS<0x565524cac4b0> calls external node

Call graph node for function: 'sys_check_timeouts'<<0x565523b88680>>  #uses=2
  CS<0x56552439b330> calls function 'sys_now'
  CS<0x56552439cf70> calls function 'memp_free'
  CS<0x56552439d430> calls external node

Call graph node for function: 'sys_now'<<0x565524c08430>>  #uses=6
  CS<0x565523d82270> calls function 'HAL_GetTick'

Call graph node for function: 'sys_restart_timeouts'<<0x565523b75a80>>  #uses=1
  CS<0x56552439ed80> calls function 'sys_now'

Call graph node for function: 'sys_timeout'<<0x565523b75390>>  #uses=4
  CS<0x56552438a680> calls function 'printf'
  CS<0x56552438a880> calls function 'sys_now'
  CS<0x56552438ad90> calls function 'sys_timeout_abs'

Call graph node for function: 'sys_timeout_abs'<<0x565523b75630>>  #uses=3
  CS<0x56552438d190> calls function 'memp_malloc'
  CS<0x56552438d9b0> calls function 'printf'

Call graph node for function: 'sys_timeouts_init'<<0x565524d546a0>>  #uses=2
  CS<0x565524393250> calls function 'sys_timeout'

Call graph node for function: 'sys_timeouts_sleeptime'<<0x565523b75b00>>  #uses=1
  CS<0x5655243a1630> calls function 'sys_now'
  CS<0x5655243a27a0> calls function 'printf'

Call graph node for function: 'sys_untimeout'<<0x565523b75920>>  #uses=1
  CS<0x565524399560> calls function 'memp_free'

Call graph node for function: 'tcp_abandon'<<0x565523c29670>>  #uses=4
  CS<0x56552478af10> calls function 'printf'
  CS<0x56552478b550> calls function 'printf'
  CS<0x56552478bbd0> calls function 'tcp_pcb_remove'
  CS<0x56552478bd40> calls function 'tcp_free'
  CS<0x56552478f5a0> calls function 'tcp_pcb_remove'
  CS<0x56552478fd50> calls function 'tcp_segs_free'
  CS<0x565524790460> calls function 'tcp_segs_free'
  CS<0x565524791040> calls function 'tcp_rst'
  CS<0x565524791510> calls function 'tcp_free'
  CS<0x565524791a00> calls external node

Call graph node for function: 'tcp_abort'<<0x565523c29b80>>  #uses=8
  CS<0x5655247936b0> calls function 'tcp_abandon'

Call graph node for function: 'tcp_accept'<<0x565523c2b170>>  #uses=2

Call graph node for function: 'tcp_accept_null'<<0x565523c29f90>>  #uses=1
  CS<0x5655242ad380> calls function 'printf'
  CS<0x5655242ad640> calls function 'tcp_abort'

Call graph node for function: 'tcp_alloc'<<0x565523c2a7e0>>  #uses=4
  CS<0x5655242ca990> calls function 'memp_malloc'
  CS<0x5655242cade0> calls function 'tcp_handle_closepend'
  CS<0x5655242cae90> calls function 'tcp_kill_timewait'
  CS<0x5655242caf60> calls function 'memp_malloc'
  CS<0x5655242cb3d0> calls function 'tcp_kill_state'
  CS<0x5655242cb4a0> calls function 'memp_malloc'
  CS<0x5655242cb910> calls function 'tcp_kill_state'
  CS<0x5655242cb9e0> calls function 'memp_malloc'
  CS<0x5655242cbef0> calls function 'tcp_kill_prio'
  CS<0x5655242cbfc0> calls function 'memp_malloc'

Call graph node for function: 'tcp_arg'<<0x565523c2aee0>>  #uses=3

Call graph node for function: 'tcp_bind'<<0x565523c29c00>>  #uses=2
  CS<0x565524796dc0> calls function 'printf'
  CS<0x565524797550> calls function 'printf'
  CS<0x565524797a90> calls function 'tcp_new_port'
  CS<0x56552479bdc0> calls function 'tcp_timer_needed'

Call graph node for function: 'tcp_bind_netif'<<0x565523c29d30>>  #uses=1

Call graph node for function: 'tcp_close'<<0x565523c28d40>>  #uses=3
  CS<0x56552475b800> calls function 'printf'
  CS<0x56552475c5c0> calls function 'tcp_close_shutdown'

Call graph node for function: 'tcp_close_shutdown'<<0x565523c28ef0>>  #uses=3
  CS<0x56552475fbb0> calls function 'printf'
  CS<0x565524761520> calls function 'printf'
  CS<0x5655247623c0> calls function 'tcp_rst'
  CS<0x565524762530> calls function 'tcp_pcb_purge'
  CS<0x565524764270> calls function 'tcp_trigger_input_pcb_close'
  CS<0x565524764480> calls function 'tcp_free'
  CS<0x565524766830> calls function 'tcp_free'
  CS<0x565524766a40> calls function 'tcp_listen_closed'
  CS<0x565524766bd0> calls function 'tcp_pcb_remove'
  CS<0x565524766d40> calls function 'tcp_free_listen'
  CS<0x565524767010> calls function 'tcp_pcb_remove'
  CS<0x565524767250> calls function 'tcp_free'
  CS<0x565524767460> calls function 'tcp_close_shutdown_fin'

Call graph node for function: 'tcp_close_shutdown_fin'<<0x565523c27af0>>  #uses=3
  CS<0x565524746dd0> calls function 'printf'
  CS<0x5655247472c0> calls function 'tcp_send_fin'
  CS<0x565524747b30> calls function 'tcp_send_fin'
  CS<0x5655247483a0> calls function 'tcp_send_fin'
  CS<0x565524748ff0> calls function 'tcp_output'

Call graph node for function: 'tcp_connect'<<0x565523c2a010>>  #uses=1
  CS<0x5655242b1ed0> calls function 'printf'
  CS<0x5655242b2530> calls function 'printf'
  CS<0x5655242b2cc0> calls function 'printf'
  CS<0x5655242b3fb0> calls external node
  CS<0x5655242b4340> calls function 'ip4_route'
  CS<0x5655242b64a0> calls function 'tcp_new_port'
  CS<0x5655242b6eb0> calls function 'tcp_next_iss'
  CS<0x5655242b9290> calls function 'tcp_eff_send_mss_netif'
  CS<0x5655242b9bb0> calls function 'tcp_enqueue_flags'
  CS<0x5655242bc220> calls function 'tcp_timer_needed'
  CS<0x5655242bc4d0> calls function 'tcp_output'

Call graph node for function: 'tcp_create_segment'<<0x565523c2f470>>  #uses=3
  CS<0x5655249884e0> calls function 'printf'
  CS<0x565524988ab0> calls function 'printf'
  CS<0x565524989c60> calls function 'memp_malloc'
  CS<0x56552498a0d0> calls function 'pbuf_free'
  CS<0x56552498b130> calls function 'printf'
  CS<0x56552498bb10> calls function 'pbuf_add_header'
  CS<0x56552498bdf0> calls function 'tcp_seg_free'
  CS<0x56552498c840> calls function 'lwip_htons'
  CS<0x56552498cec0> calls function 'lwip_htons'
  CS<0x56552498d3e0> calls function 'lwip_htonl'
  CS<0x56552498dde0> calls function 'lwip_htons'

Call graph node for function: 'tcp_debug_state_str'<<0x565523c2b440>>  #uses=1

Call graph node for function: 'tcp_echoserver_accept'<<0x565523c0da30>>  #uses=1
  CS<0x565524b7c640> calls function 'tcp_setprio'
  CS<0x565524b7c710> calls function 'mem_malloc'
  CS<0x565524b7d730> calls function 'tcp_arg'
  CS<0x565524b7d8c0> calls function 'tcp_recv'
  CS<0x565524b7da50> calls function 'tcp_err'
  CS<0x565524b7dc00> calls function 'tcp_poll'
  CS<0x565524b7df90> calls function 'tcp_echoserver_connection_close'

Call graph node for function: 'tcp_echoserver_connection_close'<<0x565523c0dc00>>  #uses=4
  CS<0x565524c35810> calls function 'tcp_arg'
  CS<0x565524c359a0> calls function 'tcp_sent'
  CS<0x565524c35b30> calls function 'tcp_recv'
  CS<0x565524c35cc0> calls function 'tcp_err'
  CS<0x565524c35e70> calls function 'tcp_poll'
  CS<0x565524c36290> calls function 'mem_free'
  CS<0x565524c364a0> calls function 'tcp_close'

Call graph node for function: 'tcp_echoserver_error'<<0x565523d3f2f0>>  #uses=1
  CS<0x565524c31ac0> calls function 'mem_free'

Call graph node for function: 'tcp_echoserver_init'<<0x565523c0d860>>  #uses=1
  CS<0x565524b79d20> calls function 'tcp_new'
  CS<0x565524b7a200> calls function 'tcp_bind'
  CS<0x565524b7a700> calls function 'tcp_listen_with_backlog'
  CS<0x565524b7a920> calls function 'tcp_accept'
  CS<0x565524b7abc0> calls function 'memp_free'

Call graph node for function: 'tcp_echoserver_poll'<<0x565523d3f370>>  #uses=1
  CS<0x565524c339b0> calls function 'tcp_sent'
  CS<0x565524c33be0> calls function 'tcp_echoserver_send'
  CS<0x565524c342c0> calls function 'tcp_echoserver_connection_close'
  CS<0x565524c346a0> calls function 'tcp_abort'

Call graph node for function: 'tcp_echoserver_recv'<<0x565523c0dc80>>  #uses=1
  CS<0x565524c29bc0> calls function 'printf'
  CS<0x565524c2a970> calls function 'tcp_echoserver_connection_close'
  CS<0x565524c2aba0> calls function 'tcp_sent'
  CS<0x565524c2add0> calls function 'tcp_echoserver_send'
  CS<0x565524c2b850> calls function 'pbuf_free'
  CS<0x565524c2c5d0> calls function 'tcp_sent'
  CS<0x565524c2c800> calls function 'tcp_echoserver_send'
  CS<0x565524c2d630> calls function 'tcp_echoserver_send'
  CS<0x565524c2dd30> calls function 'pbuf_chain'
  CS<0x565524c2e6a0> calls function 'tcp_recved'
  CS<0x565524c2ea60> calls function 'pbuf_free'
  CS<0x565524c2ef50> calls function 'tcp_recved'
  CS<0x565524c2f310> calls function 'pbuf_free'

Call graph node for function: 'tcp_echoserver_send'<<0x565523c0dd00>>  #uses=5
  CS<0x565524b7e8e0> calls function 'tcp_write'
  CS<0x565524c3d5a0> calls function 'pbuf_ref'
  CS<0x565524c3d820> calls function 'pbuf_free'
  CS<0x565524c3de30> calls function 'tcp_recved'

Call graph node for function: 'tcp_echoserver_sent'<<0x565523d3f4d0>>  #uses=1
  CS<0x565524c38240> calls function 'tcp_sent'
  CS<0x565524c38470> calls function 'tcp_echoserver_send'
  CS<0x565524c38b50> calls function 'tcp_echoserver_connection_close'

Call graph node for function: 'tcp_eff_send_mss_netif'<<0x565523c2a2c0>>  #uses=5
  CS<0x5655242c22c0> calls function 'printf'

Call graph node for function: 'tcp_enqueue_flags'<<0x565523c2a340>>  #uses=4
  CS<0x5655249ada40> calls function 'printf'
  CS<0x5655249ae010> calls function 'printf'
  CS<0x5655249af7b0> calls function 'pbuf_alloc'
  CS<0x5655249b0850> calls function 'printf'
  CS<0x5655249b0f70> calls function 'tcp_create_segment'
  CS<0x5655249b1fc0> calls function 'printf'
  CS<0x5655249b2730> calls function 'printf'
  CS<0x5655249b58a0> calls function 'pbuf_clen'
  CS<0x5655249b69e0> calls function 'printf'

Call graph node for function: 'tcp_err'<<0x565523c2b0c0>>  #uses=3
  CS<0x5655246c5540> calls function 'printf'

Call graph node for function: 'tcp_fasttmr'<<0x565523c27910>>  #uses=2
  CS<0x56552470ad50> calls function 'tcp_output'
  CS<0x56552470c020> calls function 'tcp_close_shutdown_fin'
  CS<0x56552470c950> calls function 'tcp_process_refused_data'

Call graph node for function: 'tcp_free'<<0x565523c27800>>  #uses=11
  CS<0x565524706eb0> calls function 'printf'
  CS<0x565524707200> calls function 'memp_free'

Call graph node for function: 'tcp_free_acked_segments'<<0x565523c0d180>>  #uses=2
  CS<0x565524b71c80> calls function 'lwip_htonl'
  CS<0x565524b72200> calls function 'lwip_htons'
  CS<0x565524b73140> calls function 'pbuf_clen'
  CS<0x565524b73900> calls function 'printf'
  CS<0x565524b74890> calls function 'tcp_seg_free'
  CS<0x565524b752d0> calls function 'printf'

Call graph node for function: 'tcp_free_listen'<<0x565523c29350>>  #uses=1
  CS<0x565523eed000> calls function 'printf'
  CS<0x565523eed350> calls function 'memp_free'

Call graph node for function: 'tcp_get_next_optbyte'<<0x565523c0d050>>  #uses=5

Call graph node for function: 'tcp_handle_closepend'<<0x565523c2a890>>  #uses=1
  CS<0x5655242d2440> calls function 'tcp_close_shutdown_fin'

Call graph node for function: 'tcp_init'<<0x565524d544d0>>  #uses=2
  CS<0x565524705540> calls function 'rand'

Call graph node for function: 'tcp_input'<<0x565523c09210>>  #uses=2
  CS<0x56552449ac60> calls function 'printf'
  CS<0x56552449b7c0> calls function 'ip4_addr_isbroadcast_u32'
  CS<0x56552449bf50> calls function 'lwip_htons'
  CS<0x56552449d840> calls function 'pbuf_remove_header'
  CS<0x56552449e000> calls function 'printf'
  CS<0x56552449e2e0> calls function 'pbuf_remove_header'
  CS<0x56552449ec80> calls function 'pbuf_remove_header'
  CS<0x56552449fbc0> calls function 'pbuf_remove_header'
  CS<0x5655244a0910> calls function 'printf'
  CS<0x5655244a13c0> calls function 'printf'
  CS<0x5655244a1820> calls function 'lwip_htons'
  CS<0x5655244a1ce0> calls function 'lwip_htons'
  CS<0x5655244a21a0> calls function 'lwip_htonl'
  CS<0x5655244a2720> calls function 'lwip_htonl'
  CS<0x5655244a2ca0> calls function 'lwip_htons'
  CS<0x5655244a3160> calls function 'lwip_htons'
  CS<0x5655244a4c00> calls function 'printf'
  CS<0x5655244a5300> calls function 'printf'
  CS<0x5655244a5a00> calls function 'printf'
  CS<0x565524b692e0> calls function 'printf'
  CS<0x565524b6a640> calls function 'printf'
  CS<0x565524b6b990> calls function 'printf'
  CS<0x565524b6dea0> calls function 'tcp_timewait_input'
  CS<0x565524b6e010> calls function 'pbuf_free'
  CS<0x565524a7d500> calls function 'tcp_listen_input'
  CS<0x565524a7d670> calls function 'pbuf_free'
  CS<0x565524a7ef90> calls function 'tcp_process_refused_data'
  CS<0x565524a7fd70> calls function 'tcp_send_empty_ack'
  CS<0x565524a80220> calls function 'tcp_process'
  CS<0x565524a81280> calls external node
  CS<0x565524a814c0> calls function 'tcp_pcb_remove'
  CS<0x565524a81630> calls function 'tcp_free'
  CS<0x565524a82620> calls external node
  CS<0x565524a82e80> calls function 'tcp_input_delayed_close'
  CS<0x565524a83880> calls function 'printf'
  CS<0x565524a83fe0> calls function 'pbuf_free'
  CS<0x565524a84150> calls function 'tcp_abort'
  CS<0x565524a84b50> calls external node
  CS<0x565524a84e60> calls function 'tcp_recv_null'
  CS<0x565524a877d0> calls external node
  CS<0x565524a880d0> calls function 'tcp_input_delayed_close'
  CS<0x565524a88450> calls function 'tcp_output'
  CS<0x565524a88c30> calls function 'pbuf_free'
  CS<0x565524a890d0> calls function 'lwip_htons'
  CS<0x565524a89d50> calls function 'tcp_rst'
  CS<0x565524a89f60> calls function 'pbuf_free'
  CS<0x565524a8a420> calls function 'pbuf_free'

Call graph node for function: 'tcp_input_delayed_close'<<0x565523c0bae0>>  #uses=2
  CS<0x565524bce910> calls function 'printf'
  CS<0x565524bcfbf0> calls external node
  CS<0x565524bcfed0> calls function 'tcp_pcb_remove'
  CS<0x565524bd0040> calls function 'tcp_free'

Call graph node for function: 'tcp_keepalive'<<0x565523c28240>>  #uses=2
  CS<0x565524a237f0> calls function 'printf'
  CS<0x565524a23e80> calls function 'lwip_htonl'
  CS<0x565524a23fb0> calls function 'tcp_output_alloc_header'
  CS<0x565524a246f0> calls function 'tcp_output_fill_options'
  CS<0x565524a24c80> calls function 'tcp_output_control_segment'

Call graph node for function: 'tcp_kill_prio'<<0x565523c2aa10>>  #uses=1
  CS<0x5655242de780> calls function 'tcp_abort'

Call graph node for function: 'tcp_kill_state'<<0x565523c2a990>>  #uses=2
  CS<0x5655242d7640> calls function 'printf'
  CS<0x5655242d9590> calls function 'tcp_abandon'

Call graph node for function: 'tcp_kill_timewait'<<0x565523c2a910>>  #uses=1
  CS<0x5655242d52e0> calls function 'tcp_abort'

Call graph node for function: 'tcp_listen_closed'<<0x565523c29250>>  #uses=1
  CS<0x56552476ab80> calls function 'printf'
  CS<0x56552476b280> calls function 'printf'
  CS<0x56552476bc10> calls function 'tcp_remove_listener'

Call graph node for function: 'tcp_listen_input'<<0x565523c0c070>>  #uses=1
  CS<0x565524b8e6e0> calls function 'printf'
  CS<0x565524b8f490> calls function 'tcp_rst'
  CS<0x565524b8fb40> calls function 'tcp_alloc'
  CS<0x565524b907e0> calls external node
  CS<0x565524b92600> calls function 'tcp_next_iss'
  CS<0x565524b94d00> calls function 'tcp_timer_needed'
  CS<0x565524b94fb0> calls function 'tcp_parseopt'
  CS<0x565524b95c20> calls function 'ip4_route'
  CS<0x565524b95e30> calls function 'tcp_eff_send_mss_netif'
  CS<0x565524b961e0> calls function 'tcp_enqueue_flags'
  CS<0x565524b966e0> calls function 'tcp_abandon'
  CS<0x565524b968f0> calls function 'tcp_output'

Call graph node for function: 'tcp_listen_with_backlog'<<0x565523c29db0>>  #uses=2
  CS<0x5655242a1220> calls function 'tcp_listen_with_backlog_and_err'

Call graph node for function: 'tcp_listen_with_backlog_and_err'<<0x565523c29e30>>  #uses=2
  CS<0x5655242a4230> calls function 'printf'
  CS<0x5655242a49c0> calls function 'printf'
  CS<0x5655242a5370> calls function 'memp_malloc'
  CS<0x5655242a9a30> calls function 'tcp_free'
  CS<0x5655242aa210> calls function 'tcp_timer_needed'

Call graph node for function: 'tcp_netif_ip_addr_changed'<<0x565524d54f80>>  #uses=2
  CS<0x5655246cc2f0> calls function 'tcp_netif_ip_addr_changed_pcblist'
  CS<0x5655246cc520> calls function 'tcp_netif_ip_addr_changed_pcblist'

Call graph node for function: 'tcp_netif_ip_addr_changed_pcblist'<<0x565523c2b300>>  #uses=2
  CS<0x5655247b4560> calls function 'printf'
  CS<0x5655247b5440> calls function 'tcp_abort'

Call graph node for function: 'tcp_new'<<0x565523c2ad80>>  #uses=2
  CS<0x5655242df660> calls function 'tcp_alloc'

Call graph node for function: 'tcp_new_ip_type'<<0x565523c2ae30>>  #uses=1
  CS<0x5655246bec30> calls function 'tcp_alloc'

Call graph node for function: 'tcp_new_port'<<0x565523c29cb0>>  #uses=2

Call graph node for function: 'tcp_next_iss'<<0x565523c2a240>>  #uses=3
  CS<0x5655242bf8f0> calls function 'printf'

Call graph node for function: 'tcp_output'<<0x565523c27a70>>  #uses=13
  CS<0x5655249be7a0> calls function 'printf'
  CS<0x5655249beea0> calls function 'printf'
  CS<0x5655249c0ac0> calls function 'tcp_send_empty_ack'
  CS<0x5655249c11d0> calls function 'tcp_route'
  CS<0x5655249c2f40> calls function 'lwip_htonl'
  CS<0x5655249c5140> calls function 'tcp_send_empty_ack'
  CS<0x5655249c6960> calls function 'lwip_htonl'
  CS<0x5655249c76f0> calls function 'lwip_htons'
  CS<0x5655249c7c70> calls function 'printf'
  CS<0x5655249caa10> calls function 'lwip_htons'
  CS<0x5655249cb1d0> calls function 'tcp_output_segment'
  CS<0x5655249ccf90> calls function 'lwip_htonl'
  CS<0x5655249cd540> calls function 'lwip_htons'
  CS<0x5655249ce8f0> calls function 'lwip_htons'
  CS<0x5655249cfdc0> calls function 'lwip_htonl'
  CS<0x5655249d0130> calls function 'lwip_htonl'
  CS<0x5655249d0df0> calls function 'lwip_htonl'
  CS<0x5655249d1160> calls function 'lwip_htonl'
  CS<0x5655249d2680> calls function 'tcp_seg_free'

Call graph node for function: 'tcp_output_alloc_header'<<0x565523c30540>>  #uses=3
  CS<0x5655249f3fd0> calls function 'printf'
  CS<0x5655249f4c80> calls function 'tcp_output_alloc_header_common'

Call graph node for function: 'tcp_output_alloc_header_common'<<0x565523c30920>>  #uses=2
  CS<0x565524a02d30> calls function 'pbuf_alloc'
  CS<0x565524a037c0> calls function 'printf'
  CS<0x565524a03de0> calls function 'lwip_htons'
  CS<0x565524a041a0> calls function 'lwip_htons'
  CS<0x565524a04850> calls function 'lwip_htonl'
  CS<0x565524a050f0> calls function 'lwip_htons'
  CS<0x565524a053f0> calls function 'lwip_htons'

Call graph node for function: 'tcp_output_control_segment'<<0x565523c30640>>  #uses=4
  CS<0x5655249fdb20> calls function 'printf'
  CS<0x5655249fdf60> calls function 'tcp_route'
  CS<0x5655249ff550> calls function 'ip4_output_if'
  CS<0x5655249ff7c0> calls function 'pbuf_free'

Call graph node for function: 'tcp_output_fill_options'<<0x565523c305c0>>  #uses=4
  CS<0x5655249f84c0> calls function 'printf'
  CS<0x5655249fa640> calls function 'printf'

Call graph node for function: 'tcp_output_segment'<<0x565523c2ffb0>>  #uses=1
  CS<0x5655249e46f0> calls function 'printf'
  CS<0x5655249e4cc0> calls function 'printf'
  CS<0x5655249e5290> calls function 'printf'
  CS<0x5655249e5550> calls function 'tcp_output_segment_busy'
  CS<0x5655249e5ac0> calls function 'lwip_htonl'
  CS<0x5655249e6110> calls function 'lwip_htons'
  CS<0x5655249e7a60> calls function 'tcp_eff_send_mss_netif'
  CS<0x5655249e7e20> calls function 'lwip_htonl'
  CS<0x5655249e9320> calls function 'lwip_htonl'
  CS<0x5655249ed4a0> calls function 'printf'
  CS<0x5655249edf60> calls function 'ip4_output_if'

Call graph node for function: 'tcp_output_segment_busy'<<0x565523c30720>>  #uses=4
  CS<0x5655249f15c0> calls function 'printf'

Call graph node for function: 'tcp_parseopt'<<0x565523c0bc10>>  #uses=2
  CS<0x565524bd2860> calls function 'printf'
  CS<0x565524bd3370> calls function 'tcp_get_next_optbyte'
  CS<0x565524bd3840> calls function 'tcp_get_next_optbyte'
  CS<0x565524bd40e0> calls function 'tcp_get_next_optbyte'
  CS<0x565524bd4420> calls function 'tcp_get_next_optbyte'
  CS<0x565524bd5340> calls function 'tcp_get_next_optbyte'

Call graph node for function: 'tcp_pbuf_prealloc'<<0x565523c2eee0>>  #uses=2
  CS<0x56552497ff70> calls function 'printf'
  CS<0x565524980540> calls function 'printf'
  CS<0x565524982af0> calls function 'pbuf_alloc'
  CS<0x5655249834d0> calls function 'printf'

Call graph node for function: 'tcp_pcb_purge'<<0x565523c282c0>>  #uses=8
  CS<0x56552473b150> calls function 'printf'
  CS<0x565524740620> calls function 'pbuf_free'
  CS<0x5655247416b0> calls function 'tcp_segs_free'
  CS<0x565524741980> calls function 'tcp_segs_free'

Call graph node for function: 'tcp_pcb_remove'<<0x565523c292d0>>  #uses=7
  CS<0x56552476ee80> calls function 'printf'
  CS<0x56552476f450> calls function 'printf'
  CS<0x5655247710e0> calls function 'tcp_pcb_purge'
  CS<0x565524772440> calls function 'tcp_output'
  CS<0x565524772e30> calls function 'printf'
  CS<0x565524773530> calls function 'printf'

Call graph node for function: 'tcp_poll'<<0x565523c2b1f0>>  #uses=3
  CS<0x5655246c9310> calls function 'printf'
  CS<0x5655246c9a10> calls function 'printf'

Call graph node for function: 'tcp_process'<<0x565523c0c0f0>>  #uses=1
  CS<0x565524ba0e90> calls function 'printf'
  CS<0x565524ba3cb0> calls function 'printf'
  CS<0x565524ba6940> calls function 'tcp_parseopt'
  CS<0x565524ba9450> calls function 'ip4_route'
  CS<0x565524ba9660> calls function 'tcp_eff_send_mss_netif'
  CS<0x565524bab9c0> calls function 'printf'
  CS<0x565524bacaa0> calls function 'printf'
  CS<0x565524bad710> calls function 'tcp_seg_free'
  CS<0x565524baeb50> calls external node
  CS<0x565524bb04a0> calls function 'tcp_rst'
  CS<0x565524bb0c70> calls function 'tcp_rexmit_rto'
  CS<0x565524bb28e0> calls function 'printf'
  CS<0x565524bb3530> calls external node
  CS<0x565524bb3eb0> calls function 'tcp_abort'
  CS<0x565524bb41f0> calls function 'tcp_receive'
  CS<0x565524bb7840> calls function 'tcp_rst'
  CS<0x565524bb8300> calls function 'tcp_rexmit'
  CS<0x565524bb8620> calls function 'tcp_receive'
  CS<0x565524bb9470> calls function 'tcp_receive'
  CS<0x565524bbaa50> calls function 'tcp_pcb_purge'
  CS<0x565524bbcb00> calls function 'tcp_timer_needed'
  CS<0x565524bbe5e0> calls function 'tcp_receive'
  CS<0x565524bbf0a0> calls function 'tcp_pcb_purge'
  CS<0x565524bc1150> calls function 'tcp_timer_needed'
  CS<0x565524bc1440> calls function 'tcp_receive'
  CS<0x565524bc20d0> calls function 'tcp_pcb_purge'
  CS<0x565524bc4180> calls function 'tcp_timer_needed'
  CS<0x565524bc4470> calls function 'tcp_receive'

Call graph node for function: 'tcp_process_refused_data'<<0x565523c27bd0>>  #uses=3
  CS<0x56552474c9c0> calls function 'printf'
  CS<0x56552474e140> calls external node
  CS<0x56552474e450> calls function 'tcp_recv_null'
  CS<0x56552474fc70> calls external node

Call graph node for function: 'tcp_receive'<<0x565523c0bf20>>  #uses=6
  CS<0x565524be0120> calls function 'printf'
  CS<0x565524be0820> calls function 'printf'
  CS<0x565524be8240> calls function 'tcp_rexmit_fast'
  CS<0x565524bf2d20> calls function 'tcp_free_acked_segments'
  CS<0x565524bf3540> calls function 'tcp_free_acked_segments'
  CS<0x565524bf6370> calls function 'lwip_htonl'
  CS<0x565524bf7330> calls function 'lwip_htonl'
  CS<0x565524bf7ed0> calls function 'tcp_send_empty_ack'
  CS<0x565524bfdb00> calls function 'printf'
  CS<0x565524bfe0d0> calls function 'printf'
  CS<0x565524bfeb20> calls function 'printf'
  CS<0x565524c00b70> calls function 'pbuf_remove_header'
  CS<0x565524c02f90> calls function 'lwip_htons'
  CS<0x565524c03d00> calls function 'lwip_htons'
  CS<0x565524c04620> calls function 'lwip_htons'
  CS<0x565524c049a0> calls function 'lwip_htons'
  CS<0x565524c052a0> calls function 'lwip_htons'
  CS<0x565524c05bf0> calls function 'pbuf_realloc'
  CS<0x565524c05f70> calls function 'lwip_htons'
  CS<0x565524c06f50> calls function 'printf'
  CS<0x565523c3e7f0> calls function 'printf'
  CS<0x565523c3eff0> calls function 'tcp_update_rcv_ann_wnd'
  CS<0x565523c3f990> calls function 'lwip_htons'
  CS<0x565524c0d090> calls function 'tcp_send_empty_ack'
  CS<0x565524c0d310> calls function 'tcp_send_empty_ack'

Call graph node for function: 'tcp_recv'<<0x565523c2af60>>  #uses=3
  CS<0x5655246c17c0> calls function 'printf'

Call graph node for function: 'tcp_recv_null'<<0x565523c28b90>>  #uses=3
  CS<0x565524753a40> calls function 'printf'
  CS<0x5655247541f0> calls function 'tcp_recved'
  CS<0x565524754360> calls function 'pbuf_free'
  CS<0x565524754820> calls function 'tcp_close'

Call graph node for function: 'tcp_recved'<<0x565523c28c10>>  #uses=5
  CS<0x5655247571f0> calls function 'printf'
  CS<0x5655247578f0> calls function 'printf'
  CS<0x565524758f70> calls function 'tcp_update_rcv_ann_wnd'
  CS<0x5655247599f0> calls function 'tcp_output'

Call graph node for function: 'tcp_remove_listener'<<0x565523c293d0>>  #uses=1
  CS<0x565524778cf0> calls function 'printf'

Call graph node for function: 'tcp_rexmit'<<0x565523c30d40>>  #uses=3
  CS<0x565524a121a0> calls function 'printf'
  CS<0x565524a12bf0> calls function 'tcp_output_segment_busy'
  CS<0x565524a13c90> calls function 'lwip_htonl'
  CS<0x565524a14000> calls function 'lwip_htonl'

Call graph node for function: 'tcp_rexmit_fast'<<0x565523c30e70>>  #uses=2
  CS<0x565524a17f30> calls function 'printf'
  CS<0x565524a18a30> calls function 'tcp_rexmit'

Call graph node for function: 'tcp_rexmit_rto'<<0x565523c30c60>>  #uses=2
  CS<0x565524a0fc40> calls function 'printf'
  CS<0x565524a0ff00> calls function 'tcp_rexmit_rto_prepare'
  CS<0x565524a10280> calls function 'tcp_rexmit_rto_commit'

Call graph node for function: 'tcp_rexmit_rto_commit'<<0x565523c281c0>>  #uses=3
  CS<0x565524a0df30> calls function 'printf'
  CS<0x565524a0e9f0> calls function 'tcp_output'

Call graph node for function: 'tcp_rexmit_rto_prepare'<<0x565523c27eb0>>  #uses=3
  CS<0x565524a08310> calls function 'printf'
  CS<0x565524a09170> calls function 'tcp_output_segment_busy'
  CS<0x565524a09980> calls function 'tcp_output_segment_busy'
  CS<0x565524a0b0f0> calls function 'lwip_htonl'
  CS<0x565524a0b6a0> calls function 'lwip_htons'

Call graph node for function: 'tcp_route'<<0x565523c2fca0>>  #uses=2
  CS<0x5655249e0e30> calls external node
  CS<0x5655249e10d0> calls function 'ip4_route'

Call graph node for function: 'tcp_rst'<<0x565523c28340>>  #uses=9
  CS<0x565524a1fc90> calls function 'printf'
  CS<0x565524a20260> calls function 'printf'
  CS<0x565524a20850> calls function 'lwip_htonl'
  CS<0x565524a20be0> calls function 'tcp_output_alloc_header_common'
  CS<0x565524a21290> calls function 'tcp_output_fill_options'
  CS<0x565524a21640> calls function 'tcp_output_control_segment'

Call graph node for function: 'tcp_seg_free'<<0x565523c28950>>  #uses=6
  CS<0x565524744e30> calls function 'pbuf_free'
  CS<0x5655247450d0> calls function 'memp_free'

Call graph node for function: 'tcp_segs_free'<<0x565523c288d0>>  #uses=6
  CS<0x565524743a50> calls function 'tcp_seg_free'

Call graph node for function: 'tcp_send_empty_ack'<<0x565523c2fc20>>  #uses=7
  CS<0x5655249da850> calls function 'printf'
  CS<0x5655249dbdb0> calls function 'lwip_htonl'
  CS<0x5655249dbee0> calls function 'tcp_output_alloc_header'
  CS<0x5655249dccd0> calls function 'tcp_output_fill_options'
  CS<0x5655249dd260> calls function 'tcp_output_control_segment'

Call graph node for function: 'tcp_send_fin'<<0x565523c28a00>>  #uses=4
  CS<0x5655249a5f90> calls function 'printf'
  CS<0x5655249a7460> calls function 'lwip_htons'
  CS<0x5655249a7cb0> calls function 'lwip_htons'
  CS<0x5655249a8a50> calls function 'tcp_enqueue_flags'

Call graph node for function: 'tcp_sent'<<0x565523c2b010>>  #uses=6
  CS<0x5655246c3680> calls function 'printf'

Call graph node for function: 'tcp_setprio'<<0x565523c2a730>>  #uses=2
  CS<0x5655242c7da0> calls function 'printf'

Call graph node for function: 'tcp_shutdown'<<0x565523c29590>>  #uses=1
  CS<0x565523cfc7a0> calls function 'printf'
  CS<0x565524785390> calls function 'tcp_close_shutdown'
  CS<0x565524785b00> calls function 'pbuf_free'
  CS<0x5655247866b0> calls function 'tcp_close_shutdown'

Call graph node for function: 'tcp_slowtmr'<<0x565523c27990>>  #uses=2
  CS<0x5655247184b0> calls function 'printf'
  CS<0x565524718bb0> calls function 'printf'
  CS<0x5655247192b0> calls function 'printf'
  CS<0x56552471bc90> calls function 'printf'
  CS<0x56552471c390> calls function 'printf'
  CS<0x56552471e790> calls function 'tcp_zero_window_probe'
  CS<0x56552471ef30> calls function 'tcp_split_unsent_seg'
  CS<0x56552471f2b0> calls function 'tcp_output'
  CS<0x5655247219e0> calls function 'tcp_rexmit_rto_prepare'
  CS<0x565524726df0> calls function 'tcp_rexmit_rto_commit'
  CS<0x56552472a6a0> calls function 'tcp_keepalive'
  CS<0x56552472d2c0> calls function 'tcp_pcb_purge'
  CS<0x56552472d9f0> calls function 'printf'
  CS<0x56552472e520> calls function 'printf'
  CS<0x56552472f900> calls function 'tcp_rst'
  CS<0x5655247304b0> calls function 'tcp_free'
  CS<0x565524730a60> calls external node
  CS<0x5655247327e0> calls external node
  CS<0x5655247330f0> calls function 'tcp_output'
  CS<0x565524733d60> calls function 'printf'
  CS<0x565524734bc0> calls function 'tcp_pcb_purge'
  CS<0x5655247352f0> calls function 'printf'
  CS<0x565524735e20> calls function 'printf'
  CS<0x565524736830> calls function 'tcp_free'

Call graph node for function: 'tcp_split_unsent_seg'<<0x565523c27e30>>  #uses=2
  CS<0x5655248b80e0> calls function 'printf'
  CS<0x5655248b8d80> calls function 'printf'
  CS<0x5655248b9d10> calls function 'printf'
  CS<0x5655248ba480> calls function 'printf'
  CS<0x5655248bc1f0> calls function 'pbuf_alloc'
  CS<0x5655248bd7e0> calls function 'pbuf_copy_partial'
  CS<0x5655248bdf70> calls function 'lwip_htons'
  CS<0x5655248bfa20> calls function 'lwip_htonl'
  CS<0x5655248bfdb0> calls function 'tcp_create_segment'
  CS<0x5655248c0420> calls function 'pbuf_clen'
  CS<0x5655248c11c0> calls function 'pbuf_realloc'
  CS<0x5655248c1c20> calls function 'lwip_htons'
  CS<0x5655248c2320> calls function 'pbuf_clen'
  CS<0x5655248c2a90> calls function 'pbuf_clen'
  CS<0x5655248c43b0> calls function 'printf'
  CS<0x5655248c48b0> calls function 'pbuf_free'

Call graph node for function: 'tcp_tcp_get_tcp_addrinfo'<<0x565523c2b4c0>>  #uses=1

Call graph node for function: 'tcp_timer_needed'<<0x565523b75310>>  #uses=8
  CS<0x565524387a50> calls function 'sys_timeout'

Call graph node for function: 'tcp_timewait_input'<<0x565523c0bff0>>  #uses=1
  CS<0x565524b886a0> calls function 'printf'
  CS<0x565524b89f30> calls function 'tcp_rst'
  CS<0x565524b8b1e0> calls function 'tcp_output'

Call graph node for function: 'tcp_tmr'<<0x565523b754c0>>  #uses=2
  CS<0x5655247077b0> calls function 'tcp_fasttmr'
  CS<0x565524707c90> calls function 'tcp_slowtmr'

Call graph node for function: 'tcp_trigger_input_pcb_close'<<0x565523c29080>>  #uses=2

Call graph node for function: 'tcp_txnow'<<0x565523c2a680>>  #uses=1
  CS<0x5655242c63d0> calls function 'tcp_output'

Call graph node for function: 'tcp_update_rcv_ann_wnd'<<0x565523c28dc0>>  #uses=3
  CS<0x56552477be40> calls function 'printf'
  CS<0x56552477ed70> calls function 'printf'

Call graph node for function: 'tcp_write'<<0x565523c2ebb0>>  #uses=2
  CS<0x565524948a00> calls function 'printf'
  CS<0x56552494a630> calls function 'printf'
  CS<0x56552494aa40> calls function 'tcp_write_checks'
  CS<0x56552494e0e0> calls function 'printf'
  CS<0x56552494f4b0> calls function 'printf'
  CS<0x565524951d90> calls function 'printf'
  CS<0x565524953de0> calls function 'tcp_pbuf_prealloc'
  CS<0x5655249547f0> calls function 'pbuf_clen'
  CS<0x5655249568f0> calls function 'printf'
  CS<0x565524956df0> calls function 'pbuf_alloc'
  CS<0x5655249577a0> calls function 'pbuf_clen'
  CS<0x5655249586a0> calls function 'printf'
  CS<0x56552495ada0> calls function 'tcp_pbuf_prealloc'
  CS<0x56552495b7a0> calls function 'printf'
  CS<0x56552495c710> calls function 'printf'
  CS<0x56552495ca10> calls function 'pbuf_alloc'
  CS<0x56552495d470> calls function 'pbuf_alloc'
  CS<0x56552495d840> calls function 'pbuf_free'
  CS<0x56552495db10> calls function 'pbuf_cat'
  CS<0x56552495dcf0> calls function 'pbuf_clen'
  CS<0x56552495e420> calls function 'pbuf_free'
  CS<0x5655248d0b80> calls function 'tcp_create_segment'
  CS<0x56552495f660> calls function 'printf'
  CS<0x565524963310> calls function 'printf'
  CS<0x5655249637f0> calls function 'pbuf_cat'
  CS<0x565524964ab0> calls function 'printf'
  CS<0x565524968f40> calls function 'printf'
  CS<0x565524969ec0> calls function 'lwip_htons'
  CS<0x56552496af80> calls function 'pbuf_free'
  CS<0x56552496b3d0> calls function 'tcp_segs_free'
  CS<0x56552496c110> calls function 'printf'

Call graph node for function: 'tcp_write_checks'<<0x565523c2ec60>>  #uses=1
  CS<0x565524976be0> calls function 'printf'
  CS<0x56552497a580> calls function 'printf'
  CS<0x56552497b000> calls function 'printf'

Call graph node for function: 'tcp_zero_window_probe'<<0x565523c27db0>>  #uses=2
  CS<0x565524a28490> calls function 'printf'
  CS<0x565524a297e0> calls function 'lwip_htons'
  CS<0x565524a2ac60> calls function 'tcp_output_alloc_header'
  CS<0x565524a2b9a0> calls function 'lwip_htons'
  CS<0x565524a2cd50> calls function 'pbuf_copy_partial'
  CS<0x565524a2d190> calls function 'lwip_htonl'
  CS<0x565524a2ddc0> calls function 'tcp_output_fill_options'
  CS<0x565524a2e350> calls function 'tcp_output_control_segment'

Call graph node for function: 'tcpip_tcp_timer'<<0x565523b75440>>  #uses=1
  CS<0x565524388520> calls function 'tcp_tmr'
  CS<0x565524388a50> calls function 'sys_timeout'

Call graph node for function: 'test_static'<<0x565523b6fe00>>  #uses=1

Call graph node for function: 'udp_bind'<<0x565524c26020>>  #uses=4
  CS<0x5655245bdea0> calls function 'printf'
  CS<0x5655245bf0f0> calls function 'udp_new_port'

Call graph node for function: 'udp_bind_netif'<<0x565523c271f0>>  #uses=1

Call graph node for function: 'udp_connect'<<0x565524c260a0>>  #uses=2
  CS<0x5655246d15a0> calls function 'printf'
  CS<0x5655246d1c00> calls function 'printf'
  CS<0x5655246d28a0> calls function 'udp_bind'

Call graph node for function: 'udp_disconnect'<<0x565523c272d0>>  #uses=1
  CS<0x5655246d6cf0> calls function 'printf'

Call graph node for function: 'udp_init'<<0x565524d54450>>  #uses=2
  CS<0x565524688020> calls function 'rand'

Call graph node for function: 'udp_input'<<0x565523c26470>>  #uses=2
  CS<0x56552411a070> calls function 'printf'
  CS<0x56552411a640> calls function 'printf'
  CS<0x56552411ad10> calls function 'pbuf_free'
  CS<0x56552411b310> calls function 'ip4_addr_isbroadcast_u32'
  CS<0x56552411b640> calls function 'lwip_htons'
  CS<0x56552411b970> calls function 'lwip_htons'
  CS<0x565524693860> calls function 'udp_input_local_match'
  CS<0x565524698a90> calls function 'pbuf_remove_header'
  CS<0x565524698e70> calls function 'printf'
  CS<0x5655246990f0> calls function 'pbuf_free'
  CS<0x565524699ea0> calls external node
  CS<0x56552469a080> calls function 'pbuf_free'
  CS<0x56552469aa70> calls function 'pbuf_header_force'
  CS<0x56552469ac00> calls function 'icmp_dest_unreach'
  CS<0x56552469ade0> calls function 'pbuf_free'
  CS<0x56552469b060> calls function 'pbuf_free'

Call graph node for function: 'udp_input_local_match'<<0x565523c265a0>>  #uses=1
  CS<0x56552469f860> calls function 'printf'
  CS<0x56552469fe30> calls function 'printf'

Call graph node for function: 'udp_netif_ip_addr_changed'<<0x565524d55000>>  #uses=2

Call graph node for function: 'udp_new'<<0x565524c25f40>>  #uses=3
  CS<0x5655246de3c0> calls function 'memp_malloc'

Call graph node for function: 'udp_new_ip_type'<<0x565523c273b0>>  #uses=1
  CS<0x5655246df800> calls function 'udp_new'

Call graph node for function: 'udp_new_port'<<0x565523c27170>>  #uses=1

Call graph node for function: 'udp_recv'<<0x565524c26120>>  #uses=2
  CS<0x5655246d9460> calls function 'printf'

Call graph node for function: 'udp_remove'<<0x565524c25ec0>>  #uses=2
  CS<0x5655246db670> calls function 'printf'
  CS<0x5655246dd550> calls function 'memp_free'

Call graph node for function: 'udp_send'<<0x565523c26930>>  #uses=1
  CS<0x5655246a59f0> calls function 'printf'
  CS<0x5655246a6050> calls function 'printf'
  CS<0x5655246a6830> calls function 'udp_sendto'

Call graph node for function: 'udp_sendto'<<0x565523c26a10>>  #uses=2
  CS<0x5655246a97c0> calls function 'printf'
  CS<0x5655246a9e20> calls function 'printf'
  CS<0x5655246aa480> calls function 'printf'
  CS<0x5655246aad40> calls external node
  CS<0x5655246ab010> calls function 'ip4_route'
  CS<0x5655246ab8f0> calls function 'udp_sendto_if'

Call graph node for function: 'udp_sendto_if'<<0x565524c24ca0>>  #uses=7
  CS<0x5655246af500> calls function 'printf'
  CS<0x5655246afb60> calls function 'printf'
  CS<0x5655246b01c0> calls function 'printf'
  CS<0x5655246b0820> calls function 'printf'
  CS<0x565524197e50> calls function 'udp_sendto_if_src'

Call graph node for function: 'udp_sendto_if_src'<<0x565524c262f0>>  #uses=5
  CS<0x5655246b81e0> calls function 'printf'
  CS<0x5655246b8840> calls function 'printf'
  CS<0x5655246b8ea0> calls function 'printf'
  CS<0x5655246b9500> calls function 'printf'
  CS<0x5655246b9b60> calls function 'printf'
  CS<0x5655246ba690> calls function 'udp_bind'
  CS<0x5655246bb780> calls function 'pbuf_add_header'
  CS<0x5655246bba00> calls function 'pbuf_alloc'
  CS<0x5655246bc470> calls function 'pbuf_chain'
  CS<0x5655246bcda0> calls function 'printf'
  CS<0x5655246bd520> calls function 'lwip_htons'
  CS<0x5655246bd8e0> calls function 'lwip_htons'
  CS<0x5655246be050> calls function 'lwip_htons'
  CS<0x56552410e210> calls function 'ip4_output_if_src'
  CS<0x5655245b8bc0> calls function 'pbuf_free'

Call graph node for function: 'write_number'<<0x565523b6fee0>>  #uses=1

Call graph node for function: 'xcall_arg0'<<0x565523d3f960>>  #uses=2
  CS<0x565524c4af40> calls function 'curr_stamp'
  CS<0x565524c4b310> calls function 'switch_view'
  CS<0x565524c4bb10> calls function 'curr_stamp'
  CS<0x565524c4c3d0> calls external node
  CS<0x565524c4c660> calls function 'curr_stamp'
  CS<0x565524c4c8c0> calls function 'switch_view'
  CS<0x565524c4ccf0> calls function 'curr_stamp'

Call graph node for function: 'xcall_arg0_noid'<<0x565523d426e0>>  #uses=1
  CS<0x565524cb7900> calls function 'getCompartmentFromAddr'
  CS<0x565524cb7b00> calls function 'xcall_arg0'

Call graph node for function: 'xcall_arg1i'<<0x565523d3fc10>>  #uses=1
  CS<0x565524c50230> calls function 'curr_stamp'
  CS<0x565524c50600> calls function 'switch_view'
  CS<0x565524c50e00> calls function 'curr_stamp'
  CS<0x565524c51780> calls external node
  CS<0x565524c51a10> calls function 'curr_stamp'
  CS<0x565524c51c70> calls function 'switch_view'
  CS<0x565524c520a0> calls function 'curr_stamp'

Call graph node for function: 'xcall_arg1p'<<0x565523d40d10>>  #uses=2
  CS<0x565524c82710> calls function 'curr_stamp'
  CS<0x565524c83100> calls function 'rtmkcpy'
  CS<0x565524c83490> calls function 'switch_view'
  CS<0x565524c847c0> calls function 'curr_stamp'
  CS<0x565524c85140> calls external node
  CS<0x565524c853d0> calls function 'curr_stamp'
  CS<0x565524c85b50> calls function 'rtmkcpy'
  CS<0x565524c85ce0> calls function 'switch_view'
  CS<0x565524c86110> calls function 'curr_stamp'

Call graph node for function: 'xcall_arg1p_noid'<<0x565523d427c0>>  #uses=1
  CS<0x565524cb8b10> calls function 'getCompartmentFromAddr'
  CS<0x565524cb8e20> calls function 'xcall_arg1p'

Call graph node for function: 'xcall_arg2ii'<<0x565523d406e0>>  #uses=1
  CS<0x565524c74890> calls function 'curr_stamp'
  CS<0x565524c74c60> calls function 'switch_view'
  CS<0x565524c75460> calls function 'curr_stamp'
  CS<0x565524c75ea0> calls external node
  CS<0x565524c76130> calls function 'curr_stamp'
  CS<0x565524c76390> calls function 'switch_view'
  CS<0x565524c767c0> calls function 'curr_stamp'

Call graph node for function: 'xcall_arg2ip'<<0x565523d408b0>>  #uses=1
  CS<0x565524c7ac90> calls function 'curr_stamp'
  CS<0x565524c7b690> calls function 'rtmkcpy'
  CS<0x565524c7ba20> calls function 'switch_view'
  CS<0x565524c7cd50> calls function 'curr_stamp'
  CS<0x565524c7d790> calls external node
  CS<0x565524c7da20> calls function 'curr_stamp'
  CS<0x565524c7e1b0> calls function 'rtmkcpy'
  CS<0x565524c7e340> calls function 'switch_view'
  CS<0x565524c7e770> calls function 'curr_stamp'

Call graph node for function: 'xcall_arg2pi'<<0x565523d41020>>  #uses=1
  CS<0x565524c8a740> calls function 'curr_stamp'
  CS<0x565524c8b140> calls function 'rtmkcpy'
  CS<0x565524c8b4d0> calls function 'switch_view'
  CS<0x565524c8c800> calls function 'curr_stamp'
  CS<0x565524c8d240> calls external node
  CS<0x565524c8d4d0> calls function 'curr_stamp'
  CS<0x565524c8dc60> calls function 'rtmkcpy'
  CS<0x565524c8ddf0> calls function 'switch_view'
  CS<0x565524c8e220> calls function 'curr_stamp'

Call graph node for function: 'xcall_arg2pp'<<0x565523d41950>>  #uses=1
  CS<0x565524ca4670> calls function 'curr_stamp'
  CS<0x565524ca5070> calls function 'rtmkcpy'
  CS<0x565524ca5e00> calls function 'rtmkcpy'
  CS<0x565524ca74d0> calls function 'switch_view'
  CS<0x565524ca7cd0> calls function 'curr_stamp'
  CS<0x565524ca8710> calls external node
  CS<0x565524ca89a0> calls function 'curr_stamp'
  CS<0x565524ca9120> calls function 'rtmkcpy'
  CS<0x565524ca9580> calls function 'rtmkcpy'
  CS<0x565524ca9710> calls function 'switch_view'
  CS<0x565524ca9b40> calls function 'curr_stamp'

Call graph node for function: 'xcall_arg3pii'<<0x565523d41330>>  #uses=1
  CS<0x565524c93060> calls function 'curr_stamp'
  CS<0x565524c93a60> calls function 'rtmkcpy'
  CS<0x565524c93df0> calls function 'switch_view'
  CS<0x565524c95120> calls function 'curr_stamp'
  CS<0x565524c95c20> calls external node
  CS<0x565524c95eb0> calls function 'curr_stamp'
  CS<0x565524c96640> calls function 'rtmkcpy'
  CS<0x565524c967d0> calls function 'switch_view'
  CS<0x565524c96c00> calls function 'curr_stamp'

